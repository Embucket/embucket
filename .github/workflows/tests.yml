# This is the main CI workflow that runs the test suite on all pushes to main and all pull requests.
# It runs the following jobs:
# - required: runs the test suite on ubuntu with stable and beta rust toolchains
# - minimal: runs the test suite with the minimal versions of the dependencies that satisfy the
#   requirements of this crate, and its dependencies
# - os-check: runs the test suite on mac and windows
# - coverage: runs the test suite and collects coverage information
# See check.yml for information about how the concurrency cancellation and workflow triggering works
permissions:
  contents: write
on:
  push:
    branches: [main]
    paths:
      - crates/**
      - bin/**
      - Cargo.toml
      - Cargo.lock
      - Dockerfile
  pull_request:
    paths:
      - crates/**
      - bin/**
      - Cargo.toml
      - Cargo.lock
      - Dockerfile
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
name: test
jobs:
  required:
    runs-on:
      group: large-runners
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        # run on stable and beta to ensure that tests won't break on the next version of the rust
        # toolchain
        toolchain: [stable]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}

#      - name: cargo test
#        run: cargo test --workspace --all-features --all-targets

  slt-tests:
    needs: required
    runs-on:
      group: large-runners
    name: SQL Language Tests
    env:
      SNOWFLAKE_ACCOUNT: test
      SNOWFLAKE_USER: test
      SNOWFLAKE_PASSWORD: test
      WAREHOUSE: COMPUTE_WH
      DATABASE: embucket
      SCHEMA: public
      RESET_DB: false
      EMBUCKET_ENABLED: true
      EMBUCKET_PROTOCOL: http
      EMBUCKET_HOST: localhost
      EMBUCKET_PORT: 3000
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build embucketd binary
        run: cargo build

      - name: Start Embucket Server
        run: |
          cargo run &
          echo "Starting Embucket server..."
          sleep 20

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          pip install -r test/slt_runner/requirements.txt

      - name: Run SLT Tests
        working-directory: ./test
        run: |
          python -u -m slt_runner --test-dir sql/sql-reference-commands/Query_operators

      - name: Update README with Test Results
        working-directory: ./test
        run: |
          python update_readme.py

      - name: Commit and Push Changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin ${{ github.head_ref }}
          git checkout ${{ github.head_ref }}
          
          # Add the changed files
          git add README.md test/README.md test/assets/
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Commit the changes
            git commit -m "Update README with latest test results"
          
            # Pull any remote changes
            git pull --rebase origin ${{ github.head_ref }}
          
            # Push the changes
            git push origin HEAD:${{ github.head_ref }}
          fi
