---
source: crates/runtime/src/tests/queries.rs
description: "\"MERGE INTO t1 USING t2 ON t1.t1Key = t2.t2Key\n    WHEN MATCHED AND t2.marked = 1 THEN DELETE\n    WHEN MATCHED AND t2.isNewStatus = 1 THEN UPDATE SET val = t2.newVal, status = t2.newStatus\n    WHEN MATCHED THEN UPDATE SET val = t2.newVal\n    WHEN NOT MATCHED THEN INSERT (val, status) VALUES (t2.newVal, t2.newStatus);\""
snapshot_kind: text
---
(
    Ok(
        Statement(
            Merge {
                into: true,
                table: Table {
                    name: ObjectName(
                        [
                            Ident {
                                value: "t1",
                                quote_style: None,
                                span: Span(Location(0,0)..Location(0,0)),
                            },
                        ],
                    ),
                    alias: None,
                    args: None,
                    with_hints: [],
                    version: None,
                    with_ordinality: false,
                    partitions: [],
                    json_path: None,
                },
                source: Table {
                    name: ObjectName(
                        [
                            Ident {
                                value: "t2",
                                quote_style: None,
                                span: Span(Location(0,0)..Location(0,0)),
                            },
                        ],
                    ),
                    alias: None,
                    args: None,
                    with_hints: [],
                    version: None,
                    with_ordinality: false,
                    partitions: [],
                    json_path: None,
                },
                on: BinaryOp {
                    left: CompoundIdentifier(
                        [
                            Ident {
                                value: "t1",
                                quote_style: None,
                                span: Span(Location(0,0)..Location(0,0)),
                            },
                            Ident {
                                value: "t1Key",
                                quote_style: None,
                                span: Span(Location(0,0)..Location(0,0)),
                            },
                        ],
                    ),
                    op: Eq,
                    right: CompoundIdentifier(
                        [
                            Ident {
                                value: "t2",
                                quote_style: None,
                                span: Span(Location(0,0)..Location(0,0)),
                            },
                            Ident {
                                value: "t2Key",
                                quote_style: None,
                                span: Span(Location(0,0)..Location(0,0)),
                            },
                        ],
                    ),
                },
                clauses: [
                    MergeClause {
                        clause_kind: Matched,
                        predicate: Some(
                            BinaryOp {
                                left: CompoundIdentifier(
                                    [
                                        Ident {
                                            value: "t2",
                                            quote_style: None,
                                            span: Span(Location(0,0)..Location(0,0)),
                                        },
                                        Ident {
                                            value: "marked",
                                            quote_style: None,
                                            span: Span(Location(0,0)..Location(0,0)),
                                        },
                                    ],
                                ),
                                op: Eq,
                                right: Value(
                                    Number(
                                        "1",
                                        false,
                                    ),
                                ),
                            },
                        ),
                        action: Delete,
                    },
                    MergeClause {
                        clause_kind: Matched,
                        predicate: Some(
                            BinaryOp {
                                left: CompoundIdentifier(
                                    [
                                        Ident {
                                            value: "t2",
                                            quote_style: None,
                                            span: Span(Location(0,0)..Location(0,0)),
                                        },
                                        Ident {
                                            value: "isNewStatus",
                                            quote_style: None,
                                            span: Span(Location(0,0)..Location(0,0)),
                                        },
                                    ],
                                ),
                                op: Eq,
                                right: Value(
                                    Number(
                                        "1",
                                        false,
                                    ),
                                ),
                            },
                        ),
                        action: Update {
                            assignments: [
                                Assignment {
                                    target: ColumnName(
                                        ObjectName(
                                            [
                                                Ident {
                                                    value: "val",
                                                    quote_style: None,
                                                    span: Span(Location(0,0)..Location(0,0)),
                                                },
                                            ],
                                        ),
                                    ),
                                    value: CompoundIdentifier(
                                        [
                                            Ident {
                                                value: "t2",
                                                quote_style: None,
                                                span: Span(Location(0,0)..Location(0,0)),
                                            },
                                            Ident {
                                                value: "newVal",
                                                quote_style: None,
                                                span: Span(Location(0,0)..Location(0,0)),
                                            },
                                        ],
                                    ),
                                },
                                Assignment {
                                    target: ColumnName(
                                        ObjectName(
                                            [
                                                Ident {
                                                    value: "status",
                                                    quote_style: None,
                                                    span: Span(Location(0,0)..Location(0,0)),
                                                },
                                            ],
                                        ),
                                    ),
                                    value: CompoundIdentifier(
                                        [
                                            Ident {
                                                value: "t2",
                                                quote_style: None,
                                                span: Span(Location(0,0)..Location(0,0)),
                                            },
                                            Ident {
                                                value: "newStatus",
                                                quote_style: None,
                                                span: Span(Location(0,0)..Location(0,0)),
                                            },
                                        ],
                                    ),
                                },
                            ],
                        },
                    },
                    MergeClause {
                        clause_kind: Matched,
                        predicate: None,
                        action: Update {
                            assignments: [
                                Assignment {
                                    target: ColumnName(
                                        ObjectName(
                                            [
                                                Ident {
                                                    value: "val",
                                                    quote_style: None,
                                                    span: Span(Location(0,0)..Location(0,0)),
                                                },
                                            ],
                                        ),
                                    ),
                                    value: CompoundIdentifier(
                                        [
                                            Ident {
                                                value: "t2",
                                                quote_style: None,
                                                span: Span(Location(0,0)..Location(0,0)),
                                            },
                                            Ident {
                                                value: "newVal",
                                                quote_style: None,
                                                span: Span(Location(0,0)..Location(0,0)),
                                            },
                                        ],
                                    ),
                                },
                            ],
                        },
                    },
                    MergeClause {
                        clause_kind: NotMatched,
                        predicate: None,
                        action: Insert(
                            MergeInsertExpr {
                                columns: [
                                    Ident {
                                        value: "val",
                                        quote_style: None,
                                        span: Span(Location(0,0)..Location(0,0)),
                                    },
                                    Ident {
                                        value: "status",
                                        quote_style: None,
                                        span: Span(Location(0,0)..Location(0,0)),
                                    },
                                ],
                                kind: Values(
                                    Values {
                                        explicit_row: false,
                                        rows: [
                                            [
                                                CompoundIdentifier(
                                                    [
                                                        Ident {
                                                            value: "t2",
                                                            quote_style: None,
                                                            span: Span(Location(0,0)..Location(0,0)),
                                                        },
                                                        Ident {
                                                            value: "newVal",
                                                            quote_style: None,
                                                            span: Span(Location(0,0)..Location(0,0)),
                                                        },
                                                    ],
                                                ),
                                                CompoundIdentifier(
                                                    [
                                                        Ident {
                                                            value: "t2",
                                                            quote_style: None,
                                                            span: Span(Location(0,0)..Location(0,0)),
                                                        },
                                                        Ident {
                                                            value: "newStatus",
                                                            quote_style: None,
                                                            span: Span(Location(0,0)..Location(0,0)),
                                                        },
                                                    ],
                                                ),
                                            ],
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                ],
            },
        ),
    ),
    Err(
        NotImplemented(
            "Unsupported SQL statement: MERGE INTO t1 USING t2 ON t1.t1Key = t2.t2Key WHEN MATCHED AND t2.marked = 1 THEN DELETE WHEN MATCHED AND t2.isNewStatus = 1 THEN UPDATE SET val = t2.newVal, status = t2.newStatus WHEN MATCHED THEN UPDATE SET val = t2.newVal WHEN NOT MATCHED THEN INSERT (val, status) VALUES (t2.newVal, t2.newStatus)",
        ),
    ),
    Err(
        Execution(
            "Failed to create logical plan",
        ),
    ),
)
