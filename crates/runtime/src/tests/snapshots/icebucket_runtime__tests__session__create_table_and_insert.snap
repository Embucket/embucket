---
source: crates/runtime/src/tests/session.rs
expression: "(statement, result, all_query, insert_query, select_query)"
snapshot_kind: text
---
(
    Statement(
        CreateTable(
            CreateTable {
                or_replace: false,
                temporary: false,
                external: false,
                global: None,
                if_not_exists: false,
                transient: false,
                volatile: false,
                iceberg: false,
                name: ObjectName(
                    [
                        Ident {
                            value: "benchmark",
                            quote_style: None,
                            span: Span(Location(2,22)..Location(2,31)),
                        },
                        Ident {
                            value: "public",
                            quote_style: None,
                            span: Span(Location(2,32)..Location(2,38)),
                        },
                        Ident {
                            value: "hits",
                            quote_style: None,
                            span: Span(Location(2,39)..Location(2,43)),
                        },
                    ],
                ),
                columns: [
                    ColumnDef {
                        name: Ident {
                            value: "WatchID",
                            quote_style: None,
                            span: Span(Location(4,13)..Location(4,20)),
                        },
                        data_type: BigInt(
                            None,
                        ),
                        collation: None,
                        options: [
                            ColumnOptionDef {
                                name: None,
                                option: NotNull,
                            },
                        ],
                    },
                    ColumnDef {
                        name: Ident {
                            value: "JavaEnable",
                            quote_style: None,
                            span: Span(Location(5,13)..Location(5,23)),
                        },
                        data_type: Integer(
                            None,
                        ),
                        collation: None,
                        options: [
                            ColumnOptionDef {
                                name: None,
                                option: NotNull,
                            },
                        ],
                    },
                    ColumnDef {
                        name: Ident {
                            value: "Title",
                            quote_style: None,
                            span: Span(Location(6,13)..Location(6,18)),
                        },
                        data_type: Text,
                        collation: None,
                        options: [
                            ColumnOptionDef {
                                name: None,
                                option: NotNull,
                            },
                        ],
                    },
                    ColumnDef {
                        name: Ident {
                            value: "GoodEvent",
                            quote_style: None,
                            span: Span(Location(7,13)..Location(7,22)),
                        },
                        data_type: Integer(
                            None,
                        ),
                        collation: None,
                        options: [
                            ColumnOptionDef {
                                name: None,
                                option: NotNull,
                            },
                        ],
                    },
                    ColumnDef {
                        name: Ident {
                            value: "EventTime",
                            quote_style: None,
                            span: Span(Location(8,13)..Location(8,22)),
                        },
                        data_type: BigInt(
                            None,
                        ),
                        collation: None,
                        options: [
                            ColumnOptionDef {
                                name: None,
                                option: NotNull,
                            },
                        ],
                    },
                    ColumnDef {
                        name: Ident {
                            value: "EventDate",
                            quote_style: None,
                            span: Span(Location(9,13)..Location(9,22)),
                        },
                        data_type: Integer(
                            None,
                        ),
                        collation: None,
                        options: [
                            ColumnOptionDef {
                                name: None,
                                option: NotNull,
                            },
                        ],
                    },
                    ColumnDef {
                        name: Ident {
                            value: "CounterID",
                            quote_style: None,
                            span: Span(Location(10,13)..Location(10,22)),
                        },
                        data_type: Integer(
                            None,
                        ),
                        collation: None,
                        options: [
                            ColumnOptionDef {
                                name: None,
                                option: NotNull,
                            },
                        ],
                    },
                    ColumnDef {
                        name: Ident {
                            value: "ClientIP",
                            quote_style: None,
                            span: Span(Location(11,13)..Location(11,21)),
                        },
                        data_type: Integer(
                            None,
                        ),
                        collation: None,
                        options: [
                            ColumnOptionDef {
                                name: None,
                                option: NotNull,
                            },
                        ],
                    },
                ],
                constraints: [
                    PrimaryKey {
                        name: None,
                        index_name: None,
                        index_type: None,
                        columns: [
                            Ident {
                                value: "CounterID",
                                quote_style: None,
                                span: Span(Location(12,26)..Location(12,35)),
                            },
                            Ident {
                                value: "EventDate",
                                quote_style: None,
                                span: Span(Location(12,37)..Location(12,46)),
                            },
                            Ident {
                                value: "EventTime",
                                quote_style: None,
                                span: Span(Location(12,48)..Location(12,57)),
                            },
                            Ident {
                                value: "WatchID",
                                quote_style: None,
                                span: Span(Location(12,59)..Location(12,66)),
                            },
                        ],
                        index_options: [],
                        characteristics: None,
                    },
                ],
                hive_distribution: NONE,
                hive_formats: Some(
                    HiveFormat {
                        row_format: None,
                        serde_properties: None,
                        storage: None,
                        location: None,
                    },
                ),
                table_properties: [],
                with_options: [],
                file_format: None,
                location: None,
                query: None,
                without_rowid: false,
                like: None,
                clone: None,
                engine: None,
                comment: None,
                auto_increment_offset: None,
                default_charset: None,
                collation: None,
                on_commit: None,
                on_cluster: None,
                primary_key: None,
                order_by: None,
                partition_by: None,
                cluster_by: None,
                clustered_by: None,
                options: None,
                strict: false,
                copy_grants: false,
                enable_schema_evolution: None,
                change_tracking: None,
                data_retention_time_in_days: None,
                max_data_extension_time_in_days: None,
                default_ddl_collation: None,
                with_aggregation_policy: None,
                with_row_access_policy: None,
                with_tags: None,
                external_volume: None,
                base_location: None,
                catalog: None,
                catalog_sync: None,
                storage_serialization_policy: None,
            },
        ),
    ),
    [
        RecordBatch {
            schema: Schema {
                fields: [
                    Field {
                        name: "count",
                        data_type: Int64,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {},
                    },
                ],
                metadata: {},
            },
            columns: [
                PrimitiveArray<Int64>
                [
                  0,
                ],
            ],
            row_count: 1,
        },
    ],
    [
        RecordBatch {
            schema: Schema {
                fields: [
                    Field {
                        name: "table_catalog",
                        data_type: Utf8,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {},
                    },
                    Field {
                        name: "table_schema",
                        data_type: Utf8,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {},
                    },
                    Field {
                        name: "table_name",
                        data_type: Utf8,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {},
                    },
                    Field {
                        name: "table_type",
                        data_type: Utf8,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {},
                    },
                ],
                metadata: {},
            },
            columns: [
                StringArray
                [
                  "benchmark",
                  "benchmark",
                  "benchmark",
                  "benchmark",
                  "benchmark",
                  "benchmark",
                  "benchmark",
                  "benchmark",
                ],
                StringArray
                [
                  "public",
                  "information_schema",
                  "information_schema",
                  "information_schema",
                  "information_schema",
                  "information_schema",
                  "information_schema",
                  "information_schema",
                ],
                StringArray
                [
                  "hits",
                  "tables",
                  "views",
                  "columns",
                  "df_settings",
                  "schemata",
                  "routines",
                  "parameters",
                ],
                StringArray
                [
                  "BASE TABLE",
                  "VIEW",
                  "VIEW",
                  "VIEW",
                  "VIEW",
                  "VIEW",
                  "VIEW",
                  "VIEW",
                ],
            ],
            row_count: 8,
        },
    ],
    [
        RecordBatch {
            schema: Schema {
                fields: [
                    Field {
                        name: "count",
                        data_type: UInt64,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {},
                    },
                ],
                metadata: {},
            },
            columns: [
                PrimitiveArray<UInt64>
                [
                  1,
                ],
            ],
            row_count: 1,
        },
    ],
    [
        RecordBatch {
            schema: Schema {
                fields: [
                    Field {
                        name: "watchid",
                        data_type: Int64,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {
                            "PARQUET:field_id": "1",
                        },
                    },
                    Field {
                        name: "javaenable",
                        data_type: Int32,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {
                            "PARQUET:field_id": "2",
                        },
                    },
                    Field {
                        name: "title",
                        data_type: Utf8,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {
                            "PARQUET:field_id": "3",
                        },
                    },
                    Field {
                        name: "goodevent",
                        data_type: Int32,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {
                            "PARQUET:field_id": "4",
                        },
                    },
                    Field {
                        name: "eventtime",
                        data_type: Int64,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {
                            "PARQUET:field_id": "5",
                        },
                    },
                    Field {
                        name: "eventdate",
                        data_type: Int32,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {
                            "PARQUET:field_id": "6",
                        },
                    },
                    Field {
                        name: "counterid",
                        data_type: Int32,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {
                            "PARQUET:field_id": "7",
                        },
                    },
                    Field {
                        name: "clientip",
                        data_type: Int32,
                        nullable: false,
                        dict_id: 0,
                        dict_is_ordered: false,
                        metadata: {
                            "PARQUET:field_id": "8",
                        },
                    },
                ],
                metadata: {},
            },
            columns: [
                PrimitiveArray<Int64>
                [
                  1,
                ],
                PrimitiveArray<Int32>
                [
                  1,
                ],
                StringArray
                [
                  "test",
                ],
                PrimitiveArray<Int32>
                [
                  1,
                ],
                PrimitiveArray<Int64>
                [
                  1,
                ],
                PrimitiveArray<Int32>
                [
                  1,
                ],
                PrimitiveArray<Int32>
                [
                  1,
                ],
                PrimitiveArray<Int32>
                [
                  1,
                ],
            ],
            row_count: 1,
        },
    ],
)
