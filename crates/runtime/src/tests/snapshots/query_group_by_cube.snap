---
source: crates/runtime/src/tests/queries.rs
description: "\"SELECT state, city, SUM((s.retail_price - p.wholesale_price) * s.quantity) AS profit \n FROM products AS p, sales AS s\n WHERE s.product_ID = p.product_ID\n GROUP BY CUBE (state, city)\n ORDER BY state, city NULLS LAST\n ;\""
snapshot_kind: text
---
(
    Ok(
        Statement(
            Query(
                Query {
                    with: None,
                    body: Select(
                        Select {
                            select_token: TokenWithSpan {
                                token: Word(
                                    Word {
                                        value: "SELECT",
                                        quote_style: None,
                                        keyword: SELECT,
                                    },
                                ),
                                span: Span(Location(0,0)..Location(0,0)),
                            },
                            distinct: None,
                            top: None,
                            top_before_distinct: false,
                            projection: [
                                UnnamedExpr(
                                    Identifier(
                                        Ident {
                                            value: "state",
                                            quote_style: None,
                                            span: Span(Location(0,0)..Location(0,0)),
                                        },
                                    ),
                                ),
                                UnnamedExpr(
                                    Identifier(
                                        Ident {
                                            value: "city",
                                            quote_style: None,
                                            span: Span(Location(0,0)..Location(0,0)),
                                        },
                                    ),
                                ),
                                ExprWithAlias {
                                    expr: Function(
                                        Function {
                                            name: ObjectName(
                                                [
                                                    Ident {
                                                        value: "SUM",
                                                        quote_style: None,
                                                        span: Span(Location(0,0)..Location(0,0)),
                                                    },
                                                ],
                                            ),
                                            uses_odbc_syntax: false,
                                            parameters: None,
                                            args: List(
                                                FunctionArgumentList {
                                                    duplicate_treatment: None,
                                                    args: [
                                                        Unnamed(
                                                            Expr(
                                                                BinaryOp {
                                                                    left: Nested(
                                                                        BinaryOp {
                                                                            left: CompoundIdentifier(
                                                                                [
                                                                                    Ident {
                                                                                        value: "s",
                                                                                        quote_style: None,
                                                                                        span: Span(Location(0,0)..Location(0,0)),
                                                                                    },
                                                                                    Ident {
                                                                                        value: "retail_price",
                                                                                        quote_style: None,
                                                                                        span: Span(Location(0,0)..Location(0,0)),
                                                                                    },
                                                                                ],
                                                                            ),
                                                                            op: Minus,
                                                                            right: CompoundIdentifier(
                                                                                [
                                                                                    Ident {
                                                                                        value: "p",
                                                                                        quote_style: None,
                                                                                        span: Span(Location(0,0)..Location(0,0)),
                                                                                    },
                                                                                    Ident {
                                                                                        value: "wholesale_price",
                                                                                        quote_style: None,
                                                                                        span: Span(Location(0,0)..Location(0,0)),
                                                                                    },
                                                                                ],
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: Multiply,
                                                                    right: CompoundIdentifier(
                                                                        [
                                                                            Ident {
                                                                                value: "s",
                                                                                quote_style: None,
                                                                                span: Span(Location(0,0)..Location(0,0)),
                                                                            },
                                                                            Ident {
                                                                                value: "quantity",
                                                                                quote_style: None,
                                                                                span: Span(Location(0,0)..Location(0,0)),
                                                                            },
                                                                        ],
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    clauses: [],
                                                },
                                            ),
                                            filter: None,
                                            null_treatment: None,
                                            over: None,
                                            within_group: [],
                                        },
                                    ),
                                    alias: Ident {
                                        value: "profit",
                                        quote_style: None,
                                        span: Span(Location(0,0)..Location(0,0)),
                                    },
                                },
                            ],
                            into: None,
                            from: [
                                TableWithJoins {
                                    relation: Table {
                                        name: ObjectName(
                                            [
                                                Ident {
                                                    value: "products",
                                                    quote_style: None,
                                                    span: Span(Location(0,0)..Location(0,0)),
                                                },
                                            ],
                                        ),
                                        alias: Some(
                                            TableAlias {
                                                name: Ident {
                                                    value: "p",
                                                    quote_style: None,
                                                    span: Span(Location(0,0)..Location(0,0)),
                                                },
                                                columns: [],
                                            },
                                        ),
                                        args: None,
                                        with_hints: [],
                                        version: None,
                                        with_ordinality: false,
                                        partitions: [],
                                        json_path: None,
                                    },
                                    joins: [],
                                },
                                TableWithJoins {
                                    relation: Table {
                                        name: ObjectName(
                                            [
                                                Ident {
                                                    value: "sales",
                                                    quote_style: None,
                                                    span: Span(Location(0,0)..Location(0,0)),
                                                },
                                            ],
                                        ),
                                        alias: Some(
                                            TableAlias {
                                                name: Ident {
                                                    value: "s",
                                                    quote_style: None,
                                                    span: Span(Location(0,0)..Location(0,0)),
                                                },
                                                columns: [],
                                            },
                                        ),
                                        args: None,
                                        with_hints: [],
                                        version: None,
                                        with_ordinality: false,
                                        partitions: [],
                                        json_path: None,
                                    },
                                    joins: [],
                                },
                            ],
                            lateral_views: [],
                            prewhere: None,
                            selection: Some(
                                BinaryOp {
                                    left: CompoundIdentifier(
                                        [
                                            Ident {
                                                value: "s",
                                                quote_style: None,
                                                span: Span(Location(0,0)..Location(0,0)),
                                            },
                                            Ident {
                                                value: "product_ID",
                                                quote_style: None,
                                                span: Span(Location(0,0)..Location(0,0)),
                                            },
                                        ],
                                    ),
                                    op: Eq,
                                    right: CompoundIdentifier(
                                        [
                                            Ident {
                                                value: "p",
                                                quote_style: None,
                                                span: Span(Location(0,0)..Location(0,0)),
                                            },
                                            Ident {
                                                value: "product_ID",
                                                quote_style: None,
                                                span: Span(Location(0,0)..Location(0,0)),
                                            },
                                        ],
                                    ),
                                },
                            ),
                            group_by: Expressions(
                                [
                                    Function(
                                        Function {
                                            name: ObjectName(
                                                [
                                                    Ident {
                                                        value: "CUBE",
                                                        quote_style: None,
                                                        span: Span(Location(0,0)..Location(0,0)),
                                                    },
                                                ],
                                            ),
                                            uses_odbc_syntax: false,
                                            parameters: None,
                                            args: List(
                                                FunctionArgumentList {
                                                    duplicate_treatment: None,
                                                    args: [
                                                        Unnamed(
                                                            Expr(
                                                                Identifier(
                                                                    Ident {
                                                                        value: "state",
                                                                        quote_style: None,
                                                                        span: Span(Location(0,0)..Location(0,0)),
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                        Unnamed(
                                                            Expr(
                                                                Identifier(
                                                                    Ident {
                                                                        value: "city",
                                                                        quote_style: None,
                                                                        span: Span(Location(0,0)..Location(0,0)),
                                                                    },
                                                                ),
                                                            ),
                                                        ),
                                                    ],
                                                    clauses: [],
                                                },
                                            ),
                                            filter: None,
                                            null_treatment: None,
                                            over: None,
                                            within_group: [],
                                        },
                                    ),
                                ],
                                [],
                            ),
                            cluster_by: [],
                            distribute_by: [],
                            sort_by: [],
                            having: None,
                            named_window: [],
                            qualify: None,
                            window_before_qualify: false,
                            value_table_mode: None,
                            connect_by: None,
                        },
                    ),
                    order_by: Some(
                        OrderBy {
                            exprs: [
                                OrderByExpr {
                                    expr: Identifier(
                                        Ident {
                                            value: "state",
                                            quote_style: None,
                                            span: Span(Location(0,0)..Location(0,0)),
                                        },
                                    ),
                                    asc: None,
                                    nulls_first: None,
                                    with_fill: None,
                                },
                                OrderByExpr {
                                    expr: Identifier(
                                        Ident {
                                            value: "city",
                                            quote_style: None,
                                            span: Span(Location(0,0)..Location(0,0)),
                                        },
                                    ),
                                    asc: None,
                                    nulls_first: Some(
                                        false,
                                    ),
                                    with_fill: None,
                                },
                            ],
                            interpolate: None,
                        },
                    ),
                    limit: None,
                    limit_by: [],
                    offset: None,
                    fetch: None,
                    locks: [],
                    for_clause: None,
                    settings: None,
                    format_clause: None,
                },
            ),
        ),
    ),
    Ok(
        [
            "Sort: s.state ASC NULLS LAST, s.city ASC NULLS LAST",
            "  Projection: s.state, s.city, sum(s.retail_price - p.wholesale_price * s.quantity) AS profit",
            "    Aggregate: groupBy=[[CUBE (s.state, s.city)]], aggr=[[sum((s.retail_price - p.wholesale_price) * s.quantity)]]",
            "      Filter: s.product_id = p.product_id",
            "        Cross Join: ",
            "          SubqueryAlias: p",
            "            TableScan: products",
            "          SubqueryAlias: s",
            "            TableScan: sales",
        ],
    ),
    Ok(
        [
            "+-------+---------+--------+",
            "| state | city    | profit |",
            "+-------+---------+--------+",
            "| CA    | SF      | 13.0   |",
            "| CA    | SJ      | 26.0   |",
            "| CA    |         | 39.0   |",
            "| FL    | Miami   | 48.0   |",
            "| FL    | Orlando | 96.0   |",
            "| FL    |         | 144.0  |",
            "| PR    | SJ      | 192.0  |",
            "| PR    |         | 192.0  |",
            "|       | Miami   | 48.0   |",
            "|       | Orlando | 96.0   |",
            "|       | SF      | 13.0   |",
            "|       | SJ      | 218.0  |",
            "|       |         | 375.0  |",
            "+-------+---------+--------+",
        ],
    ),
)
