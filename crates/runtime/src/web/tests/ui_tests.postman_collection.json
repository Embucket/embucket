{
	"info": {
		"_postman_id": "e9a79523-263d-4f5c-8289-c7b38c4d854b",
		"name": "UI Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39228746"
	},
	"item": [
		{
			"name": "Process a VALID transaction",
			"item": [
				{
					"name": "Create storage-profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    pm.collectionVariables.set(\"storage_profile_id\", pm.response.json().id)",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bucket\": \"artem_test\",\n    \"credentials\": {\n        \"awsAccessKeyId\": \"123\",\n        \"awsSecretAccessKey\": \"123\"\n    },\n    \"region\": \"us-east-2\",\n    \"endpoint\": \"\",\n    \"stsRoleArn\": \"\",\n    \"type\": \"aws\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{rust_url}}/ui/storage-profiles",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"storage-profiles"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Get storage-profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{rust_url}}/ui/storage-profiles/{{storage_profile_id}}",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"storage-profiles",
								"{{storage_profile_id}}"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get storage-profile error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{rust_url}}/ui/storage-profiles/00000000-a59e-4031-951f-6204466fb70f",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"storage-profiles",
								"00000000-a59e-4031-951f-6204466fb70f"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get storage-profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{rust_url}}/ui/storage-profiles",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"storage-profiles"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Navigation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{rust_url}}/ui/navigation",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"navigation"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create warehouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    pm.collectionVariables.set(\"wh_id\", pm.response.json().id)",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storageProfileId\": \"{{storage_profile_id}}\",\n    \"name\": \"name\",\n    \"keyPrefix\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{rust_url}}/ui/warehouses",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"warehouses"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Create warehouse error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storage_profile_id\": \"00000000-9560-42db-ab5a-d3e14b5ed300\",\n    \"name\": \"name\",\n    \"key_prefix\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{rust_url}}/ui/warehouses",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"warehouses"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Get warehouses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{rust_url}}/ui/warehouses",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"warehouses"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get warehouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{rust_url}}/ui/warehouses/{{wh_id}}",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"warehouses",
								"{{wh_id}}"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create database",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    pm.collectionVariables.set(\"dn_name\", pm.response.json().name)",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "   { \n    \"name\": \"name2\",\n    \"properties\" : {\"testId\": \"eqqq\"}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{rust_url}}/ui/warehouses/{{wh_id}}/databases",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"warehouses",
								"{{wh_id}}",
								"databases"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Get database",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{rust_url}}/ui/warehouses/{{wh_id}}/databases/{{dn_name}}",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"warehouses",
								"{{wh_id}}",
								"databases",
								"{{dn_name}}"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get database error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{rust_url}}/ui/warehouses/{{wh_id}}/databases/test_error",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"warehouses",
								"{{wh_id}}",
								"databases",
								"test_error"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create table",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"    pm.collectionVariables.set(\"table_name\", pm.response.json().name)",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"table_data_2\",\n    \"location\": \"/home/iceberg/warehouse/nyc/taxis\",\n    \"schema\": {\n        \"type\": \"struct\",\n        \"schemaId\": 0,\n        \"fields\": [\n            {\n                \"id\": 1,\n                \"name\": \"vendor_id\",\n                \"required\": false,\n                \"type\": \"long\"\n            },\n            {\n                \"id\": 2,\n                \"name\": \"trip_id\",\n                \"required\": false,\n                \"type\": \"long\"\n            },\n            {\n                \"id\": 3,\n                \"name\": \"trip_distance\",\n                \"required\": false,\n                \"type\": \"float\"\n            },\n            {\n                \"id\": 4,\n                \"name\": \"fare_amount\",\n                \"required\": false,\n                \"type\": \"double\"\n            },\n            {\n                \"id\": 5,\n                \"name\": \"store_and_fwd_flag\",\n                \"required\": false,\n                \"type\": \"string\"\n            }\n        ]\n    },\n    \"partitionSpec\": {\n        \"spec_id\": 1,\n        \"fields\": [\n            {\n                \"name\": \"vendor_id\",\n                \"transform\": \"identity\",\n                \"source-id\": 1,\n                \"field-id\": 1000\n            }\n        ]\n    },\n    \"sortOrders\": [\n        {\n            \"orderId\": 0,\n            \"fields\": [\n                {\n                    \"direction\": \"asc\",\n                    \"transform\": \"identity\",\n                    \"source-id\": 1,\n                    \"null-order\": \"nulls-first\"\n                }\n            ]\n        }\n    ],\n    \"properties\": {\n        \"owner\": \"root\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{rust_url}}/ui/warehouses/{{wh_id}}/databases/{{dn_name}}/tables",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"warehouses",
								"{{wh_id}}",
								"databases",
								"{{dn_name}}",
								"tables"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Get table",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "   { \n    \"warehouse_id\": \"0c648454-00fe-44a9-a729-270c3e000cff\",\n    \"name\": \"name\",\n    \"properties\" : {\"test\": \"eqqq\"}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{rust_url}}/ui/warehouses/{{wh_id}}/databases/{{dn_name}}/tables/{{table_name}}",
							"host": [
								"{{rust_url}}"
							],
							"path": [
								"ui",
								"warehouses",
								"{{wh_id}}",
								"databases",
								"{{dn_name}}",
								"tables",
								"{{table_name}}"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			],
			"description": "This folder tests a commonly used workflow of creating new accounts and transferring funds between the two.\n\nBecause we expect all requests to succeed in this workflow, we have a **status check test** in the **folder-level Scripts tab**.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//all requests in this folder should be valid",
							"pm.test(\"Folder-level status check\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "api-key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://template.postman-echo.com",
			"type": "string"
		},
		{
			"key": "apiKey",
			"value": "OMpqVWAH.UC80wyXTtPwhDgAUdCTx6"
		},
		{
			"key": "storage_profile_id",
			"value": ""
		},
		{
			"key": "sp_id",
			"value": ""
		},
		{
			"key": "wh_id",
			"value": ""
		},
		{
			"key": "db_id",
			"value": ""
		},
		{
			"key": "db_name",
			"value": ""
		},
		{
			"key": "table_name",
			"value": ""
		},
		{
			"key": "dn_name",
			"value": ""
		}
	]
}