# Use a multi-stage build to build both frontend and backend

# Stage 1: Build frontend
FROM node:lts AS frontend-builder
RUN apt-get update && apt-get install -y openssh-client
RUN mkdir -p -m 0600 ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
WORKDIR /app
RUN --mount=type=ssh git clone git@github.com:Embucket/embucket.git .
RUN npm install -g pnpm
RUN pnpm install

## Stage 2: Build backend
FROM rust:latest AS builder
RUN update-ca-certificates
WORKDIR /app
COPY ./ .
COPY rest-catalog-open-api.yaml rest-catalog-open-api.yaml
RUN cargo build --release

#
#####################################################################################################
### Final image
#####################################################################################################
#
FROM debian:bookworm-slim

# Copy the binary from the builder stage
WORKDIR /app

RUN apt-get update && apt-get install -y openssl nodejs npm && rm -rf /var/lib/apt/lists/*

COPY --from=builder /app/target/release/icehutd ./
COPY --from=builder /app/rest-catalog-open-api.yaml rest-catalog-open-api.yaml
COPY --from=frontend-builder /app ./frontend

RUN npm install -g serve

# Command to start both frontend and backend
CMD ["sh", "-c", "./icehutd & serve -s ./frontend"]
