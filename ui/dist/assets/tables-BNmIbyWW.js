import{al as p,p as i,o as c}from"./index-336s_lcr.js";const b=(e,t,u,r,s)=>i({url:`/ui/databases/${e}/schemas/${t}/tables`,method:"GET",params:u,signal:s},r),m=(e,t,u)=>[`/ui/databases/${e}/schemas/${t}/tables`],d=(e,t,u,r)=>{const{query:s,request:n}={};return{queryKey:(s==null?void 0:s.queryKey)??m(e,t),queryFn:({signal:y})=>b(e,t,u,n,y),enabled:!!(e&&t),...s}};function h(e,t,u,r,s){const n=d(e,t,u),o=c(n);return o.queryKey=n.queryKey,o}const K=(e,t,u,r,s)=>i({url:`/ui/databases/${e}/schemas/${t}/tables/${u}/columns`,method:"GET",signal:s},r),$=(e,t,u)=>[`/ui/databases/${e}/schemas/${t}/tables/${u}/columns`],T=(e,t,u,r)=>{const{query:s,request:n}=r??{};return{queryKey:(s==null?void 0:s.queryKey)??$(e,t,u),queryFn:({signal:y})=>K(e,t,u,n,y),enabled:!!(e&&t&&u),...s}};function Q(e,t,u,r,s){const n=T(e,t,u,r),o=c(n);return o.queryKey=n.queryKey,o}const F=(e,t,u,r,s,n)=>i({url:`/ui/databases/${e}/schemas/${t}/tables/${u}/rows`,method:"GET",params:r,signal:n},s),G=(e,t,u,r)=>[`/ui/databases/${e}/schemas/${t}/tables/${u}/rows`],O=(e,t,u,r,s)=>{const{query:n,request:o}={};return{queryKey:(n==null?void 0:n.queryKey)??G(e,t,u),queryFn:({signal:l})=>F(e,t,u,r,o,l),enabled:!!(e&&t&&u),...n}};function f(e,t,u,r,s,n){const o=O(e,t,u,r),a=c(o);return a.queryKey=o.queryKey,a}const g=(e,t,u,r,s,n,o)=>{const a=new FormData;return a.append("uploadFile",r.uploadFile),i({url:`/ui/databases/${e}/schemas/${t}/tables/${u}/rows`,method:"POST",headers:{"Content-Type":"multipart/form-data"},data:a,params:s,signal:o},n)},C=e=>{const t=["uploadFile"],{mutation:u,request:r}=e?e.mutation&&"mutationKey"in e.mutation&&e.mutation.mutationKey?e:{...e,mutation:{...e.mutation,mutationKey:t}}:{mutation:{mutationKey:t},request:void 0};return{mutationFn:n=>{const{databaseName:o,schemaName:a,tableName:y,data:l,params:q}=n??{};return g(o,a,y,l,q,r)},...u}},D=(e,t)=>{const u=C(e);return p(u)};export{Q as a,h as b,D as c,f as u};
