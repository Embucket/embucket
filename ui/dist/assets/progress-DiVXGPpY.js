import{j as i,ag as w,c as g,s as $,r as f,J as j,P as p}from"./index-Ct9KqqwV.js";const I=$("inline-flex items-center justify-center rounded-full border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden",{variants:{variant:{default:"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90",secondary:"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90",destructive:"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/70",outline:"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground"}},defaultVariants:{variant:"default"}});function D({className:r,variant:e,asChild:s=!1,...t}){const a=s?w:"span";return i.jsx(a,{"data-slot":"badge",className:g(I({variant:e}),r),...t})}var u="Progress",d=100,[E,L]=j(u),[V,R]=E(u),m=f.forwardRef((r,e)=>{const{__scopeProgress:s,value:t=null,max:a,getValueLabel:h=_,...y}=r;(a||a===0)&&!c(a)&&console.error(M(`${a}`,"Progress"));const o=c(a)?a:d;t!==null&&!v(t,o)&&console.error(S(`${t}`,"Progress"));const n=v(t,o)?t:null,N=l(n)?h(n,o):void 0;return i.jsx(V,{scope:s,value:n,max:o,children:i.jsx(p.div,{"aria-valuemax":o,"aria-valuemin":0,"aria-valuenow":l(n)?n:void 0,"aria-valuetext":N,role:"progressbar","data-state":P(n,o),"data-value":n??void 0,"data-max":o,...y,ref:e})})});m.displayName=u;var x="ProgressIndicator",b=f.forwardRef((r,e)=>{const{__scopeProgress:s,...t}=r,a=R(x,s);return i.jsx(p.div,{"data-state":P(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...t,ref:e})});b.displayName=x;function _(r,e){return`${Math.round(r/e*100)}%`}function P(r,e){return r==null?"indeterminate":r===e?"complete":"loading"}function l(r){return typeof r=="number"}function c(r){return l(r)&&!isNaN(r)&&r>0}function v(r,e){return l(r)&&!isNaN(r)&&r<=e&&r>=0}function M(r,e){return`Invalid prop \`max\` of value \`${r}\` supplied to \`${e}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${d}\`.`}function S(r,e){return`Invalid prop \`value\` of value \`${r}\` supplied to \`${e}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${d} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var A=m,C=b;function O({className:r,value:e,...s}){return i.jsx(A,{"data-slot":"progress",className:g("bg-primary/20 relative h-2 w-full overflow-hidden rounded-full",r),...s,children:i.jsx(C,{"data-slot":"progress-indicator",className:"bg-primary h-full w-full flex-1 transition-all",style:{transform:`translateX(-${100-(e??0)}%)`}})})}export{D as B,O as P};
