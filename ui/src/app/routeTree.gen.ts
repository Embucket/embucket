/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as QueriesHistoryImport } from './routes/queries-history';
import { Route as HomeImport } from './routes/home';
import { Route as IndexImport } from './routes/index';
import { Route as ProfileSettingsIndexImport } from './routes/profile-settings/index';
import { Route as DatabasesIndexImport } from './routes/databases/index';
import { Route as SqlEditorWorksheetIdIndexImport } from './routes/sql-editor/$worksheetId.index';
import { Route as DatabasesDatabaseIdSchemasIndexImport } from './routes/databases/$databaseId.schemas.index';
import { Route as DatabasesDatabaseIdSchemasSchemaIdTablesIndexImport } from './routes/databases/$databaseId.schemas.$schemaId.tables.index';
import { Route as DatabasesDatabaseIdSchemasSchemaIdTablesTableIdColumnsIndexImport } from './routes/databases/$databaseId.schemas.$schemaId.tables.$tableId.columns.index';

// Create/Update Routes

const QueriesHistoryRoute = QueriesHistoryImport.update({
  id: '/queries-history',
  path: '/queries-history',
  getParentRoute: () => rootRoute,
} as any);

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const ProfileSettingsIndexRoute = ProfileSettingsIndexImport.update({
  id: '/profile-settings/',
  path: '/profile-settings/',
  getParentRoute: () => rootRoute,
} as any);

const DatabasesIndexRoute = DatabasesIndexImport.update({
  id: '/databases/',
  path: '/databases/',
  getParentRoute: () => rootRoute,
} as any);

const SqlEditorWorksheetIdIndexRoute = SqlEditorWorksheetIdIndexImport.update({
  id: '/sql-editor/$worksheetId/',
  path: '/sql-editor/$worksheetId/',
  getParentRoute: () => rootRoute,
} as any);

const DatabasesDatabaseIdSchemasIndexRoute =
  DatabasesDatabaseIdSchemasIndexImport.update({
    id: '/databases/$databaseId/schemas/',
    path: '/databases/$databaseId/schemas/',
    getParentRoute: () => rootRoute,
  } as any);

const DatabasesDatabaseIdSchemasSchemaIdTablesIndexRoute =
  DatabasesDatabaseIdSchemasSchemaIdTablesIndexImport.update({
    id: '/databases/$databaseId/schemas/$schemaId/tables/',
    path: '/databases/$databaseId/schemas/$schemaId/tables/',
    getParentRoute: () => rootRoute,
  } as any);

const DatabasesDatabaseIdSchemasSchemaIdTablesTableIdColumnsIndexRoute =
  DatabasesDatabaseIdSchemasSchemaIdTablesTableIdColumnsIndexImport.update({
    id: '/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns/',
    path: '/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns/',
    getParentRoute: () => rootRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/home': {
      id: '/home';
      path: '/home';
      fullPath: '/home';
      preLoaderRoute: typeof HomeImport;
      parentRoute: typeof rootRoute;
    };
    '/queries-history': {
      id: '/queries-history';
      path: '/queries-history';
      fullPath: '/queries-history';
      preLoaderRoute: typeof QueriesHistoryImport;
      parentRoute: typeof rootRoute;
    };
    '/databases/': {
      id: '/databases/';
      path: '/databases';
      fullPath: '/databases';
      preLoaderRoute: typeof DatabasesIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/profile-settings/': {
      id: '/profile-settings/';
      path: '/profile-settings';
      fullPath: '/profile-settings';
      preLoaderRoute: typeof ProfileSettingsIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/sql-editor/$worksheetId/': {
      id: '/sql-editor/$worksheetId/';
      path: '/sql-editor/$worksheetId';
      fullPath: '/sql-editor/$worksheetId';
      preLoaderRoute: typeof SqlEditorWorksheetIdIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/databases/$databaseId/schemas/': {
      id: '/databases/$databaseId/schemas/';
      path: '/databases/$databaseId/schemas';
      fullPath: '/databases/$databaseId/schemas';
      preLoaderRoute: typeof DatabasesDatabaseIdSchemasIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/databases/$databaseId/schemas/$schemaId/tables/': {
      id: '/databases/$databaseId/schemas/$schemaId/tables/';
      path: '/databases/$databaseId/schemas/$schemaId/tables';
      fullPath: '/databases/$databaseId/schemas/$schemaId/tables';
      preLoaderRoute: typeof DatabasesDatabaseIdSchemasSchemaIdTablesIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns/': {
      id: '/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns/';
      path: '/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns';
      fullPath: '/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns';
      preLoaderRoute: typeof DatabasesDatabaseIdSchemasSchemaIdTablesTableIdColumnsIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/home': typeof HomeRoute;
  '/queries-history': typeof QueriesHistoryRoute;
  '/databases': typeof DatabasesIndexRoute;
  '/profile-settings': typeof ProfileSettingsIndexRoute;
  '/sql-editor/$worksheetId': typeof SqlEditorWorksheetIdIndexRoute;
  '/databases/$databaseId/schemas': typeof DatabasesDatabaseIdSchemasIndexRoute;
  '/databases/$databaseId/schemas/$schemaId/tables': typeof DatabasesDatabaseIdSchemasSchemaIdTablesIndexRoute;
  '/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns': typeof DatabasesDatabaseIdSchemasSchemaIdTablesTableIdColumnsIndexRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/home': typeof HomeRoute;
  '/queries-history': typeof QueriesHistoryRoute;
  '/databases': typeof DatabasesIndexRoute;
  '/profile-settings': typeof ProfileSettingsIndexRoute;
  '/sql-editor/$worksheetId': typeof SqlEditorWorksheetIdIndexRoute;
  '/databases/$databaseId/schemas': typeof DatabasesDatabaseIdSchemasIndexRoute;
  '/databases/$databaseId/schemas/$schemaId/tables': typeof DatabasesDatabaseIdSchemasSchemaIdTablesIndexRoute;
  '/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns': typeof DatabasesDatabaseIdSchemasSchemaIdTablesTableIdColumnsIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/home': typeof HomeRoute;
  '/queries-history': typeof QueriesHistoryRoute;
  '/databases/': typeof DatabasesIndexRoute;
  '/profile-settings/': typeof ProfileSettingsIndexRoute;
  '/sql-editor/$worksheetId/': typeof SqlEditorWorksheetIdIndexRoute;
  '/databases/$databaseId/schemas/': typeof DatabasesDatabaseIdSchemasIndexRoute;
  '/databases/$databaseId/schemas/$schemaId/tables/': typeof DatabasesDatabaseIdSchemasSchemaIdTablesIndexRoute;
  '/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns/': typeof DatabasesDatabaseIdSchemasSchemaIdTablesTableIdColumnsIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/home'
    | '/queries-history'
    | '/databases'
    | '/profile-settings'
    | '/sql-editor/$worksheetId'
    | '/databases/$databaseId/schemas'
    | '/databases/$databaseId/schemas/$schemaId/tables'
    | '/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/home'
    | '/queries-history'
    | '/databases'
    | '/profile-settings'
    | '/sql-editor/$worksheetId'
    | '/databases/$databaseId/schemas'
    | '/databases/$databaseId/schemas/$schemaId/tables'
    | '/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns';
  id:
    | '__root__'
    | '/'
    | '/home'
    | '/queries-history'
    | '/databases/'
    | '/profile-settings/'
    | '/sql-editor/$worksheetId/'
    | '/databases/$databaseId/schemas/'
    | '/databases/$databaseId/schemas/$schemaId/tables/'
    | '/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  HomeRoute: typeof HomeRoute;
  QueriesHistoryRoute: typeof QueriesHistoryRoute;
  DatabasesIndexRoute: typeof DatabasesIndexRoute;
  ProfileSettingsIndexRoute: typeof ProfileSettingsIndexRoute;
  SqlEditorWorksheetIdIndexRoute: typeof SqlEditorWorksheetIdIndexRoute;
  DatabasesDatabaseIdSchemasIndexRoute: typeof DatabasesDatabaseIdSchemasIndexRoute;
  DatabasesDatabaseIdSchemasSchemaIdTablesIndexRoute: typeof DatabasesDatabaseIdSchemasSchemaIdTablesIndexRoute;
  DatabasesDatabaseIdSchemasSchemaIdTablesTableIdColumnsIndexRoute: typeof DatabasesDatabaseIdSchemasSchemaIdTablesTableIdColumnsIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeRoute: HomeRoute,
  QueriesHistoryRoute: QueriesHistoryRoute,
  DatabasesIndexRoute: DatabasesIndexRoute,
  ProfileSettingsIndexRoute: ProfileSettingsIndexRoute,
  SqlEditorWorksheetIdIndexRoute: SqlEditorWorksheetIdIndexRoute,
  DatabasesDatabaseIdSchemasIndexRoute: DatabasesDatabaseIdSchemasIndexRoute,
  DatabasesDatabaseIdSchemasSchemaIdTablesIndexRoute:
    DatabasesDatabaseIdSchemasSchemaIdTablesIndexRoute,
  DatabasesDatabaseIdSchemasSchemaIdTablesTableIdColumnsIndexRoute:
    DatabasesDatabaseIdSchemasSchemaIdTablesTableIdColumnsIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/home",
        "/queries-history",
        "/databases/",
        "/profile-settings/",
        "/sql-editor/$worksheetId/",
        "/databases/$databaseId/schemas/",
        "/databases/$databaseId/schemas/$schemaId/tables/",
        "/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/queries-history": {
      "filePath": "queries-history.tsx"
    },
    "/databases/": {
      "filePath": "databases/index.tsx"
    },
    "/profile-settings/": {
      "filePath": "profile-settings/index.tsx"
    },
    "/sql-editor/$worksheetId/": {
      "filePath": "sql-editor/$worksheetId.index.tsx"
    },
    "/databases/$databaseId/schemas/": {
      "filePath": "databases/$databaseId.schemas.index.tsx"
    },
    "/databases/$databaseId/schemas/$schemaId/tables/": {
      "filePath": "databases/$databaseId.schemas.$schemaId.tables.index.tsx"
    },
    "/databases/$databaseId/schemas/$schemaId/tables/$tableId/columns/": {
      "filePath": "databases/$databaseId.schemas.$schemaId.tables.$tableId.columns.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
