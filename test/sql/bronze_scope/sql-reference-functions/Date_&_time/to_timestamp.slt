exclude-from-coverage
statement ok
ALTER SESSION SET TIMEZONE = 'America/Los_Angeles';

query T
SELECT TO_TIMESTAMP_TZ('2024-04-05 01:02:03')
----
'2024-04-05T01:02:03-07:00'

query T
SELECT TO_TIMESTAMP_NTZ('2024-04-05 01:02:03')
----
'2024-04-05T01:02:03'

query T
SELECT TO_TIMESTAMP_TZ('04/05/2024 01:02:03', 'mm/dd/yyyy hh24:mi:ss')
----
'2024-04-05T01:02:03-07:00'

query T
SELECT TO_TIMESTAMP_TZ('04/05/2024 01:02:03', 'dd/mm/yyyy hh24:mi:ss')
----
'2024-05-04T01:02:03-07:00'

exclude-from-coverage
statement ok
ALTER SESSION SET TIMESTAMP_OUTPUT_FORMAT = 'YYYY-MM-DD HH24:MI:SS.FF9 TZH:TZM';

query T
SELECT TO_TIMESTAMP_NTZ(40 * 365.25 * 86400)
----
'2010-01-01T00:00:00'

query T
SELECT TO_TIMESTAMP_NTZ(40 * 365.25 * 86400 * 1000 + 456, 3)
----
'2010-01-01T00:00:00.456000'

query TTTT
SELECT TO_TIMESTAMP(1000000000, 0) AS "Scale in seconds",
       TO_TIMESTAMP(1000000000, 3) AS "Scale in milliseconds",
       TO_TIMESTAMP(1000000000, 6) AS "Scale in microseconds",
       TO_TIMESTAMP(1000000000, 9) AS "Scale in nanoseconds"
----
'2001-09-09T01:46:40'	'1970-01-12T13:46:40'	'1970-01-01T00:16:40'	'1970-01-01T00:00:01'

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE demo1 (
  description VARCHAR,
  value VARCHAR -- string rather than bigint
);

exclude-from-coverage
statement ok
INSERT INTO demo1 (description, value) VALUES
  ('Seconds',      '31536000'),
  ('Milliseconds', '31536000000'),
  ('Microseconds', '31536000000000'),
  ('Nanoseconds',  '31536000000000000');

query TTTT
SELECT description,
       value,
       TO_TIMESTAMP(value),
       TO_DATE(value)
  FROM demo1
  ORDER BY value
----
Seconds	31536000	'1971-01-01T00:00:00'	'1971-01-01'
Milliseconds	31536000000	'1971-01-01T00:00:00'	'1971-01-01'
Microseconds	31536000000000	'1971-01-01T00:00:00'	'1971-01-01'
Nanoseconds	31536000000000000	'1971-01-01T00:00:00'	'1971-01-01'

query TTT
SELECT 0::TIMESTAMP_NTZ, PARSE_JSON(0)::TIMESTAMP_NTZ, PARSE_JSON(0)::INT::TIMESTAMP_NTZ
----
'1970-01-01T00:00:00'	'1969-12-31T16:00:00'	'1970-01-01T00:00:00'

query TTT
SELECT TO_TIMESTAMP_NTZ(0), TO_TIMESTAMP_NTZ(PARSE_JSON(0)), TO_TIMESTAMP_NTZ(PARSE_JSON(0)::INT)
----
'1970-01-01T00:00:00'	'1969-12-31T16:00:00'	'1970-01-01T00:00:00'

