exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE table1 (province VARCHAR, o_col INTEGER, o2_col INTEGER);

exclude-from-coverage
statement ok
INSERT INTO table1 (province, o_col, o2_col) VALUES
    ('Alberta',    0, 10),
    ('Alberta',    0, 10),
    ('Alberta',   13, 10),
    ('Alberta',   13, 11),
    ('Alberta',   14, 11),
    ('Alberta',   15, 12),
    ('Alberta', NULL, NULL),
    ('Manitoba',    30, 30);

query TTT
SELECT province, o_col, 
      CONDITIONAL_TRUE_EVENT(o_col) 
        OVER (PARTITION BY province ORDER BY o_col) 
          AS true_event
    FROM table1
    ORDER BY province, o_col
----
Alberta	0	0
Alberta	0	0
Alberta	13	1
Alberta	13	2
Alberta	14	3
Alberta	15	4
Alberta	NULL	4
Manitoba	30	1

query TTTT
SELECT province, o_col, 
      CONDITIONAL_TRUE_EVENT(o_col) 
        OVER (PARTITION BY province ORDER BY o_col) 
          AS true_event,
      CONDITIONAL_TRUE_EVENT(o_col > 20) 
        OVER (PARTITION BY province ORDER BY o_col) 
          AS true_event_gt_20
    FROM table1
    ORDER BY province, o_col
----
Alberta	0	0	0
Alberta	0	0	0
Alberta	13	1	0
Alberta	13	2	0
Alberta	14	3	0
Alberta	15	4	0
Alberta	NULL	4	0
Manitoba	30	1	1

query TTTT
SELECT province, o_col,
      CONDITIONAL_CHANGE_EVENT(o_col) 
        OVER (PARTITION BY province ORDER BY o_col) 
          AS change_event,
      CONDITIONAL_TRUE_EVENT(o_col) 
        OVER (PARTITION BY province ORDER BY o_col) 
          AS true_event
    FROM table1
    ORDER BY province, o_col
----
Alberta	0	0	0
Alberta	0	0	0
Alberta	13	1	1
Alberta	13	1	2
Alberta	14	2	3
Alberta	15	3	4
Alberta	NULL	3	4
Manitoba	30	0	1

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE borrowers (
        name VARCHAR,
        status_date DATE,
        late_balance NUMERIC(11, 2),
        thirty_day_late_balance NUMERIC(11, 2)
        );

exclude-from-coverage
statement ok
INSERT INTO borrowers (name, status_date, late_balance, thirty_day_late_balance) VALUES
        ('Geoffrey Flake', '2018-01-01'::DATE,    0.0,    0.0),
        ('Geoffrey Flake', '2018-02-01'::DATE, 1000.0,    0.0),
        ('Geoffrey Flake', '2018-03-01'::DATE, 2000.0, 1000.0),
        ('Geoffrey Flake', '2018-04-01'::DATE,    0.0,    0.0),
        ('Geoffrey Flake', '2018-05-01'::DATE, 1000.0,    0.0),
        ('Geoffrey Flake', '2018-06-01'::DATE, 2000.0, 1000.0),
        ('Geoffrey Flake', '2018-07-01'::DATE,    0.0,    0.0),
        ('Geoffrey Flake', '2018-08-01'::DATE,    0.0,    0.0),
        ('Cy Dismal', '2018-01-01'::DATE,    0.0,    0.0),
        ('Cy Dismal', '2018-02-01'::DATE,    0.0,    0.0),
        ('Cy Dismal', '2018-03-01'::DATE, 1000.0,    0.0),
        ('Cy Dismal', '2018-04-01'::DATE, 2000.0, 1000.0),
        ('Cy Dismal', '2018-05-01'::DATE, 3000.0, 2000.0),
        ('Cy Dismal', '2018-06-01'::DATE, 4000.0, 3000.0),
        ('Cy Dismal', '2018-07-01'::DATE, 5000.0, 4000.0),
        ('Cy Dismal', '2018-08-01'::DATE, 6000.0, 5000.0),
        ('Leslie Safer', '2018-01-01'::DATE,    0.0,    0.0),
        ('Leslie Safer', '2018-02-01'::DATE,    0.0,    0.0),
        ('Leslie Safer', '2018-03-01'::DATE, 1000.0, 1000.0),
        ('Leslie Safer', '2018-04-01'::DATE, 2000.0, 1000.0),
        ('Leslie Safer', '2018-05-01'::DATE, 2000.0, 1000.0),
        ('Leslie Safer', '2018-06-01'::DATE, 2000.0, 1000.0),
        ('Leslie Safer', '2018-07-01'::DATE, 2000.0, 1000.0),
        ('Leslie Safer', '2018-08-01'::DATE, 2000.0, 1000.0),
        ('Ida Idyll', '2018-01-01'::DATE,    0.0,    0.0),
        ('Ida Idyll', '2018-02-01'::DATE,    0.0,    0.0),
        ('Ida Idyll', '2018-03-01'::DATE,    0.0,    0.0),
        ('Ida Idyll', '2018-04-01'::DATE,    0.0,    0.0),
        ('Ida Idyll', '2018-05-01'::DATE,    0.0,    0.0),
        ('Ida Idyll', '2018-06-01'::DATE,    0.0,    0.0),
        ('Ida Idyll', '2018-07-01'::DATE,    0.0,    0.0),
        ('Ida Idyll', '2018-08-01'::DATE,    0.0,    0.0);

query TTTTTT
SELECT name, status_date, late_balance AS "OVERDUE", 
        thirty_day_late_balance AS "30 DAYS OVERDUE",
        CONDITIONAL_CHANGE_EVENT(thirty_day_late_balance) 
          OVER (PARTITION BY name ORDER BY status_date) AS change_event_cnt,
        CONDITIONAL_TRUE_EVENT(thirty_day_late_balance) 
          OVER (PARTITION BY name ORDER BY status_date) AS true_cnt
    FROM borrowers
    ORDER BY name, status_date
----
Cy Dismal	'2018-01-01'	0.00	0.00	0	0
Cy Dismal	'2018-02-01'	0.00	0.00	0	0
Cy Dismal	'2018-03-01'	1000.00	0.00	0	0
Cy Dismal	'2018-04-01'	2000.00	1000.00	1	1
Cy Dismal	'2018-05-01'	3000.00	2000.00	2	2
Cy Dismal	'2018-06-01'	4000.00	3000.00	3	3
Cy Dismal	'2018-07-01'	5000.00	4000.00	4	4
Cy Dismal	'2018-08-01'	6000.00	5000.00	5	5
Geoffrey Flake	'2018-01-01'	0.00	0.00	0	0
Geoffrey Flake	'2018-02-01'	1000.00	0.00	0	0
Geoffrey Flake	'2018-03-01'	2000.00	1000.00	1	1
Geoffrey Flake	'2018-04-01'	0.00	0.00	2	1
Geoffrey Flake	'2018-05-01'	1000.00	0.00	2	1
Geoffrey Flake	'2018-06-01'	2000.00	1000.00	3	2
Geoffrey Flake	'2018-07-01'	0.00	0.00	4	2
Geoffrey Flake	'2018-08-01'	0.00	0.00	4	2
Ida Idyll	'2018-01-01'	0.00	0.00	0	0
Ida Idyll	'2018-02-01'	0.00	0.00	0	0
Ida Idyll	'2018-03-01'	0.00	0.00	0	0
Ida Idyll	'2018-04-01'	0.00	0.00	0	0
Ida Idyll	'2018-05-01'	0.00	0.00	0	0
Ida Idyll	'2018-06-01'	0.00	0.00	0	0
Ida Idyll	'2018-07-01'	0.00	0.00	0	0
Ida Idyll	'2018-08-01'	0.00	0.00	0	0
Leslie Safer	'2018-01-01'	0.00	0.00	0	0
Leslie Safer	'2018-02-01'	0.00	0.00	0	0
Leslie Safer	'2018-03-01'	1000.00	1000.00	1	1
Leslie Safer	'2018-04-01'	2000.00	1000.00	1	2
Leslie Safer	'2018-05-01'	2000.00	1000.00	1	3
Leslie Safer	'2018-06-01'	2000.00	1000.00	1	4
Leslie Safer	'2018-07-01'	2000.00	1000.00	1	5
Leslie Safer	'2018-08-01'	2000.00	1000.00	1	6

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE tbl
(p int, o int, i int, r int, s varchar(100));

exclude-from-coverage
statement ok
INSERT INTO tbl VALUES
(100,1,1,70,'seventy'),(100,2,2,30, 'thirty'),(100,3,3,40,'fourty'),(100,4,NULL,90,'ninety'),(100,5,5,50,'fifty'),(100,6,6,30,'thirty'),
(200,7,7,40,'fourty'),(200,8,NULL,NULL,'n_u_l_l'),(200,9,NULL,NULL,'n_u_l_l'),(200,10,10,20,'twenty'),(200,11,NULL,90,'ninety'),
(300,12,12,30,'thirty'),
(400,13,NULL,20,'twenty');

statement ok
SELECT p, o, CONDITIONAL_TRUE_EVENT(o>2) OVER (PARTITION BY p ORDER BY o) FROM tbl ORDER BY p, o;

statement ok
SELECT p, o, CONDITIONAL_TRUE_EVENT(LAG(O) OVER (PARTITION BY P ORDER BY O) >1) OVER (PARTITION BY P ORDER BY O) FROM tbl ORDER BY p, o;

