exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE demo2 (id INT, string1 VARCHAR);

exclude-from-coverage
statement ok
INSERT INTO demo2 (id, string1) VALUES
    (2, 'It was the best of times, it was the worst of times.'),
    (3, 'In    the   string   the   extra   spaces  are   redundant.'),
    (4, 'A thespian theater is nearby.');

query TT
SELECT id,
       REGEXP_SUBSTR(string1, 'the\\W+\\w+') AS result
  FROM demo2
  ORDER BY id
----
2	the best
3	the   string
4	NULL

query TT
SELECT id,
       REGEXP_SUBSTR(string1, 'the\\W+\\w+', 1, 2) AS result
  FROM demo2
  ORDER BY id
----
2	the worst
3	the   extra
4	NULL

query TT
SELECT id,
       REGEXP_SUBSTR(string1, 'the\\W+(\\w+)', 1, 2, 'e', 1) AS result
  FROM demo2
  ORDER BY id
----
2	worst
3	extra
4	NULL

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE test_regexp_substr (string1 VARCHAR);

exclude-from-coverage
statement ok
INSERT INTO test_regexp_substr (string1) VALUES ('A MAN A PLAN A CANAL');

query TTTT
SELECT REGEXP_SUBSTR(string1, 'A\\W+(\\w+)', 1, 1, 'e', 1) AS result1,
       REGEXP_SUBSTR(string1, 'A\\W+(\\w+)', 1, 2, 'e', 1) AS result2,
       REGEXP_SUBSTR(string1, 'A\\W+(\\w+)', 1, 3, 'e', 1) AS result3,
       REGEXP_SUBSTR(string1, 'A\\W+(\\w+)', 1, 4, 'e', 1) AS result4
  FROM test_regexp_substr
----
MAN	PLAN	CANAL	NULL

query TTT
SELECT REGEXP_SUBSTR(string1, 'A\\W+(\\w)(\\w)(\\w)', 1, 1, 'e', 1) AS result1,
       REGEXP_SUBSTR(string1, 'A\\W+(\\w)(\\w)(\\w)', 1, 1, 'e', 2) AS result2,
       REGEXP_SUBSTR(string1, 'A\\W+(\\w)(\\w)(\\w)', 1, 1, 'e', 3) AS result3
  FROM test_regexp_substr
----
M	A	N

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE message(body VARCHAR(255));

exclude-from-coverage
statement ok
INSERT INTO message VALUES
  ('Hellooo World'),
  ('How are you doing today?'),
  ('the quick brown fox jumps over the lazy dog'),
  ('PACK MY BOX WITH FIVE DOZEN LIQUOR JUGS');

query TT
SELECT body,
       REGEXP_SUBSTR(body, '\\b\\S*o\\S*\\b') AS result
  FROM message
----
Hellooo World	Hellooo
How are you doing today?	How
the quick brown fox jumps over the lazy dog	brown
PACK MY BOX WITH FIVE DOZEN LIQUOR JUGS	NULL

query TT
SELECT body,
       REGEXP_SUBSTR(body, '\\b\\S*o\\S*\\b', 3) AS result
  FROM message
----
Hellooo World	llooo
How are you doing today?	you
the quick brown fox jumps over the lazy dog	brown
PACK MY BOX WITH FIVE DOZEN LIQUOR JUGS	NULL

query TT
SELECT body,
       REGEXP_SUBSTR(body, '\\b\\S*o\\S*\\b', 3, 3) AS result
  FROM message
----
Hellooo World	NULL
How are you doing today?	today
the quick brown fox jumps over the lazy dog	over
PACK MY BOX WITH FIVE DOZEN LIQUOR JUGS	NULL

query TT
SELECT body,
       REGEXP_SUBSTR(body, '\\b\\S*o\\S*\\b', 3, 3, 'i') AS result
  FROM message
----
Hellooo World	NULL
How are you doing today?	today
the quick brown fox jumps over the lazy dog	over
PACK MY BOX WITH FIVE DOZEN LIQUOR JUGS	LIQUOR

query TT
SELECT body,
       REGEXP_SUBSTR(body, '(H\\S*o\\S*\\b).*', 1, 1, '') AS result
  FROM message
----
Hellooo World	Hellooo World
How are you doing today?	How are you doing today?
the quick brown fox jumps over the lazy dog	NULL
PACK MY BOX WITH FIVE DOZEN LIQUOR JUGS	NULL

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE overlap (
  id NUMBER,
  a STRING);

exclude-from-coverage
statement ok
INSERT INTO overlap VALUES (1, ',abc,def,ghi,jkl,');

exclude-from-coverage
statement ok
INSERT INTO overlap VALUES (2, ',abc,,def,,ghi,,jkl,');

query TT
SELECT id,
       REGEXP_SUBSTR(a,'[[:punct:]][[:alnum:]]+[[:punct:]]', 1, 2) AS result
  FROM overlap
----
1	,ghi,
2	,def,

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE test_regexp_log (logs VARCHAR);

exclude-from-coverage
statement ok
INSERT INTO test_regexp_log (logs) VALUES
  ('127.0.0.1 - - [10/Jan/2018:16:55:36 -0800] "GET / HTTP/1.0" 200 2216'),
  ('192.168.2.20 - - [14/Feb/2018:10:27:10 -0800] "GET /cgi-bin/try/ HTTP/1.0" 200 3395');

query T
SELECT '{ "ip_addr":"'
       || REGEXP_SUBSTR (logs,'\\b\\d{1,3}\.\\d{1,3}\.\\d{1,3}\.\\d{1,3}\\b')
       || '", "date":"'
       || REGEXP_SUBSTR (logs,'([\\w:\/]+\\s[+\-]\\d{4})')
       || '", "request":"'
       || REGEXP_SUBSTR (logs,'\"((\\S+) (\\S+) (\\S+))\"', 1, 1, 'e')
       || '", "status":"'
       || REGEXP_SUBSTR (logs,'(\\d{3}) \\d+', 1, 1, 'e')
       || '", "size":"'
       || REGEXP_SUBSTR (logs,'\\d{3} (\\d+)', 1, 1, 'e')
       || '"}' as Apache_HTTP_Server_Access
  FROM test_regexp_log
----
'{"ip_addr":"127.0.0.1","date":"10/Jan/2018:16:55:36 -0800","request":"GET / HTTP/1.0","status":"200","size":"2216"}'
'{"ip_addr":"192.168.2.20","date":"14/Feb/2018:10:27:10 -0800","request":"GET /cgi-bin/try/ HTTP/1.0","status":"200","size":"3395"}'

