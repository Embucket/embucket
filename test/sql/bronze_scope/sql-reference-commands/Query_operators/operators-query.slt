exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE sales_office_zip_example(
  office_name VARCHAR,
  zip VARCHAR);

exclude-from-coverage
statement ok
INSERT INTO sales_office_zip_example VALUES ('sales1', '94061');

exclude-from-coverage
statement ok
INSERT INTO sales_office_zip_example VALUES ('sales2', '94070');

exclude-from-coverage
statement ok
INSERT INTO sales_office_zip_example VALUES ('sales3', '98116');

exclude-from-coverage
statement ok
INSERT INTO sales_office_zip_example VALUES ('sales4', '98005');

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE customer_zip_example(
  customer VARCHAR,
  zip VARCHAR);

exclude-from-coverage
statement ok
INSERT INTO customer_zip_example VALUES ('customer1', '94066');

exclude-from-coverage
statement ok
INSERT INTO customer_zip_example VALUES ('customer2', '94061');

exclude-from-coverage
statement ok
INSERT INTO customer_zip_example VALUES ('customer3', '98444');

exclude-from-coverage
statement ok
INSERT INTO customer_zip_example VALUES ('customer4', '98005');

query T
SELECT zip FROM sales_office_zip_example
INTERSECT
SELECT zip FROM customer_zip_example
----
98005
94061

query T
SELECT zip FROM sales_office_zip_example
MINUS
SELECT zip FROM customer_zip_example
----
94070
98116

query T
SELECT zip FROM customer_zip_example
MINUS
SELECT zip FROM sales_office_zip_example
----
98444
94066

query TT
SELECT office_name office_or_customer, zip FROM sales_office_zip_example
UNION
SELECT customer, zip FROM customer_zip_example
ORDER BY zip
----
customer2	94061
sales1	94061
customer1	94066
sales2	94070
sales4	98005
customer4	98005
sales3	98116
customer3	98444

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE union_test1 (v VARCHAR);

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE union_test2 (i INTEGER);

exclude-from-coverage
statement ok
INSERT INTO union_test1 (v) VALUES ('Adams, Douglas');

exclude-from-coverage
statement ok
INSERT INTO union_test2 (i) VALUES (42);

query T
SELECT v FROM union_test1
UNION
SELECT i::VARCHAR FROM union_test2
----
Adams, Douglas
42

query T
SELECT v::VARCHAR FROM union_test1
UNION
SELECT i::VARCHAR FROM union_test2
----
Adams, Douglas
42

# Test that UNION with mismatched column counts fails

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE u1(a INT);

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE u2(a INT, b INT);

statement error
SELECT * FROM u1 UNION SELECT * FROM u2;
----
001789 (42601): SQL compilation error:
invalid number of result columns for set operator input branches, expected 1, got 2 in branch 2