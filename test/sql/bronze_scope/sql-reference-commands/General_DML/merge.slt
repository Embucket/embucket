exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE target_table (ID INTEGER, description VARCHAR);

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE source_table (ID INTEGER, description VARCHAR);

exclude-from-coverage
statement ok
INSERT INTO target_table (ID, description) VALUES
    (10, 'To be updated (this is the old value)');

exclude-from-coverage
statement ok
INSERT INTO source_table (ID, description) VALUES
    (10, 'To be updated (this is the new value)');

exclude-from-coverage
statement ok
MERGE INTO target_table USING source_table 
    ON target_table.id = source_table.id
    WHEN MATCHED THEN 
        UPDATE SET target_table.description = source_table.description;

query IT
SELECT * FROM target_table;
----
10	To be updated (this is the new value)


exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE target_table (ID INTEGER, description VARCHAR);

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE source_table (ID INTEGER, description VARCHAR);

exclude-from-coverage
statement ok
INSERT INTO source_table (ID, description) VALUES
    (50, 'This is a duplicate in the source and has no match in target'),
    (50, 'This is a duplicate in the source and has no match in target');

exclude-from-coverage
statement ok
MERGE INTO target_table USING source_table 
    ON target_table.id = source_table.id
    WHEN MATCHED THEN 
        UPDATE SET target_table.description = source_table.description
    WHEN NOT MATCHED THEN 
        INSERT (ID, description) VALUES (source_table.id, source_table.description);

query I
SELECT ID FROM target_table;
----
50
50

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE target_orig (k NUMBER, v NUMBER);

exclude-from-coverage
statement ok
INSERT INTO target_orig VALUES (0, 10);

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE src (k NUMBER, v NUMBER);

exclude-from-coverage
statement ok
INSERT INTO src VALUES (0, 11), (0, 12), (0, 13);

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE target AS (SELECT * from target_orig);

statement ok
MERGE INTO target
  USING src ON target.k = src.k
  WHEN MATCHED THEN UPDATE SET target.v = src.v;

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE target AS (SELECT * from target_orig);

statement ok
MERGE INTO target
  USING src ON target.k = src.k
  WHEN MATCHED AND src.v = 11 THEN DELETE
  WHEN MATCHED THEN UPDATE SET target.v = src.v;

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE target AS (SELECT * from target_orig);

statement ok
MERGE INTO target
  USING src ON target.k = src.k
  WHEN MATCHED AND src.v <= 12 THEN DELETE;

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE target AS (SELECT * from target_orig);

statement ok
MERGE INTO target
  USING src ON target.k = src.k
  WHEN MATCHED AND src.v = 11 THEN UPDATE SET target.v = src.v;

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE target AS (SELECT * from target_orig);

statement ok
MERGE INTO target USING (select k, max(v) as v from src group by k) AS b ON target.k = b.k
  WHEN MATCHED THEN UPDATE SET target.v = b.v
  WHEN NOT MATCHED THEN INSERT (k, v) VALUES (b.k, b.v);
