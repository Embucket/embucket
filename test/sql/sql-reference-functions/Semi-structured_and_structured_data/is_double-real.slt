exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE vartab (n NUMBER(2), v VARIANT);

exclude-from-coverage
statement ok
INSERT INTO vartab
  SELECT column1 AS n, PARSE_JSON(column2) AS v
    FROM VALUES (1, 'null'), 
                (2, null), 
                (3, 'true'),
                (4, '-17'), 
                (5, '123.12'), 
                (6, '1.912e2'),
                (7, '"Om ara pa ca na dhih"  '), 
                (8, '[-1, 12, 289, 2188, false,]'), 
                (9, '{ "x" : "abc", "y" : false, "z": 10} ') 
       AS vals;

query TT
SELECT * FROM vartab WHERE IS_DOUBLE(v)
----
4	-17
5	123.12
6	1.912000000000000e+02

exclude-from-coverage
statement ok
CREATE OR REPLACE TABLE multiple_types (
  array1 VARIANT,
  array2 VARIANT,
  boolean1 VARIANT,
  varchar1 VARIANT,
  varchar2 VARIANT,
  decimal1 VARIANT,
  double1 VARIANT,
  integer1 VARIANT,
  object1 VARIANT);

exclude-from-coverage
statement ok
INSERT INTO multiple_types
    (array1, array2, boolean1, varchar1, varchar2,
     decimal1, double1, integer1, object1)
  SELECT
    TO_VARIANT(TO_ARRAY('Example')),
    TO_VARIANT(ARRAY_CONSTRUCT('Array-like', 'example')),
    TO_VARIANT(TRUE),
    TO_VARIANT('X'),
    TO_VARIANT('I am a real character'),
    TO_VARIANT(1.23::DECIMAL(6, 3)),
    TO_VARIANT(3.21::DOUBLE),
    TO_VARIANT(15),
    TO_VARIANT(TO_OBJECT(PARSE_JSON('{"Tree": "Pine"}')));

query TTTT
SELECT IS_DOUBLE(boolean1),
       IS_DOUBLE(decimal1),
       IS_DOUBLE(double1),
       IS_DOUBLE(integer1)
  FROM multiple_types
----
FALSE	TRUE	TRUE	TRUE

