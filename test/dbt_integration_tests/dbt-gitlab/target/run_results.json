{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.6", "generated_at": "2025-06-09T18:52:50.204150Z", "invocation_id": "5bfdeaf5-c7d2-4c9d-b3a7-973fa670535b", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:40.396916Z", "completed_at": "2025-06-09T18:46:40.407672Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:40.408021Z", "completed_at": "2025-06-09T18:46:41.667839Z"}], "thread_id": "main", "execution_time": 1.270923, "adapter_response": {}, "message": "gitlab_snowflake.on-run-start.0 passed", "failures": 0, "unique_id": "operation.gitlab_snowflake.gitlab_snowflake-on-run-start-0", "compiled": true, "compiled_code": "\n    \n        select 1 as test\n    \n", "relation_name": null, "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.268250Z", "completed_at": "2025-06-09T18:46:42.357127Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.409899Z", "completed_at": "2025-06-09T18:46:42.735297Z"}], "thread_id": "Thread-4", "execution_time": 0.5313389301300049, "adapter_response": {}, "message": "Database Error in model models (models/sources/models.sql)\n  000200: DataFusion error: This feature is not implemented: Arrays with unspecified type is not supported\n  compiled code at target/run/dbt_artifacts/models/sources/models.sql", "failures": null, "unique_id": "model.dbt_artifacts.models", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (select 1 as foo)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as TEXT) as  database\n    ,\n    cast(null as TEXT) as  schema\n    ,\n    cast(null as TEXT) as name,\n    cast(null as \n   array\n) as depends_on_nodes,\n    cast(null as TEXT) as package_name,\n    cast(null as TEXT) as path,\n    cast(null as TEXT) as checksum,\n    cast(null as TEXT) as materialization,\n    cast(null as \n   array\n) as tags,\n    cast(null as \n   object\n) as meta,\n    cast(null as TEXT) as alias,\n    cast(null as \n   object\n) as all_results\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "EMBUCKET.dbt_artifacts.models", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.259834Z", "completed_at": "2025-06-09T18:46:42.357444Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.415035Z", "completed_at": "2025-06-09T18:46:42.735707Z"}], "thread_id": "Thread-3", "execution_time": 0.5342342853546143, "adapter_response": {}, "message": "Database Error in model model_executions (models/sources/model_executions.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"object\", quote_style: None, span: Span(Location(1,684)..Location(1,690)) })]), [])\n  compiled code at target/run/dbt_artifacts/models/sources/model_executions.sql", "failures": null, "unique_id": "model.dbt_artifacts.model_executions", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (select 1 as foo)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as boolean) as was_full_refresh,\n    cast(null as TEXT) as thread_id,\n    cast(null as TEXT) as status,\n    cast(null as timestamp) as compile_started_at,\n    cast(null as timestamp) as query_completed_at,\n    cast(null as float) as total_node_runtime,\n    cast(null as integer) as rows_affected,\n    \n    cast(null as TEXT) as materialization,\n    cast(null as TEXT) as  schema\n    ,\n    cast(null as TEXT) as name,\n    cast(null as TEXT) as alias,\n    cast(null as TEXT) as message,\n    cast(null as \n   object\n) as adapter_response\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "EMBUCKET.dbt_artifacts.model_executions", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.231437Z", "completed_at": "2025-06-09T18:46:42.252721Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.316497Z", "completed_at": "2025-06-09T18:46:42.736082Z"}], "thread_id": "Thread-2", "execution_time": 0.5511243343353271, "adapter_response": {}, "message": "Database Error in model invocations (models/sources/invocations.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"object\", quote_style: None, span: Span(Location(1,735)..Location(1,741)) })]), [])\n  compiled code at target/run/dbt_artifacts/models/sources/invocations.sql", "failures": null, "unique_id": "model.dbt_artifacts.invocations", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith\n    dummy_cte as (\n\n        select 1 as foo\n\n    )\n\nselect\n    cast(null as TEXT) as command_invocation_id\n    , cast(null as TEXT) as dbt_version\n    , cast(null as TEXT) as project_name\n    , cast(null as timestamp) as run_started_at\n    , cast(null as TEXT) as dbt_command\n    , cast(null as boolean) as full_refresh_flag\n    , cast(null as TEXT) as target_profile_name\n    , cast(null as TEXT) as target_name\n    , cast(null as TEXT) as target_schema\n    , cast(null as integer) as target_threads\n    , cast(null as TEXT) as dbt_cloud_project_id\n    , cast(null as TEXT) as dbt_cloud_job_id\n    , cast(null as TEXT) as dbt_cloud_run_id\n    , cast(null as TEXT) as dbt_cloud_run_reason_category\n    , cast(null as TEXT) as dbt_cloud_run_reason\n    , cast(null as \n   object\n) as env_vars\n    , cast(null as \n   object\n) as dbt_vars\n    , cast(null as \n   object\n) as invocation_args\n    , cast(null as \n   object\n) as dbt_custom_envs\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "EMBUCKET.dbt_artifacts.invocations", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.217706Z", "completed_at": "2025-06-09T18:46:42.251049Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.274237Z", "completed_at": "2025-06-09T18:46:42.736623Z"}], "thread_id": "Thread-1", "execution_time": 0.5528879165649414, "adapter_response": {}, "message": "Database Error in model exposures (models/sources/exposures.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"object\", quote_style: None, span: Span(Location(1,293)..Location(1,299)) })]), [])\n  compiled code at target/run/dbt_artifacts/models/sources/exposures.sql", "failures": null, "unique_id": "model.dbt_artifacts.exposures", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith\n    dummy_cte as (\n\n        select 1 as foo\n\n    )\n\nselect\n    cast(null as TEXT) as command_invocation_id\n    , cast(null as TEXT) as node_id\n    , cast(null as timestamp) as run_started_at\n    , cast(null as TEXT) as name\n    , cast(null as TEXT) as type\n    , cast(null as \n   object\n) as owner\n    , cast(null as TEXT) as maturity\n    , cast(null as TEXT) as path\n    , cast(null as TEXT) as description\n    , cast(null as TEXT) as url\n    , cast(null as TEXT) as package_name\n    , cast(null as \n   array\n) as depends_on_nodes\n    , cast(null as \n   array\n) as tags\n    , cast(null as \n   object\n) as all_results\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "EMBUCKET.dbt_artifacts.exposures", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.321060Z", "completed_at": "2025-06-09T18:46:42.372802Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.441676Z", "completed_at": "2025-06-09T18:46:42.933782Z"}], "thread_id": "Thread-5", "execution_time": 0.7527570724487305, "adapter_response": {}, "message": "Database Error in model seed_executions (models/sources/seed_executions.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"object\", quote_style: None, span: Span(Location(1,683)..Location(1,689)) })]), [])\n  compiled code at target/run/dbt_artifacts/models/sources/seed_executions.sql", "failures": null, "unique_id": "model.dbt_artifacts.seed_executions", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (select 1 as foo)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as boolean) as was_full_refresh,\n    cast(null as TEXT) as thread_id,\n    cast(null as TEXT) as status,\n    cast(null as timestamp) as compile_started_at,\n    cast(null as timestamp) as query_completed_at,\n    cast(null as float) as total_node_runtime,\n    cast(null as integer) as rows_affected,\n    cast(null as TEXT) as materialization,\n    cast(null as TEXT) as  schema\n    ,\n    cast(null as TEXT) as name,\n    cast(null as TEXT) as alias,\n    cast(null as TEXT) as message,\n    cast(null as \n   object\n) as adapter_response\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "EMBUCKET.dbt_artifacts.seed_executions", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.325857Z", "completed_at": "2025-06-09T18:46:42.373514Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.449687Z", "completed_at": "2025-06-09T18:46:42.864556Z"}], "thread_id": "Thread-6", "execution_time": 0.7404229640960693, "adapter_response": {}, "message": "Database Error in model seeds (models/sources/seeds.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"object\", quote_style: None, span: Span(Location(1,419)..Location(1,425)) })]), [])\n  compiled code at target/run/dbt_artifacts/models/sources/seeds.sql", "failures": null, "unique_id": "model.dbt_artifacts.seeds", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (select 1 as foo)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as TEXT) as  database\n    ,\n    cast(null as TEXT) as  schema\n    ,\n    cast(null as TEXT) as name,\n    cast(null as TEXT) as package_name,\n    cast(null as TEXT) as path,\n    cast(null as TEXT) as checksum,\n    cast(null as \n   object\n) as meta,\n    cast(null as TEXT) as alias,\n    cast(null as \n   object\n) as all_results\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "EMBUCKET.dbt_artifacts.seeds", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.359229Z", "completed_at": "2025-06-09T18:46:42.441332Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.492854Z", "completed_at": "2025-06-09T18:46:42.881197Z"}], "thread_id": "Thread-10", "execution_time": 0.734093189239502, "adapter_response": {}, "message": "Database Error in model test_executions (models/sources/test_executions.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"object\", quote_style: None, span: Span(Location(1,592)..Location(1,598)) })]), [])\n  compiled code at target/run/dbt_artifacts/models/sources/test_executions.sql", "failures": null, "unique_id": "model.dbt_artifacts.test_executions", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith\n    dummy_cte as (\n\n        select 1 as foo\n    )\n\nselect\n    cast(null as TEXT) as command_invocation_id\n    , cast(null as TEXT) as node_id\n    , cast(null as timestamp) as run_started_at\n    , cast(null as boolean) as was_full_refresh\n    , cast(null as TEXT) as thread_id\n    , cast(null as TEXT) as status\n    , cast(null as timestamp) as compile_started_at\n    , cast(null as timestamp) as query_completed_at\n    , cast(null as float) as total_node_runtime\n    , cast(null as integer) as rows_affected\n    , cast(null as integer) as failures\n    , cast(null as TEXT) as message\n    , cast(null as \n   object\n) as adapter_response\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "EMBUCKET.dbt_artifacts.test_executions", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.407163Z", "completed_at": "2025-06-09T18:46:42.482678Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.538744Z", "completed_at": "2025-06-09T18:46:42.958274Z"}], "thread_id": "Thread-19", "execution_time": 0.7223100662231445, "adapter_response": {}, "message": "Database Error in model bamboohr_directory_source (models/sources/bamboohr/bamboohr_directory_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,469)..Location(1,476)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,477)..Location(1,482)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,486)..Location(1,496)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,497)..Location(1,505)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,508)..Location(1,513)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,517)..Location(1,521)) })), operator: RightArrow }], alias: None } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/bamboohr/bamboohr_directory_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bamboohr_directory_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n\tFROM EMBUCKET.bamboohr.directory\n\t\n), intermediate AS (\n\n    SELECT \n      value['id']::NUMBER \t\t\t\t        AS employee_id,\n\t    value['displayName']::VARCHAR \t    AS full_name,\n      value['jobTitle']::VARCHAR \t\t\t    AS job_title,\n\t    value['supervisor']::VARCHAR \t\t    AS supervisor,\n\t    value['workEmail']::VARCHAR\t\t\t    AS work_email,\n      uploaded_at::DATE                   AS uploaded_at\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), outer => true)\n\n), final AS (\n\n    SELECT *\n    FROM intermediate\n    WHERE work_email != 't2test@gitlab.com'\n      AND (LOWER(full_name) NOT LIKE '%greenhouse test%'\n        AND LOWER(full_name) NOT LIKE '%test profile%'\n          AND LOWER(full_name) != 'test-gitlab')\n            AND employee_id NOT IN (11569)\n              AND uploaded_at NOT IN ('2021-03-24 22:00:47.283','2021-03-24 20:01:27.458','2021-03-24 18:01:33.370')\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.bamboohr.bamboohr_directory_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.401254Z", "completed_at": "2025-06-09T18:46:42.481963Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.533050Z", "completed_at": "2025-06-09T18:46:42.951190Z"}], "thread_id": "Thread-17", "execution_time": 0.7352840900421143, "adapter_response": {}, "message": "Database Error in model bamboohr_currency_conversion_source (models/sources/bamboohr/bamboohr_currency_conversion_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,752)..Location(1,759)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,760)..Location(1,765)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,769)..Location(1,779)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,780)..Location(1,788)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,791)..Location(1,796)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,800)..Location(1,804)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"data_by_row\", quote_style: None, span: Span(Location(1,809)..Location(1,820)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/bamboohr/bamboohr_currency_conversion_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bamboohr_currency_conversion_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.bamboohr.customcurrencyconversion\n    ORDER BY uploaded_at DESC\n    LIMIT 1\n\n), renamed AS (\n\n    SELECT \n      data_by_row.value['id']::NUMBER                                      AS conversion_id,\n      data_by_row.value['employeeId']::NUMBER                              AS employee_id,\n      TRY_TO_DATE(data_by_row.value['customConversionEffectiveDate']::VARCHAR) AS effective_date,\n      data_by_row.value['customCurrencyConversionFactor']::DECIMAL(10,5)   AS currency_conversion_factor,\n      data_by_row.value['customLocalAnnualSalary']::VARCHAR                AS local_annual_salary,\n      data_by_row.value['customUSDAnnualSalary']::VARCHAR                  AS usd_annual_salary,\n      uploaded_at\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => true) data_by_row\n\n), final AS (\n\n    SELECT \n      conversion_id,\n      employee_id,\n      effective_date,\n      currency_conversion_factor,\n      local_annual_salary,\n      REGEXP_REPLACE(local_annual_salary, '[0-9/-/#/./*]', '')                    AS annual_local_currency_code,\n      REGEXP_REPLACE(usd_annual_salary, '[a-z/-/A-z/#/*]', '')::DECIMAL(10,2)     AS annual_amount_usd_value,\n      REGEXP_REPLACE(usd_annual_salary, '[0-9/-/#/./*]', '')                      AS annual_local_usd_code ,\n      uploaded_at\n    FROM renamed\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.bamboohr.bamboohr_currency_conversion_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.431357Z", "completed_at": "2025-06-09T18:46:42.491914Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.558481Z", "completed_at": "2025-06-09T18:46:43.019840Z"}], "thread_id": "Thread-23", "execution_time": 0.7540261745452881, "adapter_response": {}, "message": "Database Error in model bamboohr_metafields_source (models/sources/bamboohr/bamboohr_metafields_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,394)..Location(1,401)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,402)..Location(1,407)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,411)..Location(1,421)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,422)..Location(1,430)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,433)..Location(1,438)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,442)..Location(1,446)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"metafield\", quote_style: None, span: Span(Location(1,451)..Location(1,460)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/bamboohr/bamboohr_metafields_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bamboohr_metafields_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.bamboohr.meta_fields\n    ORDER BY uploaded_at DESC\n    LIMIT 1\n  \n), renamed AS (\n\n    SELECT\n      metafield.value['id']::INT               AS metafield_id,\n      metafield.value['name']::VARCHAR         AS metafield_name,\n      metafield.value['alias']::VARCHAR        AS metafield_alias_name\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => true) metafield\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.bamboohr.bamboohr_metafields_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.394010Z", "completed_at": "2025-06-09T18:46:42.480901Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.519813Z", "completed_at": "2025-06-09T18:46:42.895515Z"}], "thread_id": "Thread-15", "execution_time": 0.7242250442504883, "adapter_response": {}, "message": "Database Error in model assess_talent_source (models/sources/workday/assess_talent_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,523)..Location(1,530)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,531)..Location(1,536)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,540)..Location(1,550)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"KEY_TALENT_HISTORY_GROUP\", quote_style: None, span: Span(Location(1,551)..Location(1,575)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,581)..Location(1,582)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/assess_talent_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.assess_talent_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.workday.assess_talent\n  WHERE NOT _fivetran_deleted\n\n),\n\nrenamed AS (\n\n  SELECT\n    source.employee_id::NUMBER            AS employee_id,\n    d.value['WORKDAY_ID']::VARCHAR        AS workday_id,\n    d.value['KEY_TALENT']::VARCHAR        AS key_talent,\n    d.value['EFFECTIVE_DATE']::DATE       AS effective_date,\n    source._fivetran_synced::TIMESTAMP    AS uploaded_at,\n    source._fivetran_deleted::BOOLEAN     AS is_deleted\n  FROM source\n  INNER JOIN LATERAL FLATTEN(INPUT => PARSE_JSON(KEY_TALENT_HISTORY_GROUP)) AS d\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.workday.assess_talent_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.368571Z", "completed_at": "2025-06-09T18:46:42.456995Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.500727Z", "completed_at": "2025-06-09T18:46:42.944783Z"}], "thread_id": "Thread-11", "execution_time": 0.7455058097839355, "adapter_response": {}, "message": "Database Error in model tests (models/sources/tests.sql)\n  000200: DataFusion error: This feature is not implemented: Arrays with unspecified type is not supported\n  compiled code at target/run/dbt_artifacts/models/sources/tests.sql", "failures": null, "unique_id": "model.dbt_artifacts.tests", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith\n    dummy_cte as (\n\n        select 1 as foo\n\n    )\n\nselect\n    cast(null as TEXT) as command_invocation_id\n    , cast(null as TEXT) as node_id\n    , cast(null as timestamp) as run_started_at\n    , cast(null as TEXT) as name\n    , cast(null as \n   array\n) as depends_on_nodes\n    , cast(null as TEXT) as package_name\n    , cast(null as TEXT) as test_path\n    , cast(null as \n   array\n) as tags\n    , cast(null as \n   object\n) as all_results\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "EMBUCKET.dbt_artifacts.tests", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.347722Z", "completed_at": "2025-06-09T18:46:42.425010Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.484899Z", "completed_at": "2025-06-09T18:46:42.976121Z"}], "thread_id": "Thread-9", "execution_time": 0.821648120880127, "adapter_response": {}, "message": "Database Error in model sources (models/sources/sources.sql)\n  000200: DataFusion error: This feature is not implemented: Arrays with unspecified type is not supported\n  compiled code at target/run/dbt_artifacts/models/sources/sources.sql", "failures": null, "unique_id": "model.dbt_artifacts.sources", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (select 1 as foo)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as TEXT) as  database\n    ,\n    cast(null as TEXT) as  schema\n    ,\n    cast(null as TEXT) as source_name,\n    cast(null as TEXT) as loader,\n    cast(null as TEXT) as name,\n    cast(null as TEXT) as identifier,\n    cast(null as TEXT) as loaded_at_field\n    , cast(null as \n   array\n) as freshness\n    ,\n    cast(null as \n   object\n) as all_results\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "EMBUCKET.dbt_artifacts.sources", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.337933Z", "completed_at": "2025-06-09T18:46:42.401001Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.477474Z", "completed_at": "2025-06-09T18:46:42.888963Z"}], "thread_id": "Thread-8", "execution_time": 0.7377421855926514, "adapter_response": {}, "message": "Database Error in model snapshots (models/sources/snapshots.sql)\n  000200: DataFusion error: This feature is not implemented: Arrays with unspecified type is not supported\n  compiled code at target/run/dbt_artifacts/models/sources/snapshots.sql", "failures": null, "unique_id": "model.dbt_artifacts.snapshots", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (select 1 as foo)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as TEXT) as  database\n    ,\n    cast(null as TEXT) as  schema\n    ,\n    cast(null as TEXT) as name,\n    cast(null as \n   array\n) as depends_on_nodes,\n    cast(null as TEXT) as package_name,\n    cast(null as TEXT) as path,\n    cast(null as TEXT) as checksum,\n    cast(null as TEXT) as strategy,\n    cast(null as \n   object\n) as meta,\n    cast(null as TEXT) as alias,\n    cast(null as \n   object\n) as all_results\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "EMBUCKET.dbt_artifacts.snapshots", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.425377Z", "completed_at": "2025-06-09T18:46:42.490584Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.549284Z", "completed_at": "2025-06-09T18:46:43.090924Z"}], "thread_id": "Thread-22", "execution_time": 0.8120381832122803, "adapter_response": {}, "message": "Database Error in model bamboohr_job_info_source (models/sources/bamboohr/bamboohr_job_info_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,245)..Location(1,252)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,253)..Location(1,258)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,262)..Location(1,272)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,273)..Location(1,281)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,284)..Location(1,289)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,293)..Location(1,297)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,302)..Location(1,303)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/bamboohr/bamboohr_job_info_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bamboohr_job_info_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.bamboohr.jobinfo\n    ORDER BY uploaded_at DESC\n    LIMIT 1\n\n), intermediate AS (\n\n      SELECT \n        d.value AS data_by_row,\n        uploaded_at\n      FROM source,\n      LATERAL FLATTEN(INPUT => parse_json(jsontext), outer => true) d\n\n), renamed AS (\n\n    SELECT \n      data_by_row['id']::NUMBER              AS job_id,\n      data_by_row['employeeId']::NUMBER      AS employee_id,\n      data_by_row['jobTitle']::VARCHAR       AS job_title,\n      data_by_row['date']::DATE              AS effective_date,\n      data_by_row['department']::VARCHAR     AS department,\n      data_by_row['division']::VARCHAR       AS division,\n      data_by_row['location']::VARCHAR       AS entity,\n      data_by_row['reportsTo']::VARCHAR      AS reports_to,\n      uploaded_at\n    FROM intermediate\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.bamboohr.bamboohr_job_info_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.404305Z", "completed_at": "2025-06-09T18:46:42.482415Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.535965Z", "completed_at": "2025-06-09T18:46:43.052484Z"}], "thread_id": "Thread-18", "execution_time": 0.8470969200134277, "adapter_response": {}, "message": "Database Error in model bamboohr_custom_bonus_source (models/sources/bamboohr/bamboohr_custom_bonus_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,253)..Location(1,260)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,261)..Location(1,266)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,270)..Location(1,280)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,281)..Location(1,289)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,292)..Location(1,297)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,301)..Location(1,305)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,310)..Location(1,311)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/bamboohr/bamboohr_custom_bonus_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bamboohr_custom_bonus_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.bamboohr.custombonus\n    ORDER BY uploaded_at DESC\n    LIMIT 1\n\n), intermediate AS (\n\n      SELECT \n        d.value as data_by_row,\n        uploaded_at\n      FROM source,\n      LATERAL FLATTEN(INPUT => parse_json(jsontext), outer => true) d\n\n), renamed AS (\n\n      SELECT\n           data_by_row['id']::NUMBER                 AS bonus_id,\n           data_by_row['employeeId']::NUMBER         AS employee_id,\n           data_by_row['customBonustype']::varchar   AS bonus_type,\n           data_by_row['customBonusdate']::date      AS bonus_date,\n           data_by_row['customNominatedBy']::varchar AS bonus_nominator_type,\n           uploaded_at\n      FROM intermediate\n      WHERE bonus_date IS NOT NULL\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.bamboohr.bamboohr_custom_bonus_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.333473Z", "completed_at": "2025-06-09T18:46:42.400617Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.473529Z", "completed_at": "2025-06-09T18:46:43.002641Z"}], "thread_id": "Thread-7", "execution_time": 0.8742411136627197, "adapter_response": {}, "message": "Database Error in model snapshot_executions (models/sources/snapshot_executions.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"object\", quote_style: None, span: Span(Location(1,687)..Location(1,693)) })]), [])\n  compiled code at target/run/dbt_artifacts/models/sources/snapshot_executions.sql", "failures": null, "unique_id": "model.dbt_artifacts.snapshot_executions", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (select 1 as foo)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as boolean) as was_full_refresh,\n    cast(null as TEXT) as thread_id,\n    cast(null as TEXT) as status,\n    cast(null as timestamp) as compile_started_at,\n    cast(null as timestamp) as query_completed_at,\n    cast(null as float) as total_node_runtime,\n    cast(null as integer) as rows_affected,\n    cast(null as TEXT) as materialization,\n    cast(null as TEXT) as  schema\n    ,\n    cast(null as TEXT) as name,\n    cast(null as TEXT) as alias,\n    cast(null as TEXT) as message,\n    cast(null as \n   object\n) as adapter_response\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "EMBUCKET.dbt_artifacts.snapshot_executions", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.396485Z", "completed_at": "2025-06-09T18:46:42.481579Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.528950Z", "completed_at": "2025-06-09T18:46:42.964849Z"}], "thread_id": "Thread-16", "execution_time": 0.8507881164550781, "adapter_response": {}, "message": "Database Error in model bamboohr_compensation_source (models/sources/bamboohr/bamboohr_compensation_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,254)..Location(1,261)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,262)..Location(1,267)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,271)..Location(1,281)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,282)..Location(1,290)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,293)..Location(1,298)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,302)..Location(1,306)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,311)..Location(1,312)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/bamboohr/bamboohr_compensation_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bamboohr_compensation_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.bamboohr.compensation\n    ORDER BY uploaded_at DESC\n    LIMIT 1\n\n), intermediate AS (\n\n    SELECT \n      d.value as data_by_row, \n      uploaded_at\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), outer => true) d\n\n), renamed AS (\n\n    SELECT\n      data_by_row['id']::NUMBER                AS compensation_update_id,\n      data_by_row['employeeId']::NUMBER        AS employee_id,\n      data_by_row['startDate']::DATE           AS effective_date,\n      data_by_row['type']::VARCHAR             AS compensation_type,\n      data_by_row['reason']::VARCHAR           AS compensation_change_reason,\n      data_by_row['paidPer']::VARCHAR          AS pay_rate,   \n      TRY_TO_NUMBER(data_by_row['rate']['value']::VARCHAR)      AS compensation_value,\n      data_by_row['rate']['currency']::VARCHAR AS compensation_currency,\n      uploaded_at \n    FROM intermediate\n    -- Filter out specific team member that was brought in as a contractor without a compensation value.\n    WHERE (employee_id != 43749 OR compensation_value IS NOT NULL)\n      \n)\n\nSELECT\n  compensation_update_id,\n  employee_id,\n  effective_date,\n  compensation_type,\n  compensation_change_reason,\n  pay_rate,\n  IFF(compensation_type = 'Hourly', compensation_value * 80, compensation_value) AS compensation_value,\n  compensation_currency,\n  uploaded_at\nFROM renamed", "relation_name": "EMBUCKET.bamboohr.bamboohr_compensation_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.434266Z", "completed_at": "2025-06-09T18:46:42.491619Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.553363Z", "completed_at": "2025-06-09T18:46:43.080961Z"}], "thread_id": "Thread-24", "execution_time": 0.8027887344360352, "adapter_response": {}, "message": "Database Error in model bamboohr_ote_source (models/sources/bamboohr/bamboohr_ote_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,892)..Location(1,899)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,900)..Location(1,905)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,909)..Location(1,919)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,920)..Location(1,928)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,931)..Location(1,936)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,940)..Location(1,944)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"data_by_row\", quote_style: None, span: Span(Location(1,949)..Location(1,960)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/bamboohr/bamboohr_ote_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bamboohr_ote_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.bamboohr.customontargetearnings\n    ORDER BY uploaded_at DESC\n    LIMIT 1\n\n), renamed AS (\n\n    SELECT \n      data_by_row.value['id']::NUMBER                       AS target_earnings_update_id,\n      data_by_row.value['employeeId']::NUMBER               AS employee_id,\n      TRY_TO_DATE(data_by_row.value['customDate']::VARCHAR) AS effective_date,\n      data_by_row.value['customAnnualAmountLocal']::VARCHAR AS annual_amount_local,\n      data_by_row.value['customAnnualAmountUSD']::VARCHAR   AS annual_amount_usd,\n      data_by_row.value['customOTELocal']::VARCHAR          AS ote_local,\n      data_by_row.value['customOTEUSD']::VARCHAR            AS ote_usd,\n      data_by_row.value['customType']::VARCHAR              AS ote_type,\n      data_by_row.value['customVariablePay']::VARCHAR       AS variable_pay,\n      uploaded_at\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => true) data_by_row\n\n), \n\nreformat AS (\n\n    SELECT \n      target_earnings_update_id,\n      employee_id,\n      effective_date,\n      variable_pay,\n      NULLIF(SPLIT_PART(annual_amount_local, ' ', 1),'') AS annual_amount_local,\n      NULLIF(SPLIT_PART(annual_amount_usd,' ', 1),'')    AS annual_amount_usd_value,\n      NULLIF(SPLIT_PART(ote_local,' ', 1),'')            AS ote_local,\n      NULLIF(SPLIT_PART(ote_usd,' ', 1),'')              AS ote_usd,\n      SPLIT_PART(annual_amount_local, ' ', 2)            AS annual_amount_local_currency_code,\n      SPLIT_PART(ote_local, ' ', 2)                      AS ote_local_currency_code,\n      ote_type,\n      uploaded_at\n    FROM renamed\n    WHERE target_earnings_update_id != 23721 --incorrect order\n\n)\n\nSELECT *\nFROM reformat", "relation_name": "EMBUCKET.bamboohr.bamboohr_ote_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.418950Z", "completed_at": "2025-06-09T18:46:42.489397Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.542935Z", "completed_at": "2025-06-09T18:46:43.099406Z"}], "thread_id": "Thread-20", "execution_time": 0.8175661563873291, "adapter_response": {}, "message": "Database Error in model bamboohr_emergency_contacts_source (models/sources/bamboohr/bamboohr_emergency_contacts_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,265)..Location(1,272)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,273)..Location(1,278)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,282)..Location(1,292)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,293)..Location(1,301)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,304)..Location(1,309)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,313)..Location(1,317)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,322)..Location(1,323)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/bamboohr/bamboohr_emergency_contacts_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bamboohr_emergency_contacts_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.bamboohr.emergencycontacts\n    ORDER BY uploaded_at DESC\n    LIMIT 1\n\n), intermediate AS (\n\n    SELECT \n      d.value AS data_by_row,\n      uploaded_at\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => true) d\n  \n), renamed AS (\n\n    SELECT\n      data_by_row['employeeId']::NUMBER \t\tAS employee_id,\n      data_by_row['id']::NUMBER \t\t\t\tAS emergency_contact_id,\n\t    data_by_row['name']::VARCHAR \t            AS full_name,\n      data_by_row['homePhone']::VARCHAR \t\tAS home_phone,\n      data_by_row['mobilePhone']::VARCHAR \t\tAS mobile_phone,\n      data_by_row['workPhone']::VARCHAR\t\t\tAS work_phone,\n      uploaded_at\n    FROM intermediate\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.bamboohr.bamboohr_emergency_contacts_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.422129Z", "completed_at": "2025-06-09T18:46:42.489794Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.546173Z", "completed_at": "2025-06-09T18:46:43.112964Z"}], "thread_id": "Thread-21", "execution_time": 0.8157601356506348, "adapter_response": {}, "message": "Database Error in model bamboohr_employment_status_source (models/sources/bamboohr/bamboohr_employment_status_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,263)..Location(1,270)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,271)..Location(1,276)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,280)..Location(1,290)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,291)..Location(1,299)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,302)..Location(1,307)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,311)..Location(1,315)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,320)..Location(1,321)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/bamboohr/bamboohr_employment_status_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bamboohr_employment_status_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.bamboohr.employmentstatus\n    ORDER BY uploaded_at DESC\n    LIMIT 1\n\n), intermediate as (\n\n      SELECT \n        d.value AS data_by_row,\n        uploaded_at\n      FROM source,\n      LATERAL FLATTEN(INPUT => parse_json(jsontext), outer => true) d\n\n), renamed as (\n\n      SELECT\n            data_by_row['id']::NUMBER                             AS status_id,\n            data_by_row['employeeId']::NUMBER                     AS employee_id,\n            data_by_row['date']::DATE                             AS effective_date,\n            data_by_row['employmentStatus']::VARCHAR              AS employment_status, \n            nullif(data_by_row['terminationTypeId']::VARCHAR, '') AS termination_type,\n            uploaded_at\n      FROM intermediate\n\n), final AS (\n\n    SELECT *\n    FROM renamed\n    WHERE status_id != 27606 -- incorrect record\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY employee_id,effective_date,employment_status ORDER BY effective_date) = 1\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.bamboohr.bamboohr_employment_status_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.379450Z", "completed_at": "2025-06-09T18:46:42.473152Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.514831Z", "completed_at": "2025-06-09T18:46:44.689212Z"}], "thread_id": "Thread-13", "execution_time": 2.4363648891448975, "adapter_response": {}, "message": "Database Error in model all_fabrication_stats_source (models/sources/influx_db/all_fabrication_stats_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/influx_db/all_fabrication_stats_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.all_fabrication_stats_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.influx_db.all_fabrication_stats\n \n), final AS (\n \n    SELECT   \n      timestamp::TIMESTAMP                  AS timestamp,\n      resource::VARCHAR                     AS resource,\n      fabrication_method::VARCHAR           AS fabrication_method,\n      http_method::VARCHAR                  AS http_method,\n      run_type::VARCHAR                     AS run_type,\n      merge_request::VARCHAR                AS merge_request,\n      fabrication_time::FLOAT               AS fabrication_time,\n      info::VARCHAR                         AS info,\n      job_url::VARCHAR                      AS job_url,\n      _uploaded_at::TIMESTAMP               AS _uploaded_at,\n      md5(cast(coalesce(cast(timestamp as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(resource as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(fabrication_method as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(http_method as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(run_type as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(merge_request as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(fabrication_time as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(info as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(job_url as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(_uploaded_at as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS combined_composite_keys\n    FROM source\n)\n\nSELECT *\nFROM final\nQUALIFY ROW_NUMBER() OVER (PARTITION BY combined_composite_keys ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.influx_db.all_fabrication_stats_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.446869Z", "completed_at": "2025-06-09T18:46:42.500254Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.566348Z", "completed_at": "2025-06-09T18:46:46.359552Z"}], "thread_id": "Thread-26", "execution_time": 4.029126882553101, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_accounts_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                      AS account_id,\n      created_date            AS created_date,\n      modified_date           AS modified_date,\n      name                    AS name,\n      web_site                AS web_site,\n      industry                AS industry,\n      country                 AS country,\n      engagement_rating       AS engagement_rating,\n      engagement_score        AS engagement_score,\n      domain                  AS domain,\n      is_deleted              AS is_deleted,\n      custom_properties       AS custom_properties,\n      _created_date           AS _created_date,\n      _modified_date          AS _modified_date,\n      _deleted_date           AS _deleted_date      \n    FROM EMBUCKET.bizible.biz_accounts\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_accounts_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.466141Z", "completed_at": "2025-06-09T18:46:42.518477Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.583291Z", "completed_at": "2025-06-09T18:46:46.357673Z"}], "thread_id": "Thread-31", "execution_time": 4.0247392654418945, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_ad_providers_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n      id                        AS ad_provider_id,\n      name                      AS name,\n      row_key                   AS row_key,\n      _created_date             AS _created_date,\n      _modified_date            AS _modified_date,\n      _deleted_date             AS _deleted_date\n    FROM EMBUCKET.bizible.biz_ad_providers\n\n)\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.bizible.bizible_ad_providers_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.391325Z", "completed_at": "2025-06-09T18:46:42.481161Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.523588Z", "completed_at": "2025-06-09T18:46:46.364493Z"}], "thread_id": "Thread-14", "execution_time": 4.10501503944397, "adapter_response": {}, "message": "Database Error in model all_workers_source (models/sources/workday/all_workers_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/all_workers_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.all_workers_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.workday.all_workers\n  WHERE NOT _fivetran_deleted\n\n),\n\nrenamed AS (\n\n  SELECT\n    employee_id::NUMBER               AS employee_id,\n    nationality::VARCHAR              AS nationality,\n    ethnicity::VARCHAR                AS ethnicity,\n    preferred_last_name::VARCHAR      AS preferred_last_name,\n    preferred_first_name::VARCHAR     AS preferred_first_name,\n    gender::VARCHAR                   AS gender,\n    work_email::VARCHAR               AS work_email,\n    date_of_birth::DATE               AS date_of_birth,\n    city::VARCHAR                     AS city,\n    state_province::VARCHAR           AS state_province,\n    country::VARCHAR                  AS country,\n    _fivetran_deleted::BOOLEAN        AS is_deleted,\n    _fivetran_synced::TIMESTAMP       AS uploaded_at\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.workday.all_workers_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.457322Z", "completed_at": "2025-06-09T18:46:42.519252Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.594191Z", "completed_at": "2025-06-09T18:46:46.837923Z"}], "thread_id": "Thread-28", "execution_time": 4.506786823272705, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_ad_accounts_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                                        AS ad_accounts_id,\n      display_id                                AS display_id,\n      ad_account_unique_id                      AS ad_account_unique_id,\n      ad_account_name                           AS ad_account_name,\n      advertiser_unique_id                      AS advertiser_unique_id,\n      advertiser_name                           AS advertiser_name,\n      ad_group_unique_id                        AS ad_group_unique_id,\n      ad_group_name                             AS ad_group_name,\n      ad_campaign_unique_id                     AS ad_campaign_unique_id,\n      ad_campaign_name                          AS ad_campaign_name,\n      is_active                                 AS is_active,\n      is_deleted                                AS is_deleted,\n      modified_date                             AS modified_date,\n      first_imported                            AS first_imported,\n      name                                      AS name,\n      needs_update                              AS needs_update,\n      grouping_key                              AS grouping_key,\n      entity_type                               AS entity_type,\n      provider_type                             AS provider_type,\n      account_currency_unit                     AS account_currency_unit,\n      company_id                                AS company_id,\n      source                                    AS source,\n      medium                                    AS medium,\n      last_30_days_cost                         AS last_30_days_cost,\n      last_30_days_impressions                  AS last_30_days_impressions,\n      last_30_days_clicks                       AS last_30_days_clicks,\n      last_30_days_conversions                  AS last_30_days_conversions,\n      tracking_url_template                     AS tracking_url_template,\n      tracking_url_template_old                 AS tracking_url_template_old,\n      tracking_url_template_requested           AS tracking_url_template_requested,\n      tracking_url_template_applied             AS tracking_url_template_applied,\n      row_key                                   AS row_key,\n      _created_date                             AS _created_date,\n      _modified_date                            AS _modified_date,\n      _deleted_date                             AS _deleted_date\n    FROM EMBUCKET.bizible.biz_ad_accounts\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_ad_accounts_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.469986Z", "completed_at": "2025-06-09T18:46:42.523193Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.608796Z", "completed_at": "2025-06-09T18:46:46.858921Z"}], "thread_id": "Thread-32", "execution_time": 4.525744915008545, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_ads_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n\n      id                         AS ad_id,\n      display_id                 AS display_id,\n      ad_account_unique_id       AS ad_account_unique_id,\n      ad_account_name            AS ad_account_name,\n      advertiser_unique_id       AS advertiser_unique_id,\n      advertiser_name            AS advertiser_name,\n      ad_group_unique_id         AS ad_group_unique_id,\n      ad_group_name              AS ad_group_name,\n      ad_campaign_unique_id      AS ad_campaign_unique_id,\n      ad_campaign_name           AS ad_campaign_name,\n      is_active                  AS is_active,\n      is_deleted                 AS is_deleted,\n      modified_date              AS modified_date,\n      first_imported             AS first_imported,\n      name                       AS name,\n      needs_update               AS needs_update,\n      grouping_key               AS grouping_key,\n      entity_type                AS entity_type,\n      provider_type              AS provider_type,\n      url_current                AS url_current,\n      url_old                    AS url_old,\n      url_requested              AS url_requested,\n      url_altenatives            AS url_altenatives,\n      row_key                    AS row_key,\n      _created_date              AS _created_date,\n      _modified_date             AS _modified_date,\n      _deleted_date              AS _deleted_date\n    FROM EMBUCKET.bizible.biz_ads\n    \n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_ads_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.463324Z", "completed_at": "2025-06-09T18:46:42.519527Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.598233Z", "completed_at": "2025-06-09T18:46:46.356188Z"}], "thread_id": "Thread-30", "execution_time": 4.0235419273376465, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_ad_groups_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n      id                                                AS ad_group_id,\n      display_id                                        AS display_id,\n      ad_account_unique_id                              AS ad_account_unique_id,\n      ad_account_name                                   AS ad_account_name,\n      advertiser_unique_id                              AS advertiser_unique_id,\n      advertiser_name                                   AS advertiser_name,\n      ad_group_unique_id                                AS ad_group_unique_id,\n      ad_group_name                                     AS ad_group_name,\n      ad_campaign_unique_id                             AS ad_campaign_unique_id,\n      ad_campaign_name                                  AS ad_campaign_name,\n      is_active                                         AS is_active,\n      is_deleted                                        AS is_deleted,\n      modified_date                                     AS modified_date,\n      first_imported                                    AS first_imported,\n      name                                              AS name,\n      needs_update                                      AS needs_update,\n      grouping_key                                      AS grouping_key,\n      entity_type                                       AS entity_type,\n      provider_type                                     AS provider_type,\n      ad_network_type                                   AS ad_network_type,\n      tracking_url_template                             AS tracking_url_template,\n      tracking_url_template_old                         AS tracking_url_template_old,\n      tracking_url_template_requested                   AS tracking_url_template_requested,\n      tracking_url_template_applied                     AS tracking_url_template_applied,\n      row_key                                           AS row_key,\n      _created_date                                     AS _created_date,\n      _modified_date                                    AS _modified_date,\n      _deleted_date                                     AS _deleted_date\n    FROM EMBUCKET.bizible.biz_ad_groups\n\n)\n\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.bizible.bizible_ad_groups_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.373781Z", "completed_at": "2025-06-09T18:46:42.472875Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.505876Z", "completed_at": "2025-06-09T18:46:46.309792Z"}], "thread_id": "Thread-12", "execution_time": 4.059382915496826, "adapter_response": {}, "message": "Database Error in model airflow_dag_run_source (models/sources/airflow/airflow_dag_run_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/airflow/airflow_dag_run_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.airflow_dag_run_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.airflow_stitch.dag_run\n\n), renamed AS (\n\n    SELECT\n      dag_id::VARCHAR           AS dag_id,\n      execution_date::TIMESTAMP AS execution_date,\n      state::VARCHAR            AS run_state\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.airflow.airflow_dag_run_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.460523Z", "completed_at": "2025-06-09T18:46:42.518890Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.586541Z", "completed_at": "2025-06-09T18:46:46.857061Z"}], "thread_id": "Thread-29", "execution_time": 4.524866104125977, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_ad_campaigns_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                                 AS ad_campaign_id,\n      display_id                         AS display_id,\n      ad_account_unique_id               AS ad_account_unique_id,\n      ad_account_name                    AS ad_account_name,\n      advertiser_unique_id               AS advertiser_unique_id,\n      advertiser_name                    AS advertiser_name,\n      ad_group_unique_id                 AS ad_group_unique_id,\n      ad_group_name                      AS ad_group_name,\n      ad_campaign_unique_id              AS ad_campaign_unique_id,\n      ad_campaign_name                   AS ad_campaign_name,\n      is_active                          AS is_active,\n      is_deleted                         AS is_deleted,\n      modified_date                      AS modified_date,\n      first_imported                     AS first_imported,\n      name                               AS name,\n      needs_update                       AS needs_update,\n      grouping_key                       AS grouping_key,\n      entity_type                        AS entity_type,\n      provider_type                      AS provider_type,\n      daily_budget                       AS daily_budget,\n      tracking_url_template              AS tracking_url_template,\n      tracking_url_template_old          AS tracking_url_template_old,\n      tracking_url_template_requested    AS tracking_url_template_requested,\n      tracking_url_template_applied      AS tracking_url_template_applied,\n      row_key                            AS row_key,\n      _created_date                      AS _created_date,\n      _modified_date                     AS _modified_date,\n      _deleted_date                      AS _deleted_date\n    FROM EMBUCKET.bizible.biz_ad_campaigns\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_ad_campaigns_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.438452Z", "completed_at": "2025-06-09T18:46:42.498448Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.562312Z", "completed_at": "2025-06-09T18:46:47.978895Z"}], "thread_id": "Thread-25", "execution_time": 5.649003028869629, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_account_to_emails_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                   AS account_to_email_id,\n      account_id           AS account_id,\n      email                AS email,\n      modified_date        AS modified_date,\n      created_date         AS created_date,\n      is_deleted           AS is_deleted,\n      _created_date        AS _created_date,\n      _modified_date       AS _modified_date,\n      _deleted_date        AS _deleted_date\n    FROM EMBUCKET.bizible.biz_account_to_emails\n    \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_account_to_emails_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.453462Z", "completed_at": "2025-06-09T18:46:42.505302Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.578239Z", "completed_at": "2025-06-09T18:46:47.998910Z"}], "thread_id": "Thread-27", "execution_time": 5.667999982833862, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_activities_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                            AS activities_id,\n      lead_id                       AS lead_id,\n      contact_id                    AS contact_id,\n      activity_type_id              AS activity_type_id,\n      activity_type_name            AS activity_type_name,\n      start_date                    AS start_date,\n      end_date                      AS end_date,\n      campaign_id                   AS campaign_id,\n      source_system                 AS source_system,\n      created_date                  AS created_date,\n      modified_date                 AS modified_date,\n      is_deleted                    AS is_deleted,\n      ad_form_id                    AS ad_form_id,\n      _created_date                 AS _created_date,\n      _modified_date                AS _modified_date,\n      _deleted_date                 AS _deleted_date\n    FROM EMBUCKET.bizible.biz_activities\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_activities_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.151899Z", "completed_at": "2025-06-09T18:46:43.169456Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.204150Z", "completed_at": "2025-06-09T18:46:48.375557Z"}], "thread_id": "Thread-6", "execution_time": 5.24820876121521, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_contacts_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                                AS contact_id,\n      modified_date                     AS modified_date,\n      created_date                      AS created_date,\n      email                             AS email,\n      accountid                         AS accountid,\n      lead_source                       AS lead_source,\n      job_title                         AS job_title,\n      bizible_stage                     AS bizible_stage,\n      bizible_stage_previous            AS bizible_stage_previous,\n      odds_of_conversion                AS odds_of_conversion,\n      bizible_cookie_id                 AS bizible_cookie_id,\n      is_deleted                        AS is_deleted,\n      is_duplicate                      AS is_duplicate,\n      source_system                     AS source_system,\n      other_system_id                   AS other_system_id,\n      custom_properties                 AS custom_properties,\n      row_key                           AS row_key,\n      _created_date                     AS _created_date,\n      _modified_date                    AS _modified_date,\n      _deleted_date                     AS _deleted_date\n    FROM EMBUCKET.bizible.biz_contacts\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_contacts_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.447852Z", "completed_at": "2025-06-09T18:46:43.478316Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.498229Z", "completed_at": "2025-06-09T18:46:48.429695Z"}], "thread_id": "Thread-7", "execution_time": 5.15765118598938, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_keywords_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n\n      id                                    AS keyword_id,\n      display_id                            AS display_id,\n      ad_account_unique_id                  AS ad_account_unique_id,\n      ad_account_name                       AS ad_account_name,\n      advertiser_unique_id                  AS advertiser_unique_id,\n      advertiser_name                       AS advertiser_name,\n      ad_group_unique_id                    AS ad_group_unique_id,\n      ad_group_name                         AS ad_group_name,\n      ad_campaign_unique_id                 AS ad_campaign_unique_id,\n      ad_campaign_name                      AS ad_campaign_name,\n      is_active                             AS is_active,\n      is_deleted                            AS is_deleted,\n      modified_date                         AS modified_date,\n      first_imported                        AS first_imported,\n      name                                  AS name,\n      needs_update                          AS needs_update,\n      grouping_key                          AS grouping_key,\n      entity_type                           AS entity_type,\n      provider_type                         AS provider_type,\n      url_current                           AS url_current,\n      url_old                               AS url_old,\n      url_requested                         AS url_requested,\n      is_upgraded_url                       AS is_upgraded_url,\n      word                                  AS word,\n      match_type                            AS match_type,\n      tracking_url_template                 AS tracking_url_template,\n      tracking_url_template_old             AS tracking_url_template_old,\n      tracking_url_template_requested       AS tracking_url_template_requested,\n      tracking_url_template_applied         AS tracking_url_template_applied,\n      row_key                               AS row_key,\n      _created_date                         AS _created_date,\n      _modified_date                        AS _modified_date,\n      _deleted_date                         AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_keywords\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_keywords_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:42.853157Z", "completed_at": "2025-06-09T18:46:42.939677Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:42.940004Z", "completed_at": "2025-06-09T18:46:48.458191Z"}], "thread_id": "Thread-4", "execution_time": 5.681567192077637, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_advertisers_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                              AS advertiser_id,\n      display_id                      AS display_id,\n      ad_account_unique_id            AS ad_account_unique_id,\n      ad_account_name                 AS ad_account_name,\n      advertiser_unique_id            AS advertiser_unique_id,\n      advertiser_name                 AS advertiser_name,\n      ad_group_unique_id              AS ad_group_unique_id,\n      ad_group_name                   AS ad_group_name,\n      ad_campaign_unique_id           AS ad_campaign_unique_id,\n      ad_campaign_name                AS ad_campaign_name,\n      is_active                       AS is_active,\n      is_deleted                      AS is_deleted,\n      modified_date                   AS modified_date,\n      first_imported                  AS first_imported,\n      name                            AS name,\n      needs_update                    AS needs_update,\n      grouping_key                    AS grouping_key,\n      entity_type                     AS entity_type,\n      provider_type                   AS provider_type,\n      row_key                         AS row_key,\n      _created_date                   AS _created_date,\n      _modified_date                  AS _modified_date,\n      _deleted_date                   AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_advertisers\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_advertisers_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.011509Z", "completed_at": "2025-06-09T18:46:43.079177Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.147570Z", "completed_at": "2025-06-09T18:46:48.474136Z"}], "thread_id": "Thread-3", "execution_time": 5.510252952575684, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_attribution_touchpoint_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.bizible_attribution_touchpoint_snapshots\n\n), renamed AS (\n\n    SELECT\n      id                             AS attribution_touchpoint_id,\n      modified_date                  AS modified_date,\n      opportunity_id                 AS opportunity_id,\n      contact_id                     AS contact_id,\n      email                          AS email,\n      account_id                     AS account_id,\n      user_touchpoint_id             AS user_touchpoint_id,\n      visitor_id                     AS visitor_id,\n      touchpoint_date                AS touchpoint_date,\n      marketing_touch_type           AS marketing_touch_type,\n      channel                        AS channel,\n      category1                      AS category1,\n      category2                      AS category2,\n      category3                      AS category3,\n      category4                      AS category4,\n      category5                      AS category5,\n      category6                      AS category6,\n      category7                      AS category7,\n      category8                      AS category8,\n      category9                      AS category9,\n      category10                     AS category10,\n      category11                     AS category11,\n      category12                     AS category12,\n      category13                     AS category13,\n      category14                     AS category14,\n      category15                     AS category15,\n      browser_name                   AS browser_name,\n      browser_version                AS browser_version,\n      platform_name                  AS platform_name,\n      platform_version               AS platform_version,\n      landing_page                   AS landing_page,\n      landing_page_raw               AS landing_page_raw,\n      referrer_page                  AS referrer_page,\n      referrer_page_raw              AS referrer_page_raw,\n      form_page                      AS form_page,\n      form_page_raw                  AS form_page_raw,\n      form_date                      AS form_date,\n      city                           AS city,\n      region                         AS region,\n      country                        AS country,\n      medium                         AS medium,\n      web_source                     AS web_source,\n      search_phrase                  AS search_phrase,\n      ad_provider                    AS ad_provider,\n      account_unique_id              AS account_unique_id,\n      account_name                   AS account_name,\n      advertiser_unique_id           AS advertiser_unique_id,\n      advertiser_name                AS advertiser_name,\n      site_unique_id                 AS site_unique_id,\n      site_name                      AS site_name,\n      placement_unique_id            AS placement_unique_id,\n      placement_name                 AS placement_name,\n      campaign_unique_id             AS campaign_unique_id,\n      campaign_name                  AS campaign_name,\n      ad_group_unique_id             AS ad_group_unique_id,\n      ad_group_name                  AS ad_group_name,\n      ad_unique_id                   AS ad_unique_id,\n      ad_name                        AS ad_name,\n      creative_unique_id             AS creative_unique_id,\n      creative_name                  AS creative_name,\n      creative_description_1         AS creative_description_1,\n      creative_description_2         AS creative_description_2,\n      creative_destination_url       AS creative_destination_url,\n      creative_display_url           AS creative_display_url,\n      keyword_unique_id              AS keyword_unique_id,\n      keyword_name                   AS keyword_name,\n      keyword_match_type             AS keyword_match_type,\n      is_first_touch                 AS is_first_touch,\n      is_lead_creation_touch         AS is_lead_creation_touch,\n      is_opp_creation_touch          AS is_opp_creation_touch,\n      is_closed_touch                AS is_closed_touch,\n      stages_touched                 AS stages_touched,\n      is_form_submission_touch       AS is_form_submission_touch,\n      is_impression_touch            AS is_impression_touch,\n      first_click_percentage         AS first_click_percentage,\n      last_anon_click_percentage     AS last_anon_click_percentage,\n      u_shape_percentage             AS u_shape_percentage,\n      w_shape_percentage             AS w_shape_percentage,\n      full_path_percentage           AS full_path_percentage,\n      custom_model_percentage        AS custom_model_percentage,\n      is_deleted                     AS is_deleted,\n      row_key                        AS row_key,\n      opportunity_row_key            AS opportunity_row_key,\n      landing_page_key               AS landing_page_key,\n      referrer_page_key              AS referrer_page_key,\n      form_page_key                  AS form_page_key,\n      account_row_key                AS account_row_key,\n      advertiser_row_key             AS advertiser_row_key,\n      site_row_key                   AS site_row_key,\n      placement_row_key              AS placement_row_key,\n      campaign_row_key               AS campaign_row_key,\n      ad_row_key                     AS ad_row_key,\n      ad_group_row_key               AS ad_group_row_key,\n      creative_row_key               AS creative_row_key,\n      keyword_row_key                AS keyword_row_key,\n      _created_date                  AS _created_date,\n      _modified_date                 AS _modified_date,\n      _deleted_date                  AS _deleted_date,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n    \n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.bizible_attribution_touchpoint_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.394922Z", "completed_at": "2025-06-09T18:46:43.478739Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.502295Z", "completed_at": "2025-06-09T18:46:48.462489Z"}], "thread_id": "Thread-21", "execution_time": 5.168299198150635, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_opportunities_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n\n      id                                    AS opportunity_id,\n      modified_date                         AS modified_date,\n      created_date                          AS created_date,\n      account_id                            AS account_id,\n      name                                  AS name,\n      opportunity_type                      AS opportunity_type,\n      is_won                                AS is_won,\n      is_closed                             AS is_closed,\n      close_date                            AS close_date,\n      bizible_custom_model_date             AS bizible_custom_model_date,\n      amount                                AS amount,\n      converted_from_lead_id                AS converted_from_lead_id,\n      primary_contact_id                    AS primary_contact_id,\n      odds_of_conversion                    AS odds_of_conversion,\n      bizible_stage                         AS bizible_stage,\n      bizible_stage_previous                AS bizible_stage_previous,\n      is_deleted                            AS is_deleted,\n      custom_properties                     AS custom_properties,\n      currency_iso_code                     AS currency_iso_code,\n      row_key                               AS row_key,\n      currency_id                           AS currency_id,\n      _created_date                         AS _created_date,\n      _modified_date                        AS _modified_date,\n      _deleted_date                         AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_opportunities\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_opportunities_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.414223Z", "completed_at": "2025-06-09T18:46:43.467940Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.490168Z", "completed_at": "2025-06-09T18:46:48.479365Z"}], "thread_id": "Thread-8", "execution_time": 5.233186960220337, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_email_to_visitor_ids_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                AS email_to_visitor_id,\n      email             AS email,\n      visitor_id        AS visitor_id,\n      modified_date     AS modified_date,\n      created_date      AS created_date,\n      is_ignore         AS is_ignore,\n      is_deleted        AS is_deleted,\n      _created_date     AS _created_date,\n      _modified_date    AS _modified_date,\n      _deleted_date     AS _deleted_date\n    FROM EMBUCKET.bizible.biz_email_to_visitor_ids\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_email_to_visitor_ids_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:48.003005Z", "completed_at": "2025-06-09T18:46:48.011968Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:48.013019Z", "completed_at": "2025-06-09T18:46:48.412275Z"}], "thread_id": "Thread-27", "execution_time": 0.47394609451293945, "adapter_response": {}, "message": "Database Error in model categories_yaml_acquisitions_source (models/sources/gitlab_data_yaml/categories_yaml_acquisitions_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,684)..Location(1,691)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,692)..Location(1,697)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,701)..Location(1,711)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Value(ValueWithSpan { value: Null, span: Span(Location(1,712)..Location(1,716)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,719)..Location(1,724)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,728)..Location(1,732)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"category\", quote_style: None, span: Span(Location(1,737)..Location(1,745)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/categories_yaml_acquisitions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.categories_yaml_acquisitions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *,\n      RANK() OVER (PARTITION BY DATE_TRUNC('day', uploaded_at) ORDER BY uploaded_at DESC) AS rank\n    FROM EMBUCKET.gitlab_data_yaml.categories\n    ORDER BY uploaded_at DESC\n\n), split_acquisition_info AS (\n\n    SELECT \n      category.value['name']::VARCHAR  \t    AS category_name,\n\t  category.value['stage']::VARCHAR \t    AS category_stage,\n      acquisition.value::VARIANT            AS acquisition_object,\n\t  acquisition.key::VARCHAR         \t    AS acquisition_key,\n      acquisition_info.value                AS info_object,\n\t  acquisition_info.key                  AS info_key,\n\t  DATE_TRUNC('day', uploaded_at)::DATE  AS snapshot_date,\n\t  rank\n\tFROM source,\n\tLATERAL FLATTEN(INPUT => parse_json(null), OUTER => TRUE) category,\n    LATERAL FLATTEN(INPUT => parse_json(null), OUTER => TRUE) acquisition,\n    TABLE(FLATTEN(input => acquisition.value, RECURSIVE => TRUE))  acquisition_info\n    WHERE acquisition.key ILIKE 'acquisition_%'\n      AND acquisition_info.key in ('name', 'start_date', 'end_date')\n\n), info_combined AS (\n\n  -- Combine back the list of objects about each acquisition into a single object\n  SELECT\n    category_name,\n    category_stage,\n    rank,\n    snapshot_date,\n    acquisition_key,\n    OBJECT_AGG(info_key, info_object) acquisition_info\n  FROM split_acquisition_info\n  group by 1,2,3,4,5\n  \n), info_parsed AS (\n\n  -- Parse the object about each acquisition\n  SELECT\n    category_name,\n    category_stage,\n    rank,\n    snapshot_date,\n    acquisition_key,\n    acquisition_info['name']::VARCHAR    AS acquisition_name,\n    acquisition_info['start_date']::DATE AS acquisition_start_date,\n    acquisition_info['end_date']::DATE   AS acquisition_end_date\n  FROM info_combined\n\n)\n\nSELECT *\nFROM info_parsed", "relation_name": "EMBUCKET.gitlab_data_yaml.categories_yaml_acquisitions_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.046242Z", "completed_at": "2025-06-09T18:46:43.162755Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.187939Z", "completed_at": "2025-06-09T18:46:48.470177Z"}], "thread_id": "Thread-2", "execution_time": 5.424837112426758, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_attribution_touchpoints_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                             AS attribution_touchpoint_id,\n      modified_date                  AS modified_date,\n      opportunity_id                 AS opportunity_id,\n      contact_id                     AS contact_id,\n      email                          AS email,\n      account_id                     AS account_id,\n      user_touchpoint_id             AS user_touchpoint_id,\n      visitor_id                     AS visitor_id,\n      touchpoint_date                AS touchpoint_date,\n      marketing_touch_type           AS marketing_touch_type,\n      channel                        AS channel,\n      category1                      AS category1,\n      category2                      AS category2,\n      category3                      AS category3,\n      category4                      AS category4,\n      category5                      AS category5,\n      category6                      AS category6,\n      category7                      AS category7,\n      category8                      AS category8,\n      category9                      AS category9,\n      category10                     AS category10,\n      category11                     AS category11,\n      category12                     AS category12,\n      category13                     AS category13,\n      category14                     AS category14,\n      category15                     AS category15,\n      browser_name                   AS browser_name,\n      browser_version                AS browser_version,\n      platform_name                  AS platform_name,\n      platform_version               AS platform_version,\n      landing_page                   AS landing_page,\n      landing_page_raw               AS landing_page_raw,\n      referrer_page                  AS referrer_page,\n      referrer_page_raw              AS referrer_page_raw,\n      form_page                      AS form_page,\n      form_page_raw                  AS form_page_raw,\n      form_date                      AS form_date,\n      city                           AS city,\n      region                         AS region,\n      country                        AS country,\n      medium                         AS medium,\n      web_source                     AS web_source,\n      search_phrase                  AS search_phrase,\n      ad_provider                    AS ad_provider,\n      account_unique_id              AS account_unique_id,\n      account_name                   AS account_name,\n      advertiser_unique_id           AS advertiser_unique_id,\n      advertiser_name                AS advertiser_name,\n      site_unique_id                 AS site_unique_id,\n      site_name                      AS site_name,\n      placement_unique_id            AS placement_unique_id,\n      placement_name                 AS placement_name,\n      campaign_unique_id             AS campaign_unique_id,\n      campaign_name                  AS campaign_name,\n      ad_group_unique_id             AS ad_group_unique_id,\n      ad_group_name                  AS ad_group_name,\n      ad_unique_id                   AS ad_unique_id,\n      ad_name                        AS ad_name,\n      creative_unique_id             AS creative_unique_id,\n      creative_name                  AS creative_name,\n      creative_description_1         AS creative_description_1,\n      creative_description_2         AS creative_description_2,\n      creative_destination_url       AS creative_destination_url,\n      creative_display_url           AS creative_display_url,\n      keyword_unique_id              AS keyword_unique_id,\n      keyword_name                   AS keyword_name,\n      keyword_match_type             AS keyword_match_type,\n      is_first_touch                 AS is_first_touch,\n      is_lead_creation_touch         AS is_lead_creation_touch,\n      is_opp_creation_touch          AS is_opp_creation_touch,\n      is_closed_touch                AS is_closed_touch,\n      stages_touched                 AS stages_touched,\n      is_form_submission_touch       AS is_form_submission_touch,\n      is_impression_touch            AS is_impression_touch,\n      first_click_percentage         AS first_click_percentage,\n      last_anon_click_percentage     AS last_anon_click_percentage,\n      u_shape_percentage             AS u_shape_percentage,\n      w_shape_percentage             AS w_shape_percentage,\n      full_path_percentage           AS full_path_percentage,\n      custom_model_percentage        AS custom_model_percentage,\n      is_deleted                     AS is_deleted,\n      row_key                        AS row_key,\n      opportunity_row_key            AS opportunity_row_key,\n      landing_page_key               AS landing_page_key,\n      referrer_page_key              AS referrer_page_key,\n      form_page_key                  AS form_page_key,\n      account_row_key                AS account_row_key,\n      advertiser_row_key             AS advertiser_row_key,\n      site_row_key                   AS site_row_key,\n      placement_row_key              AS placement_row_key,\n      campaign_row_key               AS campaign_row_key,\n      ad_row_key                     AS ad_row_key,\n      ad_group_row_key               AS ad_group_row_key,\n      creative_row_key               AS creative_row_key,\n      keyword_row_key                AS keyword_row_key,\n      _created_date                  AS _created_date,\n      _modified_date                 AS _modified_date,\n      _deleted_date                  AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_attribution_touchpoints\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_attribution_touchpoints_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.355410Z", "completed_at": "2025-06-09T18:46:43.407723Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.452317Z", "completed_at": "2025-06-09T18:46:48.515181Z"}], "thread_id": "Thread-11", "execution_time": 5.241694927215576, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_currencies_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                    AS currency_id,\n      is_corporate          AS is_corporate,\n      is_enabled            AS is_enabled,\n      modified_date         AS modified_date,\n      modified_date_crm     AS modified_date_crm,\n      created_date          AS created_date,\n      created_date_crm      AS created_date_crm,\n      iso_code              AS iso_code,\n      iso_numeric           AS iso_numeric,\n      exponent              AS exponent,\n      name                  AS name,\n      _created_date         AS _created_date,\n      _modified_date        AS _modified_date,\n      _deleted_date         AS _deleted_date\n    FROM EMBUCKET.bizible.biz_currencies\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_currencies_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.143593Z", "completed_at": "2025-06-09T18:46:43.168791Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.199380Z", "completed_at": "2025-06-09T18:46:49.587003Z"}], "thread_id": "Thread-1", "execution_time": 6.550509929656982, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_campaign_members_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n\n      id                            AS campaign_member_id,\n      modified_date                 AS modified_date,\n      created_date                  AS created_date,\n      bizible_touch_point_date      AS bizible_touch_point_date,\n      lead_id                       AS lead_id,\n      lead_email                    AS lead_email,\n      contact_id                    AS contact_id,\n      contact_email                 AS contact_email,\n      status                        AS status,\n      has_responded                 AS has_responded,\n      first_responded_date          AS first_responded_date,\n      campaign_name                 AS campaign_name,\n      campaign_id                   AS campaign_id,\n      campaign_type                 AS campaign_type,\n      campaign_sync_type            AS campaign_sync_type,\n      lead_sync_status              AS lead_sync_status,\n      contact_sync_status           AS contact_sync_status,\n      opp_sync_status               AS opp_sync_status,\n      is_deleted                    AS is_deleted,\n      custom_properties             AS custom_properties,\n      _created_date                 AS _created_date,\n      _modified_date                AS _modified_date,\n      _deleted_date                 AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_campaign_members\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_campaign_members_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.285808Z", "completed_at": "2025-06-09T18:46:43.351048Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.399384Z", "completed_at": "2025-06-09T18:46:49.603521Z"}], "thread_id": "Thread-15", "execution_time": 6.392268896102905, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_crm_tasks_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                        AS crm_task_id,\n      created_date              AS created_date,\n      modified_date             AS modified_date,\n      lead_id                   AS lead_id,\n      lead_email                AS lead_email,\n      contact_id                AS contact_id,\n      contact_email             AS contact_email,\n      bizible_cookie_id         AS bizible_cookie_id,\n      activity_type             AS activity_type,\n      activity_date             AS activity_date,\n      is_deleted                AS is_deleted,\n      custom_properties         AS custom_properties,\n      _created_date             AS _created_date,\n      _modified_date            AS _modified_date,\n      _deleted_date             AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_crm_tasks\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_crm_tasks_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.375287Z", "completed_at": "2025-06-09T18:46:43.408842Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.457141Z", "completed_at": "2025-06-09T18:46:49.605078Z"}], "thread_id": "Thread-16", "execution_time": 6.327486991882324, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_lead_stage_transitions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                        AS lead_stage_transition_id,\n      email                     AS email,\n      lead_id                   AS lead_id,\n      contact_id                AS contact_id,\n      touchpoint_id             AS touchpoint_id,\n      transition_date           AS transition_date,\n      stage_id                  AS stage_id,\n      stage                     AS stage,\n      rank                      AS rank,\n      index                     AS index,\n      last_index                AS last_index,\n      is_pending                AS is_pending,\n      is_non_transitional       AS is_non_transitional,\n      previous_stage_date       AS previous_stage_date,\n      next_stage_date           AS next_stage_date,\n      modified_date             AS modified_date,\n      is_deleted                AS is_deleted,\n      _created_date             AS _created_date,\n      _modified_date            AS _modified_date,\n      _deleted_date             AS _deleted_date\n    FROM EMBUCKET.bizible.biz_lead_stage_transitions\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_lead_stage_transitions_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.329521Z", "completed_at": "2025-06-09T18:46:43.467208Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.486576Z", "completed_at": "2025-06-09T18:46:49.611081Z"}], "thread_id": "Thread-20", "execution_time": 6.319872856140137, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_opp_stage_transitions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n\n      id                          AS opp_stage_transition_id,\n      account_id                  AS account_id,\n      opportunity_id              AS opportunity_id,\n      contact_id                  AS contact_id,\n      email                       AS email,\n      touchpoint_id               AS touchpoint_id,\n      transition_date             AS transition_date,\n      stage_id                    AS stage_id,\n      stage                       AS stage,\n      rank                        AS rank,\n      index                       AS index,\n      last_index                  AS last_index,\n      is_pending                  AS is_pending,\n      is_non_transitional         AS is_non_transitional,\n      previous_stage_date         AS previous_stage_date,\n      next_stage_date             AS next_stage_date,\n      modified_date               AS modified_date,\n      is_deleted                  AS is_deleted,\n      _created_date               AS _created_date,\n      _modified_date              AS _modified_date,\n      _deleted_date               AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_opp_stage_transitions\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_opp_stage_transitions_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.236010Z", "completed_at": "2025-06-09T18:46:43.279552Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.315672Z", "completed_at": "2025-06-09T18:46:49.620466Z"}], "thread_id": "Thread-23", "execution_time": 6.454181909561157, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_crm_events_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                        AS crm_event_id,\n      created_date              AS created_date,\n      modified_date             AS modified_date,\n      lead_id                   AS lead_id,\n      lead_email                AS lead_email,\n      contact_id                AS contact_id,\n      contact_email             AS contact_email,\n      bizible_cookie_id         AS bizible_cookie_id,\n      activity_type             AS activity_type,\n      event_start_date          AS event_start_date,\n      event_end_date            AS event_end_date,\n      is_deleted                AS is_deleted,\n      custom_properties         AS custom_properties,\n      _created_date             AS _created_date,\n      _modified_date            AS _modified_date,\n      _deleted_date             AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_crm_events\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_crm_events_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.323001Z", "completed_at": "2025-06-09T18:46:43.422400Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.422799Z", "completed_at": "2025-06-09T18:46:49.778641Z"}], "thread_id": "Thread-22", "execution_time": 6.515547275543213, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_facts_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      cost_key                                      AS cost_key,\n      atp_key                                       AS atp_key,\n      tp_key                                        AS tp_key,\n      page_view_key                                 AS page_view_key,\n      session_key                                   AS session_key,\n      visitor_id                                    AS visitor_id,\n      cookie_id                                     AS cookie_id,\n      form_submit_key                               AS form_submit_key,\n      impression_key                                AS impression_key,\n      current_page_key                              AS current_page_key,\n      referrer_page_key                             AS referrer_page_key,\n      form_page_key                                 AS form_page_key,\n      ad_provider_key                               AS ad_provider_key,\n      channel_key                                   AS channel_key,\n      campaign_key                                  AS campaign_key,\n      keyword_key                                   AS keyword_key,\n      ad_key                                        AS ad_key,\n      ad_group_key                                  AS ad_group_key,\n      creative_key                                  AS creative_key,\n      site_key                                      AS site_key,\n      advertiser_key                                AS advertiser_key,\n      ad_account_key                                AS ad_account_key,\n      placement_key                                 AS placement_key,\n      category_01_key                               AS category_01_key,\n      category_02_key                               AS category_02_key,\n      category_03_key                               AS category_03_key,\n      category_04_key                               AS category_04_key,\n      category_05_key                               AS category_05_key,\n      category_06_key                               AS category_06_key,\n      category_07_key                               AS category_07_key,\n      category_08_key                               AS category_08_key,\n      category_09_key                               AS category_09_key,\n      category_10_key                               AS category_10_key,\n      category_11_key                               AS category_11_key,\n      category_12_key                               AS category_12_key,\n      category_13_key                               AS category_13_key,\n      category_14_key                               AS category_14_key,\n      category_15_key                               AS category_15_key,\n      type                                          AS type,\n      date                                          AS date,\n      timestamp                                     AS timestamp,\n      modified_date                                 AS modified_date,\n      cost_in_micro                                 AS cost_in_micro,\n      impressions                                   AS impressions,\n      clicks                                        AS clicks,\n      first_click_percentage                        AS first_click_percentage,\n      last_anon_click_percentage                    AS last_anon_click_percentage,\n      u_shape_percentage                            AS u_shape_percentage,\n      w_shape_percentage                            AS w_shape_percentage,\n      full_path_percentage                          AS full_path_percentage,\n      custom_model_percentage                       AS custom_model_percentage,\n      amount                                        AS amount,\n      is_won                                        AS is_won,\n      is_opp_closed                                 AS is_opp_closed,\n      opportunity_id                                AS opportunity_id,\n      opp_created_date                              AS opp_created_date,\n      opp_close_date                                AS opp_close_date,\n      contact_created_date                          AS contact_created_date,\n      contact_id                                    AS contact_id,\n      email                                         AS email,\n      lead_created_date                             AS lead_created_date,\n      lead_id                                       AS lead_id,\n      is_aggregatable_cost_ad                       AS is_aggregatable_cost_ad,\n      is_aggregatable_cost_advertiser               AS is_aggregatable_cost_advertiser,\n      is_aggregatable_cost_ad_account               AS is_aggregatable_cost_ad_account,\n      is_aggregatable_cost_ad_group                 AS is_aggregatable_cost_ad_group,\n      is_aggregatable_cost_campaign                 AS is_aggregatable_cost_campaign,\n      is_aggregatable_cost_channel                  AS is_aggregatable_cost_channel,\n      is_aggregatable_cost_creative                 AS is_aggregatable_cost_creative,\n      is_aggregatable_cost_keyword                  AS is_aggregatable_cost_keyword,\n      is_aggregatable_cost_placement                AS is_aggregatable_cost_placement,\n      is_aggregatable_cost_site                     AS is_aggregatable_cost_site,\n      is_deleted                                    AS is_deleted,\n      currency_id                                   AS currency_id,\n      _created_date                                 AS _created_date,\n      _modified_date                                AS _modified_date,\n      _deleted_date                                 AS _deleted_date\n    FROM EMBUCKET.bizible.biz_facts\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_facts_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.430640Z", "completed_at": "2025-06-09T18:46:43.466052Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.481761Z", "completed_at": "2025-06-09T18:46:49.780764Z"}], "thread_id": "Thread-24", "execution_time": 6.500668048858643, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_leads_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n\n      id                                AS lead_id,\n      modified_date                     AS modified_date,\n      created_date                      AS created_date,\n      email                             AS email,\n      web_site                          AS web_site,\n      company                           AS company,\n      lead_source                       AS lead_source,\n      is_converted                      AS is_converted,\n      converted_opportunity_id          AS converted_opportunity_id,\n      converted_date                    AS converted_date,\n      converted_contact_id              AS converted_contact_id,\n      accountid                         AS accountid,\n      bizible_stage                     AS bizible_stage,\n      bizible_stage_previous            AS bizible_stage_previous,\n      odds_of_conversion                AS odds_of_conversion,\n      lead_score_model                  AS lead_score_model,\n      lead_score_results                AS lead_score_results,\n      bizible_cookie_id                 AS bizible_cookie_id,\n      is_deleted                        AS is_deleted,\n      is_duplicate                      AS is_duplicate,\n      source_system                     AS source_system,\n      other_system_id                   AS other_system_id,\n      custom_properties                 AS custom_properties,\n      row_key                           AS row_key,\n      _created_date                     AS _created_date,\n      _modified_date                    AS _modified_date,\n      _deleted_date                     AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_leads\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_leads_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:49.670308Z", "completed_at": "2025-06-09T18:46:49.684386Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:49.690362Z", "completed_at": "2025-06-09T18:46:49.987199Z"}], "thread_id": "Thread-23", "execution_time": 0.33804821968078613, "adapter_response": {}, "message": "Database Error in model custom_rules_source (models/sources/observability/custom_rules_source.sql)\n  000200: DataFusion error: Error during planning: table 'monte_carlo.prod_insights.custom_rules' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/observability/custom_rules_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.custom_rules_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM MONTE_CARLO.prod_insights.custom_rules\n\n), renamed AS (\n\n    SELECT\n     *\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.custom_rules_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:48.432883Z", "completed_at": "2025-06-09T18:46:48.436328Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:48.436606Z", "completed_at": "2025-06-09T18:46:50.037356Z"}], "thread_id": "Thread-7", "execution_time": 1.6263799667358398, "adapter_response": {}, "message": "Database Error in model churn_forecasting_scores_source (models/sources/data_science/churn_forecasting_scores_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,243)..Location(1,250)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,251)..Location(1,256)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,260)..Location(1,270)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,271)..Location(1,279)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,282)..Location(1,287)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,291)..Location(1,295)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,300)..Location(1,301)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/data_science/churn_forecasting_scores_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.churn_forecasting_scores_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.data_science.churn_forecasting_scores\n\n), intermediate AS (\n\n    SELECT\n      d.value as data_by_row,\n      uploaded_at\n    FROM source,\n    LATERAL FLATTEN(INPUT => PARSE_JSON(jsontext), outer => true) d\n\n), parsed AS (\n\n    SELECT\n\n      data_by_row['oldest_subscription_in_cohort']::VARCHAR                AS oldest_subscription_in_cohort,\n      data_by_row['dim_crm_opportunity_id_current_open_renewal']::VARCHAR  AS dim_crm_opportunity_id_current_open_renewal,\n      data_by_row['score_date']::TIMESTAMP                                 AS score_date,\n      data_by_row['renewal_date']::TIMESTAMP                               AS renewal_date,\n      data_by_row['current_arr']::NUMBER(38,2)                             AS current_arr,\n      data_by_row['churn_score']::NUMBER(38,4)                             AS churn_score,\n      data_by_row['contraction_score']::NUMBER(38,4)                       AS contraction_score,\n      data_by_row['outcome']::VARCHAR                                      AS outcome,\n      data_by_row['arr_expected_to_renew']::NUMBER(38,2)                   AS arr_expected_to_renew,\n      data_by_row['model_version']::FLOAT                                  AS model_version,\n      uploaded_at::TIMESTAMP                                               AS uploaded_at\n\n    FROM intermediate\n\n)\nSELECT *\nFROM parsed", "relation_name": "EMBUCKET.data_science.churn_forecasting_scores_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.184728Z", "completed_at": "2025-06-09T18:46:43.215055Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.264115Z", "completed_at": "2025-06-09T18:46:50.020155Z"}], "thread_id": "Thread-5", "execution_time": 6.882817029953003, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_channels_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                    AS channel_id,\n      name                  AS name,\n      row_key               AS row_key,\n      _created_date         AS _created_date,\n      _modified_date        AS _modified_date,\n      _deleted_date         AS _deleted_date\n    FROM EMBUCKET.bizible.biz_channels\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_channels_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:48.485176Z", "completed_at": "2025-06-09T18:46:48.508434Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:48.516511Z", "completed_at": "2025-06-09T18:46:50.047466Z"}], "thread_id": "Thread-4", "execution_time": 1.6064748764038086, "adapter_response": {}, "message": "Database Error in model cleanup_suggestions_source (models/sources/observability/cleanup_suggestions_source.sql)\n  000200: DataFusion error: Error during planning: table 'monte_carlo.prod_insights.cleanup_suggestions' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/observability/cleanup_suggestions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.cleanup_suggestions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM MONTE_CARLO.prod_insights.cleanup_suggestions\n\n), renamed AS (\n\n    SELECT\n     *\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.cleanup_suggestions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:48.545908Z", "completed_at": "2025-06-09T18:46:48.618974Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:48.622947Z", "completed_at": "2025-06-09T18:46:49.976767Z"}], "thread_id": "Thread-27", "execution_time": 1.5492210388183594, "adapter_response": {}, "message": "Database Error in model commonroom_organizations_source_pii (models/sources/commonroom/sensitive/commonroom_organizations_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha512'?\n  compiled code at target/run/gitlab_snowflake/models/sources/commonroom/sensitive/commonroom_organizations_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.commonroom_organizations_source_pii", "compiled": true, "compiled_code": "\n\nWITH source AS\n(\n\n    SELECT *\n    FROM EMBUCKET.commonroom.organizations\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY domain, organization_name ORDER BY _uploaded_at DESC, _file_name DESC) = 1\n\n), source_pii AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                organization_name || \n                ENCRYPT_RAW(\n                  to_binary('SALT_NAME', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS organization_name_hash,\n\n\n\n        \n    \n    \n    \n    location   , \n    \n    \n    \n    organization_name  \n    \n    \n\n\n    FROM source\n)\n\nSELECT DISTINCT *\n  FROM source_pii", "relation_name": "EMBUCKET.commonroom.commonroom_organizations_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:49.646632Z", "completed_at": "2025-06-09T18:46:49.652107Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:49.656853Z", "completed_at": "2025-06-09T18:46:50.084031Z"}], "thread_id": "Thread-20", "execution_time": 0.4747171401977539, "adapter_response": {}, "message": "Database Error in model covid19_cases (models/covid19/covid19_cases.sql)\n  000200: DataFusion error: Error during planning: table 'covid19.public.jhu_covid_19' not found\n  compiled code at target/run/gitlab_snowflake/models/covid19/covid19_cases.sql", "failures": null, "unique_id": "model.gitlab_snowflake.covid19_cases", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM \"COVID19\".public.jhu_covid_19\n\n), renamed AS (\n\n    SELECT \n      country_region::VARCHAR       AS country_region,\n      province_state::VARCHAR       AS province_state,\n      date::DATE                    AS date,\n      case_type::VARCHAR            AS case_type,\n      cases::NUMBER                 AS case_count,\n      long::FLOAT                   AS longitude,\n      lat::FLOAT                    AS latitude,\n      difference::NUMBER            AS case_count_change,\n      last_updated_date::TIMESTAMP  AS last_updated_date\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.covid19.covid19_cases", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:48.381968Z", "completed_at": "2025-06-09T18:46:48.386564Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:48.386853Z", "completed_at": "2025-06-09T18:46:50.321760Z"}], "thread_id": "Thread-6", "execution_time": 1.9502480030059814, "adapter_response": {}, "message": "Database Error in model categories_yaml_source (models/sources/gitlab_data_yaml/categories_yaml_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,395)..Location(1,402)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,403)..Location(1,408)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,412)..Location(1,422)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,423)..Location(1,431)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,434)..Location(1,439)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,443)..Location(1,447)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,452)..Location(1,453)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/categories_yaml_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.categories_yaml_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *,\n      RANK() OVER (PARTITION BY DATE_TRUNC('day', uploaded_at) ORDER BY uploaded_at DESC) AS rank\n    FROM EMBUCKET.gitlab_data_yaml.categories\n    ORDER BY uploaded_at DESC\n\n), intermediate AS (\n\n    SELECT d.value                            AS data_by_row,\n      DATE_TRUNC('day', uploaded_at)::DATE    AS snapshot_date,\n      rank\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n    SELECT\n      data_by_row['acquisition_appetite']::VARCHAR          AS acquisition_appetite,\n      data_by_row['alt_link']::VARCHAR                      AS alt_link,\n      TRY_TO_TIMESTAMP(data_by_row['available']::VARCHAR)   AS available,\n      data_by_row['body']::VARCHAR                          AS body,\n      TRY_TO_TIMESTAMP(data_by_row['complete']::VARCHAR)    AS complete,\n      data_by_row['description']::VARCHAR                   AS description,\n      data_by_row['direction']::VARCHAR                     AS direction,\n      data_by_row['documentation']::VARCHAR                 AS documentation,\n      data_by_row['feature_labels']::VARCHAR                AS feature_labels,\n      TRY_TO_TIMESTAMP(data_by_row['lovable']::VARCHAR)     AS lovable,\n      data_by_row['label']::VARCHAR                         AS label,\n      TRY_TO_BOOLEAN(data_by_row['marketing']::VARCHAR)     AS marketing,\n      data_by_row['marketing_page']::VARCHAR                AS marketing_page,\n      data_by_row['maturity']::VARCHAR                      AS maturity,\n      data_by_row['name']::VARCHAR                          AS name,\n      TRY_TO_BOOLEAN(data_by_row['new_maturity']::VARCHAR)  AS new_maturity,\n      data_by_row['partnership_appetite']::VARCHAR          AS partnership_appetite,\n      data_by_row['priority_level']::VARCHAR                AS priority_level,\n      data_by_row['roi']::VARCHAR                           AS roi,\n      data_by_row['stage']::VARCHAR                         AS stage,\n      TRY_TO_TIMESTAMP(data_by_row['viable']::VARCHAR)      AS viable,\n      snapshot_date,\n      rank\n    FROM intermediate\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_data_yaml.categories_yaml_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:44.698716Z", "completed_at": "2025-06-09T18:46:44.703288Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:44.703702Z", "completed_at": "2025-06-09T18:46:50.338485Z"}], "thread_id": "Thread-13", "execution_time": 5.641337871551514, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_page_views_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                            AS page_view_id,\n      cookie_id                     AS cookie_id,\n      visitor_id                    AS visitor_id,\n      session_id                    AS session_id,\n      event_date                    AS event_date,\n      modified_date                 AS modified_date,\n      current_page                  AS current_page,\n      current_page_raw              AS current_page_raw,\n      ip_address                    AS ip_address,\n      city                          AS city,\n      region                        AS region,\n      country                       AS country,\n      type                          AS type,\n      user_agent_string             AS user_agent_string,\n      client_sequence               AS client_sequence,\n      client_random                 AS client_random,\n      is_duplicated                 AS is_duplicated,\n      is_processed                  AS is_processed,\n      referrer_page                 AS referrer_page,\n      referrer_page_raw             AS referrer_page_raw,\n      page_title                    AS page_title,\n      email                         AS email,\n      has_user_consent              AS has_user_consent,\n      row_key                       AS row_key,\n      current_page_key              AS current_page_key,\n      referrer_page_key             AS referrer_page_key,\n      _created_date                 AS _created_date,\n      _modified_date                AS _modified_date,\n      _deleted_date                 AS _deleted_date\n    FROM EMBUCKET.bizible.biz_page_views\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_page_views_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:48.528420Z", "completed_at": "2025-06-09T18:46:48.544605Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:48.586865Z", "completed_at": "2025-06-09T18:46:50.305325Z"}], "thread_id": "Thread-8", "execution_time": 1.814810037612915, "adapter_response": {}, "message": "Database Error in model commonroom_organizations_source (models/sources/commonroom/commonroom_organizations_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL TIMESTAMP_NTZ precision None\n  compiled code at target/run/gitlab_snowflake/models/sources/commonroom/commonroom_organizations_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.commonroom_organizations_source", "compiled": true, "compiled_code": "\n\n\nWITH source AS\n(\n  SELECT *\n  FROM EMBUCKET.commonroom.organizations\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY domain, organization_name ORDER BY _uploaded_at DESC, _file_name DESC) = 1\n\n), dedupe AS\n(\n\n    SELECT md5(cast(coalesce(cast(domain as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(organization_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS primary_key,\n           approx_revenue_max::NUMBER                                              AS approx_revenue_max,\n           approx_revenue_min::NUMBER                                              AS approx_revenue_min,\n           domain::VARCHAR                                                         AS domain,\n           employee_count::NUMBER                                                  AS employee_count,\n           first_seen_date::TIMESTAMP_NTZ                                          AS first_seen_date,\n           first_seen_source::VARCHAR                                              AS first_seen_source,\n           last_seen_date::TIMESTAMP_NTZ                                           AS last_seen_date,\n           location::VARCHAR                                                       AS location,\n           member_count::NUMBER                                                    AS member_count,\n           organization_name::VARCHAR                                              AS organization_name,\n           _uploaded_at::TIMESTAMP                                                 AS _uploaded_at,\n           _file_name::VARCHAR                                                     AS _file_name\n    FROM source\n)\n\nSELECT *\n  FROM dedupe", "relation_name": "EMBUCKET.commonroom.commonroom_organizations_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:47.233495Z", "completed_at": "2025-06-09T18:46:47.257547Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:47.270180Z", "completed_at": "2025-06-09T18:46:50.407864Z"}], "thread_id": "Thread-32", "execution_time": 3.182370185852051, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_stage_definitions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                        AS stage_definition_id,\n      modified_date             AS modified_date,\n      stage_name                AS stage_name,\n      is_inactive               AS is_inactive,\n      is_in_custom_model        AS is_in_custom_model,\n      is_boomerang              AS is_boomerang,\n      is_transition_tracking    AS is_transition_tracking,\n      stage_status              AS stage_status,\n      is_from_salesforce        AS is_from_salesforce,\n      is_default                AS is_default,\n      rank                      AS rank,\n      is_deleted                AS is_deleted,\n      _created_date             AS _created_date,\n      _modified_date            AS _modified_date,\n      _deleted_date             AS _deleted_date\n    FROM EMBUCKET.bizible.biz_stage_definitions\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_stage_definitions_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.169857Z", "completed_at": "2025-06-09T18:46:43.211970Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.254663Z", "completed_at": "2025-06-09T18:46:50.391218Z"}], "thread_id": "Thread-10", "execution_time": 7.26157283782959, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_conversion_rates_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id              AS conversion_rate_id,\n      currency_id     AS currency_id,\n      source_iso_code AS source_iso_code,\n      start_date      AS start_date,\n      end_date        AS end_date,\n      conversion_rate AS conversion_rate,\n      is_current      AS is_current,\n      created_date    AS created_date,\n      modified_date   AS modified_date,\n      is_deleted      AS is_deleted,\n      _created_date   AS _created_date,\n      _modified_date  AS _modified_date,\n      _deleted_date   AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_conversion_rates\n \n    )\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_conversion_rates_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.310657Z", "completed_at": "2025-06-09T18:46:43.380480Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.380860Z", "completed_at": "2025-06-09T18:46:50.401967Z"}], "thread_id": "Thread-9", "execution_time": 7.166676998138428, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_customer_ab_tests_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n\n      visitor_id                AS visitor_id,\n      cookie_id                 AS cookie_id,\n      event_date                AS event_date,\n      modified_date             AS modified_date,\n      ip_address                AS ip_address,\n      city                      AS city,\n      region                    AS region,\n      country                   AS country,\n      experiment_id             AS experiment_id,\n      experiment_name           AS experiment_name,\n      variation_id              AS variation_id,\n      variation_name            AS variation_name,\n      abtest_user_id            AS abtest_user_id,\n      is_deleted                AS is_deleted,\n      _created_date             AS _created_date,\n      _modified_date            AS _modified_date,\n      _deleted_date             AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_customer_ab_tests\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_customer_ab_tests_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.217749Z", "completed_at": "2025-06-09T18:46:43.276070Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.298202Z", "completed_at": "2025-06-09T18:46:50.404095Z"}], "thread_id": "Thread-17", "execution_time": 7.240010023117065, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_creatives_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                                AS creative_id,\n      display_id                        AS display_id,\n      ad_account_unique_id              AS ad_account_unique_id,\n      ad_account_name                   AS ad_account_name,\n      advertiser_unique_id              AS advertiser_unique_id,\n      advertiser_name                   AS advertiser_name,\n      ad_group_unique_id                AS ad_group_unique_id,\n      ad_group_name                     AS ad_group_name,\n      ad_campaign_unique_id             AS ad_campaign_unique_id,\n      ad_campaign_name                  AS ad_campaign_name,\n      is_active                         AS is_active,\n      is_deleted                        AS is_deleted,\n      modified_date                     AS modified_date,\n      first_imported                    AS first_imported,\n      name                              AS name,\n      needs_update                      AS needs_update,\n      grouping_key                      AS grouping_key,\n      entity_type                       AS entity_type,\n      provider_type                     AS provider_type,\n      url_current                       AS url_current,\n      url_display                       AS url_display,\n      url_old                           AS url_old,\n      url_requested                     AS url_requested,\n      url_shortened                     AS url_shortened,\n      ad_type                           AS ad_type,\n      is_upgraded_url                   AS is_upgraded_url,\n      headline                          AS headline,\n      description_line_1                AS description_line_1,\n      description_line_2                AS description_line_2,\n      tracking_url_template             AS tracking_url_template,\n      tracking_url_template_old         AS tracking_url_template_old,\n      tracking_url_template_requested   AS tracking_url_template_requested,\n      tracking_url_template_applied     AS tracking_url_template_applied,\n      share_urn                         AS share_urn,\n      row_key                           AS row_key,\n      _created_date                     AS _created_date,\n      _modified_date                    AS _modified_date,\n      _deleted_date                     AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_creatives\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_creatives_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:48.565577Z", "completed_at": "2025-06-09T18:46:48.591549Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:48.604234Z", "completed_at": "2025-06-09T18:46:50.383768Z"}], "thread_id": "Thread-2", "execution_time": 1.8415818214416504, "adapter_response": {}, "message": "Database Error in model content_keystone_source (models/sources/gitlab_data_yaml/content_keystone_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,651)..Location(1,658)) })]), args: [Named { name: Ident { value: \"input\", quote_style: None, span: Span(Location(1,659)..Location(1,664)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,668)..Location(1,678)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(CompoundIdentifier([Ident { value: \"content_keystone\", quote_style: None, span: Span(Location(1,679)..Location(1,695)) }, Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,696)..Location(1,704)) }])))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"flattened_keystone\", quote_style: None, span: Span(Location(1,710)..Location(1,728)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/content_keystone_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.content_keystone_source", "compiled": true, "compiled_code": "SELECT DISTINCT\n      flattened_keystone.value:name::VARCHAR        AS content_name,\n      flattened_keystone.value:gitlab_epic::VARCHAR AS gitlab_epic,\n      flattened_keystone.value:gtm::VARCHAR         AS gtm,\n      flattened_keystone.value:language::VARCHAR    AS language,\n      flattened_keystone.value:type::VARCHAR        AS type,\n      flattened_keystone.value:url_slug::VARCHAR    AS url_slug,\n      flattened_keystone.value                      AS full_value\nFROM EMBUCKET.gitlab_data_yaml.content_keystone,\n    LATERAL FLATTEN(input => PARSE_JSON(content_keystone.jsontext)) AS flattened_keystone\nWHERE LENGTH(url_slug) > 0\nQUALIFY MAX(uploaded_at) OVER() = uploaded_at", "relation_name": "EMBUCKET.gitlab_data_yaml.content_keystone_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.221387Z", "completed_at": "2025-06-09T18:46:43.277151Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.303351Z", "completed_at": "2025-06-09T18:46:50.351434Z"}], "thread_id": "Thread-19", "execution_time": 7.156494855880737, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_costs_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n\n      id                                            AS cost_id,\n      modified_date                                 AS modified_date,\n      cost_date                                     AS cost_date,\n      source                                        AS source,\n      cost_in_micro                                 AS cost_in_micro,\n      clicks                                        AS clicks,\n      impressions                                   AS impressions,\n      estimated_total_possible_impressions          AS estimated_total_possible_impressions,\n      ad_provider                                   AS ad_provider,\n      channel_unique_id                             AS channel_unique_id,\n      channel_name                                  AS channel_name,\n      channel_is_aggregatable_cost                  AS channel_is_aggregatable_cost,\n      advertiser_unique_id                          AS advertiser_unique_id,\n      advertiser_name                               AS advertiser_name,\n      advertiser_is_aggregatable_cost               AS advertiser_is_aggregatable_cost,\n      account_unique_id                             AS account_unique_id,\n      account_name                                  AS account_name,\n      account_is_aggregatable_cost                  AS account_is_aggregatable_cost,\n      campaign_unique_id                            AS campaign_unique_id,\n      campaign_name                                 AS campaign_name,\n      campaign_is_aggregatable_cost                 AS campaign_is_aggregatable_cost,\n      ad_group_unique_id                            AS ad_group_unique_id,\n      ad_group_name                                 AS ad_group_name,\n      ad_group_is_aggregatable_cost                 AS ad_group_is_aggregatable_cost,\n      ad_unique_id                                  AS ad_unique_id,\n      ad_name                                       AS ad_name,\n      ad_is_aggregatable_cost                       AS ad_is_aggregatable_cost,\n      creative_unique_id                            AS creative_unique_id,\n      creative_name                                 AS creative_name,\n      creative_is_aggregatable_cost                 AS creative_is_aggregatable_cost,\n      keyword_unique_id                             AS keyword_unique_id,\n      keyword_name                                  AS keyword_name,\n      keyword_is_aggregatable_cost                  AS keyword_is_aggregatable_cost,\n      placement_unique_id                           AS placement_unique_id,\n      placement_name                                AS placement_name,\n      placement_is_aggregatable_cost                AS placement_is_aggregatable_cost,\n      site_unique_id                                AS site_unique_id,\n      site_name                                     AS site_name,\n      site_is_aggregatable_cost                     AS site_is_aggregatable_cost,\n      is_deleted                                    AS is_deleted,\n      iso_currency_code                             AS iso_currency_code,\n      source_id                                     AS source_id,\n      row_key                                       AS row_key,\n      account_row_key                               AS account_row_key,\n      advertiser_row_key                            AS advertiser_row_key,\n      site_row_key                                  AS site_row_key,\n      placement_row_key                             AS placement_row_key,\n      campaign_row_key                              AS campaign_row_key,\n      ad_row_key                                    AS ad_row_key,\n      ad_group_row_key                              AS ad_group_row_key,\n      creative_row_key                              AS creative_row_key,\n      keyword_row_key                               AS keyword_row_key,\n      currency_id                                   AS currency_id,\n      _created_date                                 AS _created_date,\n      _modified_date                                AS _modified_date,\n      _deleted_date                                 AS _deleted_date\n\n    FROM EMBUCKET.bizible.biz_costs\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_costs_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:48.535340Z", "completed_at": "2025-06-09T18:46:48.545061Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:48.570268Z", "completed_at": "2025-06-09T18:46:50.420020Z"}], "thread_id": "Thread-21", "execution_time": 1.929474115371704, "adapter_response": {}, "message": "Database Error in model commonroom_community_members_source (models/sources/commonroom/commonroom_community_members_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL TIMESTAMP_NTZ precision None\n  compiled code at target/run/gitlab_snowflake/models/sources/commonroom/commonroom_community_members_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.commonroom_community_members_source", "compiled": true, "compiled_code": "\n\nWITH source AS\n(\n  SELECT *\n  FROM EMBUCKET.commonroom.community_members\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY profiles, primary_email, full_name, location ORDER BY _uploaded_at DESC, _file_name DESC) = 1\n\n), dedupe AS\n(\n\n    SELECT md5(cast(coalesce(cast(profiles as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(primary_email as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(full_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(location as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS primary_key,\n           first_activity_date::TIMESTAMP_NTZ                                                AS first_activity_date,\n           first_activity_source::VARCHAR                                                    AS first_activity_source,\n           full_name::VARCHAR                                                                AS full_name,\n           impact_points_all_time::NUMBER                                                    AS impact_points_all_time,\n           last_activity_date::TIMESTAMP_NTZ                                                 AS last_activity_date,\n           location::VARCHAR                                                                 AS location,\n           member_ids::VARCHAR                                                               AS member_ids,\n           primary_email::VARCHAR                                                            AS primary_email,\n           profiles::VARCHAR                                                                 AS profiles,\n           segment_names::VARCHAR                                                            AS segment_names,\n           tags::VARCHAR                                                                     AS tags,\n           job_title::VARCHAR                                                                AS job_title,\n           last_organization::VARCHAR                                                        AS last_organization,\n           organization_name::VARCHAR                                                        AS organization_name,\n           organization_domain::VARCHAR                                                      AS organization_domain,\n           _uploaded_at::TIMESTAMP                                                           AS _uploaded_at,\n           _file_name::VARCHAR                                                               AS _file_name\n    FROM source\n\n)\n\nSELECT *\n  FROM dedupe", "relation_name": "EMBUCKET.commonroom.commonroom_community_members_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:49.788951Z", "completed_at": "2025-06-09T18:46:49.797133Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:49.798798Z", "completed_at": "2025-06-09T18:46:50.416332Z"}], "thread_id": "Thread-22", "execution_time": 0.6550698280334473, "adapter_response": {}, "message": "Database Error in model customers_db_billing_account_contacts_snapshots_base (models/legacy/snapshots/base/customers_db_billing_account_contacts_snapshots_base.sql)\n  000200: DataFusion error: Schema error: No field named \"DBT_VALID_FROM\". Valid fields are source.id, source.work_email, source.created_at, source.updated_at, source.zuora_contact_id, source.zuora_account_id, source._uploaded_at, source._task_instance, source.billing_account_contact_rank_in_key, source.dbt_scd_id, source.dbt_updated_at, source.dbt_valid_from, source.dbt_valid_to.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/customers_db_billing_account_contacts_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_billing_account_contacts_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.customers_db_billing_account_contacts_snapshots\n\n), renamed AS (\n\n    SELECT \n      dbt_scd_id::VARCHAR                                     AS billing_account_contact_snapshot_id,\n      id::NUMBER                                              AS billing_account_contact_id,\n      work_email::VARCHAR                                     AS work_email,\n      zuora_account_id::VARCHAR                               AS zuora_account_id,\n      zuora_contact_id::VARCHAR                               AS zuora_contact_id,\n      created_at::TIMESTAMP                                   AS billing_account_contact_created_at,\n      updated_at::TIMESTAMP                                   AS billing_account_contact_updated_at,\n      \"DBT_VALID_FROM\"::TIMESTAMP                             AS valid_from,\n      \"DBT_VALID_TO\"::TIMESTAMP                               AS valid_to\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.customers_db_billing_account_contacts_snapshots", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:43.347578Z", "completed_at": "2025-06-09T18:46:43.439867Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:43.440210Z", "completed_at": "2025-06-09T18:46:50.363966Z"}], "thread_id": "Thread-18", "execution_time": 7.09285306930542, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_form_submits_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                        AS form_submit_id,\n      cookie_id                 AS cookie_id,\n      visitor_id                AS visitor_id,\n      session_id                AS session_id,\n      event_date                AS event_date,\n      modified_date             AS modified_date,\n      current_page              AS current_page,\n      current_page_raw          AS current_page_raw,\n      ip_address                AS ip_address,\n      city                      AS city,\n      region                    AS region,\n      country                   AS country,\n      type                      AS type,\n      user_agent_string         AS user_agent_string,\n      client_sequence           AS client_sequence,\n      client_random             AS client_random,\n      is_duplicated             AS is_duplicated,\n      is_processed              AS is_processed,\n      email                     AS email,\n      form_type                 AS form_type,\n      form_source               AS form_source,\n      form_identifier           AS form_identifier,\n      row_key                   AS row_key,\n      current_page_key          AS current_page_key,\n      _created_date             AS _created_date,\n      _modified_date            AS _modified_date,\n      _deleted_date             AS _deleted_date\n    FROM EMBUCKET.bizible.biz_form_submits\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_form_submits_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:47.258274Z", "completed_at": "2025-06-09T18:46:47.280793Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:47.292060Z", "completed_at": "2025-06-09T18:46:50.457519Z"}], "thread_id": "Thread-31", "execution_time": 3.230491876602173, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_segments_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                   AS segment_id,\n      name                 AS name,\n      row_key              AS row_key,\n      _created_date        AS _created_date,\n      _modified_date       AS _modified_date,\n      _deleted_date        AS _deleted_date\n    FROM EMBUCKET.bizible.biz_segments\n \n)\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.bizible.bizible_segments_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:47.300552Z", "completed_at": "2025-06-09T18:46:47.319016Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:47.331313Z", "completed_at": "2025-06-09T18:46:50.483909Z"}], "thread_id": "Thread-29", "execution_time": 3.2148211002349854, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_urls_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                    AS url_id,\n      scheme                AS scheme,\n      host                  AS host,\n      port                  AS port,\n      path                  AS path,\n      row_key               AS row_key,\n      _created_date         AS _created_date,\n      _modified_date        AS _modified_date,\n      _deleted_date         AS _deleted_date\n    FROM EMBUCKET.bizible.biz_urls\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_urls_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:47.254386Z", "completed_at": "2025-06-09T18:46:47.279590Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:47.286151Z", "completed_at": "2025-06-09T18:46:50.486133Z"}], "thread_id": "Thread-26", "execution_time": 3.264617919921875, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_placements_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                              AS placement_id,\n      display_id                      AS display_id,\n      ad_account_unique_id            AS ad_account_unique_id,\n      ad_account_name                 AS ad_account_name,\n      advertiser_unique_id            AS advertiser_unique_id,\n      advertiser_name                 AS advertiser_name,\n      ad_group_unique_id              AS ad_group_unique_id,\n      ad_group_name                   AS ad_group_name,\n      ad_campaign_unique_id           AS ad_campaign_unique_id,\n      ad_campaign_name                AS ad_campaign_name,\n      is_active                       AS is_active,\n      is_deleted                      AS is_deleted,\n      modified_date                   AS modified_date,\n      first_imported                  AS first_imported,\n      name                            AS name,\n      needs_update                    AS needs_update,\n      grouping_key                    AS grouping_key,\n      entity_type                     AS entity_type,\n      provider_type                   AS provider_type,\n      row_key                         AS row_key,\n      _created_date                   AS _created_date,\n      _modified_date                  AS _modified_date,\n      _deleted_date                   AS _deleted_date\n    FROM EMBUCKET.bizible.biz_placements\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_placements_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:50.110431Z", "completed_at": "2025-06-09T18:46:50.125478Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:50.127332Z", "completed_at": "2025-06-09T18:46:50.490331Z"}], "thread_id": "Thread-7", "execution_time": 0.3999598026275635, "adapter_response": {}, "message": "Database Error in model customers_db_billing_accounts_snapshots_base (models/legacy/snapshots/base/customers_db_billing_accounts_snapshots_base.sql)\n  000200: DataFusion error: Schema error: No field named \"DBT_VALID_FROM\". Valid fields are source.id, source.zuora_account_name, source.zuora_account_id, source.salesforce_account_id, source.created_at, source.updated_at, source._uploaded_at, source._task_instance, source.billing_account_rank_in_key, source.dbt_scd_id, source.dbt_updated_at, source.dbt_valid_from, source.dbt_valid_to.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/customers_db_billing_accounts_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_billing_accounts_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.customers_db_billing_accounts_snapshots\n\n), renamed AS (\n\n    SELECT \n      dbt_scd_id::VARCHAR                                     AS billing_account_snapshot_id,\n      id::NUMBER                                              AS billing_account_id,\n      zuora_account_id::VARCHAR                               AS zuora_account_id,\n      zuora_account_name::VARCHAR                             AS zuora_account_name,\n      salesforce_account_id::VARCHAR                          AS sfdc_account_id,\n      created_at::TIMESTAMP                                   AS billing_account_created_at,\n      updated_at::TIMESTAMP                                   AS billing_account_updated_at,\n      \"DBT_VALID_FROM\"::TIMESTAMP                             AS valid_from,\n      \"DBT_VALID_TO\"::TIMESTAMP                               AS valid_to\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.customers_db_billing_accounts_snapshots", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:50.131794Z", "completed_at": "2025-06-09T18:46:50.145085Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:50.145721Z", "completed_at": "2025-06-09T18:46:50.502464Z"}], "thread_id": "Thread-4", "execution_time": 0.39424705505371094, "adapter_response": {}, "message": "Database Error in model customers_db_cloud_activations_snapshots_base (models/legacy/snapshots/base/customers_db_cloud_activations_snapshots_base.sql)\n  000200: DataFusion error: Schema error: No field named \"DBT_VALID_FROM\". Valid fields are source.id, source.created_at, source.updated_at, source.customer_id, source.activation_code, source.subscription_name, source.super_sonics_aware, source.seat_utilization_reminder_sent_at, source.billing_account_id, source._uploaded_at, source._task_instance, source.cloud_activation_rank_in_key, source.dbt_scd_id, source.dbt_updated_at, source.dbt_valid_from, source.dbt_valid_to.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/customers_db_cloud_activations_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_cloud_activations_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.customers_db_cloud_activations_snapshots\n\n), renamed AS (\n\n    SELECT \n      dbt_scd_id::VARCHAR                                     AS cloud_activation_snapshot_id,\n      id::NUMBER                                              AS cloud_activation_id,\n      billing_account_id::VARCHAR                             AS billing_account_id,\n      customer_id::VARCHAR                                    AS customer_id,\n      subscription_name::VARCHAR                              AS subscription_name,\n      super_sonics_aware::BOOLEAN                             AS is_super_sonics_aware_subscription,\n      seat_utilization_reminder_sent_at                       AS seat_utilization_reminder_sent_at,\n      created_at::TIMESTAMP                                   AS cloud_activation_created_at,\n      updated_at::TIMESTAMP                                   AS cloud_activation_updated_at,\n      \"DBT_VALID_FROM\"::TIMESTAMP                             AS valid_from,\n      \"DBT_VALID_TO\"::TIMESTAMP                               AS valid_to\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.customers_db_cloud_activations_snapshots", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:48.521712Z", "completed_at": "2025-06-09T18:46:48.543257Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:48.581928Z", "completed_at": "2025-06-09T18:46:50.409072Z"}], "thread_id": "Thread-3", "execution_time": 1.935034990310669, "adapter_response": {}, "message": "Database Error in model commonroom_activities_source (models/sources/commonroom/commonroom_activities_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL TIMESTAMP_NTZ precision None\n  compiled code at target/run/gitlab_snowflake/models/sources/commonroom/commonroom_activities_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.commonroom_activities_source", "compiled": true, "compiled_code": "\n\nWITH source AS\n(\n\n  SELECT *\n  FROM EMBUCKET.commonroom.activities\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY activity_timestamp, first_activity_date, full_name ORDER BY _uploaded_at DESC, _file_name DESC) = 1\n\n), dedupe AS\n(\n\n    SELECT md5(cast(coalesce(cast(activity_timestamp as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(first_activity_date as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(full_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS primary_key,\n           activity_timestamp::TIMESTAMP_NTZ                                                                 AS activity_timestamp,\n           activity_type::VARCHAR                                                                            AS activity_type,\n           first_activity_date::TIMESTAMP_NTZ                                                                AS first_activity_date,\n           full_name::VARCHAR                                                                                AS full_name,\n           member_id::VARCHAR                                                                                AS member_id,\n           profiles::VARCHAR                                                                                 AS profiles,\n           service_name::VARCHAR                                                                             AS service_name,\n           _uploaded_at::TIMESTAMP                                                                           AS _uploaded_at,\n           _file_name::VARCHAR                                                                               AS _file_name\n    FROM source\n\n)\n\nSELECT *\n  FROM dedupe", "relation_name": "EMBUCKET.commonroom.commonroom_activities_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:47.981328Z", "completed_at": "2025-06-09T18:46:47.985545Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:47.985812Z", "completed_at": "2025-06-09T18:46:51.627106Z"}], "thread_id": "Thread-25", "execution_time": 3.6464059352874756, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_user_touchpoints_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                                            AS user_touchpoint_id,\n      modified_date                                 AS modified_date,\n      email                                         AS email,\n      session_id                                    AS session_id,\n      campaign_member_id                            AS campaign_member_id,\n      crm_activity_id                               AS crm_activity_id,\n      crm_event_id                                  AS crm_event_id,\n      crm_task_id                                   AS crm_task_id,\n      impression_id                                 AS impression_id,\n      is_first_known_touch                          AS is_first_known_touch,\n      visitor_id                                    AS visitor_id,\n      touchpoint_date                               AS touchpoint_date,\n      marketing_touch_type                          AS marketing_touch_type,\n      channel                                       AS channel,\n      browser_name                                  AS browser_name,\n      browser_version                               AS browser_version,\n      platform_name                                 AS platform_name,\n      platform_version                              AS platform_version,\n      landing_page                                  AS landing_page,\n      landing_page_raw                              AS landing_page_raw,\n      referrer_page                                 AS referrer_page,\n      referrer_page_raw                             AS referrer_page_raw,\n      form_page                                     AS form_page,\n      form_page_raw                                 AS form_page_raw,\n      form_date                                     AS form_date,\n      city                                          AS city,\n      region                                        AS region,\n      country                                       AS country,\n      medium                                        AS medium,\n      web_source                                    AS web_source,\n      search_phrase                                 AS search_phrase,\n      ad_provider                                   AS ad_provider,\n      account_unique_id                             AS account_unique_id,\n      account_name                                  AS account_name,\n      advertiser_unique_id                          AS advertiser_unique_id,\n      advertiser_name                               AS advertiser_name,\n      site_unique_id                                AS site_unique_id,\n      site_name                                     AS site_name,\n      placement_unique_id                           AS placement_unique_id,\n      placement_name                                AS placement_name,\n      campaign_unique_id                            AS campaign_unique_id,\n      campaign_name                                 AS campaign_name,\n      ad_group_unique_id                            AS ad_group_unique_id,\n      ad_group_name                                 AS ad_group_name,\n      ad_unique_id                                  AS ad_unique_id,\n      ad_name                                       AS ad_name,\n      creative_unique_id                            AS creative_unique_id,\n      creative_name                                 AS creative_name,\n      creative_description_1                        AS creative_description_1,\n      creative_description_2                        AS creative_description_2,\n      creative_destination_url                      AS creative_destination_url,\n      creative_display_url                          AS creative_display_url,\n      keyword_unique_id                             AS keyword_unique_id,\n      keyword_name                                  AS keyword_name,\n      keyword_match_type                            AS keyword_match_type,\n      is_form_submission_touch                      AS is_form_submission_touch,\n      is_impression_touch                           AS is_impression_touch,\n      is_deleted                                    AS is_deleted,\n      row_key                                       AS row_key,\n      landing_page_key                              AS landing_page_key,\n      referrer_page_key                             AS referrer_page_key,\n      form_page_key                                 AS form_page_key,\n      account_row_key                               AS account_row_key,\n      advertiser_row_key                            AS advertiser_row_key,\n      site_row_key                                  AS site_row_key,\n      placement_row_key                             AS placement_row_key,\n      campaign_row_key                              AS campaign_row_key,\n      ad_row_key                                    AS ad_row_key,\n      ad_group_row_key                              AS ad_group_row_key,\n      creative_row_key                              AS creative_row_key,\n      keyword_row_key                               AS keyword_row_key,\n      _created_date                                 AS _created_date,\n      _modified_date                                AS _modified_date,\n      _deleted_date                                 AS _deleted_date\n    FROM EMBUCKET.bizible.biz_user_touchpoints\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_user_touchpoints_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.023639Z", "completed_at": "2025-06-09T18:46:51.059045Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.122439Z", "completed_at": "2025-06-09T18:46:51.760839Z"}], "thread_id": "Thread-8", "execution_time": 0.7763769626617432, "adapter_response": {}, "message": "Database Error in model customers_db_license_versions_source (models/sources/customers/customers_db_license_versions_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Function 'dateadd' failed to match any signature, errors: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Int64), Int64)) but received NativeType::Float64, DataType: Float64.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker,Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Int64), Int64)) but received NativeType::Float64, DataType: Float64.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker,Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Int64), Int64)) but received NativeType::Float64, DataType: Float64.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'dateadd(Utf8, Float64, Utf8)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tdateadd(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Int64), Int64))), Coercion(TypeSignatureClass::Timestamp, implicit_coercion=ImplicitCoercion([Native(LogicalType(Native(String), String))], default_type=Timestamp(Nanosecond, None)))\n  \tdateadd(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Int64), Int64))), Coercion(TypeSignatureClass::Time))\n  \tdateadd(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Int64), Int64))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Date), Date))))\n  compiled code at target/run/gitlab_snowflake/models/sources/customers/customers_db_license_versions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_license_versions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.customers_db_license_versions\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY item_id,\n                                            created_at,\n                                            item_type,\n                                            event,\n                                            whodunnit,\n                                            object,\n                                            object_changes\n                               ORDER BY _uploaded_at DESC) = 1\n), dedupe AS (\n\n    SELECT *\n      FROM source\n\n), renamed AS (\n\n    SELECT\n      md5(cast(coalesce(cast(item_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(item_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(created_at as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(item_type as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(event as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(whodunnit as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(object as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(object_changes as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))\n                                                          AS id,\n      item_id::NUMBER                                     AS item_id,\n      created_at::TIMESTAMP                               AS created_at,\n      item_type::VARCHAR                                  AS item_type,\n      event::VARCHAR                                      AS event,\n      whodunnit::VARCHAR                                  AS whodunnit,\n      CASE\n      WHEN whodunnit ILIKE '%@gitlab.com' THEN\n        TRIM(REPLACE(whodunnit,'Admin: ',''))\n      ELSE\n        NULL\n      END                                                 AS whodunnit_gitlab,\n      CASE\n      WHEN whodunnit ILIKE '%@gitlab.com' THEN\n        whodunnit\n      ELSE\n        NULL\n      END                                                 AS whodunnit_gitlab_desc,\n      object::VARCHAR                                     AS object,\n      object_changes::VARCHAR                             AS object_changes,\n      DATEADD('s', _uploaded_at, '1970-01-01')::TIMESTAMP AS _uploaded_at\n    FROM dedupe\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.customers.customers_db_license_versions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.048202Z", "completed_at": "2025-06-09T18:46:51.120149Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.160886Z", "completed_at": "2025-06-09T18:46:51.740672Z"}], "thread_id": "Thread-19", "execution_time": 0.7692079544067383, "adapter_response": {}, "message": "Database Error in model dashboard_analytics_source (models/sources/observability/dashboard_analytics_source.sql)\n  000200: DataFusion error: Error during planning: table 'monte_carlo.prod_insights.dashboard_analytics' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/observability/dashboard_analytics_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.dashboard_analytics_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM MONTE_CARLO.prod_insights.dashboard_analytics\n\n), renamed AS (\n\n    SELECT\n     *\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.dashboard_analytics_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.110405Z", "completed_at": "2025-06-09T18:46:51.168776Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.228800Z", "completed_at": "2025-06-09T18:46:52.118508Z"}], "thread_id": "Thread-18", "execution_time": 1.095862865447998, "adapter_response": {}, "message": "Database Error in model data_type_mock_table (models/workspaces/workspace_data/mock/data_type_mock_table.sql)\n  000200: DataFusion error: This feature is not implemented: Arrays with unspecified type is not supported\n  compiled code at target/run/gitlab_snowflake/models/workspaces/workspace_data/mock/data_type_mock_table.sql", "failures": null, "unique_id": "model.gitlab_snowflake.data_type_mock_table.v1", "compiled": true, "compiled_code": "SELECT\n  'A'::VARCHAR AS the_varchar,\n  0.01::FLOAT AS the_float,\n  1::INTEGER AS the_int,\n  to_array('A')::ARRAY AS the_array,\n  parse_json('{\"A\":\"a\",\"B\":\"b\"}')::VARIANT AS the_variant,\n  '2022-04-18'::DATE AS the_date,\n  '2022-04-18 01:01:01'::TIMESTAMP AS the_timestamp,\n  TRUE::BOOLEAN AS the_boolean\n\n\n  --  EMBUCKET.mock_source.mock_source_table", "relation_name": "EMBUCKET.workspace_data.data_type_mock_table_v1", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:50.967672Z", "completed_at": "2025-06-09T18:46:51.000911Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.035841Z", "completed_at": "2025-06-09T18:46:52.467103Z"}], "thread_id": "Thread-13", "execution_time": 1.520639181137085, "adapter_response": {}, "message": "Database Error in model customers_db_license_seat_links_source (models/sources/customers/customers_db_license_seat_links_source.sql)\n  000200: DataFusion error: Schema error: No field named uuid. Valid fields are source.zuora_subscription_id, source.created_at, source.updated_at, source.order_id, source.active_user_count, source.max_historical_user_count, source.license_user_count, source.add_on_metrics, source.report_timestamp, source.license_starts_on, source.zuora_subscription_name, source.hostname, source.instance_identifier, source._uploaded_at, source._task_instance.\n  compiled code at target/run/gitlab_snowflake/models/sources/customers/customers_db_license_seat_links_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_license_seat_links_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.customers_db_license_seat_links\n\n), renamed AS (\n\n    SELECT\n      zuora_subscription_id::VARCHAR     AS zuora_subscription_id,\n      zuora_subscription_name::VARCHAR   AS zuora_subscription_name,\n      hostname::VARCHAR                  AS hostname,\n      instance_identifier::VARCHAR       AS uuid,\n      order_id::NUMBER                   AS order_id,\n      report_timestamp::TIMESTAMP        AS report_timestamp,\n      report_timestamp::DATE             AS report_date,\n      license_starts_on::DATE            AS license_starts_on,\n      created_at::TIMESTAMP              AS created_at,\n      updated_at::TIMESTAMP              AS updated_at,\n      active_user_count::NUMBER          AS active_user_count,\n      license_user_count::NUMBER         AS license_user_count,\n      max_historical_user_count::NUMBER  AS max_historical_user_count,\n      add_on_metrics::VARIANT            AS add_on_metrics_user_count\n    FROM source  \n    QUALIFY ROW_NUMBER() OVER (PARTITION BY zuora_subscription_id, hostname, uuid, report_date ORDER BY updated_at DESC) = 1\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.customers.customers_db_license_seat_links_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.041381Z", "completed_at": "2025-06-09T18:46:51.097984Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.145816Z", "completed_at": "2025-06-09T18:46:52.533729Z"}], "thread_id": "Thread-17", "execution_time": 1.5269391536712646, "adapter_response": {}, "message": "Database Error in model customers_db_trial_histories_source (models/sources/customers/customers_db_trial_histories_source.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'try_to_numeric'.\n  Did you mean 'try_to_time'?\n  compiled code at target/run/gitlab_snowflake/models/sources/customers/customers_db_trial_histories_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_trial_histories_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_postgres.customers_db_trial_histories\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY gl_namespace_id, trial_type ORDER BY updated_at DESC) = 1\n\n),\n\nrenamed AS (\n\n  SELECT DISTINCT\n    TRY_TO_NUMERIC(gl_namespace_id)::VARCHAR AS gl_namespace_id,\n    start_date::TIMESTAMP                    AS start_date,\n    expired_on::TIMESTAMP                    AS expired_on,\n    created_at::TIMESTAMP                    AS created_at,\n    updated_at::TIMESTAMP                    AS updated_at,\n    glm_source::VARCHAR                      AS glm_source,\n    glm_content::VARCHAR                     AS glm_content,\n    trial_type::INTEGER                      AS trial_type,\n    CASE\n      WHEN trial_type = 1 THEN 'Ultimate/Premium'\n      WHEN trial_type = 2 THEN 'DuoPro'\n      WHEN trial_type IN (3,5,6) THEN 'Duo Enterprise'\n      WHEN trial_type = 4 THEN 'Ultimate on Premium'\n      WHEN trial_type = 7 THEN 'Premium'\n    END                                      AS trial_type_name,\n    product_rate_plan_id\n  FROM source\n\n)\n\nSELECT *\nFROM renamed\nWHERE gl_namespace_id IS NOT NULL", "relation_name": "EMBUCKET.customers.customers_db_trial_histories_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:47.248076Z", "completed_at": "2025-06-09T18:46:47.283687Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:47.314054Z", "completed_at": "2025-06-09T18:46:52.617822Z"}], "thread_id": "Thread-12", "execution_time": 5.393944025039673, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_touchpoints_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                                AS touchpoint_id,\n      modified_date                     AS modified_date,\n      email                             AS email,\n      contact_id                        AS contact_id,\n      account_id                        AS account_id,\n      lead_id                           AS lead_id,\n      unique_id_person                  AS unique_id_person,\n      user_touchpoint_id                AS user_touchpoint_id,\n      visitor_id                        AS visitor_id,\n      touchpoint_date                   AS touchpoint_date,\n      marketing_touch_type              AS marketing_touch_type,\n      channel                           AS channel,\n      category1                         AS category1,\n      category2                         AS category2,\n      category3                         AS category3,\n      category4                         AS category4,\n      category5                         AS category5,\n      category6                         AS category6,\n      category7                         AS category7,\n      category8                         AS category8,\n      category9                         AS category9,\n      category10                        AS category10,\n      category11                        AS category11,\n      category12                        AS category12,\n      category13                        AS category13,\n      category14                        AS category14,\n      category15                        AS category15,\n      browser_name                      AS browser_name,\n      browser_version                   AS browser_version,\n      platform_name                     AS platform_name,\n      platform_version                  AS platform_version,\n      landing_page                      AS landing_page,\n      landing_page_raw                  AS landing_page_raw,\n      referrer_page                     AS referrer_page,\n      referrer_page_raw                 AS referrer_page_raw,\n      form_page                         AS form_page,\n      form_page_raw                     AS form_page_raw,\n      form_date                         AS form_date,\n      city                              AS city,\n      region                            AS region,\n      country                           AS country,\n      medium                            AS medium,\n      web_source                        AS web_source,\n      search_phrase                     AS search_phrase,\n      ad_provider                       AS ad_provider,\n      account_unique_id                 AS account_unique_id,\n      account_name                      AS account_name,\n      advertiser_unique_id              AS advertiser_unique_id,\n      advertiser_name                   AS advertiser_name,\n      site_unique_id                    AS site_unique_id,\n      site_name                         AS site_name,\n      placement_unique_id               AS placement_unique_id,\n      placement_name                    AS placement_name,\n      campaign_unique_id                AS campaign_unique_id,\n      campaign_name                     AS campaign_name,\n      ad_group_unique_id                AS ad_group_unique_id,\n      ad_group_name                     AS ad_group_name,\n      ad_unique_id                      AS ad_unique_id,\n      ad_name                           AS ad_name,\n      creative_unique_id                AS creative_unique_id,\n      creative_name                     AS creative_name,\n      creative_description_1            AS creative_description_1,\n      creative_description_2            AS creative_description_2,\n      creative_destination_url          AS creative_destination_url,\n      creative_display_url              AS creative_display_url,\n      keyword_unique_id                 AS keyword_unique_id,\n      keyword_name                      AS keyword_name,\n      keyword_match_type                AS keyword_match_type,\n      is_first_touch                    AS is_first_touch,\n      is_lead_creation_touch            AS is_lead_creation_touch,\n      is_opp_creation_touch             AS is_opp_creation_touch,\n      is_closed_touch                   AS is_closed_touch,\n      stages_touched                    AS stages_touched,\n      is_form_submission_touch          AS is_form_submission_touch,\n      is_impression_touch               AS is_impression_touch,\n      first_click_percentage            AS first_click_percentage,\n      last_anon_click_percentage        AS last_anon_click_percentage,\n      u_shape_percentage                AS u_shape_percentage,\n      w_shape_percentage                AS w_shape_percentage,\n      full_path_percentage              AS full_path_percentage,\n      custom_model_percentage           AS custom_model_percentage,\n      is_deleted                        AS is_deleted,\n      row_key                           AS row_key,\n      contact_row_key                   AS contact_row_key,\n      lead_row_key                      AS lead_row_key,\n      landing_page_key                  AS landing_page_key,\n      referrer_page_key                 AS referrer_page_key,\n      form_page_key                     AS form_page_key,\n      account_row_key                   AS account_row_key,\n      advertiser_row_key                AS advertiser_row_key,\n      site_row_key                      AS site_row_key,\n      placement_row_key                 AS placement_row_key,\n      campaign_row_key                  AS campaign_row_key,\n      ad_row_key                        AS ad_row_key,\n      ad_group_row_key                  AS ad_group_row_key,\n      creative_row_key                  AS creative_row_key,\n      keyword_row_key                   AS keyword_row_key,\n      _created_date                     AS _created_date,\n      _modified_date                    AS _modified_date,\n      _deleted_date                     AS _deleted_date\n    FROM EMBUCKET.bizible.biz_touchpoints\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_touchpoints_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.770564Z", "completed_at": "2025-06-09T18:46:51.803512Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.816858Z", "completed_at": "2025-06-09T18:46:53.432347Z"}], "thread_id": "Thread-8", "execution_time": 1.6678531169891357, "adapter_response": {}, "message": "Database Error in model driveload_financial_metrics_program_phase_1_source (models/sources/driveload/driveload_financial_metrics_program_phase_1_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,354)..Location(1,366)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/driveload/driveload_financial_metrics_program_phase_1_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_financial_metrics_program_phase_1_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.driveload.financial_metrics_program_phase_1\n\n), renamed AS (\n\n    SELECT\n      arr_month::DATE                                     arr_month,\n      fiscal_quarter_name_fy::VARCHAR                     fiscal_quarter_name_fy,\n      fiscal_year::NUMBER                                 fiscal_year,\n      subscription_start_month::TIMESTAMP_TZ              subscription_start_month,\n      subscription_end_month::TIMESTAMP_TZ                subscription_end_month,\n      zuora_account_id::VARCHAR                           zuora_account_id,\n      zuora_sold_to_country::VARCHAR                      zuora_sold_to_country,\n      zuora_account_name::VARCHAR                         zuora_account_name,\n      zuora_account_number::VARCHAR                       zuora_account_number,\n      dim_crm_account_id::VARCHAR                         dim_crm_account_id,\n      dim_parent_crm_account_id::VARCHAR                  dim_parent_crm_account_id,\n      parent_crm_account_name::VARCHAR                    parent_crm_account_name,\n      parent_crm_account_billing_country::VARCHAR         parent_crm_account_billing_country,\n      parent_crm_account_sales_segment::VARCHAR           parent_crm_account_sales_segment,\n      parent_crm_account_industry::VARCHAR                parent_crm_account_industry,\n      parent_crm_account_owner_team::VARCHAR              parent_crm_account_owner_team,\n      parent_crm_account_sales_territory::VARCHAR         parent_crm_account_sales_territory,\n      subscription_name::VARCHAR                          subscription_name,\n      subscription_status::VARCHAR                        subscription_status,\n      subscription_sales_type::VARCHAR                    subscription_sales_type,\n      product_category::VARCHAR                           product_category,\n      delivery::VARCHAR                                   delivery,\n      service_type::VARCHAR                               service_type,\n      unit_of_measure::ARRAY                              unit_of_measure,\n      mrr::FLOAT                                          mrr,\n      arr::FLOAT                                          arr,\n      quantity::FLOAT                                     quantity,\n      parent_account_cohort_month::DATE                   parent_account_cohort_month,\n      months_since_parent_account_cohort_start::NUMBER    months_since_parent_account_cohort_start,\n      parent_crm_account_employee_count_band::VARCHAR     parent_crm_account_employee_count_band,\n      arr_band_calc::VARCHAR                              arr_band_calc,\n      product_name::VARCHAR                               product_name\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.driveload.driveload_financial_metrics_program_phase_1_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:52.127311Z", "completed_at": "2025-06-09T18:46:52.130689Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:52.131050Z", "completed_at": "2025-06-09T18:46:53.504522Z"}], "thread_id": "Thread-18", "execution_time": 1.399312973022461, "adapter_response": {}, "message": "Database Error in model driveload_lam_corrections_source (models/sources/driveload/driveload_lam_corrections_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/driveload/driveload_lam_corrections_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_lam_corrections_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      dim_parent_crm_account_id::VARCHAR                AS dim_parent_crm_account_id,\n      parent_crm_account_sales_segment::VARCHAR         AS dim_parent_crm_account_sales_segment,\n      dev_count::FLOAT                                  AS dev_count,\n      estimated_capped_lam::FLOAT                       AS estimated_capped_lam,\n      valid_from::DATE                                  AS valid_from,\n      valid_to_final_date::DATETIME                     AS valid_to\n    FROM EMBUCKET.driveload.lam_corrections\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.driveload.driveload_lam_corrections_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.051280Z", "completed_at": "2025-06-09T18:46:51.121125Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.165346Z", "completed_at": "2025-06-09T18:46:53.483533Z"}], "thread_id": "Thread-32", "execution_time": 2.5144429206848145, "adapter_response": {}, "message": "Database Error in model customers_db_licenses_snapshots_base (models/legacy/snapshots/base/customers_db_licenses_snapshots_base.sql)\n  000200: DataFusion error: Schema error: No field named \"DBT_VALID_FROM\". Valid fields are source.id, source.name, source.company, source.users_count, source.email, source.license_file, source.expires_at, source.plan_name, source.starts_at, source.zuora_subscription_id, source.notes, source.previous_users_count, source.trueup_quantity, source.trueup_from, source.trueup_to, source.plan_code, source.trial, source.zuora_subscription_name, source.license_file_md5, source.creator_id, source._uploaded_at, source._task_instance, source.created_at, source.updated_at, source.dbt_scd_id, source.dbt_updated_at, source.dbt_valid_from, source.dbt_valid_to, source.license_file_sha256, source.billing_account_id.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/customers_db_licenses_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_licenses_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.customers_db_licenses_snapshots\n\n), renamed AS (\n\n    SELECT DISTINCT\n      dbt_scd_id::VARCHAR                        AS license_snapshot_id,\n      id::NUMBER                                 AS license_id,\n      company::VARCHAR                           AS company,\n      users_count::NUMBER                        AS users_count,\n      REPLACE(license_file_md5::VARCHAR, '-')    AS license_md5,\n      expires_at::TIMESTAMP                      AS license_expires_at,\n      plan_name::VARCHAR                         AS plan_name,\n      starts_at::TIMESTAMP                       AS starts_at,\n      zuora_subscription_id::VARCHAR             AS zuora_subscription_id,\n      previous_users_count::NUMBER               AS previous_users_count,\n      trueup_quantity::NUMBER                    AS trueup_quantity,\n      trueup_from::TIMESTAMP                     AS trueup_from,\n      trueup_to::TIMESTAMP                       AS trueup_to,\n      plan_code::VARCHAR                         AS plan_code,\n      trial::BOOLEAN                             AS is_trial,\n      created_at::TIMESTAMP                      AS created_at,\n      updated_at::TIMESTAMP                      AS updated_at,\n      \"DBT_VALID_FROM\"::TIMESTAMP                AS valid_from,\n      \"DBT_VALID_TO\"::TIMESTAMP                  AS valid_to,\n      REPLACE(license_file_sha256::VARCHAR, '-') AS license_sha256\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.customers_db_licenses_snapshots", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:50.078401Z", "completed_at": "2025-06-09T18:46:50.095026Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:50.101710Z", "completed_at": "2025-06-09T18:46:53.512062Z"}], "thread_id": "Thread-5", "execution_time": 3.467597007751465, "adapter_response": {}, "message": "Database Error in model customers_db_billing_accounts_source (models/sources/customers/customers_db_billing_accounts_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/customers/customers_db_billing_accounts_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_billing_accounts_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.customers_db_billing_accounts\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY UPDATED_AT DESC) = 1\n\n), renamed AS (\n\n    SELECT DISTINCT\n      id::NUMBER                                              AS billing_account_id,\n      zuora_account_id::VARCHAR                               AS zuora_account_id,\n      zuora_account_name::VARCHAR                             AS zuora_account_name,\n      salesforce_account_id::VARCHAR                          AS sfdc_account_id,\n      created_at::TIMESTAMP                                   AS billing_account_created_at,\n      updated_at::TIMESTAMP                                   AS billing_account_updated_at\n    FROM source\n\n)\n\nSELECT\n  *\nFROM renamed", "relation_name": "EMBUCKET.customers.customers_db_billing_accounts_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.082322Z", "completed_at": "2025-06-09T18:46:51.139725Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.175375Z", "completed_at": "2025-06-09T18:46:53.684195Z"}], "thread_id": "Thread-26", "execution_time": 2.66582989692688, "adapter_response": {}, "message": "Database Error in model dbt_gdpr_logs_source (models/sources/dbt/dbt_gdpr_logs_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,394)..Location(1,401)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,402)..Location(1,407)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,411)..Location(1,421)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,422)..Location(1,430)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,433)..Location(1,438)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,442)..Location(1,446)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,451)..Location(1,452)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/dbt/dbt_gdpr_logs_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.dbt_gdpr_logs_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.dbt.gdpr_logs\n\n    ), flattened AS (\n\n    SELECT\n      d.value['info']['ts']::TIMESTAMP                                                          AS time_stamp,\n      d.value['info']['msg']::VARCHAR                                                           AS info_msg,\n      d.value['info']['invocation_id']::VARCHAR                                                 AS invocation_id,\n      uploaded_at\n    FROM source\n    INNER JOIN LATERAL FLATTEN(INPUT => PARSE_JSON(jsontext), outer => true) d\n\n)\nSELECT * FROM flattened\nORDER BY 1", "relation_name": "EMBUCKET.dbt.dbt_gdpr_logs_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.203878Z", "completed_at": "2025-06-09T18:46:51.314658Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.332416Z", "completed_at": "2025-06-09T18:46:53.803784Z"}], "thread_id": "Thread-3", "execution_time": 2.6948060989379883, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_booking_to_billing_monthly_reconciliation_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.booking_to_billing_monthly_reconciliation\n\n), renamed AS (\n\n    SELECT\n      *\n    FROM source\n\n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.driveload.driveload_booking_to_billing_monthly_reconciliation_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:47.265149Z", "completed_at": "2025-06-09T18:46:47.282889Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:47.322544Z", "completed_at": "2025-06-09T18:46:53.674996Z"}], "thread_id": "Thread-28", "execution_time": 6.444388151168823, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_sites_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                        AS site_id,\n      display_id                AS display_id,\n      ad_account_unique_id      AS ad_account_unique_id,\n      ad_account_name           AS ad_account_name,\n      advertiser_unique_id      AS advertiser_unique_id,\n      advertiser_name           AS advertiser_name,\n      ad_group_unique_id        AS ad_group_unique_id,\n      ad_group_name             AS ad_group_name,\n      ad_campaign_unique_id     AS ad_campaign_unique_id,\n      ad_campaign_name          AS ad_campaign_name,\n      is_active                 AS is_active,\n      is_deleted                AS is_deleted,\n      modified_date             AS modified_date,\n      first_imported            AS first_imported,\n      name                      AS name,\n      needs_update              AS needs_update,\n      grouping_key              AS grouping_key,\n      entity_type               AS entity_type,\n      provider_type             AS provider_type,\n      row_key                   AS row_key,\n      _created_date             AS _created_date,\n      _modified_date            AS _modified_date,\n      _deleted_date             AS _deleted_date\n    FROM EMBUCKET.bizible.biz_sites\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_sites_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.114632Z", "completed_at": "2025-06-09T18:46:51.165069Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.222130Z", "completed_at": "2025-06-09T18:46:53.676261Z"}], "thread_id": "Thread-31", "execution_time": 2.6545560359954834, "adapter_response": {}, "message": "Database Error in model data_type_mock_table (models/workspaces/workspace_data/mock/data_type_mock_table_v2.sql)\n  000200: DataFusion error: This feature is not implemented: Arrays with unspecified type is not supported\n  compiled code at target/run/gitlab_snowflake/models/workspaces/workspace_data/mock/data_type_mock_table_v2.sql", "failures": null, "unique_id": "model.gitlab_snowflake.data_type_mock_table.v2", "compiled": true, "compiled_code": "SELECT\n  'A'::VARCHAR AS the_varchar,\n  0.01::FLOAT AS the_float,\n  1::INTEGER AS the_int,\n  to_array('A')::ARRAY AS the_array,\n  parse_json('{\"A\":\"a\",\"B\":\"b\"}')::VARIANT AS the_variant,\n  '2022-04-18'::DATE AS the_date,\n  '2022-04-18 01:01:01'::TIMESTAMP AS the_timestamp\n\n\n  --  EMBUCKET.mock_source.mock_source_table", "relation_name": "EMBUCKET.workspace_data.data_type_mock_table_v2", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:50.913982Z", "completed_at": "2025-06-09T18:46:50.918269Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:50.918554Z", "completed_at": "2025-06-09T18:46:53.706766Z"}], "thread_id": "Thread-6", "execution_time": 2.799362897872925, "adapter_response": {}, "message": "Database Error in model customers_db_leads_source (models/sources/customers/customers_db_leads_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/customers/customers_db_leads_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_leads_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.customers_db_leads\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY UPDATED_AT DESC) = 1\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                      AS leads_id,\n      created_at::TIMESTAMP           AS created_at,\n      updated_at::TIMESTAMP           AS updated_at,\n      trial_start_date::TIMESTAMP     AS trial_start_date,\n      namespace_id::NUMBER            AS namespace_id,\n      user_id::NUMBER                 AS user_id,\n      opt_in::BOOLEAN                 AS opt_in,\n      currently_in_trial::BOOLEAN     AS currently_in_trial,\n      is_for_business_use::BOOLEAN    AS is_for_business_use,\n      first_name::VARCHAR             AS first_name,\n      last_name::VARCHAR              AS last_name,\n      email::VARCHAR                  AS email,\n      phone::VARCHAR                  AS phone,\n      company_name::VARCHAR           AS company_name,\n      employees_bucket::VARCHAR       AS employees_bucket,\n      country::VARCHAR                AS country,\n      state::VARCHAR                  AS state,\n      product_interaction::VARCHAR    AS product_interaction,\n      provider::VARCHAR               AS provider,\n      comment_capture::VARCHAR        AS comment_capture,\n      glm_content::VARCHAR            AS glm_content,\n      glm_source::VARCHAR             AS glm_source,\n      sent_at::TIMESTAMP              AS sent_at,\n      website_url::VARCHAR            AS website_url,\n      role::VARCHAR                   AS role,\n      jtbd::VARCHAR                   AS jtbd      \n\n    FROM source  \n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.customers.customers_db_leads_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.059442Z", "completed_at": "2025-06-09T18:46:53.542792Z"}], "thread_id": "Thread-29", "execution_time": 2.5632288455963135, "adapter_response": {}, "message": "Database Error in model date_details_source (models/sources/date/date_details_source.sql)\n  000200: DataFusion error: Execution error: Error parsing timestamp from '11/01/2009' using format 'mm/dd/yyyy': input contains invalid characters", "failures": null, "unique_id": "model.gitlab_snowflake.date_details_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.date.date_details_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:49.673465Z", "completed_at": "2025-06-09T18:46:49.689297Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:49.696910Z", "completed_at": "2025-06-09T18:46:53.754813Z"}], "thread_id": "Thread-15", "execution_time": 4.099876880645752, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.coupa_order_header_source", "compiled": true, "compiled_code": "WITH source AS(\n SELECT *\n  FROM EMBUCKET.coupa.order_header\n  WHERE NOT _fivetran_deleted --means it was deleted in source system and fivetran can't see it anymore\n\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::INT                AS po_id,\n    po_number::INT         AS po_number,\n    supplier_id::INT       AS supplier_id,\n    status::VARCHAR        AS po_status,\n    currency_id::INT       AS currency_id,\n    payment_term_id::INT   AS payment_term_id,\n    requisition_header_id::INT AS requisition_id,\n    \n    \n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.coupa.coupa_order_header_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:49.605886Z", "completed_at": "2025-06-09T18:46:49.626402Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:49.634382Z", "completed_at": "2025-06-09T18:46:53.756934Z"}], "thread_id": "Thread-1", "execution_time": 4.16227912902832, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.coupa_account_source", "compiled": true, "compiled_code": "WITH source AS(\n SELECT *\n  FROM EMBUCKET.coupa.account\n  WHERE NOT _fivetran_deleted --means it was deleted in source system and fivetran can't see it anymore\n\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::INT                 AS account_id,\n    account_type_id::INT    AS account_type_id,\n    code::VARCHAR           AS account_code,\n    SPLIT_PART(name,'-',2)::VARCHAR     AS account_department,\n    segment_1::INT          AS account_entity_code,\n    segment_2::INT          AS account_department_code,\n    segment_3::INT          AS account_commodity_code\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.coupa.coupa_account_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.242436Z", "completed_at": "2025-06-09T18:46:51.329447Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.350267Z", "completed_at": "2025-06-09T18:46:55.165837Z"}], "thread_id": "Thread-4", "execution_time": 4.02783203125, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.director_location_factor_seed_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.seed_people.director_location_factors\n\n), formated AS (\n\n    SELECT\n      country::VARCHAR                                   AS country, \n      locality::VARCHAR                                  AS locality, \n      factor::NUMBER(6, 3)                               AS factor, \n      valid_from::DATE                                   AS valid_from, \n      COALESCE(valid_to, DATEADD('day',1,CURRENT_DATE()))::DATE    AS valid_to, \n      is_current::BOOLEAN                                AS is_current\n    FROM source\n\n)\n\nSELECT *\nFROM formated", "relation_name": "EMBUCKET.gitlab_data_yaml.director_location_factor_seed_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:49.666966Z", "completed_at": "2025-06-09T18:46:49.682770Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:49.684828Z", "completed_at": "2025-06-09T18:46:53.777788Z"}], "thread_id": "Thread-16", "execution_time": 4.1262030601501465, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.coupa_supplier_source", "compiled": true, "compiled_code": "WITH source AS(\n SELECT *\n  FROM EMBUCKET.coupa.supplier\n  WHERE NOT _fivetran_deleted --means it was deleted in source system and fivetran can't see it anymore\n\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::INT                 AS supplier_id,\n    name::VARCHAR           AS supplier_name,\n    STATUS::VARCHAR         AS supplier_status,  \n    \n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.coupa.coupa_supplier_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.086839Z", "completed_at": "2025-06-09T18:46:51.141699Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.190696Z", "completed_at": "2025-06-09T18:46:53.723049Z"}], "thread_id": "Thread-10", "execution_time": 2.748059034347534, "adapter_response": {}, "message": "Database Error in model customers_db_licenses_source (models/sources/customers/customers_db_licenses_source.sql)\n  000200: DataFusion error: Error during planning: Function 'replace' expects 3 arguments but received 2 No function matches the given name and argument types 'replace(Utf8, Utf8)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \treplace(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/sources/customers/customers_db_licenses_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_licenses_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.customers_db_licenses\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY UPDATED_AT DESC) = 1\n\n), renamed AS (\n\n    SELECT DISTINCT\n      id::NUMBER                                 AS license_id,\n      name::VARCHAR                              AS name,\n      company::VARCHAR                           AS company,\n      email::VARCHAR                             AS email,\n      users_count::NUMBER                        AS license_user_count,\n      license_file::VARCHAR                      AS license_file,\n      expires_at::DATE                           AS license_expire_date,\n      created_at::TIMESTAMP                      AS created_at,\n      updated_at::TIMESTAMP                      AS updated_at,\n      plan_name::VARCHAR                         AS plan_name,\n      starts_at::DATE                            AS license_start_date,\n      zuora_subscription_id::VARCHAR             AS zuora_subscription_id,\n      notes::VARCHAR                             AS license_notes,\n      previous_users_count::NUMBER               AS previous_users_count,\n      trueup_quantity::NUMBER                    AS trueup_quantity,\n      trueup_from::DATE                          AS trueup_from_date,\n      trueup_to::DATE                            AS trueup_to_date,\n      plan_code::VARCHAR                         AS plan_code,\n      trial::BOOLEAN                             AS is_trial,\n      zuora_subscription_name::VARCHAR           AS zuora_subscription_name,\n      REPLACE(license_file_md5::VARCHAR, '-')    AS license_md5,\n      REPLACE(license_file_sha256::VARCHAR, '-') AS license_sha256,\n      creator_id::NUMBER                         AS creator_id\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.customers.customers_db_licenses_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:47.261592Z", "completed_at": "2025-06-09T18:46:47.283270Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:47.309283Z", "completed_at": "2025-06-09T18:46:53.791178Z"}], "thread_id": "Thread-14", "execution_time": 6.544595956802368, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_site_links_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      id                        AS site_link_id,\n      display_id                AS display_id,\n      ad_account_unique_id      AS ad_account_unique_id,\n      ad_account_name           AS ad_account_name,\n      advertiser_unique_id      AS advertiser_unique_id,\n      advertiser_name           AS advertiser_name,\n      ad_group_unique_id        AS ad_group_unique_id,\n      ad_group_name             AS ad_group_name,\n      ad_campaign_unique_id     AS ad_campaign_unique_id,\n      ad_campaign_name          AS ad_campaign_name,\n      is_active                 AS is_active,\n      is_deleted                AS is_deleted,\n      modified_date             AS modified_date,\n      first_imported            AS first_imported,\n      name                      AS name,\n      needs_update              AS needs_update,\n      grouping_key              AS grouping_key,\n      entity_type               AS entity_type,\n      provider_type             AS provider_type,\n      url_current               AS url_current,\n      url_old                   AS url_old,\n      url_requested             AS url_requested,\n      _created_date             AS _created_date,\n      _modified_date            AS _modified_date,\n      _deleted_date             AS _deleted_date\n    FROM EMBUCKET.bizible.biz_site_links\n \n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.bizible.bizible_site_links_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:47.241285Z", "completed_at": "2025-06-09T18:46:47.257963Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:47.275530Z", "completed_at": "2025-06-09T18:46:53.731999Z"}], "thread_id": "Thread-30", "execution_time": 6.509212017059326, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_touchpoint_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.bizible_touchpoint_snapshots\n\n), renamed AS (\n\n    SELECT\n      id                                AS touchpoint_id,\n      modified_date                     AS modified_date,\n      email                             AS email,\n      contact_id                        AS contact_id,\n      account_id                        AS account_id,\n      lead_id                           AS lead_id,\n      unique_id_person                  AS unique_id_person,\n      user_touchpoint_id                AS user_touchpoint_id,\n      visitor_id                        AS visitor_id,\n      touchpoint_date                   AS touchpoint_date,\n      marketing_touch_type              AS marketing_touch_type,\n      channel                           AS channel,\n      category1                         AS category1,\n      category2                         AS category2,\n      category3                         AS category3,\n      category4                         AS category4,\n      category5                         AS category5,\n      category6                         AS category6,\n      category7                         AS category7,\n      category8                         AS category8,\n      category9                         AS category9,\n      category10                        AS category10,\n      category11                        AS category11,\n      category12                        AS category12,\n      category13                        AS category13,\n      category14                        AS category14,\n      category15                        AS category15,\n      browser_name                      AS browser_name,\n      browser_version                   AS browser_version,\n      platform_name                     AS platform_name,\n      platform_version                  AS platform_version,\n      landing_page                      AS landing_page,\n      landing_page_raw                  AS landing_page_raw,\n      referrer_page                     AS referrer_page,\n      referrer_page_raw                 AS referrer_page_raw,\n      form_page                         AS form_page,\n      form_page_raw                     AS form_page_raw,\n      form_date                         AS form_date,\n      city                              AS city,\n      region                            AS region,\n      country                           AS country,\n      medium                            AS medium,\n      web_source                        AS web_source,\n      search_phrase                     AS search_phrase,\n      ad_provider                       AS ad_provider,\n      account_unique_id                 AS account_unique_id,\n      account_name                      AS account_name,\n      advertiser_unique_id              AS advertiser_unique_id,\n      advertiser_name                   AS advertiser_name,\n      site_unique_id                    AS site_unique_id,\n      site_name                         AS site_name,\n      placement_unique_id               AS placement_unique_id,\n      placement_name                    AS placement_name,\n      campaign_unique_id                AS campaign_unique_id,\n      campaign_name                     AS campaign_name,\n      ad_group_unique_id                AS ad_group_unique_id,\n      ad_group_name                     AS ad_group_name,\n      ad_unique_id                      AS ad_unique_id,\n      ad_name                           AS ad_name,\n      creative_unique_id                AS creative_unique_id,\n      creative_name                     AS creative_name,\n      creative_description_1            AS creative_description_1,\n      creative_description_2            AS creative_description_2,\n      creative_destination_url          AS creative_destination_url,\n      creative_display_url              AS creative_display_url,\n      keyword_unique_id                 AS keyword_unique_id,\n      keyword_name                      AS keyword_name,\n      keyword_match_type                AS keyword_match_type,\n      is_first_touch                    AS is_first_touch,\n      is_lead_creation_touch            AS is_lead_creation_touch,\n      is_opp_creation_touch             AS is_opp_creation_touch,\n      is_closed_touch                   AS is_closed_touch,\n      stages_touched                    AS stages_touched,\n      is_form_submission_touch          AS is_form_submission_touch,\n      is_impression_touch               AS is_impression_touch,\n      first_click_percentage            AS first_click_percentage,\n      last_anon_click_percentage        AS last_anon_click_percentage,\n      u_shape_percentage                AS u_shape_percentage,\n      w_shape_percentage                AS w_shape_percentage,\n      full_path_percentage              AS full_path_percentage,\n      custom_model_percentage           AS custom_model_percentage,\n      is_deleted                        AS is_deleted,\n      row_key                           AS row_key,\n      contact_row_key                   AS contact_row_key,\n      lead_row_key                      AS lead_row_key,\n      landing_page_key                  AS landing_page_key,\n      referrer_page_key                 AS referrer_page_key,\n      form_page_key                     AS form_page_key,\n      account_row_key                   AS account_row_key,\n      advertiser_row_key                AS advertiser_row_key,\n      site_row_key                      AS site_row_key,\n      placement_row_key                 AS placement_row_key,\n      campaign_row_key                  AS campaign_row_key,\n      ad_row_key                        AS ad_row_key,\n      ad_group_row_key                  AS ad_group_row_key,\n      creative_row_key                  AS creative_row_key,\n      keyword_row_key                   AS keyword_row_key,\n      _created_date                     AS _created_date,\n      _modified_date                    AS _modified_date,\n      _deleted_date                     AS _deleted_date,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n    \n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.bizible_touchpoint_snapshots_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:50.889167Z", "completed_at": "2025-06-09T18:46:50.893047Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:50.893322Z", "completed_at": "2025-06-09T18:46:53.824638Z"}], "thread_id": "Thread-27", "execution_time": 2.965301990509033, "adapter_response": {}, "message": "Database Error in model customers_db_cloud_activations_source (models/sources/customers/customers_db_cloud_activations_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/customers/customers_db_cloud_activations_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_cloud_activations_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.customers_db_cloud_activations\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY UPDATED_AT DESC) = 1\n\n), renamed AS (\n\n    SELECT DISTINCT\n      id::NUMBER                                              AS cloud_activation_id,\n      customer_id::NUMBER                                     AS customer_id,\n      billing_account_id::NUMBER                              AS billing_account_id,\n      activation_code::VARCHAR                                AS cloud_activation_code,\n      subscription_name::VARCHAR                              AS subscription_name,\n      super_sonics_aware::BOOLEAN                             AS is_super_sonics_aware_subscription,\n      seat_utilization_reminder_sent_at::TIMESTAMP            AS seat_utilization_reminder_sent_at,\n      created_at::TIMESTAMP                                   AS cloud_activation_created_at,\n      updated_at::TIMESTAMP                                   AS cloud_activation_updated_at\n    FROM source\n\n\n\n)\n\nSELECT\n  *\nFROM renamed", "relation_name": "EMBUCKET.customers.customers_db_cloud_activations_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:50.096467Z", "completed_at": "2025-06-09T18:46:50.109499Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:50.116701Z", "completed_at": "2025-06-09T18:46:53.811983Z"}], "thread_id": "Thread-23", "execution_time": 3.763278007507324, "adapter_response": {}, "message": "Database Error in model customers_db_billing_account_memberships_source (models/sources/customers/customers_db_billing_account_memberships_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/customers/customers_db_billing_account_memberships_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_billing_account_memberships_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.customers_db_billing_account_memberships\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY UPDATED_AT DESC) = 1\n\n), renamed AS (\n\n    SELECT DISTINCT\n      id::NUMBER                                              AS billing_account_membership_id,\n      customer_id::NUMBER                                     AS customer_id,\n      billing_account_id::NUMBER                              AS billing_account_id,\n      created_at::TIMESTAMP                                   AS billing_account_membership_created_at,\n      updated_at::TIMESTAMP                                   AS billing_account_membership_updated_at\n    FROM source\n\n)\n\nSELECT\n  *\nFROM renamed", "relation_name": "EMBUCKET.customers.customers_db_billing_account_memberships_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:52.474932Z", "completed_at": "2025-06-09T18:46:52.484165Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:52.484723Z", "completed_at": "2025-06-09T18:46:53.811642Z"}], "thread_id": "Thread-13", "execution_time": 1.3812100887298584, "adapter_response": {}, "message": "Database Error in model driveload_marketing_dnc_list_source (models/sources/driveload/driveload_marketing_dnc_list_source.sql)\n  000200: DataFusion error: Schema error: No field named email_address. Did you mean 'source.address'?.\n  compiled code at target/run/gitlab_snowflake/models/sources/driveload/driveload_marketing_dnc_list_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_marketing_dnc_list_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.driveload.marketing_dnc_list\n\n), renamed AS (\n\n    SELECT\n      address::VARCHAR                       AS email_address,\n      is_role_address::BOOLEAN               AS is_role_address,\n      is_disposable_address::BOOLEAN         AS is_disposable_address,\n      did_you_mean::VARCHAR                  AS did_you_mean,\n      result::VARCHAR                        AS result,\n      reason::VARIANT                        AS reason,\n      risk::VARCHAR                          AS risk,\n      root_address::VARCHAR                  AS root_address\n    FROM source\n    QUALIFY ROW_NUMBER() OVER(PARTITION BY email_address ORDER BY _updated_at DESC) = 1\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.driveload.driveload_marketing_dnc_list_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:48.593239Z", "completed_at": "2025-06-09T18:46:48.602185Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:48.609596Z", "completed_at": "2025-06-09T18:46:53.759392Z"}], "thread_id": "Thread-11", "execution_time": 5.167271852493286, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.cost_centers_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.workday.cost_centers\n  WHERE NOT _fivetran_deleted\n\n),\n\nrenamed AS (\n\n  SELECT\n    dept_workday_id::VARCHAR           AS department_workday_id,\n    dept_reference_id::VARCHAR         AS department_refid,\n    division_workday_id::VARCHAR       AS division_workday_id,\n    cost_center_workday_id::VARCHAR    AS cost_center_workday_id,\n    department_name::VARCHAR           AS department_name,\n    cost_center::VARCHAR               AS cost_center,\n    division_refid::VARCHAR            AS division_refid,\n    division::VARCHAR                  AS division,\n    cost_center_refid::VARCHAR         AS cost_center_refid,\n    dept_inactive::BOOLEAN             AS is_department_inactive\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.workday.cost_centers_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.015691Z", "completed_at": "2025-06-09T18:46:51.081694Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.133787Z", "completed_at": "2025-06-09T18:46:53.804313Z"}], "thread_id": "Thread-21", "execution_time": 2.8309810161590576, "adapter_response": {}, "message": "Database Error in model data_detection_rule (models/data_quality/data_detection_rule.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/data_quality/data_detection_rule.sql", "failures": null, "unique_id": "model.gitlab_snowflake.data_detection_rule", "compiled": true, "compiled_code": "WITH detection_rule AS (\n\n    SELECT \n      1                                                 AS rule_id,\n      'Missing instance types'                          AS rule_name,\n      'Missing instance types for UUID or Namespaces'   AS rule_description,\n      'Product'                                         AS type_of_data,\n      50                                                AS threshold\n\n   UNION\n\n    SELECT \n      2                                                            AS rule_id,\n      'Licenses with missing Subscriptions'                        AS rule_name,\n      'License IDs that do not have an associated Subscription ID' AS rule_description,\n      'Product'                                                    AS type_of_data,\n      50                                                           AS threshold\n\n    UNION\n\n      SELECT \n        3                                                                               AS rule_id,\n        'Subscription with paying Self-Managed Plans with missing Licenses'             AS rule_name,\n        'Subscription Names that currently do not have an associated License ID'        AS rule_description,\n        'Product'                                                                       AS type_of_data,\n        50                                                                              AS threshold\n\n    UNION\n\n      SELECT \n        4                                                                                      AS rule_id,\n        'Subscriptions with Self-Managed Plans having License Start dates in the future'       AS rule_name,\n        'Subscription IDs with Self-Managed Plans having license_start_date in the future'     AS rule_description,\n        'Product'                                                                              AS type_of_data,\n        50                                                                                     AS threshold\n\n    UNION\n\n      SELECT \n        5                                                                                                       AS rule_id,\n        'Subscriptions with Self-Managed Plans having License Start Date greater than License Expire date'      AS rule_name,\n        'Subscriptions IDs with Self-Managed Plans having license_start_date greater than license_expire_date'  AS rule_description,\n        'Product'                                                                                               AS type_of_data,\n        50                                                                                                      AS threshold\n\n    UNION\n\n      SELECT \n        6                                                             AS rule_id,\n        'Expired Licenses with Subscription End Dates in the Past'    AS rule_name,\n        'Expired License IDs with Subscription End Dates in the Past' AS rule_description,\n        'Product'                                                     AS type_of_data,\n        50                                                            AS threshold\n\n    UNION \n\n      SELECT \n        7                                                                                      AS rule_id,\n        'Active/Paid SaaS Subscriptions Not Mapped to Namespaces'                              AS rule_name,\n        'Currently paying SaaS Subscription IDs that do not have any associated Namespace IDs' AS rule_description,\n        'Product'                                                                              AS type_of_data,\n        50                                                                                     AS threshold\n              \n)\n\nSELECT\n      *,\n      '@snalamaru'::VARCHAR       AS created_by,\n      '@jpeguero'::VARCHAR       AS updated_by,\n      '2021-06-16'::DATE        AS model_created_date,\n      '2021-10-29'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM detection_rule", "relation_name": "EMBUCKET.data_quality.data_detection_rule", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:49.793255Z", "completed_at": "2025-06-09T18:46:49.798085Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:49.805497Z", "completed_at": "2025-06-09T18:46:53.812681Z"}], "thread_id": "Thread-24", "execution_time": 4.0661301612854, "adapter_response": {}, "message": "Database Error in model customers_db_billing_account_contacts_source (models/sources/customers/customers_db_billing_account_contacts_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/customers/customers_db_billing_account_contacts_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_billing_account_contacts_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.customers_db_billing_account_contacts\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n), renamed AS (\n\n    SELECT DISTINCT\n      id::NUMBER                                              AS billing_account_contact_id,\n      work_email::VARCHAR                                     AS work_email,\n      zuora_contact_id::VARCHAR                                AS zuora_contact_id,\n      zuora_account_id::VARCHAR                               AS zuora_account_id,\n      created_at::TIMESTAMP                                   AS billing_account_contact_created_at,\n      updated_at::TIMESTAMP                                   AS billing_account_contact_updated_at\n    FROM source\n\n)\n\nSELECT\n  *\nFROM renamed", "relation_name": "EMBUCKET.customers.customers_db_billing_account_contacts_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.632151Z", "completed_at": "2025-06-09T18:46:51.637098Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.637427Z", "completed_at": "2025-06-09T18:46:55.184426Z"}], "thread_id": "Thread-25", "execution_time": 3.554266929626465, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_email_domain_classification_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.driveload.email_domain_classification\n\n)\n\nSELECT\n  domain::VARCHAR               AS domain,\n  classification::VARCHAR       AS classification\nFROM source", "relation_name": "EMBUCKET.driveload.driveload_email_domain_classification_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.126805Z", "completed_at": "2025-06-09T18:46:51.172609Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.238671Z", "completed_at": "2025-06-09T18:46:55.193083Z"}], "thread_id": "Thread-7", "execution_time": 4.183868885040283, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.dim_user_hist", "compiled": true, "compiled_code": "\n\nWITH dim_user_snapshot AS (\n\n    SELECT\n      md5(cast(coalesce(cast(dbt_updated_at as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(dim_user_sk as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS dim_user_snapshot_hist_id,\n\t  *\n    FROM \"EMBUCKET\".snapshots.dim_user_snapshot\n\n)\n\nSELECT \n  *\nFROM\n  dim_user_snapshot", "relation_name": "EMBUCKET.common.dim_user_hist", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.153511Z", "completed_at": "2025-06-09T18:46:51.212079Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.315033Z", "completed_at": "2025-06-09T18:46:55.199312Z"}], "thread_id": "Thread-22", "execution_time": 4.189941883087158, "adapter_response": {}, "message": "Database Error in model data_detection_scorecard (models/data_quality/data_detection_scorecard.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/data_quality/data_detection_scorecard.sql", "failures": null, "unique_id": "model.gitlab_snowflake.data_detection_scorecard", "compiled": true, "compiled_code": "WITH scorecard AS (\n\n    SELECT \n      'Product Data Quality Scorecard'                                                                                                        AS scorecard_name,\n      'The Dashboard displays the overall quality of Product Usage Data as measured by the status of individual Data Quality Detection Rules' AS scorecard_description,\n      '2021-06-24'                                                                                                                            AS release_date,\n      'V1.0'                                                                                                                                  AS version_number          \n)\n\nSELECT\n      *,\n      '@snalamaru'::VARCHAR       AS created_by,\n      '@snalamaru'::VARCHAR       AS updated_by,\n      '2021-07-20'::DATE        AS model_created_date,\n      '2021-07-20'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM scorecard", "relation_name": "EMBUCKET.data_quality.data_detection_scorecard", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:50.907084Z", "completed_at": "2025-06-09T18:46:50.926905Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:50.927397Z", "completed_at": "2025-06-09T18:46:55.198332Z"}], "thread_id": "Thread-20", "execution_time": 4.338644027709961, "adapter_response": {}, "message": "Database Error in model customers_db_leads_snapshots_source (models/sources/customers/customers_db_leads_snapshots_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/customers/customers_db_leads_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_leads_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.customers_db_leads_snapshots\n\n), renamed AS (\n\n    SELECT\n      id::NUMBER AS leads_id,\n      created_at::TIMESTAMP AS created_at,\n      updated_at::TIMESTAMP AS updated_at,\n      trial_start_date::TIMESTAMP AS trial_start_date,\n      namespace_id::NUMBER AS namespace_id,\n      user_id::NUMBER AS user_id,\n      opt_in::BOOLEAN AS opt_in,\n      currently_in_trial::BOOLEAN AS currently_in_trial,\n      is_for_business_use::BOOLEAN AS is_for_business_use,\n      first_name::VARCHAR AS first_name,\n      last_name::VARCHAR AS last_name,\n      email::VARCHAR AS email,\n      phone::VARCHAR AS phone,\n      company_name::VARCHAR AS company_name,\n      employees_bucket::VARCHAR AS employees_bucket,\n      country::VARCHAR AS country,\n      state::VARCHAR AS state,\n      product_interaction::VARCHAR AS product_interaction,\n      provider::VARCHAR AS provider,\n      comment_capture::VARCHAR AS comment_capture,\n      glm_content::VARCHAR AS glm_content,\n      glm_source::VARCHAR AS glm_source,\n      sent_at::TIMESTAMP AS sent_at,\n      website_url::VARCHAR AS website_url,\n      role::VARCHAR AS role,\n      jtbd::VARCHAR AS jtbd,\n      dbt_valid_from::TIMESTAMP AS dbt_valid_from,\n      dbt_valid_to::TIMESTAMP AS dbt_valid_to \n    FROM source\n    \n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.customers.customers_db_leads_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.808311Z", "completed_at": "2025-06-09T18:46:51.811567Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.811840Z", "completed_at": "2025-06-09T18:46:55.300029Z"}], "thread_id": "Thread-19", "execution_time": 3.492555856704712, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_invoice_aging_detail_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.invoice_aging_detail\n\n), renamed AS (\n\n    SELECT\n      *\n    FROM source\n\n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.driveload.driveload_invoice_aging_detail_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:52.543079Z", "completed_at": "2025-06-09T18:46:52.546203Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:52.546473Z", "completed_at": "2025-06-09T18:46:55.533011Z"}], "thread_id": "Thread-17", "execution_time": 2.9905779361724854, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_pending_invoices_report_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.pending_invoices_report\n\n), renamed AS (\n\n    SELECT\n      *\n    FROM source\n\n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.driveload.driveload_pending_invoices_report_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.102298Z", "completed_at": "2025-06-09T18:46:51.157359Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.212992Z", "completed_at": "2025-06-09T18:46:55.471743Z"}], "thread_id": "Thread-2", "execution_time": 4.529512166976929, "adapter_response": {}, "message": "Database Error in model customers_db_versions_source (models/sources/customers/customers_db_versions_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/customers/customers_db_versions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_versions_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.customers_db_versions\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1\n\n), renamed AS (\n\n    SELECT\n      id::NUMBER             AS version_id,\n      item_id::NUMBER        AS item_id,\n      transaction_id::NUMBER AS transaction_id,\n      created_at::TIMESTAMP   AS created_at,\n      event::VARCHAR          AS event,\n      item_type::VARCHAR      AS item_type,\n      object::VARCHAR         AS object,\n      object_changes::VARCHAR AS object_changes,\n      whodunnit::VARCHAR      AS whodunnit\n    FROM source  \n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sensitive.customers_db_versions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:51.031727Z", "completed_at": "2025-06-09T18:46:51.095343Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:51.142091Z", "completed_at": "2025-06-09T18:46:55.560583Z"}], "thread_id": "Thread-9", "execution_time": 4.618923902511597, "adapter_response": {}, "message": "Database Error in model customers_db_self_managed_instance_activations (models/sources/customers/customers_db_self_managed_instance_activations.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/customers/customers_db_self_managed_instance_activations.sql", "failures": null, "unique_id": "model.gitlab_snowflake.customers_db_self_managed_instance_activations", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_postgres.customers_db_self_managed_instance_activations\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER AS id,\n    created_at::TIMESTAMP            AS created_at,\n    updated_at::TIMESTAMP            AS updated_at,\n    activated_at::TIMESTAMP          AS activated_at,\n    self_managed_instance_id::NUMBER AS self_managed_instance_id,\n    cloud_activation_id::NUMBER      AS cloud_activation_id,\n    subscription_id::VARCHAR         AS subscription_id,\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.customers.customers_db_self_managed_instance_activations", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:53.529805Z", "completed_at": "2025-06-09T18:46:53.543908Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:53.547956Z", "completed_at": "2025-06-09T18:46:55.640762Z"}], "thread_id": "Thread-18", "execution_time": 2.1116533279418945, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_billing_waterfall_report_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.zuora_revenue_billing_waterfall_report\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.driveload.driveload_zuora_revenue_billing_waterfall_report_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.286115Z", "completed_at": "2025-06-09T18:46:55.322601Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.353962Z", "completed_at": "2025-06-09T18:46:55.663777Z"}], "thread_id": "Thread-10", "execution_time": 0.5201420783996582, "adapter_response": {}, "message": "Database Error in model elastic_billing_resources_by_deployment_source (models/sources/elastic_billing/elastic_billing_resources_by_deployment_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,1173)..Location(1,1180)) })]), args: [Named { name: Ident { value: \"input\", quote_style: None, span: Span(Location(1,1181)..Location(1,1186)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,1190)..Location(1,1200)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"payload\", quote_style: None, span: Span(Location(1,1201)..Location(1,1208)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,1211)..Location(1,1216)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,1220)..Location(1,1224)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"dims\", quote_style: None, span: Span(Location(1,1229)..Location(1,1233)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/elastic_billing/elastic_billing_resources_by_deployment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.elastic_billing_resources_by_deployment_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.elasticsearch_billing.itemized_costs_by_deployment\n),\n\nparsed AS (\n  SELECT\n    source.deployment_id,\n    source.extraction_start_date,\n    source.extraction_end_date,\n    resources.value['period']['start']::TIMESTAMP AS resource_start_date,\n    resources.value['period']['end']::TIMESTAMP   AS resource_end_date,\n    resources.value['hours']::FLOAT               AS hours,\n    resources.value['instance_count']::NUMBER     AS instance_count,\n    resources.value['kind']::VARCHAR              AS kind,\n    resources.value['price']::VARCHAR             AS cost,\n    resources.value['name']::VARCHAR              AS resource_name,\n    resources.value['price_per_hour']::FLOAT      AS price_per_hour,\n    resources.value['sku']::VARCHAR               AS sku,\n    TO_TIMESTAMP(source._uploaded_at::INT)        AS _uploaded_at\n  FROM source\n  INNER JOIN LATERAL FLATTEN(input => PARSE_JSON(payload), outer => TRUE) AS dims\n  INNER JOIN LATERAL FLATTEN(input => PARSE_JSON(dims.value), outer => TRUE, mode => 'ARRAY') AS resources\n  WHERE dims.path = 'resources'\n  QUALIFY\n    ROW_NUMBER() OVER (\n      PARTITION BY source.extraction_end_date, source.deployment_id, resources.value['sku']::VARCHAR\n      ORDER BY TO_TIMESTAMP(source._uploaded_at::INT) DESC\n    ) = 1\n)\n\nSELECT *\nFROM parsed", "relation_name": "EMBUCKET.elastic_billing.elastic_billing_resources_by_deployment_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:53.441133Z", "completed_at": "2025-06-09T18:46:53.444530Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:53.476719Z", "completed_at": "2025-06-09T18:46:55.800897Z"}], "thread_id": "Thread-8", "execution_time": 2.3604259490966797, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_ssa_quarterly_aggregated_metrics_for_coverage_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.driveload.ssa_quarterly_aggregated_metrics_for_coverage\n\n)\n\nSELECT\n  agg_key_value::VARCHAR                            AS agg_key_value,\n  metric_name::VARCHAR                              AS metric_name,\n  close_day_of_fiscal_quarter_normalised::NUMBER    AS close_day_of_fiscal_quarter_normalised,\n  close_fiscal_quarter_name::VARCHAR                AS close_fiscal_quarter_name,\n  metric_value::FLOAT                               AS metric_value,\n  total_booked_net_arr::FLOAT                       AS total_booked_net_arr,\n  booked_net_arr::FLOAT                             AS booked_net_arr,\n  metric_coverage::FLOAT                            AS metric_coverage,\n  agg_key_name::VARCHAR                             AS agg_key_name\n\nFROM source", "relation_name": "EMBUCKET.driveload.driveload_ssa_quarterly_aggregated_metrics_for_coverage_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:53.557769Z", "completed_at": "2025-06-09T18:46:53.561090Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:53.561385Z", "completed_at": "2025-06-09T18:46:55.823823Z"}], "thread_id": "Thread-32", "execution_time": 2.267012119293213, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_billing_waterfall_report_with_additional_columns_source", "compiled": true, "compiled_code": "WITH source AS (\n\nSELECT * \nFROM EMBUCKET.driveload.zuora_revenue_billing_waterfall_report_with_additional_columns\n\n)\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.driveload.driveload_zuora_revenue_billing_waterfall_report_with_additional_columns_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.390671Z", "completed_at": "2025-06-09T18:46:55.442886Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.492534Z", "completed_at": "2025-06-09T18:46:55.798186Z"}], "thread_id": "Thread-11", "execution_time": 0.6147181987762451, "adapter_response": {}, "message": "Database Error in model engineering_layout_shift_source (models/sources/engineering/engineering_layout_shift_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,338)..Location(1,345)) })]), args: [Named { name: Ident { value: \"input\", quote_style: None, span: Span(Location(1,346)..Location(1,351)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,355)..Location(1,365)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,366)..Location(1,374)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,377)..Location(1,382)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,386)..Location(1,390)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"data_by_row\", quote_style: None, span: Span(Location(1,395)..Location(1,406)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/engineering/engineering_layout_shift_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.engineering_layout_shift_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n    SELECT * \n    FROM EMBUCKET.engineering_extracts.layout_shift\n    \n), metric_per_row AS (\n\n    SELECT \n      data_by_row.value['datapoints']::ARRAY                       AS datapoints,\n      data_by_row.value['target']::VARCHAR                         AS metric_name,\n      uploaded_at\n    FROM source,\n    LATERAL FLATTEN(input => PARSE_JSON(jsontext), OUTER => True) data_by_row\n\n), data_points_flushed_out AS (\n\n    SELECT\n      SPLIT_PART(metric_name, '.', 13)::VARCHAR                   AS aggregation_name,\n      SPLIT_PART(metric_name, '.', 6)::VARCHAR                    AS metric_name,        \n      data_by_row.value[0]::FLOAT                                 AS metric_value,\n      data_by_row.value[1]::TIMESTAMP                             AS metric_reported_at\n    FROM metric_per_row,\n    LATERAL FLATTEN(input => datapoints, OUTER => True) data_by_row\n    WHERE NULLIF(metric_value::VARCHAR, 'null') IS NOT NULL\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY metric_name, aggregation_name, metric_reported_at ORDER BY uploaded_at DESC) = 1\n\n)\n\nSELECT *\nFROM data_points_flushed_out\nORDER BY metric_reported_at", "relation_name": "EMBUCKET.legacy.engineering_layout_shift_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.405784Z", "completed_at": "2025-06-09T18:46:55.456302Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.509017Z", "completed_at": "2025-06-09T18:46:55.806241Z"}], "thread_id": "Thread-21", "execution_time": 0.6102609634399414, "adapter_response": {}, "message": "Database Error in model engineering_lcp_source (models/sources/engineering/engineering_lcp_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,393)..Location(1,400)) })]), args: [Named { name: Ident { value: \"input\", quote_style: None, span: Span(Location(1,401)..Location(1,406)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,410)..Location(1,420)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,421)..Location(1,429)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,432)..Location(1,437)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,441)..Location(1,445)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"data_by_row\", quote_style: None, span: Span(Location(1,450)..Location(1,461)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/engineering/engineering_lcp_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.engineering_lcp_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n    SELECT * \n    FROM EMBUCKET.engineering_extracts.lcp\n    \n), metric_per_row AS (\n\n    SELECT \n      data_by_row.value['datapoints']::ARRAY                       AS datapoints,\n      data_by_row.value['target']::VARCHAR                         AS metric_name,\n      IFF(SPLIT_PART(metric_name, '.', 3) = 'gitlab', 1, 0)        AS version_offset,\n      uploaded_at\n    FROM source,\n    LATERAL FLATTEN(input => PARSE_JSON(jsontext), OUTER => True) data_by_row\n\n), data_points_flushed_out AS (\n\n    SELECT\n      SPLIT_PART(metric_name, '.', 13 + version_offset)::VARCHAR  AS aggregation_name,\n      SPLIT_PART(metric_name, '.', 5 + version_offset)::VARCHAR   AS metric_name,        \n      data_by_row.value[0]::FLOAT                                 AS metric_value,\n      data_by_row.value[1]::TIMESTAMP                             AS metric_reported_at\n    FROM metric_per_row,\n    LATERAL FLATTEN(input => datapoints, OUTER => True) data_by_row\n    WHERE NULLIF(metric_value::VARCHAR, 'null') IS NOT NULL\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY metric_name, aggregation_name, metric_reported_at ORDER BY uploaded_at DESC) = 1\n\n)\n\nSELECT *\nFROM data_points_flushed_out\nORDER BY metric_reported_at", "relation_name": "EMBUCKET.legacy.engineering_lcp_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.419877Z", "completed_at": "2025-06-09T18:46:55.462036Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.524279Z", "completed_at": "2025-06-09T18:46:55.805298Z"}], "thread_id": "Thread-24", "execution_time": 0.6036839485168457, "adapter_response": {}, "message": "Database Error in model engineering_red_master_stats (models/sources/engineering/engineering_red_master_stats.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,255)..Location(1,262)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,263)..Location(1,268)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,272)..Location(1,282)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,283)..Location(1,291)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,294)..Location(1,299)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,303)..Location(1,307)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,312)..Location(1,313)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/engineering/engineering_red_master_stats.sql", "failures": null, "unique_id": "model.gitlab_snowflake.engineering_red_master_stats", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.engineering_extracts.red_master_stats\n    ORDER BY uploaded_at DESC\n    LIMIT 1\n\n), intermediate AS (\n\n    SELECT d.value as data_by_row\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), outer => true) d\n\n), renamed AS (\n\n    SELECT\n      data_by_row['date']::date       AS commit_date,\n      data_by_row['id']::varchar      AS commit_id\n    FROM intermediate\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.engineering_red_master_stats", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.366513Z", "completed_at": "2025-06-09T18:46:55.426476Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.462452Z", "completed_at": "2025-06-09T18:46:55.855291Z"}], "thread_id": "Thread-27", "execution_time": 0.605539083480835, "adapter_response": {}, "message": "Database Error in model engineering_blocking_time_source (models/sources/engineering/engineering_blocking_time_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,340)..Location(1,347)) })]), args: [Named { name: Ident { value: \"input\", quote_style: None, span: Span(Location(1,348)..Location(1,353)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,357)..Location(1,367)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,368)..Location(1,376)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,379)..Location(1,384)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,388)..Location(1,392)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"data_by_row\", quote_style: None, span: Span(Location(1,397)..Location(1,408)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/engineering/engineering_blocking_time_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.engineering_blocking_time_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n    SELECT * \n    FROM EMBUCKET.engineering_extracts.blocking_time\n    \n), metric_per_row AS (\n\n    SELECT \n      data_by_row.value['datapoints']::ARRAY                       AS datapoints,\n      data_by_row.value['target']::VARCHAR                         AS metric_name,\n      uploaded_at\n    FROM source,\n    LATERAL FLATTEN(input => PARSE_JSON(jsontext), OUTER => True) data_by_row\n\n), data_points_flushed_out AS (\n\n    SELECT\n      SPLIT_PART(metric_name, '.', 14)::VARCHAR                   AS aggregation_name,\n      SPLIT_PART(metric_name, '.', 6)::VARCHAR                    AS metric_name,        \n      data_by_row.value[0]::FLOAT                                 AS metric_value,\n      data_by_row.value[1]::TIMESTAMP                             AS metric_reported_at\n    FROM metric_per_row,\n    LATERAL FLATTEN(input => datapoints, OUTER => True) data_by_row\n    WHERE NULLIF(metric_value::VARCHAR, 'null') IS NOT NULL\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY metric_name, aggregation_name, metric_reported_at ORDER BY uploaded_at DESC) = 1\n\n)\n\nSELECT *\nFROM data_points_flushed_out\nORDER BY metric_reported_at", "relation_name": "EMBUCKET.legacy.engineering_blocking_time_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.386203Z", "completed_at": "2025-06-09T18:46:55.432579Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.488047Z", "completed_at": "2025-06-09T18:46:55.864584Z"}], "thread_id": "Thread-1", "execution_time": 0.6451151371002197, "adapter_response": {}, "message": "Database Error in model ecosystems_document_source (models/sources/ecosystems/ecosystems_document_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,1941)..Location(1,1948)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,1949)..Location(1,1954)) }, arg: Expr(Identifier(Ident { value: \"json_text\", quote_style: None, span: Span(Location(1,1958)..Location(1,1967)) })), operator: RightArrow }], alias: None } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/ecosystems/ecosystems_document_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.ecosystems_document_source", "compiled": true, "compiled_code": "WITH base AS (\n\n  SELECT *\n  FROM EMBUCKET.ecosystems.document\n\n), extracted AS (\n\n  SELECT try_parse_json(jsontext) AS json_text,\n         uploaded_at              AS uploaded_at\n    FROM base\n\n), formatted AS (\n\n  SELECT VALUE:\"accountName\"::VARCHAR                            AS account_name,\n         VALUE:\"collaborators\"                                   AS collaborators,\n         VALUE:\"crmAccount\":\"id\"::VARCHAR                        AS crm_account_id,\n         VALUE:\"crmAccount\":\"name\"::VARCHAR                      AS crm_account_name,\n         VALUE:\"crmAccount\":\"ownerEmail\"::VARCHAR                AS crm_account_owner_email,\n         VALUE:\"crmAccount\":\"phone\"::VARCHAR                     AS crm_account_phone,\n         VALUE:\"crmOpportunity\":\"id\"::VARCHAR                    AS crm_opportunity_id,\n         VALUE:\"crmOpportunity\":\"name\"::VARCHAR                  AS crm_opportunity_name,\n         VALUE:\"crmOpportunity\":\"ownerEmail\"::VARCHAR            AS crm_opportunity_owner_email,\n         VALUE:\"crmOpportunity\":\"phone\"::VARCHAR                 AS crm_opportunity_phone,\n         VALUE:\"demo\"::BOOLEAN                                   AS is_demo,\n         VALUE:\"documentName\"::VARCHAR                           AS document_name,\n         VALUE:\"documentStatus\"::VARCHAR                         AS document_status,\n         VALUE:\"id\"::NUMBER                                      AS document_id,\n         VALUE:\"updateHistory\":\"createdAt\"::DATE                AS update_history_created_at,\n         VALUE:\"updateHistory\":\"createdById\"::VARCHAR           AS update_history_created_by_id,\n         VALUE:\"updateHistory\":\"createdByUsername\"::VARCHAR     AS update_history_created_by_username,\n         VALUE:\"updateHistory\":\"lastUpdatedAt\"::DATE            AS update_history_last_updated_at,\n         VALUE:\"updateHistory\":\"lastUpdatedById\"::VARCHAR       AS update_history_updated_by_id,\n         VALUE:\"updateHistory\":\"lastUpdatedByUsername\"::VARCHAR AS update_history_updated_by_username,\n         uploaded_at::TIMESTAMP                                  AS uploaded_at\n  FROM extracted,\n  LATERAL FLATTEN(INPUT => json_text)\n\n), deduped AS (\n\n  SELECT *\n  FROM formatted\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY document_id ORDER BY uploaded_at DESC) = 1\n\n)\n\n  SELECT *\n  FROM deduped", "relation_name": "EMBUCKET.ecosystems.ecosystems_document_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.370993Z", "completed_at": "2025-06-09T18:46:55.427549Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.472102Z", "completed_at": "2025-06-09T18:46:55.863865Z"}], "thread_id": "Thread-15", "execution_time": 0.6759448051452637, "adapter_response": {}, "message": "Database Error in model ecosystems_collaborative_value_assessment_source (models/sources/ecosystems/ecosystems_collaborative_value_assessment_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,1571)..Location(1,1578)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,1579)..Location(1,1584)) }, arg: Expr(Identifier(Ident { value: \"json_text\", quote_style: None, span: Span(Location(1,1588)..Location(1,1597)) })), operator: RightArrow }], alias: None } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/ecosystems/ecosystems_collaborative_value_assessment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.ecosystems_collaborative_value_assessment_source", "compiled": true, "compiled_code": "WITH base AS (\n\n  SELECT *\n  FROM EMBUCKET.ecosystems.cva\n\n), extracted AS (\n\n  SELECT try_parse_json(jsontext) AS json_text,\n         uploaded_at              AS uploaded_at\n    FROM base\n\n), formatted AS (\n\n  SELECT VALUE:\"Account\"::VARCHAR                       AS account_name,\n         VALUE:\"Active External Collaborators\"::NUMBER  AS active_external_collaborator,\n         VALUE:\"Active Internal Collaborators\"::NUMBER  AS active_internal_collaborator,\n         VALUE:\"Active Partner Collaborators\"::NUMBER   AS active_partner_collaborator,\n         VALUE:\"CRM Opp ID\"::VARCHAR                    AS crm_opportunity_id,\n         VALUE:\"Collaborators\"::VARCHAR                 AS collaborators,\n         VALUE:\"Count of VDs Modified\"::NUMBER          AS count_of_value_drivers_modified,\n         VALUE:\"Discovery Modified\"::BOOLEAN            AS is_discovery_modified,\n         VALUE:\"Document ID\"::NUMBER                    AS document_id,\n         VALUE:\"Effectiveness Score\"::FLOAT             AS effectiveness_score,\n         VALUE:\"Includes Discovery\"::BOOLEAN            AS does_include_discovery,\n         VALUE:\"Investment Modified\"::BOOLEAN           AS is_investment_modified,\n         VALUE:\"Is Demo\"::BOOLEAN                       AS is_demo,\n         NULLIF(VALUE:\"Latest Edit Date\",'')::TIMESTAMP AS updated_at,\n         VALUE:\"Latest Editor\"::VARCHAR                 AS latest_editor,\n         VALUE:\"Model Edits\"::NUMBER                    AS models_edits,\n         VALUE:\"Presentation Name\"::VARCHAR             AS presentation_name,\n         VALUE:\"Viewer Logs\"::VARCHAR                   AS viewer_logs,\n         uploaded_at::TIMESTAMP                         AS uploaded_at\n  FROM extracted,\n  LATERAL FLATTEN(INPUT => json_text)\n\n), deduped AS (\n\n  SELECT *\n  FROM formatted\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY account_name, presentation_name ORDER BY uploaded_at DESC) = 1\n\n)\n\n  SELECT *\n  FROM deduped", "relation_name": "EMBUCKET.ecosystems.ecosystems_collaborative_value_assessment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.359456Z", "completed_at": "2025-06-09T18:46:55.418273Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.456620Z", "completed_at": "2025-06-09T18:46:55.864940Z"}], "thread_id": "Thread-14", "execution_time": 0.6573028564453125, "adapter_response": {}, "message": "Database Error in model elastic_billing_resources_source (models/sources/elastic_billing/elastic_billing_resources_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,1092)..Location(1,1099)) })]), args: [Named { name: Ident { value: \"input\", quote_style: None, span: Span(Location(1,1100)..Location(1,1105)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,1109)..Location(1,1119)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"payload\", quote_style: None, span: Span(Location(1,1120)..Location(1,1127)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,1130)..Location(1,1135)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,1139)..Location(1,1143)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"dims\", quote_style: None, span: Span(Location(1,1148)..Location(1,1152)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/elastic_billing/elastic_billing_resources_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.elastic_billing_resources_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.elasticsearch_billing.itemized_costs\n),\n\nparsed AS (\n  SELECT\n    source.extraction_start_date,\n    source.extraction_end_date,\n    resources.value['period']['start']::TIMESTAMP AS resource_start_date,\n    resources.value['period']['end']::TIMESTAMP   AS resource_end_date,\n    resources.value['hours']::FLOAT               AS hours,\n    resources.value['instance_count']::NUMBER     AS instance_count,\n    resources.value['kind']::VARCHAR              AS kind,\n    resources.value['price']::VARCHAR             AS cost,\n    resources.value['name']::VARCHAR              AS name,\n    resources.value['price_per_hour']::FLOAT      AS price_per_hour,\n    resources.value['sku']::VARCHAR               AS sku,\n    TO_TIMESTAMP(source._uploaded_at::INT)        AS _uploaded_at\n  FROM source\n  INNER JOIN LATERAL FLATTEN(input => PARSE_JSON(payload), outer => TRUE) AS dims\n  INNER JOIN LATERAL FLATTEN(input => PARSE_JSON(dims.value), outer => TRUE, mode => 'ARRAY') AS resources\n  WHERE dims.path = 'resources'\n  QUALIFY\n    ROW_NUMBER() OVER (\n      PARTITION BY source.extraction_end_date, resources.value['sku']::VARCHAR\n      ORDER BY TO_TIMESTAMP(source._uploaded_at::INT) DESC\n    ) = 1\n)\n\nSELECT *\nFROM parsed", "relation_name": "EMBUCKET.elastic_billing.elastic_billing_resources_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.342087Z", "completed_at": "2025-06-09T18:46:55.394552Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.438811Z", "completed_at": "2025-06-09T18:46:55.879724Z"}], "thread_id": "Thread-4", "execution_time": 0.6714680194854736, "adapter_response": {}, "message": "Database Error in model elastic_billing_data_transfer_by_deployment_source (models/sources/elastic_billing/elastic_billing_data_transfer_by_deployment_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,1650)..Location(1,1657)) })]), args: [Named { name: Ident { value: \"input\", quote_style: None, span: Span(Location(1,1658)..Location(1,1663)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,1667)..Location(1,1677)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"payload\", quote_style: None, span: Span(Location(1,1678)..Location(1,1685)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,1688)..Location(1,1693)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,1697)..Location(1,1701)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"dims\", quote_style: None, span: Span(Location(1,1706)..Location(1,1710)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/elastic_billing/elastic_billing_data_transfer_by_deployment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.elastic_billing_data_transfer_by_deployment_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.elasticsearch_billing.itemized_costs_by_deployment\n),\n\nparsed AS (\n  SELECT\n    source.deployment_id,\n    source.extraction_start_date,\n    source.extraction_end_date,\n    CASE storage_and_transfer.value['sku']::VARCHAR\n      WHEN 'gcp.data-transfer-in' THEN 'gcp_data_transfer_in'\n      WHEN 'gcp.data-transfer-inter-node' THEN 'gcp_data_transfer_inter_node'\n      WHEN 'gcp.data-transfer-out' THEN 'gcp_data_transfer_out'\n      WHEN 'gcp.snapshot-api-1k' THEN 'gcp_snapshot_storage_api'\n      WHEN 'gcp.snapshot-storage' THEN 'gcp_snapshot_storage'\n    END                                                                AS charge_type,\n    storage_and_transfer.value['cost']::FLOAT                          AS cost,\n    storage_and_transfer.value['name']::VARCHAR                        AS resource_name,\n    storage_and_transfer.value['quantity']['value']::FLOAT             AS resource_quantity_value,\n    storage_and_transfer.value['quantity']['formatted_value']::VARCHAR AS formated_quantity_value,\n    storage_and_transfer.value['rate']['value']::FLOAT                 AS rate_value,\n    storage_and_transfer.value['rate']['formatted_value']::VARCHAR     AS formated_rate_value,\n    storage_and_transfer.value['sku']::VARCHAR                         AS sku,\n    storage_and_transfer.value['type']::VARCHAR                        AS type,\n    TO_TIMESTAMP(source._uploaded_at::INT)                             AS _uploaded_at\n  FROM source\n  INNER JOIN LATERAL FLATTEN(input => PARSE_JSON(payload), outer => TRUE) AS dims\n  INNER JOIN LATERAL FLATTEN(input => PARSE_JSON(dims.value), outer => TRUE, mode => 'ARRAY') AS storage_and_transfer\n  WHERE dims.path = 'data_transfer_and_storage'\n  QUALIFY\n    ROW_NUMBER() OVER (\n      PARTITION BY source.extraction_end_date, source.deployment_id, storage_and_transfer.value['sku']::VARCHAR\n      ORDER BY TO_TIMESTAMP(source._uploaded_at::INT) DESC\n    ) = 1\n)\n\nSELECT *\nFROM parsed", "relation_name": "EMBUCKET.elastic_billing.elastic_billing_data_transfer_by_deployment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.334763Z", "completed_at": "2025-06-09T18:46:55.390205Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.427935Z", "completed_at": "2025-06-09T18:46:55.887405Z"}], "thread_id": "Thread-13", "execution_time": 0.6777269840240479, "adapter_response": {}, "message": "Database Error in model engineering_development_team_members (models/sources/engineering/engineering_development_team_members.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,268)..Location(1,275)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,276)..Location(1,281)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,285)..Location(1,295)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,296)..Location(1,304)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,307)..Location(1,312)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,316)..Location(1,320)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,325)..Location(1,326)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/engineering/engineering_development_team_members.sql", "failures": null, "unique_id": "model.gitlab_snowflake.engineering_development_team_members", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.engineering_extracts.development_team_members\n    ORDER BY uploaded_at DESC\n    LIMIT 1\n\n), flattened AS (\n\n    SELECT d.value as data_by_row\n    FROM source,\n    LATERAL FLATTEN(INPUT => PARSE_JSON(jsontext), outer => true) d\n\n), renamed AS (\n\n    SELECT\n      data_by_row['country']::VARCHAR                       AS country,\n      data_by_row['gitlab']::VARCHAR                        AS gitlab_handle, \n      data_by_row['gitlabId']::VARCHAR                      AS gitlab_id,\n      data_by_row['isBackendMaintainer']::BOOLEAN           AS is_backend_maintainer,\n      data_by_row['isBackendTraineeMaintainer']::BOOLEAN    AS is_backend_trainee_maintainer,\n      data_by_row['isDatabaseMaintainer']::BOOLEAN          AS is_database_maintainer,\n      data_by_row['isDatabaseTraineeMaintainer']::BOOLEAN   AS is_database_trainee_maintainer,\n      data_by_row['isFrontendMaintainer']::BOOLEAN          AS is_frontend_maintainer,\n      data_by_row['isFrontendTraineeMaintainer']::BOOLEAN   AS is_frontend_trainee_maintainer,\n      data_by_row['isManager']::BOOLEAN                     AS is_manager,\n      data_by_row['level']::VARCHAR                         AS team_member_level,\n      data_by_row['locality']::VARCHAR                      AS locality,\n      data_by_row['location_factor']::FLOAT                 AS location_factor,\n      data_by_row['matchName']::VARCHAR                     AS match_name,\n      data_by_row['name']::VARCHAR                          AS name,\n      data_by_row['section']::VARCHAR                       AS development_section,\n      data_by_row['start_date']::DATE                       AS start_date,\n      data_by_row['team']::VARCHAR                          AS team,\n      data_by_row['technology']::VARCHAR                    AS technology_group\n    FROM flattened\n\n)\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.engineering_development_team_members", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.376435Z", "completed_at": "2025-06-09T18:46:55.432116Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.477513Z", "completed_at": "2025-06-09T18:46:55.938011Z"}], "thread_id": "Thread-23", "execution_time": 0.6532638072967529, "adapter_response": {}, "message": "Database Error in model engineering_commit_stats (models/sources/engineering/engineering_commit_stats.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,247)..Location(1,254)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,255)..Location(1,260)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,264)..Location(1,274)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,275)..Location(1,283)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,286)..Location(1,291)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,295)..Location(1,299)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,304)..Location(1,305)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/engineering/engineering_commit_stats.sql", "failures": null, "unique_id": "model.gitlab_snowflake.engineering_commit_stats", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.engineering_extracts.commit_stats\n    ORDER BY uploaded_at DESC\n    LIMIT 1\n\n), intermediate AS (\n\n    SELECT d.value as data_by_row\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), outer => true) d\n\n), renamed AS (\n\n    SELECT\n      data_by_row['backendCoverage']::float           AS backend_coverage,\n      data_by_row['backendCoverageAbsolute']::NUMBER  AS backend_coverage_absolute,\n      data_by_row['backendCoverageTotal']::NUMBER     AS backend_coverage_total,\n      data_by_row['commitDate']::date                 AS commit_date,\n      data_by_row['jestCoverage']::float              AS jest_coverage,\n      data_by_row['jestCoverageAbsolute']::NUMBER     AS jest_coverage_absolute,\n      data_by_row['jestCoverageTotal']::NUMBER        AS jest_coverage_total,\n      data_by_row['karmaCoverage']::float             AS karma_coverage,\n      data_by_row['karmaCoverageAbsolute']::NUMBER    AS karma_coverage_absolute,\n      data_by_row['karmaCoverageTotal']::NUMBER       AS karma_coverage_total\n    FROM intermediate\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.engineering_commit_stats", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.311340Z", "completed_at": "2025-06-09T18:46:55.350391Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.395772Z", "completed_at": "2025-06-09T18:46:55.826193Z"}], "thread_id": "Thread-16", "execution_time": 0.6830518245697021, "adapter_response": {}, "message": "Database Error in model elastic_billing_data_transfer_source (models/sources/elastic_billing/elastic_billing_data_transfer_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,1598)..Location(1,1605)) })]), args: [Named { name: Ident { value: \"input\", quote_style: None, span: Span(Location(1,1606)..Location(1,1611)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,1615)..Location(1,1625)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"payload\", quote_style: None, span: Span(Location(1,1626)..Location(1,1633)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,1636)..Location(1,1641)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,1645)..Location(1,1649)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"dims\", quote_style: None, span: Span(Location(1,1654)..Location(1,1658)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/elastic_billing/elastic_billing_data_transfer_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.elastic_billing_data_transfer_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.elasticsearch_billing.itemized_costs\n),\n\nparsed AS (\n  SELECT\n    source.extraction_start_date,\n    source.extraction_end_date,\n    CASE resources_and_transfer.value['sku']::VARCHAR\n      WHEN 'gcp.data-transfer-in' THEN 'gcp_data_transfer_in'\n      WHEN 'gcp.data-transfer-inter-node' THEN 'gcp_data_transfer_inter_node'\n      WHEN 'gcp.data-transfer-out' THEN 'gcp_data_transfer_out'\n      WHEN 'gcp.snapshot-api-1k' THEN 'gcp_snapshot_storage_api'\n      WHEN 'gcp.snapshot-storage' THEN 'gcp_snapshot_storage'\n    END                                                                  AS charge_type,\n    resources_and_transfer.value['cost']::FLOAT                          AS cost,\n    resources_and_transfer.value['name']::VARCHAR                        AS resource_name,\n    resources_and_transfer.value['quantity']['value']::FLOAT             AS resource_quantity_value,\n    resources_and_transfer.value['quantity']['formatted_value']::VARCHAR AS formated_quantity_value,\n    resources_and_transfer.value['rate']['value']::FLOAT                 AS rate_value,\n    resources_and_transfer.value['rate']['formatted_value']::VARCHAR     AS formated_rate_value,\n    resources_and_transfer.value['sku']::VARCHAR                         AS sku,\n    resources_and_transfer.value['type']::VARCHAR                        AS type,\n    TO_TIMESTAMP(source._uploaded_at::INT)                               AS _uploaded_at\n  FROM source\n  INNER JOIN LATERAL FLATTEN(input => PARSE_JSON(payload), outer => TRUE) AS dims\n  INNER JOIN LATERAL FLATTEN(input => PARSE_JSON(dims.value), outer => TRUE, mode => 'ARRAY') AS resources_and_transfer\n  WHERE dims.path = 'data_transfer_and_storage'\n  QUALIFY\n    ROW_NUMBER() OVER (\n      PARTITION BY source.extraction_end_date, resources_and_transfer.value['sku']::VARCHAR\n      ORDER BY TO_TIMESTAMP(source._uploaded_at::INT) DESC\n    ) = 1\n)\n\nSELECT *\nFROM parsed", "relation_name": "EMBUCKET.elastic_billing.elastic_billing_data_transfer_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.432998Z", "completed_at": "2025-06-09T18:46:55.503947Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.543425Z", "completed_at": "2025-06-09T18:46:55.961068Z"}], "thread_id": "Thread-7", "execution_time": 0.6368231773376465, "adapter_response": {}, "message": "Database Error in model fabrication_stats_source (models/sources/e2e_metrics/fabrication_stats_source.sql)\n  000200: DataFusion error: Schema error: No field named timestamp. Valid fields are source.payload, source.uploaded_at.\n  compiled code at target/run/gitlab_snowflake/models/sources/e2e_metrics/fabrication_stats_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.fabrication_stats_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT\n    PARSE_JSON(payload) AS payload,\n    uploaded_at\n  FROM EMBUCKET.e2e_metrics.fabrication_stats\n\n),\n\nfinal AS (\n\n  SELECT\n    payload:fields.fabrication_time::NUMBER  AS fabrication_time,\n    payload:fields.info::VARCHAR             AS info,\n    payload:fields.job_url::VARCHAR          AS job_url,\n    payload:fields.timestamp::VARCHAR        AS timestamp,\n    payload:name::VARCHAR                    AS name,\n    payload:time::TIMESTAMP                  AS time,\n    payload:tags.fabrication_method::VARCHAR AS tags_fabrication_method,\n    payload:tags.http_method::VARCHAR        AS tags_http_method,\n    payload:tags.merge_request::BOOLEAN      AS is_merge_request,\n    payload:tags.resource::VARCHAR           AS tags_resource,\n    payload:tags.run_type::VARCHAR           AS tags_run_type,\n    uploaded_at                              AS uploaded_at,\n    md5(cast(coalesce(cast(timestamp as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(tags_resource as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(tags_fabrication_method as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(tags_http_method as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(tags_run_type as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_merge_request as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(fabrication_time as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(info as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(job_url as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(uploaded_at as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS combined_composite_keys\n  FROM source\n)\n\nSELECT *\nFROM final\nQUALIFY ROW_NUMBER() OVER (PARTITION BY combined_composite_keys ORDER BY uploaded_at DESC) = 1", "relation_name": "EMBUCKET.e2e_metrics.fabrication_stats_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.422752Z", "completed_at": "2025-06-09T18:46:55.466317Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.528646Z", "completed_at": "2025-06-09T18:46:55.888226Z"}], "thread_id": "Thread-25", "execution_time": 0.6246330738067627, "adapter_response": {}, "message": "Database Error in model events_source (models/sources/observability/events_source.sql)\n  000200: DataFusion error: Error during planning: table 'monte_carlo.prod_insights.events' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/observability/events_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.events_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM MONTE_CARLO.prod_insights.events\n\n), renamed AS (\n\n    SELECT\n     *\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.events_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.926652Z", "completed_at": "2025-06-09T18:46:55.958928Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.975383Z", "completed_at": "2025-06-09T18:46:57.457259Z"}], "thread_id": "Thread-2", "execution_time": 1.6982409954071045, "adapter_response": {}, "message": "Database Error in model field_cleanup_suggestions_source (models/sources/observability/field_cleanup_suggestions_source.sql)\n  000200: DataFusion error: Error during planning: table 'monte_carlo.prod_insights.field_cleanup_suggestions' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/observability/field_cleanup_suggestions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.field_cleanup_suggestions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM MONTE_CARLO.prod_insights.field_cleanup_suggestions\n\n), renamed AS (\n\n    SELECT\n     *\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.field_cleanup_suggestions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.997796Z", "completed_at": "2025-06-09T18:46:56.010688Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.017207Z", "completed_at": "2025-06-09T18:46:57.468145Z"}], "thread_id": "Thread-10", "execution_time": 1.4895758628845215, "adapter_response": {}, "message": "Database Error in model ga360_session_hit_custom_dimension_source (models/sources/google_analytics_360/ga360_session_hit_custom_dimension_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,302)..Location(1,314)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/google_analytics_360/ga360_session_hit_custom_dimension_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.ga360_session_hit_custom_dimension_source", "compiled": true, "compiled_code": "WITH source AS (\n\n\tSELECT *\n\tFROM EMBUCKET.google_analytics_360_fivetran.session_hit_custom_dimension\n\n), renamed AS (\n\n    SELECT\n      --Keys\n      visit_id::FLOAT                              AS visit_id,\n      visitor_id::VARCHAR                          AS visitor_id,\n\n      --Info\n      visit_start_time::TIMESTAMP_TZ               AS visit_start_time,\n      hit_number::NUMBER                           AS hit_number,\n      index::FLOAT                                 AS dimension_index,\n      value::VARCHAR                               AS dimension_value,\n      _fivetran_synced::TIMESTAMP_TZ               AS fivetran_synced\n\n    FROM source\n\n)\n\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.google_analytics_360.ga360_session_hit_custom_dimension_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.987231Z", "completed_at": "2025-06-09T18:46:55.996404Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.006901Z", "completed_at": "2025-06-09T18:46:57.451392Z"}], "thread_id": "Thread-18", "execution_time": 1.540498971939087, "adapter_response": {}, "message": "Database Error in model ga360_session_custom_dimension_source (models/sources/google_analytics_360/ga360_session_custom_dimension_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,365)..Location(1,377)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/google_analytics_360/ga360_session_custom_dimension_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.ga360_session_custom_dimension_source", "compiled": true, "compiled_code": "WITH source AS (\n\n\tSELECT *\n\tFROM EMBUCKET.google_analytics_360_fivetran.ga_session_custom_dimension\n\n), renamed AS(\n\n\tSELECT\n\t--Keys\n\t  index::FLOAT                      AS dimension_index,\n\t  visit_id::FLOAT                   AS visit_id,\n\t  visitor_id::VARCHAR               AS visitor_id,\n\t  \n\t  --Info\n\t  value::VARCHAR                    AS dimension_value,\n\t  visit_start_time::TIMESTAMP_TZ    AS visit_start_time\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.google_analytics_360.ga360_session_custom_dimension_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.917777Z", "completed_at": "2025-06-09T18:46:55.958654Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.968631Z", "completed_at": "2025-06-09T18:46:57.465096Z"}], "thread_id": "Thread-17", "execution_time": 1.7255210876464844, "adapter_response": {}, "message": "Database Error in model feature_flags_source (models/sources/gitlab_data_yaml/feature_flags_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,396)..Location(1,403)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,404)..Location(1,409)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,413)..Location(1,423)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,424)..Location(1,432)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,435)..Location(1,440)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,444)..Location(1,448)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,453)..Location(1,454)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/feature_flags_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.feature_flags_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *,\n      RANK() OVER (PARTITION BY DATE_TRUNC('day', uploaded_at) ORDER BY uploaded_at DESC) AS rank\n    FROM EMBUCKET.gitlab_data_yaml.feature_flags\n    ORDER BY uploaded_at DESC\n\n), intermediate AS (\n\n    SELECT d.value                          AS data_by_row,\n    date_trunc('day', uploaded_at)::date    AS snapshot_date,\n    rank\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n    SELECT\n      data_by_row['name']::VARCHAR              AS name,\n      data_by_row['type']::VARCHAR              AS type,\n      data_by_row['milestone']::VARCHAR         AS milestone,\n      data_by_row['default_enabled']::VARCHAR   AS is_default_enabled,\n      data_by_row['group']::VARCHAR             AS gitlab_group,\n      data_by_row['introduced_by_url']::VARCHAR AS introduced_by_merge_request_url,\n      data_by_row['rollout_issue_url']::VARCHAR AS rollout_issue_url,\n      snapshot_date,\n      rank\n    FROM intermediate\n\n), casting AS (\n\n    SELECT\n      name,\n      type,\n      milestone,\n      TRY_TO_BOOLEAN(is_default_enabled) AS is_default_enabled,\n      gitlab_group,\n      introduced_by_merge_request_url,\n      rollout_issue_url,\n      snapshot_date,\n      rank\n    FROM renamed\n)\n\nSELECT *\nFROM casting", "relation_name": "EMBUCKET.gitlab_data_yaml.feature_flags_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.806636Z", "completed_at": "2025-06-09T18:46:56.867756Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.914306Z", "completed_at": "2025-06-09T18:46:57.616909Z"}], "thread_id": "Thread-21", "execution_time": 0.8515341281890869, "adapter_response": {}, "message": "Database Error in model geozones_yaml_source (models/sources/gitlab_data_yaml/geozones_yaml_source.sql)\n  000200: DataFusion error: Schema error: No field named day. Valid fields are embucket.gitlab_data_yaml.geo_zones.jsontext, embucket.gitlab_data_yaml.geo_zones.uploaded_at.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/geozones_yaml_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.geozones_yaml_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      jsontext,\n      DATE_TRUNC(day, uploaded_at) AS uploaded_at,\n      RANK() OVER (PARTITION BY DATE_TRUNC('day', uploaded_at) ORDER BY uploaded_at DESC) AS rank\n    FROM EMBUCKET.gitlab_data_yaml.geo_zones\n    ORDER BY uploaded_at DESC\n\n), intermediate AS (\n\n    SELECT \n      geozones.value['title']::VARCHAR                                 AS geozone_title, \n      geozones.value['factor']::VARCHAR                                AS geozone_factor, \n      geozones.index                                                   AS geozone_index,\n      additional_fields.key::VARCHAR                                   AS info_key,\n      field_info.value::VARCHAR                                        AS field_value,\n      IFF(uploaded_at = '2021-01-04', '2021-01-01', uploaded_at)       AS uploaded_at\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(null), OUTER => TRUE) geozones,\n    LATERAL FLATTEN(INPUT => parse_json(null), OUTER => TRUE) additional_fields,\n    TABLE(FLATTEN(input => additional_fields.value, RECURSIVE => TRUE))  field_info\n\n), unioned AS (\n\n    SELECT DISTINCT\n      geozone_title,\n      geozone_factor,\n      'United States'              AS country,\n      field_value                  AS state_or_province,\n      uploaded_at\n    FROM intermediate\n    WHERE info_key IN ('states_or_provinces')\n\n    UNION ALL \n\n    SELECT DISTINCT\n      geozone_title,\n      geozone_factor,\n      field_value                 AS country,\n      NULL                        AS state_or_province,\n      uploaded_at\n    FROM intermediate\n    WHERE info_key IN ('countries')  \n  \n)\n\nSELECT \n  md5(cast(coalesce(cast(geozone_title as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(geozone_factor as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(country as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(state_or_province as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(geozone_factor as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))        AS unique_key,\n  unioned.*\nFROM unioned", "relation_name": "EMBUCKET.gitlab_data_yaml.geozones_yaml_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.801481Z", "completed_at": "2025-06-09T18:46:56.846028Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.907578Z", "completed_at": "2025-06-09T18:46:57.633202Z"}], "thread_id": "Thread-32", "execution_time": 0.8561182022094727, "adapter_response": {}, "message": "Database Error in model ga360_session_source (models/sources/google_analytics_360/ga360_session_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,263)..Location(1,275)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/google_analytics_360/ga360_session_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.ga360_session_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.google_analytics_360_fivetran.ga_session\n\n), renamed AS(\n\n    SELECT\n      --Keys\n      visit_id::FLOAT                               AS visit_id, \n      visitor_id::VARCHAR                           AS visitor_id,\n      visit_start_time::TIMESTAMP_TZ                AS visit_start_time, \n\n      --Info\n      visit_start_time::DATE                        AS session_date, \n      date::DATE                                    AS export_date,\n      client_id::VARCHAR                            AS client_id,      \n      visit_number::FLOAT                           AS visit_number,\n      channel_grouping::VARCHAR                     AS channel_grouping,\n      total_visits::FLOAT                           AS total_visits,\n      total_pageviews::FLOAT                        AS total_pageviews,\n      total_screenviews::FLOAT                      AS total_screenviews,\n      total_unique_screenviews::FLOAT               AS total_unique_screenviews,\n      total_hits::FLOAT                             AS total_hits,\n      total_new_visits::FLOAT                       AS total_new_visits,\n      total_time_on_screen::FLOAT                   AS total_time_on_screen,\n      total_time_on_site::FLOAT                     AS total_time_on_site,\n      traffic_source_source::VARCHAR                AS traffic_source,\n      traffic_source_referral_path::VARCHAR         AS traffic_source_referral_path,\n      traffic_source_campaign::VARCHAR              AS traffic_source_campaign,\n      traffic_source_medium::VARCHAR                AS traffic_source_medium,\n      traffic_source_keyword::VARCHAR               AS traffic_source_keyword,\n      device_device_category::VARCHAR               AS device_category,\n      device_browser::VARCHAR                       AS device_browser,\n      device_browser_version::VARCHAR               AS device_browser_version,\n      device_browser_size::VARCHAR                  AS device_browser_size,\n      device_operating_system::VARCHAR              AS device_operating_system,\n      device_operating_system_version::VARCHAR      AS device_operating_system_version,\n      geo_network_continent::VARCHAR                AS geo_network_continent,\n      geo_network_sub_continent::VARCHAR            AS geo_network_sub_continent,\n      geo_network_country::VARCHAR                  AS geo_network_country,\n      geo_network_city::VARCHAR                     AS geo_network_city\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.google_analytics_360.ga360_session_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.885119Z", "completed_at": "2025-06-09T18:46:56.950235Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.989316Z", "completed_at": "2025-06-09T18:46:58.164901Z"}], "thread_id": "Thread-11", "execution_time": 1.3836569786071777, "adapter_response": {}, "message": "Database Error in model geozones_yaml_flatten_source (models/sources/gitlab_data_yaml/geozones_yaml_flatten_source.sql)\n  000200: DataFusion error: Schema error: No field named valid_to. Valid fields are source.jsontext, source.uploaded_at, source.lead_uploaded_at, source.max_uploaded_at.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/geozones_yaml_flatten_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.geozones_yaml_flatten_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n      jsontext,\n      uploaded_at,\n      LEAD(uploaded_at,1) OVER (ORDER BY uploaded_at) AS lead_uploaded_at,\n      MAX(uploaded_at) OVER ()                        AS max_uploaded_at\n    FROM EMBUCKET.gitlab_data_yaml.geo_zones\n\n), grouped AS (\n        /*\n        Reducing to only the changed values to reduce processing load\n        and create a contiguious range of data.\n        */\n        \n      SELECT DISTINCT\n        jsontext,\n        MIN(uploaded_at) OVER (PARTITION BY jsontext)      AS valid_from,\n        MAX(lead_uploaded_at) OVER (PARTITION BY jsontext) AS valid_to,\n        IFF(valid_to = max_uploaded_at, TRUE, FALSE)       AS is_current\n      FROM source\n\n), geozones AS (\n\n      SELECT\n        valid_from,\n        valid_to,\n        is_current,\n        geozones.value['title']::VARCHAR               AS geozone_title,\n        geozones.value['factor']::NUMBER(6, 3)         AS geozone_factor,\n        geozones.value['countries']::VARIANT           AS geozone_countries,\n        geozones.value['states_or_provinces']::VARIANT AS geozone_states_or_provinces\n      FROM grouped\n      INNER JOIN LATERAL FLATTEN(INPUT => PARSE_JSON(jsontext), OUTER => TRUE) AS geozones\n\n), countries AS (\n\n      SELECT\n        *,\n        countries.value::VARCHAR AS country\n      FROM geozones\n      INNER JOIN LATERAL FLATTEN(INPUT => PARSE_JSON(geozone_countries), OUTER => TRUE) AS countries\n\n), states_or_provinces AS (\n\n      SELECT\n        *,\n        states_or_provinces.value::VARCHAR AS state_or_province\n      FROM countries\n      INNER JOIN LATERAL FLATTEN(INPUT => PARSE_JSON(geozone_states_or_provinces), OUTER => TRUE) AS states_or_provinces\n\n)\n\n  SELECT\n    valid_from,\n    valid_to,\n    is_current,\n    geozone_title,\n    geozone_factor,\n    country,\n    state_or_province\n  FROM states_or_provinces", "relation_name": "EMBUCKET.gitlab_data_yaml.geozones_yaml_flatten_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:52.621321Z", "completed_at": "2025-06-09T18:46:52.625675Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:52.626001Z", "completed_at": "2025-06-09T18:46:59.432748Z"}], "thread_id": "Thread-12", "execution_time": 6.8131420612335205, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_ssa_coverage_fitted_curves_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.driveload.ssa_coverage_fitted_curves\n\n)\n\nSELECT\n  key_agg_day::VARCHAR                             AS key_agg_day,\n  agg_key_name::VARCHAR                            AS agg_key_name,\n  agg_key_value::VARCHAR                           AS agg_key_value,\n  close_day_of_fiscal_quarter_normalised::FLOAT    AS close_day_of_fiscal_quarter_normalised,\n  bookings_linearity::FLOAT                        AS bookings_linearity,\n  open_1plus_net_arr_coverage::FLOAT               AS open_1plus_net_arr_coverage,\n  open_3plus_net_arr_coverage::FLOAT               AS open_3plus_net_arr_coverage,\n  open_4plus_net_arr_coverage::FLOAT               AS open_4plus_net_arr_coverage,\n  rq_plus_1_open_1plus_net_arr_coverage::FLOAT     AS rq_plus_1_open_1plus_net_arr_coverage,\n  rq_plus_1_open_3plus_net_arr_coverage::FLOAT     AS rq_plus_1_open_3plus_net_arr_coverage,\n  rq_plus_1_open_4plus_net_arr_coverage::FLOAT     AS rq_plus_1_open_4plus_net_arr_coverage,\n  rq_plus_2_open_1plus_net_arr_coverage::FLOAT     AS rq_plus_2_open_1plus_net_arr_coverage,\n  rq_plus_2_open_3plus_net_arr_coverage::FLOAT     AS rq_plus_2_open_3plus_net_arr_coverage,\n  rq_plus_2_open_4plus_net_arr_coverage::FLOAT     AS rq_plus_2_open_4plus_net_arr_coverage\n  \nFROM source", "relation_name": "EMBUCKET.driveload.driveload_ssa_coverage_fitted_curves_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.468706Z", "completed_at": "2025-06-09T18:46:55.539155Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.561796Z", "completed_at": "2025-06-09T18:46:59.509932Z"}], "thread_id": "Thread-22", "execution_time": 4.139035940170288, "adapter_response": {}, "message": "Database Error in model facebook_ads_ad_history_source (models/sources/facebook_ads/facebook_ads_ad_history_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/facebook_ads/facebook_ads_ad_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.facebook_ads_ad_history_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.facebook_ads.ad_history\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER                  AS ad_id,\n    updated_time::TIMESTAMP     AS updated_time,\n    account_id::NUMBER          AS account_id,\n    campaign_id::NUMBER         AS campaign_id,\n    creative_id::NUMBER         AS creative_id,\n    name::VARCHAR               AS ad_name,\n    status::VARCHAR             AS ad_status,\n    ad_set_id::NUMBER           AS ad_set_id,\n    _fivetran_synced::TIMESTAMP AS _fivetran_synced\n  FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.facebook_ads.facebook_ads_ad_history_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:54.371742Z", "completed_at": "2025-06-09T18:46:55.141985Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.206878Z", "completed_at": "2025-06-09T18:46:59.567992Z"}], "thread_id": "Thread-5", "execution_time": 5.197362899780273, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_rc_rollforward_report_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.zuora_revenue_rc_rollforward_report\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.driveload.driveload_zuora_revenue_rc_rollforward_report_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.338383Z", "completed_at": "2025-06-09T18:46:55.394868Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.443277Z", "completed_at": "2025-06-09T18:46:59.551632Z"}], "thread_id": "Thread-31", "execution_time": 4.2708680629730225, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_waterfall_report_with_wf_type_adjustments_source", "compiled": true, "compiled_code": "WITH source AS (\n\nSELECT * \nFROM EMBUCKET.driveload.zuora_revenue_waterfall_report_with_wf_type_adjustments\n\n)\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.driveload.driveload_zuora_revenue_waterfall_report_with_wf_type_adjustments_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.323516Z", "completed_at": "2025-06-09T18:46:55.364825Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.413560Z", "completed_at": "2025-06-09T18:46:59.563682Z"}], "thread_id": "Thread-29", "execution_time": 4.295509099960327, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_waterfall_report_with_wf_type_unbilled_revenue_source", "compiled": true, "compiled_code": "WITH source AS (\n\nSELECT * \nFROM EMBUCKET.driveload.zuora_revenue_waterfall_report_with_wf_type_unbilled_revenue\n\n)\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.driveload.driveload_zuora_revenue_waterfall_report_with_wf_type_unbilled_revenue_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.260752Z", "completed_at": "2025-06-09T18:46:55.300815Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.327737Z", "completed_at": "2025-06-09T18:46:59.624225Z"}], "thread_id": "Thread-3", "execution_time": 4.382433891296387, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_unbill_rollforward_report_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.zuora_revenue_unbill_rollforward_report\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.driveload.driveload_zuora_revenue_unbill_rollforward_report_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.981049Z", "completed_at": "2025-06-09T18:46:55.995025Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.000922Z", "completed_at": "2025-06-09T18:46:59.604210Z"}], "thread_id": "Thread-9", "execution_time": 3.649998188018799, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.folder_pl", "compiled": true, "compiled_code": "-- this is the pl allocation for gcp projects under these folders\n\nSELECT * FROM EMBUCKET.seed_engineering.gcp_billing_folder_pl_mapping\nUNPIVOT(allocation FOR type IN (free, internal, paid))", "relation_name": "EMBUCKET.workspace_engineering.folder_pl", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.942681Z", "completed_at": "2025-06-09T18:46:56.988982Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:57.022982Z", "completed_at": "2025-06-09T18:46:59.605204Z"}], "thread_id": "Thread-8", "execution_time": 2.8631019592285156, "adapter_response": {}, "message": "Database Error in model ga360_session_hit_source (models/sources/google_analytics_360/ga360_session_hit_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,268)..Location(1,280)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/google_analytics_360/ga360_session_hit_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.ga360_session_hit_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.google_analytics_360_fivetran.session_hit\n\n), renamed AS(\n\n    SELECT\n      --Keys\n      visit_id::FLOAT                                AS visit_id,\n      visitor_id::VARCHAR                            AS visitor_id,\n\n      --Info\n      visit_start_time::TIMESTAMP_TZ                 AS visit_start_time,\n      visit_start_time::DATE                         AS session_date, \n      hit_number::NUMBER                             AS hit_number,\n      DATEADD('millisecond', time, visit_start_time) AS hit_at,\n      is_entrance::BOOLEAN                           AS is_entrance,\n      is_exit::BOOLEAN                               AS is_exit,\n      referer::VARCHAR                               AS referer,\n      type::VARCHAR                                  AS hit_type,\n      data_source::VARCHAR                           AS data_source,\n      page_hostname::VARCHAR                         AS host_name,\n      page_page_path::VARCHAR                        AS page_path,\n      page_page_title::VARCHAR                       AS page_title,\n      event_info_category::VARCHAR                   AS event_category,\n      event_info_action::VARCHAR                     AS event_action,\n      event_info_label::VARCHAR                      AS event_label\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.google_analytics_360.ga360_session_hit_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.791497Z", "completed_at": "2025-06-09T18:46:56.836520Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.890283Z", "completed_at": "2025-06-09T18:46:59.622419Z"}], "thread_id": "Thread-13", "execution_time": 2.889010190963745, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_application_settings_snapshots_base (models/legacy/snapshots/base/gitlab_dotcom_application_settings_snapshots_base.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_application_settings_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_application_settings_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.gitlab_dotcom_application_settings_snapshots\n    \n), renamed as (\n\n  SELECT\n    dbt_scd_id::VARCHAR                                           AS application_settings_snapshot_id,\n    dbt_valid_from::TIMESTAMP                                     AS valid_from,\n    dbt_valid_to::TIMESTAMP                                       AS valid_to,\n    id::NUMBER                                                    AS application_settings_id,\n    shared_runners_minutes::NUMBER                                AS shared_runners_minutes,\n    repository_size_limit::NUMBER                                 AS repository_size_limit\n  FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_application_settings_snapshots", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.578916Z", "completed_at": "2025-06-09T18:46:55.634212Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.654157Z", "completed_at": "2025-06-09T18:46:59.631616Z"}], "thread_id": "Thread-19", "execution_time": 4.163469076156616, "adapter_response": {}, "message": "Database Error in model facebook_ads_creative_history_source (models/sources/facebook_ads/facebook_ads_creative_history_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/facebook_ads/facebook_ads_creative_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.facebook_ads_creative_history_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.facebook_ads.creative_history\n),\n\nrenamed AS (\n\n  SELECT\n    account_id::NUMBER                    AS account_id,\n    id::NUMBER                            AS creative_id,\n    body::VARCHAR                         AS body,\n    link_destination_display_url::VARCHAR AS link_destination_display_url,\n    link_url::VARCHAR                     AS link_url,\n    name::VARCHAR                         AS creative_name,\n    object_type::VARCHAR                  AS object_type,\n    object_url::VARCHAR                   AS object_url,\n    status::VARCHAR                       AS creative_status,\n    title::VARCHAR                        AS title,\n    page_link::VARCHAR                    AS page_link,\n    _fivetran_id::VARCHAR                 AS _fivetran_id,\n    _fivetran_synced::TIMESTAMP           AS _fivetran_synced\n  FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.facebook_ads.facebook_ads_creative_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.515174Z", "completed_at": "2025-06-09T18:46:55.553317Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.642000Z", "completed_at": "2025-06-09T18:46:59.630351Z"}], "thread_id": "Thread-20", "execution_time": 4.249330997467041, "adapter_response": {}, "message": "Database Error in model facebook_ads_basic_all_levels_source (models/sources/facebook_ads/facebook_ads_basic_all_levels_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/facebook_ads/facebook_ads_basic_all_levels_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.facebook_ads_basic_all_levels_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.facebook_ads.basic_all_levels\n),\n\nrenamed AS (\n\n  SELECT\n    ad_id::VARCHAR              AS ad_id,\n    date::DATE                  AS ad_date,\n    account_id::NUMBER          AS account_id,\n    impressions::NUMBER         AS impressions,\n    inline_link_clicks::NUMBER  AS inline_link_clicks,\n    spend::FLOAT                AS spend,\n    ad_name::VARCHAR            AS ad_name,\n    adset_name::VARCHAR         AS adset_name,\n    campaign_name::VARCHAR      AS campaign_name,\n    _fivetran_id::VARCHAR       AS _fivetran_id,\n    _fivetran_synced::TIMESTAMP AS _fivetran_synced\n  FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.facebook_ads.facebook_ads_basic_all_levels_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.409000Z", "completed_at": "2025-06-09T18:46:55.461665Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.519739Z", "completed_at": "2025-06-09T18:46:59.650855Z"}], "thread_id": "Thread-30", "execution_time": 4.349445104598999, "adapter_response": {}, "message": "Database Error in model email_log_v2 (models/sources/gainsight_customer_success/email_log_v2.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gainsight_customer_success/email_log_v2.sql", "failures": null, "unique_id": "model.gitlab_snowflake.email_log_v2", "compiled": true, "compiled_code": "\n\nWITH source AS (\n  SELECT *\n  FROM EMBUCKET.gainsight_customer_success.email_log_v_2\n),\n\nrenamed AS (\n\n  SELECT\n    gsid::VARCHAR                               AS gs_id,\n    _fivetran_deleted::BOOLEAN                  AS fivetran_deleted,\n    _fivetran_synced::TIMESTAMP                 AS fivetran_synced,\n    rejected_date::TIMESTAMP                    AS rejected_date,\n    gs_user_id::VARCHAR                         AS gs_user_id,\n    reply_to_name::VARCHAR                      AS reply_to_name,\n    email_group_id::VARCHAR                     AS email_group_id,\n    sent_date::TIMESTAMP                        AS sent_date,\n    link_clicked_count::NUMBER                  AS link_clicked_count,\n    name::VARCHAR                               AS name,\n    is_sent::VARCHAR                            AS is_sent,\n    first_open_date::TIMESTAMP                  AS first_open_date,\n    email_content_id::VARCHAR                   AS email_content_id,\n    external_relationship_person_id::VARCHAR    AS external_relationship_person_id,\n    is_opened::VARCHAR                          AS is_opened,\n    external_company_person_id::VARCHAR         AS external_company_person_id,\n    external_user_id::VARCHAR                   AS external_user_id,\n    bounce_type::VARCHAR                        AS bounce_type,\n    gs_person_id::VARCHAR                       AS gs_person_id,\n    gs_person_type::VARCHAR                     AS gs_person_type,\n    page_id::VARCHAR                            AS page_id,\n    email_id::VARCHAR                           AS email_id,\n    link_clicked_date::TIMESTAMP                AS link_clicked_date,\n    email_template_name::VARCHAR                AS email_template_name,\n    request_id::VARCHAR                         AS request_id,\n    is_bounced::VARCHAR                         AS is_bounced,\n    spam_marked_date::TIMESTAMP                 AS spam_marked_date,\n    category_ids::VARCHAR                       AS category_ids,\n    latest_open_date::TIMESTAMP                 AS latest_open_date,\n    is_rejected::VARCHAR                        AS is_rejected,\n    created_date::TIMESTAMP                     AS created_date,\n    recipient_gs_id::VARCHAR                    AS recipient_gs_id,\n    is_unsubscribed::VARCHAR                    AS is_unsubscribed,\n    is_spam::VARCHAR                            AS is_spam,\n    executed_date::TIMESTAMP                    AS executed_date,\n    parent_recipient_gs_id::VARCHAR             AS parent_recipient_gs_id,\n    record_external_id::NUMBER                  AS record_external_id,\n    source_id::VARCHAR                          AS source_id,\n    email_template_id::VARCHAR                  AS email_template_id,\n    sent_by::VARCHAR                            AS sent_by,\n    modified_date::TIMESTAMP                    AS modified_date,\n    source::VARCHAR                             AS source,\n    gs_company_person_id::VARCHAR               AS gs_company_person_id,\n    email_template_version_name::VARCHAR        AS email_template_version_name,\n    from_name::VARCHAR                          AS from_name,\n    opened_count::NUMBER                        AS opened_count,\n    lower_case_email_id::VARCHAR                AS lower_case_email_id,\n    record_id::VARCHAR                          AS record_id,\n    reply_to_email_id::VARCHAR                  AS reply_to_email_id,\n    link_clicked_json::VARIANT                  AS link_clicked_json,\n    source_name::VARCHAR                        AS source_name,\n    bounced_reason::VARCHAR                     AS bounced_reason,\n    gs_company_id::VARCHAR                      AS gs_company_id,\n    external_company_id::VARCHAR                AS external_company_id,\n    bounce_ddate::TIMESTAMP                     AS bounce_ddate,\n    email_template_version_id::VARCHAR          AS email_template_version_id,\n    unsubscribed_date::TIMESTAMP                AS unsubscribed_date,\n    from_email_id::VARCHAR                      AS from_email_id,\n    is_group_email::VARCHAR                     AS is_group_email,\n    address_type::VARCHAR                       AS address_type\n  FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gainsight_customer_success.email_log_v2", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.350999Z", "completed_at": "2025-06-09T18:46:55.412766Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.449090Z", "completed_at": "2025-06-09T18:47:01.208874Z"}], "thread_id": "Thread-6", "execution_time": 5.91567063331604, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_waterfall_report_with_wf_type_net_revenue_with_mje_flag_y_source", "compiled": true, "compiled_code": "WITH source AS (\n\nSELECT * \nFROM EMBUCKET.driveload.zuora_revenue_waterfall_report_with_wf_type_net_revenue_with_mje_flag_y\n\n)\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.driveload.driveload_zuora_revenue_waterfall_report_with_wf_type_net_revenue_with_mje_flag_y_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.281257Z", "completed_at": "2025-06-09T18:46:55.310820Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.345208Z", "completed_at": "2025-06-09T18:47:01.205010Z"}], "thread_id": "Thread-28", "execution_time": 5.976700782775879, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_unreleased_pob_report_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.zuora_revenue_unreleased_pob_report\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.driveload.driveload_zuora_revenue_unreleased_pob_report_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:55.316166Z", "completed_at": "2025-06-09T18:46:55.350649Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:55.400044Z", "completed_at": "2025-06-09T18:47:01.210548Z"}], "thread_id": "Thread-26", "execution_time": 5.95597505569458, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_revenue_waterfall_report_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.zuora_revenue_revenue_waterfall_report\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.driveload.driveload_zuora_revenue_revenue_waterfall_report_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.893867Z", "completed_at": "2025-06-09T18:46:56.953236Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:57.028843Z", "completed_at": "2025-06-09T18:47:01.212618Z"}], "thread_id": "Thread-24", "execution_time": 4.424302816390991, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_access_levels_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.seed_product.gitlab_dotcom_access_levels\n\n),\n\nrenamed AS (\n\n  SELECT\n    access::NUMBER AS access_level_id,\n    label::VARCHAR AS access_level_label,\n    name::VARCHAR AS access_level_name\n  FROM source \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_access_levels_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.856322Z", "completed_at": "2025-06-09T18:46:56.964415Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:57.009065Z", "completed_at": "2025-06-09T18:47:04.886892Z"}], "thread_id": "Thread-15", "execution_time": 8.096449851989746, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_alert_management_http_integrations_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_alert_management_http_integrations\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_alert_management_http_integrations_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:59.726275Z", "completed_at": "2025-06-09T18:46:59.751631Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:59.758814Z", "completed_at": "2025-06-09T18:47:04.934756Z"}], "thread_id": "Thread-8", "execution_time": 5.2308900356292725, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_catalog_resources_dedupe_source (models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_catalog_resources_dedupe_source.sql)\n  000200: DataFusion error: Optimizer rule 'common_sub_expression_eliminate' failed\n  caused by\n  Error during planning: Window has mismatch between number of expressions (1) and number of fields in schema (0)\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_catalog_resources_dedupe_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_catalog_resources_dedupe_source", "compiled": true, "compiled_code": "WITH base AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_postgres.gitlab_db_catalog_resources\n\n)\n\n, max_task_instance AS (\n    SELECT MAX(_task_instance) AS max_column_value\n    FROM base\n    WHERE RIGHT( _task_instance, 8) = (\n\n                                SELECT MAX(RIGHT( _task_instance, 8))\n                                FROM base )\n\n), filtered AS (\n\n    SELECT *\n    FROM base\n    WHERE _task_instance = (\n\n                            SELECT max_column_value\n                            FROM max_task_instance\n\n                            )\n    -- Keep only the latest state of the data,\n    -- if we have multiple records per day\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1\n)\n\nSELECT *\nFROM filtered", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_catalog_resources_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.823344Z", "completed_at": "2025-06-09T18:46:56.897775Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.954048Z", "completed_at": "2025-06-09T18:47:05.000697Z"}], "thread_id": "Thread-23", "execution_time": 8.201811075210571, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_approval_merge_request_rule_sources_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_approval_merge_request_rule_sources\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_approval_merge_request_rule_sources_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:57.663106Z", "completed_at": "2025-06-09T18:46:57.666744Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:57.667887Z", "completed_at": "2025-06-09T18:47:05.003101Z"}], "thread_id": "Thread-32", "execution_time": 7.346103191375732, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_award_emoji_dedupe_source", "compiled": true, "compiled_code": "WITH award_emoji AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_award_emoji\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1\n\n)\n\nSELECT *\nFROM award_emoji", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_award_emoji_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.840569Z", "completed_at": "2025-06-09T18:46:56.913818Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.958868Z", "completed_at": "2025-06-09T18:47:05.023821Z"}], "thread_id": "Thread-27", "execution_time": 8.23399806022644, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_alert_management_alert_assignees_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_alert_management_alert_assignees\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_alert_management_alert_assignees_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.812713Z", "completed_at": "2025-06-09T18:46:56.882057Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.932402Z", "completed_at": "2025-06-09T18:47:05.056987Z"}], "thread_id": "Thread-4", "execution_time": 8.274162769317627, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_application_settings_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_application_settings\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_application_settings_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:59.730803Z", "completed_at": "2025-06-09T18:46:59.758362Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:59.764660Z", "completed_at": "2025-06-09T18:47:05.077045Z"}], "thread_id": "Thread-9", "execution_time": 5.403274059295654, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_catalog_resource_versions_dedupe_source (models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_catalog_resource_versions_dedupe_source.sql)\n  000200: DataFusion error: Optimizer rule 'common_sub_expression_eliminate' failed\n  caused by\n  Error during planning: Window has mismatch between number of expressions (1) and number of fields in schema (0)\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_catalog_resource_versions_dedupe_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_catalog_resource_versions_dedupe_source", "compiled": true, "compiled_code": "WITH base AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_postgres.gitlab_db_catalog_resource_versions\n\n)\n\n, max_task_instance AS (\n    SELECT MAX(_task_instance) AS max_column_value\n    FROM base\n    WHERE RIGHT( _task_instance, 8) = (\n\n                                SELECT MAX(RIGHT( _task_instance, 8))\n                                FROM base )\n\n), filtered AS (\n\n    SELECT *\n    FROM base\n    WHERE _task_instance = (\n\n                            SELECT max_column_value\n                            FROM max_task_instance\n\n                            )\n    -- Keep only the latest state of the data,\n    -- if we have multiple records per day\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1\n)\n\nSELECT *\nFROM filtered", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_catalog_resource_versions_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:59.714466Z", "completed_at": "2025-06-09T18:46:59.729664Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:59.745069Z", "completed_at": "2025-06-09T18:47:05.104154Z"}], "thread_id": "Thread-29", "execution_time": 5.423069000244141, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_bulk_import_entities_dedupe_source (models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_bulk_import_entities_dedupe_source.sql)\n  000200: DataFusion error: Optimizer rule 'common_sub_expression_eliminate' failed\n  caused by\n  Error during planning: Window has mismatch between number of expressions (1) and number of fields in schema (0)\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_bulk_import_entities_dedupe_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_bulk_import_entities_dedupe_source", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_bulk_import_entities\n\n)\n\n, max_task_instance AS (\n    SELECT MAX(_task_instance) AS max_column_value\n    FROM base\n    WHERE RIGHT( _task_instance, 8) = (\n\n                                SELECT MAX(RIGHT( _task_instance, 8))\n                                FROM base )\n\n), filtered AS (\n\n    SELECT *\n    FROM base\n    WHERE _task_instance = (\n\n                            SELECT max_column_value\n                            FROM max_task_instance\n\n                            )\n    -- Keep only the latest state of the data,\n    -- if we have multiple records per day\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1\n)\n\nSELECT *\nFROM filtered", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_bulk_import_entities_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:57.648432Z", "completed_at": "2025-06-09T18:46:57.655786Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:57.657645Z", "completed_at": "2025-06-09T18:47:05.342869Z"}], "thread_id": "Thread-21", "execution_time": 7.696774959564209, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_authentication_events_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_authentication_events\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_authentication_events_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.875987Z", "completed_at": "2025-06-09T18:46:56.941589Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.977292Z", "completed_at": "2025-06-09T18:47:06.267186Z"}], "thread_id": "Thread-7", "execution_time": 9.446094036102295, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_approval_project_rules_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_approval_project_rules\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_approval_project_rules_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.927109Z", "completed_at": "2025-06-09T18:46:56.976536Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:57.016797Z", "completed_at": "2025-06-09T18:47:06.762324Z"}], "thread_id": "Thread-25", "execution_time": 9.940666913986206, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_approval_project_rules_groups_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_approval_project_rules_groups\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_approval_project_rules_groups_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.898109Z", "completed_at": "2025-06-09T18:46:56.963320Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:57.004344Z", "completed_at": "2025-06-09T18:47:06.781049Z"}], "thread_id": "Thread-16", "execution_time": 9.974849939346313, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_approval_merge_request_rules_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_approval_merge_request_rules\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_approval_merge_request_rules_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:57.521307Z", "completed_at": "2025-06-09T18:46:57.554602Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:57.559848Z", "completed_at": "2025-06-09T18:47:06.984498Z"}], "thread_id": "Thread-10", "execution_time": 9.478551626205444, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_approvals_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_approvals\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_approvals_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.869009Z", "completed_at": "2025-06-09T18:46:56.952339Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.996174Z", "completed_at": "2025-06-09T18:47:06.987232Z"}], "thread_id": "Thread-14", "execution_time": 10.196217060089111, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_analytics_cycle_analytics_group_stages_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_analytics_cycle_analytics_group_stages\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_analytics_cycle_analytics_group_stages_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:56.850990Z", "completed_at": "2025-06-09T18:46:56.926439Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:56.970626Z", "completed_at": "2025-06-09T18:47:08.662338Z"}], "thread_id": "Thread-1", "execution_time": 11.872175931930542, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_alert_management_alerts_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_alert_management_alerts\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_alert_management_alerts_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:00.538165Z", "completed_at": "2025-06-09T18:47:00.563018Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:00.572577Z", "completed_at": "2025-06-09T18:47:09.590698Z"}], "thread_id": "Thread-20", "execution_time": 9.053675889968872, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_builds_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_builds\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:00.529792Z", "completed_at": "2025-06-09T18:47:00.557828Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:00.563480Z", "completed_at": "2025-06-09T18:47:09.973100Z"}], "thread_id": "Thread-30", "execution_time": 9.447278022766113, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_builds_internal_only_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_builds_internal_only\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_builds_internal_only_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:59.518704Z", "completed_at": "2025-06-09T18:46:59.555148Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:59.555613Z", "completed_at": "2025-06-09T18:47:09.990984Z"}], "thread_id": "Thread-22", "execution_time": 10.473069190979004, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_board_assignees_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_board_assignees\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_board_assignees_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:57.513679Z", "completed_at": "2025-06-09T18:46:57.527754Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:57.537687Z", "completed_at": "2025-06-09T18:47:09.993543Z"}], "thread_id": "Thread-2", "execution_time": 12.488400220870972, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_approval_project_rules_users_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_approval_project_rules_users\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_approval_project_rules_users_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:59.718763Z", "completed_at": "2025-06-09T18:46:59.744521Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:59.752237Z", "completed_at": "2025-06-09T18:47:09.994940Z"}], "thread_id": "Thread-3", "execution_time": 10.292444705963135, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_bulk_imports_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_bulk_imports\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_bulk_imports_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:58.172545Z", "completed_at": "2025-06-09T18:46:58.177513Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:58.177937Z", "completed_at": "2025-06-09T18:47:11.073760Z"}], "thread_id": "Thread-11", "execution_time": 12.901854991912842, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_banned_users_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_banned_users\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_banned_users_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:59.707205Z", "completed_at": "2025-06-09T18:46:59.725423Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:59.737921Z", "completed_at": "2025-06-09T18:47:11.220401Z"}], "thread_id": "Thread-31", "execution_time": 11.527748823165894, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_boards_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_boards\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_boards_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:57.529297Z", "completed_at": "2025-06-09T18:46:57.542940Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:57.543295Z", "completed_at": "2025-06-09T18:47:11.226926Z"}], "thread_id": "Thread-18", "execution_time": 13.706180095672607, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_audit_events_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_audit_events\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_audit_events_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:59.436378Z", "completed_at": "2025-06-09T18:46:59.443716Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:59.444006Z", "completed_at": "2025-06-09T18:47:12.424706Z"}], "thread_id": "Thread-12", "execution_time": 12.989480018615723, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_batched_background_migrations_dedupe_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_batched_background_migrations\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_batched_background_migrations_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:00.482299Z", "completed_at": "2025-06-09T18:47:00.487501Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:00.487863Z", "completed_at": "2025-06-09T18:47:12.428200Z"}], "thread_id": "Thread-13", "execution_time": 11.947947025299072, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_build_trace_chunks_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_build_trace_chunks\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY build_id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_build_trace_chunks_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:01.234756Z", "completed_at": "2025-06-09T18:47:01.254028Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:01.261922Z", "completed_at": "2025-06-09T18:47:12.471189Z"}], "thread_id": "Thread-24", "execution_time": 11.246057987213135, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_job_token_project_scope_links_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_job_token_project_scope_links\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_job_token_project_scope_links_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:00.497234Z", "completed_at": "2025-06-09T18:47:00.509542Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:00.509970Z", "completed_at": "2025-06-09T18:47:12.464328Z"}], "thread_id": "Thread-19", "execution_time": 11.967954874038696, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_build_trace_section_names_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_build_trace_section_names\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_build_trace_section_names_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:59.664728Z", "completed_at": "2025-06-09T18:46:59.685501Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:59.694497Z", "completed_at": "2025-06-09T18:47:12.486026Z"}], "thread_id": "Thread-5", "execution_time": 12.890456914901733, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_board_labels_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_board_labels\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_board_labels_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:46:57.566354Z", "completed_at": "2025-06-09T18:46:57.575558Z"}, {"name": "execute", "started_at": "2025-06-09T18:46:57.575968Z", "completed_at": "2025-06-09T18:47:12.505411Z"}], "thread_id": "Thread-17", "execution_time": 14.950090885162354, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_audit_events_external_audit_event_destinations_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_audit_events_external_audit_event_destinations\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_audit_events_external_audit_event_destinations_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:01.240621Z", "completed_at": "2025-06-09T18:47:01.269720Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:01.274961Z", "completed_at": "2025-06-09T18:47:14.340147Z"}], "thread_id": "Thread-26", "execution_time": 13.108405113220215, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_job_artifacts_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_job_artifacts\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_job_artifacts_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:01.254339Z", "completed_at": "2025-06-09T18:47:01.281271Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:01.282107Z", "completed_at": "2025-06-09T18:47:14.371723Z"}], "thread_id": "Thread-28", "execution_time": 13.138960838317871, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_group_variables_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_group_variables\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_group_variables_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:04.952464Z", "completed_at": "2025-06-09T18:47:04.962260Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:04.963651Z", "completed_at": "2025-06-09T18:47:14.403751Z"}], "thread_id": "Thread-8", "execution_time": 9.452775955200195, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_pipeline_artifacts_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_pipeline_artifacts\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipeline_artifacts_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:05.159437Z", "completed_at": "2025-06-09T18:47:05.183091Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:05.195812Z", "completed_at": "2025-06-09T18:47:14.409316Z"}], "thread_id": "Thread-27", "execution_time": 9.256623029708862, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_pipeline_schedules_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_pipeline_schedules\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipeline_schedules_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:01.226208Z", "completed_at": "2025-06-09T18:47:01.233842Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:01.245139Z", "completed_at": "2025-06-09T18:47:14.412933Z"}], "thread_id": "Thread-6", "execution_time": 13.190570831298828, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_builds_metadata_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_builds_metadata\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _UPLOADED_AT DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_builds_metadata_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:06.271504Z", "completed_at": "2025-06-09T18:47:06.281326Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:06.281623Z", "completed_at": "2025-06-09T18:47:16.220925Z"}], "thread_id": "Thread-7", "execution_time": 9.951135158538818, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_runner_projects_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_runner_projects\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_runner_projects_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:05.345666Z", "completed_at": "2025-06-09T18:47:05.352171Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:05.352475Z", "completed_at": "2025-06-09T18:47:17.981484Z"}], "thread_id": "Thread-21", "execution_time": 12.636453866958618, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_runner_machines_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_runner_machines\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_runner_machines_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:08.667162Z", "completed_at": "2025-06-09T18:47:08.673975Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:08.674274Z", "completed_at": "2025-06-09T18:47:18.002138Z"}], "thread_id": "Thread-1", "execution_time": 9.336614847183228, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_subscriptions_projects_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_subscriptions_projects\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _UPLOADED_AT DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_subscriptions_projects_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:05.207192Z", "completed_at": "2025-06-09T18:47:05.223635Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:05.230690Z", "completed_at": "2025-06-09T18:47:18.166414Z"}], "thread_id": "Thread-9", "execution_time": 12.98310399055481, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_pipelines_internal_only_dedupe_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_ci_pipelines_internal_only\n\n), partitioned AS (\n\n    SELECT *\n    FROM source\n\n    \n\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n), renamed AS (\n\n    SELECT\n      id                       AS id,\n      updated_at               AS updated_at,\n      ref                      AS ref,\n      project_id               AS project_id,\n      _uploaded_at             AS _uploaded_at\n    FROM partitioned\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipelines_internal_only_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:04.920896Z", "completed_at": "2025-06-09T18:47:04.932091Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:04.935804Z", "completed_at": "2025-06-09T18:47:18.193294Z"}], "thread_id": "Thread-15", "execution_time": 13.302512168884277, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_namespace_monthly_usages_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_namespace_monthly_usages\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_namespace_monthly_usages_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:06.767260Z", "completed_at": "2025-06-09T18:47:06.774172Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:06.774470Z", "completed_at": "2025-06-09T18:47:19.082340Z"}], "thread_id": "Thread-25", "execution_time": 12.316575050354004, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_runners_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_runners\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_runners_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:06.998113Z", "completed_at": "2025-06-09T18:47:07.009144Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:07.009486Z", "completed_at": "2025-06-09T18:47:19.132565Z"}], "thread_id": "Thread-10", "execution_time": 12.138765811920166, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_sources_pipelines_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_sources_pipelines\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_sources_pipelines_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:05.184226Z", "completed_at": "2025-06-09T18:47:05.203863Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:05.217691Z", "completed_at": "2025-06-09T18:47:19.157939Z"}], "thread_id": "Thread-4", "execution_time": 13.999877214431763, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_pipelines_dedupe_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_ci_pipelines\n\n), partitioned AS (\n\n    SELECT *\n    FROM source\n\n    \n\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n), renamed AS (\n\n    SELECT\n      id                        AS id,\n      created_at                AS created_at,\n      updated_at                AS updated_at,\n      ref                       AS ref,\n      tag                       AS tag,\n      yaml_errors               AS yaml_errors,\n      committed_at              AS committed_at,\n      project_id                AS project_id,\n      status                    AS status,\n      started_at                AS started_at,\n      finished_at               AS finished_at,\n      duration                  AS duration,\n      user_id::NUMBER           AS user_id,\n      lock_version              AS lock_version,\n      auto_canceled_by_id       AS auto_canceled_by_id,\n      pipeline_schedule_id      AS pipeline_schedule_id,\n      source                    AS source,\n      config_source             AS config_source,\n      protected                 AS protected,\n      failure_reason            AS failure_reason,\n      iid                       AS iid,\n      merge_request_id::NUMBER  AS merge_request_id,\n      _uploaded_at              AS _uploaded_at,\n      pgp_is_deleted            AS pgp_is_deleted,\n      pgp_is_deleted_updated_at AS pgp_is_deleted_updated_at\n    FROM partitioned\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:05.225102Z", "completed_at": "2025-06-09T18:47:05.238657Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:05.241932Z", "completed_at": "2025-06-09T18:47:19.146254Z"}], "thread_id": "Thread-29", "execution_time": 13.94449520111084, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_project_monthly_usages_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_project_monthly_usages\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_project_monthly_usages_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:05.138614Z", "completed_at": "2025-06-09T18:47:05.153936Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:05.172474Z", "completed_at": "2025-06-09T18:47:19.186409Z"}], "thread_id": "Thread-23", "execution_time": 14.084650993347168, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_pipeline_metadata_internal_only_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_pipeline_metadata_internal_only\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY pipeline_id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipeline_metadata_internal_only_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:14.489350Z", "completed_at": "2025-06-09T18:47:14.512004Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:14.513402Z", "completed_at": "2025-06-09T18:47:19.196703Z"}], "thread_id": "Thread-27", "execution_time": 4.753466844558716, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_clusters_integration_prometheus_dedupe_source (models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_clusters_integration_prometheus_dedupe_source.sql)\n  000200: DataFusion error: Optimizer rule 'common_sub_expression_eliminate' failed\n  caused by\n  Error during planning: Window has mismatch between number of expressions (1) and number of fields in schema (0)\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_clusters_integration_prometheus_dedupe_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_integration_prometheus_dedupe_source", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_clusters_integration_prometheus\n\n)\n\n, max_task_instance AS (\n    SELECT MAX(_task_instance) AS max_column_value\n    FROM base\n    WHERE RIGHT( _task_instance, 8) = (\n\n                                SELECT MAX(RIGHT( _task_instance, 8))\n                                FROM base )\n\n), filtered AS (\n\n    SELECT *\n    FROM base\n    WHERE _task_instance = (\n\n                            SELECT max_column_value\n                            FROM max_task_instance\n\n                            )\n    -- Keep only the latest state of the data,\n    -- if we have multiple records per day\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY cluster_id ORDER BY _uploaded_at DESC) = 1\n)\n\nSELECT *\nFROM filtered", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_integration_prometheus_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:07.004235Z", "completed_at": "2025-06-09T18:47:07.019761Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:07.020758Z", "completed_at": "2025-06-09T18:47:19.729193Z"}], "thread_id": "Thread-14", "execution_time": 12.734040975570679, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_stages_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_stages\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_stages_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:09.975635Z", "completed_at": "2025-06-09T18:47:09.981400Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:09.981775Z", "completed_at": "2025-06-09T18:47:21.707428Z"}], "thread_id": "Thread-30", "execution_time": 11.732414960861206, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_triggers_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_triggers\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_triggers_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:11.228817Z", "completed_at": "2025-06-09T18:47:11.235708Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:11.236150Z", "completed_at": "2025-06-09T18:47:21.717198Z"}], "thread_id": "Thread-31", "execution_time": 10.493310928344727, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_cluster_projects_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_cluster_projects\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_cluster_projects_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:05.190033Z", "completed_at": "2025-06-09T18:47:05.203223Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:05.212794Z", "completed_at": "2025-06-09T18:47:22.677360Z"}], "thread_id": "Thread-32", "execution_time": 17.529886960983276, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_pipeline_schedule_variables_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_pipeline_schedule_variables\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipeline_schedule_variables_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:10.015577Z", "completed_at": "2025-06-09T18:47:10.037126Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:10.038319Z", "completed_at": "2025-06-09T18:47:22.714079Z"}], "thread_id": "Thread-22", "execution_time": 12.704251050949097, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_variables_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_variables\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_variables_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:06.783448Z", "completed_at": "2025-06-09T18:47:06.788788Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:06.790337Z", "completed_at": "2025-06-09T18:47:22.717682Z"}], "thread_id": "Thread-16", "execution_time": 15.93486499786377, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_secure_files_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_secure_files\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_secure_files_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:10.021804Z", "completed_at": "2025-06-09T18:47:10.055233Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:10.055782Z", "completed_at": "2025-06-09T18:47:22.949259Z"}], "thread_id": "Thread-2", "execution_time": 12.938585042953491, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_cluster_agent_tokens_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_cluster_agent_tokens\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_cluster_agent_tokens_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:09.603791Z", "completed_at": "2025-06-09T18:47:09.610411Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:09.610841Z", "completed_at": "2025-06-09T18:47:23.545730Z"}], "thread_id": "Thread-20", "execution_time": 13.944375038146973, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_trigger_requests_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ci_trigger_requests\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_trigger_requests_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:12.574890Z", "completed_at": "2025-06-09T18:47:12.592100Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:13.719730Z", "completed_at": "2025-06-09T18:47:24.205875Z"}], "thread_id": "Thread-17", "execution_time": 11.653933048248291, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_knative_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_clusters_applications_knative\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_knative_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:12.476311Z", "completed_at": "2025-06-09T18:47:12.498333Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:12.510945Z", "completed_at": "2025-06-09T18:47:24.228705Z"}], "thread_id": "Thread-12", "execution_time": 11.785636901855469, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_crossplane_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_clusters_applications_crossplane\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_crossplane_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:12.037731Z", "completed_at": "2025-06-09T18:47:12.044898Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:12.045191Z", "completed_at": "2025-06-09T18:47:24.210764Z"}], "thread_id": "Thread-18", "execution_time": 12.173825025558472, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_cert_managers_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_clusters_applications_cert_managers\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_cert_managers_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:14.343794Z", "completed_at": "2025-06-09T18:47:14.368661Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:14.393513Z", "completed_at": "2025-06-09T18:47:24.232288Z"}], "thread_id": "Thread-26", "execution_time": 9.889279127120972, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_prometheus_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_clusters_applications_prometheus\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_prometheus_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:12.521657Z", "completed_at": "2025-06-09T18:47:12.532751Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:12.533079Z", "completed_at": "2025-06-09T18:47:24.226473Z"}], "thread_id": "Thread-13", "execution_time": 11.715955972671509, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_elastic_stacks_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_clusters_applications_elastic_stacks\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_elastic_stacks_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:10.028700Z", "completed_at": "2025-06-09T18:47:10.044714Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:10.045129Z", "completed_at": "2025-06-09T18:47:23.538005Z"}], "thread_id": "Thread-3", "execution_time": 13.526846885681152, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_cluster_agents_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_cluster_agents\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_cluster_agents_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:11.077545Z", "completed_at": "2025-06-09T18:47:11.083469Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:11.084603Z", "completed_at": "2025-06-09T18:47:24.840483Z"}], "thread_id": "Thread-11", "execution_time": 13.7635977268219, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_cluster_groups_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_cluster_groups\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_cluster_groups_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:12.561810Z", "completed_at": "2025-06-09T18:47:12.583418Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:12.592954Z", "completed_at": "2025-06-09T18:47:26.696647Z"}], "thread_id": "Thread-19", "execution_time": 14.14586091041565, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_ingress_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_clusters_applications_ingress\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_ingress_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:14.471821Z", "completed_at": "2025-06-09T18:47:14.504789Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:14.505669Z", "completed_at": "2025-06-09T18:47:26.719866Z"}], "thread_id": "Thread-6", "execution_time": 12.253899097442627, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_compliance_management_frameworks_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_compliance_management_frameworks\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_compliance_management_frameworks_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:24.394865Z", "completed_at": "2025-06-09T18:47:24.426311Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:24.446884Z", "completed_at": "2025-06-09T18:47:26.746248Z"}], "thread_id": "Thread-20", "execution_time": 2.3915772438049316, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_gitlab_subscriptions_snapshots_base (models/legacy/snapshots/base/gitlab_dotcom_gitlab_subscriptions_snapshots_base.sql)\n  000200: DataFusion error: Schema error: No field named \"DBT_VALID_FROM\". Valid fields are source.id, source.created_at, source.updated_at, source.start_date, source.end_date, source.trial_ends_on, source.namespace_id, source.hosted_plan_id, source.max_seats_used, source.seats, source.trial, source._uploaded_at, source.gitlab_subscriptions_rank_in_key, source.dbt_scd_id, source.dbt_updated_at, source.dbt_valid_from, source.dbt_valid_to, source._task_instance, source.trial_starts_on, source.seats_in_use, source.seats_owed, source.trial_extension_type.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_gitlab_subscriptions_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_gitlab_subscriptions_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".snapshots.gitlab_dotcom_gitlab_subscriptions_snapshots\n  WHERE id != 572635 -- This ID has NULL values for many of the important columns.\n    AND namespace_id IS NOT NULL\n\n), renamed AS (\n\n  SELECT\n    dbt_scd_id::VARCHAR                           AS gitlab_subscription_snapshot_id,\n    id::NUMBER                                    AS gitlab_subscription_id,\n    start_date::DATE                              AS gitlab_subscription_start_date,\n    end_date::DATE                                AS gitlab_subscription_end_date,\n    trial_ends_on::DATE                           AS gitlab_subscription_trial_ends_on,\n    namespace_id::NUMBER                          AS namespace_id,\n    hosted_plan_id::NUMBER                        AS plan_id,\n    max_seats_used::NUMBER                        AS max_seats_used,\n    seats::NUMBER                                 AS seats,\n    trial::BOOLEAN                                AS is_trial,\n    created_at::TIMESTAMP                         AS gitlab_subscription_created_at,\n    updated_at::TIMESTAMP                         AS gitlab_subscription_updated_at,\n    \"DBT_VALID_FROM\"::TIMESTAMP                   AS valid_from,\n    \"DBT_VALID_TO\"::TIMESTAMP                     AS valid_to\n  \n  FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_gitlab_subscriptions_snapshots", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:14.454954Z", "completed_at": "2025-06-09T18:47:14.468885Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:14.480431Z", "completed_at": "2025-06-09T18:47:26.769800Z"}], "thread_id": "Thread-8", "execution_time": 12.32204008102417, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_clusters\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:12.585895Z", "completed_at": "2025-06-09T18:47:13.726318Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:13.731192Z", "completed_at": "2025-06-09T18:47:26.793957Z"}], "thread_id": "Thread-5", "execution_time": 14.242361068725586, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_jupyter_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_clusters_applications_jupyter\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_jupyter_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:24.842934Z", "completed_at": "2025-06-09T18:47:26.825338Z"}], "thread_id": "Thread-11", "execution_time": 2.0245187282562256, "adapter_response": {}, "message": "Compilation Error in model gitlab_dotcom_group_group_links_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_group_group_links_source.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro distinct_source (macros/utils/distinct_source.sql)\n  > called by model gitlab_dotcom_group_group_links_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_group_group_links_source.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_group_group_links_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_group_group_links_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:17.984742Z", "completed_at": "2025-06-09T18:47:17.990324Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:17.990608Z", "completed_at": "2025-06-09T18:47:27.629065Z"}], "thread_id": "Thread-21", "execution_time": 9.645019054412842, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_container_repositories_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_container_repositories\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_container_repositories_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:14.497850Z", "completed_at": "2025-06-09T18:47:14.521572Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:14.524798Z", "completed_at": "2025-06-09T18:47:27.618132Z"}], "thread_id": "Thread-28", "execution_time": 13.157407999038696, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_runners_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_clusters_applications_runners\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_runners_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:24.398417Z", "completed_at": "2025-06-09T18:47:24.425473Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:24.441130Z", "completed_at": "2025-06-09T18:47:27.754130Z"}], "thread_id": "Thread-17", "execution_time": 3.3892688751220703, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_gitlab_subscriptions_snapshots_namespace_id_base (models/legacy/snapshots/base/gitlab_dotcom_gitlab_subscriptions_snapshots_namespace_id_base.sql)\n  000200: DataFusion error: Schema error: No field named \"DBT_VALID_FROM\". Valid fields are source.id, source.created_at, source.updated_at, source.start_date, source.end_date, source.trial_ends_on, source.namespace_id, source.hosted_plan_id, source.max_seats_used, source.seats, source.trial, source._uploaded_at, source.dbt_scd_id, source.dbt_updated_at, source.dbt_valid_from, source.dbt_valid_to, source._task_instance, source.trial_starts_on, source.seats_in_use, source.seats_owed, source.trial_extension_type.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_gitlab_subscriptions_snapshots_namespace_id_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_gitlab_subscriptions_snapshots_namespace_id_base", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".snapshots.gitlab_dotcom_gitlab_subscriptions_namespace_id_snapshots\n  WHERE id != 572635 -- This ID has NULL values for many of the important columns.\n\n), renamed AS (\n\n  SELECT\n    dbt_scd_id::VARCHAR                           AS gitlab_subscription_snapshot_id,\n    id::NUMBER                                    AS gitlab_subscription_id,\n    start_date::DATE                              AS gitlab_subscription_start_date,\n    end_date::DATE                                AS gitlab_subscription_end_date,\n    trial_ends_on::DATE                           AS gitlab_subscription_trial_ends_on,\n    namespace_id::NUMBER                          AS namespace_id,\n    hosted_plan_id::NUMBER                        AS plan_id,\n    max_seats_used::NUMBER                        AS max_seats_used,\n    seats::NUMBER                                 AS seats,\n    trial::BOOLEAN                                AS is_trial,\n    created_at::TIMESTAMP                         AS gitlab_subscription_created_at,\n    updated_at::TIMESTAMP                         AS gitlab_subscription_updated_at,\n    seats_in_use::NUMBER                          AS seats_in_use,\n    seats_owed::NUMBER                            AS seats_owed,\n    trial_extension_type::NUMBER                  AS trial_extension_type,\n    \"DBT_VALID_FROM\"::TIMESTAMP                   AS valid_from,\n    \"DBT_VALID_TO\"::TIMESTAMP                     AS valid_to\n  \n  FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_gitlab_subscriptions_snapshots_namespace_id", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:24.364194Z", "completed_at": "2025-06-09T18:47:27.762017Z"}], "thread_id": "Thread-12", "execution_time": 3.447404146194458, "adapter_response": {}, "message": "Compilation Error in model gitlab_dotcom_gitlab_subscriptions_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_gitlab_subscriptions_source.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro distinct_source (macros/utils/distinct_source.sql)\n  > called by model gitlab_dotcom_gitlab_subscriptions_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_gitlab_subscriptions_source.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_gitlab_subscriptions_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_gitlab_subscriptions_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:18.168887Z", "completed_at": "2025-06-09T18:47:18.174217Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:18.174527Z", "completed_at": "2025-06-09T18:47:27.902236Z"}], "thread_id": "Thread-9", "execution_time": 9.733972787857056, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_dast_profiles_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_dast_profiles\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_dast_profiles_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:16.226404Z", "completed_at": "2025-06-09T18:47:16.244220Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:16.246597Z", "completed_at": "2025-06-09T18:47:27.929480Z"}], "thread_id": "Thread-7", "execution_time": 11.706486940383911, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_container_expiration_policies_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_container_expiration_policies\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY project_id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_container_expiration_policies_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:18.199195Z", "completed_at": "2025-06-09T18:47:18.204845Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:18.205128Z", "completed_at": "2025-06-09T18:47:27.936038Z"}], "thread_id": "Thread-15", "execution_time": 9.737488985061646, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_dependency_proxy_packages_settings_dedupe_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_dependency_proxy_packages_settings\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY project_id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_dependency_proxy_packages_settings_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:12.544971Z", "completed_at": "2025-06-09T18:47:12.554458Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:12.554848Z", "completed_at": "2025-06-09T18:47:27.937248Z"}], "thread_id": "Thread-24", "execution_time": 15.405303716659546, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_helm_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_clusters_applications_helm\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_helm_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:19.252378Z", "completed_at": "2025-06-09T18:47:19.284491Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:19.299313Z", "completed_at": "2025-06-09T18:47:30.043015Z"}], "thread_id": "Thread-29", "execution_time": 10.79917573928833, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_elasticsearch_indexed_namespaces_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_elasticsearch_indexed_namespaces\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY namespace_id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_elasticsearch_indexed_namespaces_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:19.267096Z", "completed_at": "2025-06-09T18:47:19.296747Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:19.305039Z", "completed_at": "2025-06-09T18:47:30.728934Z"}], "thread_id": "Thread-23", "execution_time": 11.484200954437256, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_emails_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_emails\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_emails_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:22.795068Z", "completed_at": "2025-06-09T18:47:22.806144Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:22.807245Z", "completed_at": "2025-06-09T18:47:30.734658Z"}], "thread_id": "Thread-16", "execution_time": 7.94584584236145, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_fork_network_members_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_fork_network_members\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_fork_network_members_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:22.759780Z", "completed_at": "2025-06-09T18:47:22.769362Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:22.773442Z", "completed_at": "2025-06-09T18:47:30.737677Z"}], "thread_id": "Thread-22", "execution_time": 7.9901909828186035, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_external_status_checks_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_external_status_checks\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_external_status_checks_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:27.847976Z", "completed_at": "2025-06-09T18:47:27.872813Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:27.873540Z", "completed_at": "2025-06-09T18:47:30.764758Z"}], "thread_id": "Thread-12", "execution_time": 2.934157133102417, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_issue_assignees_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_issue_assignees_source.sql)\n  000200: DataFusion error: Error during planning: Cannot infer common string type for string concat operation Int32 || Int32\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_issue_assignees_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_issue_assignees_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT DISTINCT\n    user_id,\n    issue_id\n  FROM EMBUCKET.tap_postgres.gitlab_db_issue_assignees\n\n), renamed AS (\n\n    SELECT\n      md5(user_id || issue_id)::VARCHAR AS user_issue_relation_id,\n      user_id::NUMBER                  AS user_id,\n      issue_id::NUMBER                 AS issue_id\n    FROM source\n\n\n)\n\nSELECT DISTINCT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_issue_assignees_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:19.278278Z", "completed_at": "2025-06-09T18:47:19.298265Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:19.310741Z", "completed_at": "2025-06-09T18:47:31.709974Z"}], "thread_id": "Thread-4", "execution_time": 12.470286130905151, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_deployments_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_deployments\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:18.004766Z", "completed_at": "2025-06-09T18:47:18.011402Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:18.011849Z", "completed_at": "2025-06-09T18:47:32.239874Z"}], "thread_id": "Thread-1", "execution_time": 14.235854148864746, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_csv_issue_imports_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_csv_issue_imports\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_csv_issue_imports_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:22.952727Z", "completed_at": "2025-06-09T18:47:22.966147Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:22.967624Z", "completed_at": "2025-06-09T18:47:32.340903Z"}], "thread_id": "Thread-2", "execution_time": 9.389638900756836, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_gitlab_subscriptions_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_gitlab_subscriptions\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_gitlab_subscriptions_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:21.719517Z", "completed_at": "2025-06-09T18:47:21.725483Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:21.725770Z", "completed_at": "2025-06-09T18:47:32.831897Z"}], "thread_id": "Thread-31", "execution_time": 11.112993001937866, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_epics_internal_only_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_epics_internal_only\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_epics_internal_only_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:32.344391Z", "completed_at": "2025-06-09T18:47:33.105332Z"}], "thread_id": "Thread-2", "execution_time": 0.7792890071868896, "adapter_response": {}, "message": "Compilation Error in model gitlab_dotcom_label_links_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_label_links_source.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro distinct_source (macros/utils/distinct_source.sql)\n  > called by model gitlab_dotcom_label_links_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_label_links_source.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_label_links_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_label_links_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:19.245246Z", "completed_at": "2025-06-09T18:47:19.261039Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:19.261322Z", "completed_at": "2025-06-09T18:47:33.817890Z"}], "thread_id": "Thread-10", "execution_time": 14.5803542137146, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_deployment_merge_requests_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_deployment_merge_requests\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY deployment_merge_request_id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_deployment_merge_requests_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:19.084835Z", "completed_at": "2025-06-09T18:47:19.091253Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:19.091552Z", "completed_at": "2025-06-09T18:47:33.097748Z"}], "thread_id": "Thread-25", "execution_time": 14.013542890548706, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_deployment_approvals_dedupe_source", "compiled": true, "compiled_code": " \n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_deployment_approvals\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_deployment_approvals_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:22.682373Z", "completed_at": "2025-06-09T18:47:22.708623Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:22.720473Z", "completed_at": "2025-06-09T18:47:33.835268Z"}], "thread_id": "Thread-32", "execution_time": 11.155423164367676, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_events_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_events\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_events_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:19.290286Z", "completed_at": "2025-06-09T18:47:19.319864Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:19.322378Z", "completed_at": "2025-06-09T18:47:33.841609Z"}], "thread_id": "Thread-27", "execution_time": 14.555943250656128, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_environments_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_environments\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_environments_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:21.710039Z", "completed_at": "2025-06-09T18:47:21.733194Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:21.733696Z", "completed_at": "2025-06-09T18:47:33.848131Z"}], "thread_id": "Thread-30", "execution_time": 12.138714790344238, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_epics_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_epics\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_epics_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:26.699094Z", "completed_at": "2025-06-09T18:47:26.702493Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:26.702772Z", "completed_at": "2025-06-09T18:47:33.879132Z"}], "thread_id": "Thread-19", "execution_time": 7.190209150314331, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_group_import_states_dedupe_source (models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_group_import_states_dedupe_source.sql)\n  000200: DataFusion error: Optimizer rule 'common_sub_expression_eliminate' failed\n  caused by\n  Error during planning: Window has mismatch between number of expressions (1) and number of fields in schema (0)\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_group_import_states_dedupe_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_group_import_states_dedupe_source", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_group_import_states\n\n)\n\n, max_task_instance AS (\n    SELECT MAX(_task_instance) AS max_column_value\n    FROM base\n    WHERE RIGHT( _task_instance, 8) = (\n\n                                SELECT MAX(RIGHT( _task_instance, 8))\n                                FROM base )\n\n), filtered AS (\n\n    SELECT *\n    FROM base\n    WHERE _task_instance = (\n\n                            SELECT max_column_value\n                            FROM max_task_instance\n\n                            )\n    -- Keep only the latest state of the data,\n    -- if we have multiple records per day\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY group_id ORDER BY _uploaded_at DESC) = 1\n)\n\nSELECT *\nFROM filtered", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_group_import_states_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:19.731648Z", "completed_at": "2025-06-09T18:47:19.736999Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:19.737300Z", "completed_at": "2025-06-09T18:47:33.101461Z"}], "thread_id": "Thread-14", "execution_time": 13.370429992675781, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_epic_issues_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_epic_issues\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY issue_id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_epic_issues_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:27.952034Z", "completed_at": "2025-06-09T18:47:32.820010Z"}], "thread_id": "Thread-7", "execution_time": 4.929408073425293, "adapter_response": {}, "message": "Compilation Error in model gitlab_dotcom_issue_links_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_issue_links_source.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro distinct_source (macros/utils/distinct_source.sql)\n  > called by model gitlab_dotcom_issue_links_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_issue_links_source.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_issue_links_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_issue_links_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:26.776525Z", "completed_at": "2025-06-09T18:47:26.812635Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:26.817041Z", "completed_at": "2025-06-09T18:47:35.055675Z"}], "thread_id": "Thread-20", "execution_time": 8.318173170089722, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_identities_snapshots_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_identities_snapshots_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_identities_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_identities_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.gitlab_dotcom_identities_snapshots\n\n), renamed AS (\n\n    SELECT\n      id::NUMBER AS identity_id,\n      provider::VARCHAR AS identity_provider,\n      user_id::NUMBER AS user_id,\n      created_at::TIMESTAMP AS created_at,\n      updated_at::TIMESTAMP AS updated_at,\n      saml_provider_id::NUMBER AS saml_provider_id,\n      dbt_valid_from::TIMESTAMP AS dbt_valid_from,\n      dbt_valid_to::TIMESTAMP AS dbt_valid_to\n    FROM source\n    \n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_identities_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:24.429130Z", "completed_at": "2025-06-09T18:47:24.463048Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:24.475732Z", "completed_at": "2025-06-09T18:47:36.077498Z"}], "thread_id": "Thread-18", "execution_time": 11.690223932266235, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_gpg_signatures_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_gpg_signatures\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_gpg_signatures_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:24.411832Z", "completed_at": "2025-06-09T18:47:24.440056Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:24.465270Z", "completed_at": "2025-06-09T18:47:36.103351Z"}], "thread_id": "Thread-26", "execution_time": 11.73213505744934, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_grafana_integrations_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_grafana_integrations\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_grafana_integrations_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:30.793905Z", "completed_at": "2025-06-09T18:47:30.815778Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:30.820819Z", "completed_at": "2025-06-09T18:47:36.112778Z"}], "thread_id": "Thread-23", "execution_time": 5.3819899559021, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_jira_connect_installations_dedupe_source (models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_jira_connect_installations_dedupe_source.sql)\n  000200: DataFusion error: Optimizer rule 'common_sub_expression_eliminate' failed\n  caused by\n  Error during planning: Window has mismatch between number of expressions (1) and number of fields in schema (0)\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_jira_connect_installations_dedupe_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_jira_connect_installations_dedupe_source", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_jira_connect_installations\n\n)\n\n, max_task_instance AS (\n    SELECT MAX(_task_instance) AS max_column_value\n    FROM base\n    WHERE RIGHT( _task_instance, 8) = (\n\n                                SELECT MAX(RIGHT( _task_instance, 8))\n                                FROM base )\n\n), filtered AS (\n\n    SELECT *\n    FROM base\n    WHERE _task_instance = (\n\n                            SELECT max_column_value\n                            FROM max_task_instance\n\n                            )\n    -- Keep only the latest state of the data,\n    -- if we have multiple records per day\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1\n)\n\nSELECT *\nFROM filtered", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_jira_connect_installations_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:34.204004Z", "completed_at": "2025-06-09T18:47:34.252040Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:34.266299Z", "completed_at": "2025-06-09T18:47:36.617712Z"}], "thread_id": "Thread-7", "execution_time": 2.4196667671203613, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_members_snapshots_base (models/legacy/snapshots/base/gitlab_dotcom_members_snapshots_base.sql)\n  000200: DataFusion error: Schema error: No field named \"DBT_VALID_FROM\". Valid fields are source.id, source.access_level, source.source_id, source.source_type, source.user_id, source.notification_level, source.type, source.created_at, source.created_by_id, source.invite_email, source.invite_accepted_at, source.requested_at, source.expires_at, source.ldap, source.override, source._uploaded_at, source.members_rank_in_key, source.dbt_scd_id, source.dbt_updated_at, source.dbt_valid_from, source.dbt_valid_to, source._task_instance, source.invite_token, source.member_role_id, source.member_namespace_id.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_members_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_members_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n\tSELECT *\n  FROM \"EMBUCKET\".snapshots.gitlab_dotcom_members_snapshots\n\n), renamed AS (\n\n  SELECT\n  \n    dbt_scd_id::VARCHAR                            AS member_snapshot_id,\n    id::NUMBER                                    AS member_id,\n    access_level::NUMBER                          AS access_level,\n    source_id::NUMBER                             AS source_id,\n    source_type                                    AS member_source_type,\n    user_id::NUMBER                               AS user_id,\n    notification_level::NUMBER                    AS notification_level,\n    type                                           AS member_type,\n    created_at::TIMESTAMP                          AS invite_created_at,\n    created_by_id::NUMBER                         AS created_by_id,\n    invite_accepted_at::TIMESTAMP                  AS invite_accepted_at,\n    requested_at::TIMESTAMP                        AS requested_at,\n    expires_at::TIMESTAMP                          AS expires_at,\n    ldap::BOOLEAN                                  AS has_ldap,\n    override::BOOLEAN                              AS has_override,\n    \"DBT_VALID_FROM\"::TIMESTAMP                    AS valid_from,\n    \"DBT_VALID_TO\"::TIMESTAMP                      AS valid_to\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_members_snapshots", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:24.388712Z", "completed_at": "2025-06-09T18:47:24.424293Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:24.435107Z", "completed_at": "2025-06-09T18:47:37.483131Z"}], "thread_id": "Thread-3", "execution_time": 13.122575759887695, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_group_group_links_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_group_group_links\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_group_group_links_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:27.904650Z", "completed_at": "2025-06-09T18:47:27.912102Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:27.912395Z", "completed_at": "2025-06-09T18:47:38.273766Z"}], "thread_id": "Thread-9", "execution_time": 10.369729042053223, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_issue_links_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_issue_links\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_issue_links_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:24.455829Z", "completed_at": "2025-06-09T18:47:24.486102Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:24.489120Z", "completed_at": "2025-06-09T18:47:38.280623Z"}], "thread_id": "Thread-13", "execution_time": 13.858922958374023, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_group_audit_events_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_group_audit_events\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY created_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_group_audit_events_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:27.973191Z", "completed_at": "2025-06-09T18:47:27.991108Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:27.991652Z", "completed_at": "2025-06-09T18:47:38.282030Z"}], "thread_id": "Thread-24", "execution_time": 10.317522764205933, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_issues_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_issues\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:26.881847Z", "completed_at": "2025-06-09T18:47:26.897619Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:26.908164Z", "completed_at": "2025-06-09T18:47:38.285997Z"}], "thread_id": "Thread-5", "execution_time": 11.417734146118164, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_incident_management_timeline_event_tag_links_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_incident_management_timeline_event_tag_links\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY created_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_incident_management_timeline_event_tag_links_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:34.095152Z", "completed_at": "2025-06-09T18:47:34.104141Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:34.104557Z", "completed_at": "2025-06-09T18:47:38.309298Z"}], "thread_id": "Thread-32", "execution_time": 4.2305381298065186, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_lfs_file_locks_dedupe_source (models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_lfs_file_locks_dedupe_source.sql)\n  000200: DataFusion error: Optimizer rule 'common_sub_expression_eliminate' failed\n  caused by\n  Error during planning: Window has mismatch between number of expressions (1) and number of fields in schema (0)\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_lfs_file_locks_dedupe_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_lfs_file_locks_dedupe_source", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_lfs_file_locks\n\n)\n\n, max_task_instance AS (\n    SELECT MAX(_task_instance) AS max_column_value\n    FROM base\n    WHERE RIGHT( _task_instance, 8) = (\n\n                                SELECT MAX(RIGHT( _task_instance, 8))\n                                FROM base )\n\n), filtered AS (\n\n    SELECT *\n    FROM base\n    WHERE _task_instance = (\n\n                            SELECT max_column_value\n                            FROM max_task_instance\n\n                            )\n    -- Keep only the latest state of the data,\n    -- if we have multiple records per day\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1\n)\n\nSELECT *\nFROM filtered", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_lfs_file_locks_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:27.667879Z", "completed_at": "2025-06-09T18:47:27.688880Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:27.689466Z", "completed_at": "2025-06-09T18:47:39.370664Z"}], "thread_id": "Thread-28", "execution_time": 11.716026067733765, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_integrations_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_integrations\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_integrations_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:27.657038Z", "completed_at": "2025-06-09T18:47:27.675072Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:27.675675Z", "completed_at": "2025-06-09T18:47:40.669213Z"}], "thread_id": "Thread-21", "execution_time": 13.015475034713745, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_incident_management_timeline_events_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_incident_management_timeline_events\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_incident_management_timeline_events_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:26.723420Z", "completed_at": "2025-06-09T18:47:26.729023Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:26.729320Z", "completed_at": "2025-06-09T18:47:41.969296Z"}], "thread_id": "Thread-6", "execution_time": 15.247357845306396, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_identities_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_identities\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_identities_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:26.870161Z", "completed_at": "2025-06-09T18:47:26.880802Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:26.887941Z", "completed_at": "2025-06-09T18:47:43.269672Z"}], "thread_id": "Thread-8", "execution_time": 16.4053738117218, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_incident_management_issuable_escalation_statuses_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_incident_management_issuable_escalation_statuses\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_incident_management_issuable_escalation_statuses_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:30.840780Z", "completed_at": "2025-06-09T18:47:30.850044Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:30.853480Z", "completed_at": "2025-06-09T18:47:44.571152Z"}], "thread_id": "Thread-12", "execution_time": 13.737441062927246, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_jira_tracker_data_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_jira_tracker_data\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_jira_tracker_data_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:27.788522Z", "completed_at": "2025-06-09T18:47:27.827215Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:27.827677Z", "completed_at": "2025-06-09T18:47:45.871991Z"}], "thread_id": "Thread-17", "execution_time": 18.084156036376953, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_issuable_severities_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_issuable_severities\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_issuable_severities_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:26.919137Z", "completed_at": "2025-06-09T18:47:26.925223Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:26.925518Z", "completed_at": "2025-06-09T18:47:47.170680Z"}], "thread_id": "Thread-11", "execution_time": 20.274386882781982, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_incident_management_timeline_event_tags_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_incident_management_timeline_event_tags\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_incident_management_timeline_event_tags_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:35.086687Z", "completed_at": "2025-06-09T18:47:47.174857Z"}], "thread_id": "Thread-20", "execution_time": 12.123001098632812, "adapter_response": {}, "message": "Compilation Error in model gitlab_dotcom_members_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_members_source.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro distinct_source (macros/utils/distinct_source.sql)\n  > called by model gitlab_dotcom_members_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_members_source.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_members_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_members_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:27.965444Z", "completed_at": "2025-06-09T18:47:27.982733Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:27.983444Z", "completed_at": "2025-06-09T18:47:48.470776Z"}], "thread_id": "Thread-15", "execution_time": 20.510257959365845, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_issue_metrics_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_issue_metrics\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_issue_metrics_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:31.714590Z", "completed_at": "2025-06-09T18:47:31.723135Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:31.723435Z", "completed_at": "2025-06-09T18:47:50.110505Z"}], "thread_id": "Thread-4", "execution_time": 18.39681100845337, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_keys_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_keys\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_keys_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:30.781009Z", "completed_at": "2025-06-09T18:47:30.805877Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:30.807548Z", "completed_at": "2025-06-09T18:47:51.068438Z"}], "thread_id": "Thread-16", "execution_time": 20.294530153274536, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_jira_connect_subscriptions_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_jira_connect_subscriptions\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_jira_connect_subscriptions_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:37.485620Z", "completed_at": "2025-06-09T18:47:51.171294Z"}], "thread_id": "Thread-3", "execution_time": 13.705607175827026, "adapter_response": {}, "message": "Compilation Error in model gitlab_dotcom_merge_request_reviewers_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_merge_request_reviewers_source.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro distinct_source (macros/utils/distinct_source.sql)\n  > called by model gitlab_dotcom_merge_request_reviewers_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_merge_request_reviewers_source.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_request_reviewers_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_reviewers_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:30.045708Z", "completed_at": "2025-06-09T18:47:30.052230Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:30.052523Z", "completed_at": "2025-06-09T18:47:52.575188Z"}], "thread_id": "Thread-29", "execution_time": 22.530128002166748, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_issues_internal_only_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_issues_internal_only\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_issues_internal_only_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:36.092377Z", "completed_at": "2025-06-09T18:47:36.138732Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:36.139274Z", "completed_at": "2025-06-09T18:47:52.594118Z"}], "thread_id": "Thread-18", "execution_time": 16.514305591583252, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_merge_request_diff_commit_users_dedupe_source (models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_merge_request_diff_commit_users_dedupe_source.sql)\n  000200: DataFusion error: Optimizer rule 'common_sub_expression_eliminate' failed\n  caused by\n  Error during planning: Window has mismatch between number of expressions (1) and number of fields in schema (0)\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_merge_request_diff_commit_users_dedupe_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_request_diff_commit_users_dedupe_source", "compiled": true, "compiled_code": "WITH base AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_postgres.gitlab_db_merge_request_diff_commit_users\n\n)\n\n, max_task_instance AS (\n    SELECT MAX(_task_instance) AS max_column_value\n    FROM base\n    WHERE RIGHT( _task_instance, 8) = (\n\n                                SELECT MAX(RIGHT( _task_instance, 8))\n                                FROM base )\n\n), filtered AS (\n\n    SELECT *\n    FROM base\n    WHERE _task_instance = (\n\n                            SELECT max_column_value\n                            FROM max_task_instance\n\n                            )\n    -- Keep only the latest state of the data,\n    -- if we have multiple records per day\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1\n)\n\nSELECT *\nFROM filtered", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_diff_commit_users_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:34.063223Z", "completed_at": "2025-06-09T18:47:34.091286Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:34.111819Z", "completed_at": "2025-06-09T18:47:53.870312Z"}], "thread_id": "Thread-31", "execution_time": 19.811686038970947, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_label_priorities_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_label_priorities\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_label_priorities_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:34.164621Z", "completed_at": "2025-06-09T18:47:34.231373Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:34.255391Z", "completed_at": "2025-06-09T18:47:55.069750Z"}], "thread_id": "Thread-10", "execution_time": 20.976234197616577, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_labels_internal_only_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_labels_internal_only\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_labels_internal_only_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:32.242336Z", "completed_at": "2025-06-09T18:47:32.256287Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:32.256657Z", "completed_at": "2025-06-09T18:47:56.370461Z"}], "thread_id": "Thread-1", "execution_time": 24.12872290611267, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_label_links_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_label_links\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_label_links_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:34.196161Z", "completed_at": "2025-06-09T18:47:34.260149Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:34.273033Z", "completed_at": "2025-06-09T18:47:57.669820Z"}], "thread_id": "Thread-27", "execution_time": 23.489909887313843, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_lfs_objects_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_lfs_objects\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_lfs_objects_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:34.246162Z", "completed_at": "2025-06-09T18:47:34.271632Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:34.293653Z", "completed_at": "2025-06-09T18:47:58.970190Z"}], "thread_id": "Thread-19", "execution_time": 24.777589797973633, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_member_roles_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_member_roles\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_member_roles_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:30.797481Z", "completed_at": "2025-06-09T18:47:30.814971Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:30.827136Z", "completed_at": "2025-06-09T18:48:00.270492Z"}], "thread_id": "Thread-22", "execution_time": 29.493834018707275, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_jira_imports_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_jira_imports\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_jira_imports_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:34.159396Z", "completed_at": "2025-06-09T18:47:34.195038Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:34.225717Z", "completed_at": "2025-06-09T18:48:02.439175Z"}], "thread_id": "Thread-25", "execution_time": 28.349661827087402, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ldap_group_links_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ldap_group_links\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ldap_group_links_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:34.140931Z", "completed_at": "2025-06-09T18:47:34.174861Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:34.260566Z", "completed_at": "2025-06-09T18:48:03.268655Z"}], "thread_id": "Thread-2", "execution_time": 29.17011308670044, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_labels_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_labels\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_labels_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:34.153871Z", "completed_at": "2025-06-09T18:47:34.188919Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:34.232626Z", "completed_at": "2025-06-09T18:48:04.791080Z"}], "thread_id": "Thread-14", "execution_time": 30.637889862060547, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_members_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_members\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_members_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:34.212053Z", "completed_at": "2025-06-09T18:47:34.265434Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:34.281599Z", "completed_at": "2025-06-09T18:48:05.871447Z"}], "thread_id": "Thread-30", "execution_time": 31.680511951446533, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_lists_dedupe_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_lists\n\n), partitioned AS (\n\n    SELECT *\n    FROM source\n\n    \n\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n), renamed AS (\n\n    SELECT\n      id               AS id,\n      board_id         AS board_id,\n      label_id         AS label_id,\n      list_type        AS list_type,\n      position         AS position,\n      created_at       AS created_at,\n      updated_at       AS updated_at,\n      user_id::NUMBER  AS user_id,\n      milestone_id     AS milestone_id,\n      max_issue_count  AS max_issue_count,\n      max_issue_weight AS max_issue_weight,\n      limit_metric     AS limit_metric,\n      _uploaded_at     AS _uploaded_at\n    FROM partitioned\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_lists_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:43.272721Z", "completed_at": "2025-06-09T18:47:43.276812Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:43.277081Z", "completed_at": "2025-06-09T18:48:05.889055Z"}], "thread_id": "Thread-8", "execution_time": 22.629040956497192, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_namespace_details_snapshots_source (models/legacy/snapshots/base/gitlab_dotcom_namespace_details_snapshots_source.sql)\n  000200: DataFusion error: Schema error: No field named \"DBT_VALID_FROM\". Valid fields are snapshots.namespace_id, snapshots.created_at, snapshots.updated_at, snapshots.free_user_cap_over_limt_notified_at, snapshots.free_user_cap_over_limit_notified_at, snapshots.dashboard_notification_at, snapshots.dashboard_enforcement_at, snapshots._uploaded_at, snapshots.dbt_scd_id, snapshots.dbt_updated_at, snapshots.dbt_valid_from, snapshots.dbt_valid_to.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_namespace_details_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_details_snapshots_source", "compiled": true, "compiled_code": "WITH snapshots AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".snapshots.gitlab_dotcom_namespace_details_snapshots\n    \n), renamed as (\n\n  SELECT\n    dbt_scd_id::VARCHAR                                           AS namespace_details_snapshot_id,\n    namespace_id::NUMBER                                          AS namespace_id,\n    free_user_cap_over_limit_notified_at::TIMESTAMP               AS free_user_cap_over_limit_notified_at,\n    dashboard_notification_at::TIMESTAMP                          AS dashboard_notification_at,\n    dashboard_enforcement_at::TIMESTAMP                           AS dashboard_enforcement_at,\n    created_at::TIMESTAMP                                         AS created_at,\n    updated_at::TIMESTAMP                                         AS updated_at,\n    \n    \"DBT_VALID_FROM\"::TIMESTAMP                                   AS valid_from,\n    \"DBT_VALID_TO\"::TIMESTAMP                                     AS valid_to\n  FROM snapshots\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_namespace_details_snapshots_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:51.194189Z", "completed_at": "2025-06-09T18:47:51.198035Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:51.198355Z", "completed_at": "2025-06-09T18:48:07.560655Z"}], "thread_id": "Thread-3", "execution_time": 16.373213052749634, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_namespaces_snapshots_base (models/legacy/snapshots/base/gitlab_dotcom_namespaces_snapshots_base.sql)\n  000200: DataFusion error: Schema error: No field named \"DBT_VALID_FROM\". Valid fields are snapshots.id, snapshots.name, snapshots.path, snapshots.owner_id, snapshots.created_at, snapshots.updated_at, snapshots.type, snapshots.avatar, snapshots.membership_lock, snapshots.share_with_group_lock, snapshots.visibility_level, snapshots.request_access_enabled, snapshots.ldap_sync_status, snapshots.ldap_sync_error, snapshots.ldap_sync_last_update_at, snapshots.ldap_sync_last_successful_update_at, snapshots.ldap_sync_last_sync_at, snapshots.lfs_enabled, snapshots.parent_id, snapshots.shared_runners_minutes_limit, snapshots.repository_size_limit, snapshots.require_two_factor_authentication, snapshots.two_factor_grace_period, snapshots.plan_id, snapshots.project_creation_level, snapshots.auto_devops_enabled, snapshots._uploaded_at, snapshots.namespaces_rank_in_key, snapshots.dbt_scd_id, snapshots.dbt_updated_at, snapshots.dbt_valid_from, snapshots.dbt_valid_to, snapshots.extra_shared_runners_minutes_limit, snapshots.push_rule_id, snapshots.shared_runners_enabled, snapshots.custom_project_templates_group_id, snapshots.traversal_ids, snapshots.pgp_is_deleted, snapshots.pgp_is_deleted_updated_at.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_namespaces_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespaces_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH snapshots AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".snapshots.gitlab_dotcom_namespaces_snapshots\n    \n), renamed as (\n\n  SELECT\n    dbt_scd_id::VARCHAR                                           AS namespace_snapshot_id,\n    id::NUMBER                                                    AS namespace_id,\n    name::VARCHAR                                                 AS namespace_name,\n    path::VARCHAR                                                 AS namespace_path,\n    owner_id::NUMBER                                              AS owner_id,\n    IFNULL(type,'User')::VARCHAR                                  AS namespace_type,\n    IFF(avatar IS NULL, FALSE, TRUE)                              AS has_avatar,\n    created_at::TIMESTAMP                                         AS namespace_created_at,\n    updated_at::TIMESTAMP                                         AS namespace_updated_at,\n    membership_lock::BOOLEAN                                      AS is_membership_locked,\n    request_access_enabled::BOOLEAN                               AS has_request_access_enabled,\n    share_with_group_lock::BOOLEAN                                AS has_share_with_group_locked,\n    CASE\n      WHEN visibility_level = '20' THEN 'public'\n      WHEN visibility_level = '10' THEN 'internal'\n      ELSE 'private'\n    END                                                           AS visibility_level,\n    ldap_sync_status,\n    ldap_sync_error,\n    ldap_sync_last_update_at::TIMESTAMP                           AS ldap_sync_last_update_at,\n    ldap_sync_last_successful_update_at::TIMESTAMP                AS ldap_sync_last_successful_update_at,\n    ldap_sync_last_sync_at::TIMESTAMP                             AS ldap_sync_last_sync_at,\n    lfs_enabled::BOOLEAN                                          AS lfs_enabled,\n    parent_id::NUMBER                                             AS parent_id,\n    shared_runners_enabled::BOOLEAN                               AS shared_runners_enabled,\n    shared_runners_minutes_limit::NUMBER                          AS shared_runners_minutes_limit,\n    extra_shared_runners_minutes_limit::NUMBER                    AS extra_shared_runners_minutes_limit,\n    repository_size_limit::NUMBER                                 AS repository_size_limit,\n    require_two_factor_authentication::BOOLEAN                    AS does_require_two_factor_authentication,\n    two_factor_grace_period::NUMBER                               AS two_factor_grace_period,\n    project_creation_level::NUMBER                                AS project_creation_level,\n    push_rule_id::NUMBER                                          AS push_rule_id,\n    \"DBT_VALID_FROM\"::TIMESTAMP                                   AS valid_from,\n    \"DBT_VALID_TO\"::TIMESTAMP                                     AS valid_to\n  FROM snapshots\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_namespaces_snapshots", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:45.874927Z", "completed_at": "2025-06-09T18:47:45.879452Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:45.879870Z", "completed_at": "2025-06-09T18:48:07.747346Z"}], "thread_id": "Thread-17", "execution_time": 21.878068923950195, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_namespace_root_storage_statistics_snapshots_base (models/legacy/snapshots/base/gitlab_dotcom_namespace_root_storage_statistics_snapshots_base.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_namespace_root_storage_statistics_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_root_storage_statistics_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.gitlab_dotcom_namespace_root_storage_statistics_snapshots\n    \n), renamed as (\n\n    SELECT\n        dbt_scd_id::VARCHAR                                           AS namespace_storage_statistics_snapshot_id,\n        namespace_id::NUMBER                                         AS namespace_id,\n        repository_size::NUMBER                                      AS repository_size,\n        lfs_objects_size::NUMBER                                     AS lfs_objects_size,\n        wiki_size::NUMBER                                            AS wiki_size,\n        build_artifacts_size::NUMBER                                 AS build_artifacts_size,\n        storage_size::NUMBER                                         AS storage_size,\n        packages_size::NUMBER                                        AS packages_size,\n        container_registry_size::NUMBER                              AS container_registry_size,\n        dbt_valid_from::TIMESTAMP                                     AS valid_from,\n        dbt_valid_to::TIMESTAMP                                       AS valid_to\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_namespace_root_storage_statistics_snapshots", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:48.473272Z", "completed_at": "2025-06-09T18:47:48.476897Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:48.477181Z", "completed_at": "2025-06-09T18:48:07.802567Z"}], "thread_id": "Thread-15", "execution_time": 19.337733030319214, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_namespace_statistics_snapshots_base (models/legacy/snapshots/base/gitlab_dotcom_namespace_statistics_snapshots_base.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_namespace_statistics_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_statistics_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.gitlab_dotcom_namespace_statistics_snapshots\n    \n), renamed as (\n\n  SELECT\n  \n    dbt_scd_id::VARCHAR                                           AS namespace_statistics_snapshot_id,\n    id::NUMBER                                                   AS namespace_statistics_id,\n    namespace_id::NUMBER                                         AS namespace_id,\n    shared_runners_seconds::NUMBER                               AS shared_runners_seconds,\n    shared_runners_seconds_last_reset::TIMESTAMP                  AS shared_runners_seconds_last_reset,\n    dbt_valid_from::TIMESTAMP                                     AS valid_from,\n    dbt_valid_to::TIMESTAMP                                       AS valid_to\n\n  FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_namespace_statistics_snapshots", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:36.158899Z", "completed_at": "2025-06-09T18:47:36.164913Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:36.165221Z", "completed_at": "2025-06-09T18:48:07.870087Z"}], "thread_id": "Thread-23", "execution_time": 31.712701082229614, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_request_metrics_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_merge_request_metrics\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_metrics_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:36.625391Z", "completed_at": "2025-06-09T18:47:36.632032Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:36.632335Z", "completed_at": "2025-06-09T18:48:09.171322Z"}], "thread_id": "Thread-7", "execution_time": 32.54656410217285, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_request_predictions_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_merge_request_predictions\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY merge_request_id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_predictions_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:36.113861Z", "completed_at": "2025-06-09T18:47:36.120703Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:36.121007Z", "completed_at": "2025-06-09T18:48:10.580098Z"}], "thread_id": "Thread-26", "execution_time": 34.46878004074097, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_request_diffs_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_merge_request_diffs\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_diffs_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:38.337986Z", "completed_at": "2025-06-09T18:47:38.364469Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:38.365621Z", "completed_at": "2025-06-09T18:48:12.054099Z"}], "thread_id": "Thread-9", "execution_time": 33.723002910614014, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_requests_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_merge_requests\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_requests_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:02.441986Z", "completed_at": "2025-06-09T18:48:02.445317Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:02.445582Z", "completed_at": "2025-06-09T18:48:12.989283Z"}], "thread_id": "Thread-25", "execution_time": 10.552511930465698, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_path_locks_dedupe_source (models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_path_locks_dedupe_source.sql)\n  000200: DataFusion error: Optimizer rule 'common_sub_expression_eliminate' failed\n  caused by\n  Error during planning: Window has mismatch between number of expressions (1) and number of fields in schema (0)\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_path_locks_dedupe_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_path_locks_dedupe_source", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_path_locks\n\n)\n\n, max_task_instance AS (\n    SELECT MAX(_task_instance) AS max_column_value\n    FROM base\n    WHERE RIGHT( _task_instance, 8) = (\n\n                                SELECT MAX(RIGHT( _task_instance, 8))\n                                FROM base )\n\n), filtered AS (\n\n    SELECT *\n    FROM base\n    WHERE _task_instance = (\n\n                            SELECT max_column_value\n                            FROM max_task_instance\n\n                            )\n    -- Keep only the latest state of the data,\n    -- if we have multiple records per day\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1\n)\n\nSELECT *\nFROM filtered", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_path_locks_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:38.377458Z", "completed_at": "2025-06-09T18:47:38.396171Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:38.398342Z", "completed_at": "2025-06-09T18:48:13.408406Z"}], "thread_id": "Thread-32", "execution_time": 35.04332637786865, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_milestones_internal_only_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_milestones_internal_only\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_milestones_internal_only_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:38.344736Z", "completed_at": "2025-06-09T18:47:38.364837Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:38.370725Z", "completed_at": "2025-06-09T18:48:14.870744Z"}], "thread_id": "Thread-13", "execution_time": 36.538081884384155, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_requests_internal_only_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_merge_requests_internal_only\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_requests_internal_only_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:38.356960Z", "completed_at": "2025-06-09T18:47:38.376596Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:38.383373Z", "completed_at": "2025-06-09T18:48:16.172138Z"}], "thread_id": "Thread-5", "execution_time": 37.83871912956238, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_milestones_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_milestones\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_milestones_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:38.350488Z", "completed_at": "2025-06-09T18:47:38.376881Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:38.388365Z", "completed_at": "2025-06-09T18:48:17.571506Z"}], "thread_id": "Thread-24", "execution_time": 39.238439083099365, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_milestone_releases_dedupe_source", "compiled": true, "compiled_code": "\n\nWITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_milestone_releases\n    \n    QUALIFY ROW_NUMBER() OVER (PARTITION BY milestone_id, release_id ORDER BY _uploaded_at DESC) = 1\n\n), renamed AS (\n\n    SELECT md5(cast(coalesce(cast(milestone_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(release_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS primary_key,\n           milestone_id::INT                                             AS milestone_id,\n           release_id::INT                                               AS release_id,\n           _uploaded_at                                                  AS _uploaded_at\n    FROM base\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_milestone_releases_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:04.793732Z", "completed_at": "2025-06-09T18:48:04.797394Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:04.797654Z", "completed_at": "2025-06-09T18:48:17.776037Z"}], "thread_id": "Thread-14", "execution_time": 12.988653898239136, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_pipl_users_snapshots_source (models/legacy/snapshots/base/gitlab_dotcom_pipl_users_snapshots_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.snapshots.gitlab_dotcom_pipl_users_snapshots' not found\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_pipl_users_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_pipl_users_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM RAW.snapshots.gitlab_dotcom_pipl_users_snapshots\n\n    QUALIFY ROW_NUMBER() OVER (\n    PARTITION BY \n        dbt_valid_from::DATE, \n        user_id \n    ORDER BY dbt_valid_from DESC\n    ) = 1\n\n), renamed AS(\n\n    SELECT\n\n      -- ids\n      dbt_scd_id                                                        AS pipl_user_snapshot_id,\n      user_id                                                           AS user_id,\n     \n      -- attributes\n      initial_email_sent_at                                             AS initial_email_sent_at,\n      last_access_from_pipl_country_at                                  AS last_access_from_pipl_country_at,\n\n      -- metadata\n      created_at                                                        AS created_at,\n      updated_at                                                        AS updated_at,\n\n      --dbt last run\n      CURRENT_TIMESTAMP()                                               AS _last_dbt_run,\n\n      -- snapshot metadata\n      dbt_updated_at,\n      dbt_valid_from                                                   AS valid_from,\n      dbt_valid_to                                                     AS valid_to\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_pipl_users_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:39.373336Z", "completed_at": "2025-06-09T18:47:39.378776Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:39.379209Z", "completed_at": "2025-06-09T18:48:19.270272Z"}], "thread_id": "Thread-28", "execution_time": 39.89775586128235, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ml_candidates_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ml_candidates\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ml_candidates_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:07.874719Z", "completed_at": "2025-06-09T18:48:07.883173Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:07.883469Z", "completed_at": "2025-06-09T18:48:20.677648Z"}], "thread_id": "Thread-23", "execution_time": 12.809348821640015, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_project_ci_cd_settings_snapshots_base (models/legacy/snapshots/base/gitlab_dotcom_project_ci_cd_settings_snapshots_base.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'conditional_true_event'.\n  Did you mean 'percentile_cont'?\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_project_ci_cd_settings_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_ci_cd_settings_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH project_ci_cd_settings AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_postgres.gitlab_db_project_ci_cd_settings\n\n),\n\n\n\nsource AS (\n\n  SELECT\n    *,\n    TO_TIMESTAMP(_uploaded_at::INT)                                         AS uploaded_at,\n    md5(cast(coalesce(cast(project_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(group_runners_enabled as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(merge_pipelines_enabled as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(default_git_depth as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(forward_deployment_enabled as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(merge_trains_enabled as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(auto_rollback_enabled as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(keep_latest_artifact as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(restrict_user_defined_variables as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(job_token_scope_enabled as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(runner_token_expiration_interval as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(separated_caches as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(allow_fork_pipelines_to_run_in_parent_project as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(inbound_job_token_scope_enabled as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))                                                                      AS record_checksum\n  FROM project_ci_cd_settings\n  \n  \n\n),\n\nbase AS (\n\n  SELECT\n    *,\n    LEAD(_uploaded_at) OVER (PARTITION BY id ORDER BY _uploaded_at)          AS next_uploaded_at,\n    LAG(record_checksum, 1, '') OVER (PARTITION BY id ORDER BY _uploaded_at) AS lag_checksum,\n    CONDITIONAL_TRUE_EVENT(record_checksum != lag_checksum)\n      OVER (PARTITION BY id ORDER BY _uploaded_at)                           AS checksum_group\n  FROM source\n\n),\n\ngrouped AS (\n\n  SELECT\n    id                                   AS project_ci_cd_settings_snapshot_id,\n    project_id,\n    group_runners_enabled,\n    merge_pipelines_enabled,\n    default_git_depth,\n    forward_deployment_enabled,\n    merge_trains_enabled,\n    auto_rollback_enabled,\n    keep_latest_artifact,\n    restrict_user_defined_variables,\n    job_token_scope_enabled,\n    runner_token_expiration_interval,\n    separated_caches,\n    allow_fork_pipelines_to_run_in_parent_project,\n    inbound_job_token_scope_enabled,\n    MIN(uploaded_at)                        AS uploaded_at,\n    TO_TIMESTAMP(MIN(_uploaded_at)::INT)    AS valid_from,\n    IFF(\n      MAX(COALESCE(next_uploaded_at, 9999999999) = 9999999999),\n      NULL, TO_TIMESTAMP(MAX(next_uploaded_at)::INT)\n    )                                       AS valid_to\n  FROM base\n  GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, checksum_group\n\n)\n\nSELECT\n  *,\n  md5(cast(coalesce(cast(project_ci_cd_settings_snapshot_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(valid_from as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))                                              AS project_ci_cd_settings_snapshot_pk\nFROM grouped", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_project_ci_cd_settings_snapshot", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:41.971827Z", "completed_at": "2025-06-09T18:47:41.977314Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:41.977619Z", "completed_at": "2025-06-09T18:48:20.669900Z"}], "thread_id": "Thread-6", "execution_time": 38.698891162872314, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_details_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_namespace_details\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY namespace_id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespace_details_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:47.176530Z", "completed_at": "2025-06-09T18:47:47.189225Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:47.197219Z", "completed_at": "2025-06-09T18:48:22.079874Z"}], "thread_id": "Thread-11", "execution_time": 34.90409016609192, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_settings_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_namespace_settings\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY namespace_id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespace_settings_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:40.672346Z", "completed_at": "2025-06-09T18:47:40.678525Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:40.678803Z", "completed_at": "2025-06-09T18:48:23.368486Z"}], "thread_id": "Thread-21", "execution_time": 42.69702100753784, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ml_experiments_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ml_experiments\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ml_experiments_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:47.214611Z", "completed_at": "2025-06-09T18:47:47.220850Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:47.221302Z", "completed_at": "2025-06-09T18:48:24.669930Z"}], "thread_id": "Thread-20", "execution_time": 37.45960307121277, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_statistics_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_namespace_statistics\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespace_statistics_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:52.578824Z", "completed_at": "2025-06-09T18:47:52.594296Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:52.594665Z", "completed_at": "2025-06-09T18:48:26.071229Z"}], "thread_id": "Thread-29", "execution_time": 33.49322295188904, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_notes_dedupe_source", "compiled": true, "compiled_code": "\n\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_notes\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_notes_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:51.071106Z", "completed_at": "2025-06-09T18:47:51.077607Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:51.077945Z", "completed_at": "2025-06-09T18:48:27.369293Z"}], "thread_id": "Thread-16", "execution_time": 36.29882216453552, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespaces_internal_only_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_namespaces_internal_only\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespaces_internal_only_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:44.574204Z", "completed_at": "2025-06-09T18:47:44.580136Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:44.580481Z", "completed_at": "2025-06-09T18:48:28.670223Z"}], "thread_id": "Thread-12", "execution_time": 44.09686088562012, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_root_storage_statistics_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_namespace_root_storage_statistics\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY namespace_id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespace_root_storage_statistics_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:52.611761Z", "completed_at": "2025-06-09T18:47:52.618044Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:52.618496Z", "completed_at": "2025-06-09T18:48:29.970838Z"}], "thread_id": "Thread-18", "execution_time": 37.360029220581055, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_notes_internal_only_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_notes_internal_only\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_notes_internal_only_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:50.897715Z", "completed_at": "2025-06-09T18:47:50.903066Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:50.903338Z", "completed_at": "2025-06-09T18:48:31.270879Z"}], "thread_id": "Thread-4", "execution_time": 40.373948097229004, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespaces_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_namespaces\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:53.872898Z", "completed_at": "2025-06-09T18:47:53.879212Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:53.879552Z", "completed_at": "2025-06-09T18:48:32.670269Z"}], "thread_id": "Thread-31", "execution_time": 38.79806089401245, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_notification_settings_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_notification_settings\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_notification_settings_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:00.273206Z", "completed_at": "2025-06-09T18:48:00.278946Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:00.279204Z", "completed_at": "2025-06-09T18:48:33.968930Z"}], "thread_id": "Thread-22", "execution_time": 33.69636797904968, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_pages_domains_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_pages_domains\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_pages_domains_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:58.972544Z", "completed_at": "2025-06-09T18:47:58.978412Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:58.978725Z", "completed_at": "2025-06-09T18:48:35.369431Z"}], "thread_id": "Thread-19", "execution_time": 36.39746379852295, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_packages_packages_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_packages_packages\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_packages_packages_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:56.372780Z", "completed_at": "2025-06-09T18:47:56.379039Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:56.379383Z", "completed_at": "2025-06-09T18:48:36.669736Z"}], "thread_id": "Thread-1", "execution_time": 40.29755091667175, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_onboarding_progresses_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_onboarding_progresses\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_onboarding_progresses_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:57.672173Z", "completed_at": "2025-06-09T18:47:57.677866Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:57.678278Z", "completed_at": "2025-06-09T18:48:38.070046Z"}], "thread_id": "Thread-27", "execution_time": 40.39847707748413, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_operations_feature_flags_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_operations_feature_flags\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_operations_feature_flags_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:47:55.072553Z", "completed_at": "2025-06-09T18:47:55.078576Z"}, {"name": "execute", "started_at": "2025-06-09T18:47:55.078925Z", "completed_at": "2025-06-09T18:48:39.370643Z"}], "thread_id": "Thread-10", "execution_time": 44.29901623725891, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_oauth_access_tokens_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_oauth_access_tokens\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_oauth_access_tokens_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:14.873882Z", "completed_at": "2025-06-09T18:48:39.543534Z"}], "thread_id": "Thread-13", "execution_time": 24.699871063232422, "adapter_response": {}, "message": "Compilation Error in model gitlab_dotcom_project_group_links_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_project_group_links_source.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro distinct_source (macros/utils/distinct_source.sql)\n  > called by model gitlab_dotcom_project_group_links_source (models/sources/gitlab_dotcom/renamed/scd/gitlab_dotcom_project_group_links_source.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_group_links_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_group_links_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:03.271697Z", "completed_at": "2025-06-09T18:48:03.277444Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:03.277837Z", "completed_at": "2025-06-09T18:48:41.469998Z"}], "thread_id": "Thread-2", "execution_time": 38.19916009902954, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_pipl_users_dedupe_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_pipl_users\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_pipl_users_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:05.906420Z", "completed_at": "2025-06-09T18:48:05.913544Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:05.913966Z", "completed_at": "2025-06-09T18:48:42.771461Z"}], "thread_id": "Thread-8", "execution_time": 36.86801266670227, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_pool_repositories_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_pool_repositories\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_pool_repositories_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:05.876158Z", "completed_at": "2025-06-09T18:48:05.889448Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:05.889852Z", "completed_at": "2025-06-09T18:48:44.067763Z"}], "thread_id": "Thread-30", "execution_time": 38.192787885665894, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_plans_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_plans\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_plans_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:07.573589Z", "completed_at": "2025-06-09T18:48:07.582270Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:07.582566Z", "completed_at": "2025-06-09T18:48:45.870205Z"}], "thread_id": "Thread-3", "execution_time": 38.2976930141449, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_programming_languages_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_programming_languages\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_programming_languages_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:07.756054Z", "completed_at": "2025-06-09T18:48:07.762475Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:07.762762Z", "completed_at": "2025-06-09T18:48:47.171508Z"}], "thread_id": "Thread-17", "execution_time": 39.41735601425171, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_auto_devops_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_auto_devops\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_auto_devops_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:07.819309Z", "completed_at": "2025-06-09T18:48:07.827842Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:07.828189Z", "completed_at": "2025-06-09T18:48:48.672310Z"}], "thread_id": "Thread-15", "execution_time": 40.85772967338562, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_ci_cd_settings_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_ci_cd_settings\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_ci_cd_settings_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:27.372037Z", "completed_at": "2025-06-09T18:48:27.375966Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:27.376237Z", "completed_at": "2025-06-09T18:48:48.975216Z"}], "thread_id": "Thread-16", "execution_time": 21.61477017402649, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_projects_snapshots_base (models/legacy/snapshots/base/gitlab_dotcom_projects_snapshots_base.sql)\n  000200: DataFusion error: Error during planning: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'lower(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tlower(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_projects_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_projects_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.gitlab_dotcom_projects_snapshots\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                                                 AS project_id,\n      description::VARCHAR                                                        AS project_description,\n      import_source::VARCHAR                                                      AS project_import_source,\n      issues_template::VARCHAR                                                    AS project_issues_template,\n      name::VARCHAR                                                               AS project_name,\n      path::VARCHAR                                                               AS project_path,\n      import_url::VARCHAR                                                         AS project_import_url,\n      merge_requests_template                                                     AS project_merge_requests_template,\n\n      created_at::TIMESTAMP                                                       AS created_at,\n      updated_at::TIMESTAMP                                                       AS updated_at,\n\n      creator_id::NUMBER                                                          AS creator_id,\n      namespace_id::NUMBER                                                        AS namespace_id,\n\n      last_activity_at::TIMESTAMP                                                 AS last_activity_at,\n\n      CASE\n        WHEN visibility_level = '20' THEN 'public'\n        WHEN visibility_level = '10' THEN 'internal'\n        ELSE 'private'\n      END::VARCHAR                                                                AS visibility_level,\n\n      true::BOOLEAN                                                           AS archived,\n\n      IFF(avatar IS NULL, FALSE, TRUE)::BOOLEAN                                   AS has_avatar,\n\n      star_count::NUMBER                                                         AS project_star_count,\n      true::BOOLEAN                                      AS merge_requests_rebase_enabled,\n      IFF(LOWER(import_type) = 'nan', NULL, import_type)                          AS import_type,\n      approvals_before_merge::NUMBER                                             AS approvals_before_merge,\n      true::BOOLEAN                                            AS reset_approvals_on_push,\n      true::BOOLEAN                                     AS merge_requests_ff_only_enabled,\n      true::BOOLEAN                                                             AS mirror,\n      mirror_user_id::NUMBER                                                     AS mirror_user_id,\n      true::BOOLEAN                                             AS shared_runners_enabled,\n      true::BOOLEAN                                              AS build_allow_git_fetch,\n      build_timeout::NUMBER                                                      AS build_timeout,\n      true::BOOLEAN                                              AS mirror_trigger_builds,\n      true::BOOLEAN                                                     AS pending_delete,\n      true::BOOLEAN                                                      AS public_builds,\n      true::BOOLEAN                                       AS last_repository_check_failed,\n      last_repository_check_at::TIMESTAMP                                         AS last_repository_check_at,\n      true::BOOLEAN                                         AS container_registry_enabled,\n      true::BOOLEAN                              AS only_allow_merge_if_pipeline_succeeds,\n      true::BOOLEAN                                         AS has_external_issue_tracker,\n      repository_storage,\n      true::BOOLEAN                                               AS repository_read_only,\n      true::BOOLEAN                                             AS request_access_enabled,\n      true::BOOLEAN                                                  AS has_external_wiki,\n      ci_config_path,\n      true::BOOLEAN                                                        AS lfs_enabled,\n      true::BOOLEAN                   AS only_allow_merge_if_all_discussions_are_resolved,\n      repository_size_limit::NUMBER                                              AS repository_size_limit,\n      true::BOOLEAN                                AS printing_merge_request_link_enabled,\n      IFF(auto_cancel_pending_pipelines :: int = 1, TRUE, FALSE)                  AS has_auto_canceling_pending_pipelines,\n      true::BOOLEAN                                               AS service_desk_enabled,\n      IFF(LOWER(delete_error) = 'nan', NULL, delete_error)                        AS delete_error,\n      last_repository_updated_at::TIMESTAMP                                       AS last_repository_updated_at,\n      storage_version::NUMBER                                                    AS storage_version,\n      true::BOOLEAN                                  AS resolve_outdated_diff_discussions,\n      true::BOOLEAN                     AS disable_overriding_approvers_per_merge_request,\n      true::BOOLEAN                                 AS remote_mirror_available_overridden,\n      true::BOOLEAN                                     AS only_mirror_protected_branches,\n      true::BOOLEAN                                   AS pull_mirror_available_overridden,\n      true::BOOLEAN                                AS mirror_overwrites_diverged_branches,\n      external_authorization_classification_label,\n      project_namespace_id::NUMBER AS project_namespace_id,\n      dbt_valid_from::TIMESTAMP                                                   AS valid_from,\n      dbt_valid_to::TIMESTAMP                                                     AS valid_to\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_projects_snapshots", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:23.371018Z", "completed_at": "2025-06-09T18:48:23.375454Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:23.375727Z", "completed_at": "2025-06-09T18:48:48.980766Z"}], "thread_id": "Thread-21", "execution_time": 25.622556924819946, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_project_statistics_snapshots_base (models/legacy/snapshots/base/gitlab_dotcom_project_statistics_snapshots_base.sql)\n  000200: DataFusion error: Schema error: No field named \"DBT_VALID_FROM\". Valid fields are source.id, source.project_id, source.namespace_id, source.commit_count, source.storage_size, source.repository_size, source.lfs_objects_size, source.build_artifacts_size, source.shared_runners_seconds, source.shared_runners_seconds_last_reset, source._uploaded_at, source.dbt_scd_id, source.dbt_updated_at, source.dbt_valid_from, source.dbt_valid_to, source.packages_size, source.wiki_size, source.snippets_size, source.uploads_size, source.container_registry_size.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_project_statistics_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_statistics_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.gitlab_dotcom_project_statistics_snapshots\n\n), renamed AS (\n\n    SELECT\n      dbt_scd_id::VARCHAR                             AS project_statistics_snapshot_id,\n      id::NUMBER                                      AS project_statistics_id,\n      project_id::NUMBER                              AS project_id,\n      namespace_id::NUMBER                            AS namespace_id,\n      commit_count::NUMBER                            AS commit_count,\n      storage_size::NUMBER                            AS storage_size,\n      repository_size::NUMBER                         AS repository_size,\n      container_registry_size::NUMBER                 AS container_registry_size,\n      lfs_objects_size::NUMBER                        AS lfs_objects_size,\n      build_artifacts_size::NUMBER                    AS build_artifacts_size,\n      packages_size::NUMBER                           AS packages_size,\n      wiki_size::NUMBER                               AS wiki_size,\n      shared_runners_seconds::NUMBER                  AS shared_runners_seconds,\n      shared_runners_seconds_last_reset::TIMESTAMP    AS last_update_started_at,\n      DATEADD('sec', _uploaded_at, '1970-01-01')      AS uploaded_at,\n      \"DBT_VALID_FROM\"::TIMESTAMP                     AS valid_from,\n      \"DBT_VALID_TO\"::TIMESTAMP                       AS valid_to\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_project_statistics_snapshot", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:12.057721Z", "completed_at": "2025-06-09T18:48:12.065143Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:12.065446Z", "completed_at": "2025-06-09T18:48:50.679563Z"}], "thread_id": "Thread-9", "execution_time": 38.62258791923523, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_feature_usages_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_feature_usages\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY project_id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_feature_usages_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:10.583785Z", "completed_at": "2025-06-09T18:48:10.591623Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:10.591983Z", "completed_at": "2025-06-09T18:48:51.969788Z"}], "thread_id": "Thread-26", "execution_time": 41.387207984924316, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_error_tracking_settings_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_error_tracking_settings\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY project_id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_error_tracking_settings_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:09.176127Z", "completed_at": "2025-06-09T18:48:09.185179Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:09.185485Z", "completed_at": "2025-06-09T18:48:53.369338Z"}], "thread_id": "Thread-7", "execution_time": 44.19427013397217, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_compliance_framework_settings_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_compliance_framework_settings\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY project_id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_compliance_framework_settings_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:35.371965Z", "completed_at": "2025-06-09T18:48:35.378446Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:35.378722Z", "completed_at": "2025-06-09T18:48:55.096909Z"}], "thread_id": "Thread-19", "execution_time": 19.732140064239502, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_releases_dedupe_source (models/sources/gitlab_dotcom/dedupe/gitlab_dotcom_releases_dedupe_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/dedupe/gitlab_dotcom_releases_dedupe_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_releases_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT \n  id::NUMBER AS id,\n  tag::VARCHAR AS tag,\n  description::VARCHAR AS description,\n  project_id::NUMBER AS project_id,\n  created_at::TIMESTAMP AS created_at,\n  updated_at::TIMESTAMP AS updated_at,\n  author_id::NUMBER AS author_id,\n  sha::VARCHAR AS sha,\n  _uploaded_at::FLOAT AS _uploaded_at\nFROM EMBUCKET.tap_postgres.gitlab_db_releases\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_releases_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:12.996862Z", "completed_at": "2025-06-09T18:48:13.002384Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:13.002639Z", "completed_at": "2025-06-09T18:48:55.371019Z"}], "thread_id": "Thread-25", "execution_time": 42.37505602836609, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_features_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_features\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_features_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:16.175126Z", "completed_at": "2025-06-09T18:48:16.181033Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:16.181450Z", "completed_at": "2025-06-09T18:48:56.974331Z"}], "thread_id": "Thread-5", "execution_time": 40.799906969070435, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_import_data_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_import_data\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_import_data_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:13.411144Z", "completed_at": "2025-06-09T18:48:13.416637Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:13.416904Z", "completed_at": "2025-06-09T18:48:58.270330Z"}], "thread_id": "Thread-32", "execution_time": 44.859965085983276, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_group_links_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_group_links\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_group_links_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:17.784646Z", "completed_at": "2025-06-09T18:48:17.790255Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:17.790540Z", "completed_at": "2025-06-09T18:48:59.669796Z"}], "thread_id": "Thread-14", "execution_time": 41.88578701019287, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_mirror_data_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_mirror_data\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_mirror_data_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:17.574590Z", "completed_at": "2025-06-09T18:48:17.581450Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:17.581731Z", "completed_at": "2025-06-09T18:49:01.072892Z"}], "thread_id": "Thread-24", "execution_time": 43.49904799461365, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_incident_management_settings_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_incident_management_settings\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY project_id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_incident_management_settings_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:19.277775Z", "completed_at": "2025-06-09T18:48:19.284209Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:19.284571Z", "completed_at": "2025-06-09T18:49:02.332591Z"}], "thread_id": "Thread-28", "execution_time": 43.05555987358093, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_repositories_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_repositories\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_repositories_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:22.083743Z", "completed_at": "2025-06-09T18:48:22.089842Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:22.090186Z", "completed_at": "2025-06-09T18:49:03.870344Z"}], "thread_id": "Thread-11", "execution_time": 41.78729319572449, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_statistics_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_statistics\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_statistics_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:47.174871Z", "completed_at": "2025-06-09T18:48:47.178336Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:47.178712Z", "completed_at": "2025-06-09T18:49:04.470656Z"}], "thread_id": "Thread-17", "execution_time": 17.296679258346558, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_routes_dedupe_source", "compiled": true, "compiled_code": "SELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_routes\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_routes_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:21.504281Z", "completed_at": "2025-06-09T18:48:21.520884Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:21.521365Z", "completed_at": "2025-06-09T18:49:05.272178Z"}], "thread_id": "Thread-23", "execution_time": 43.76914024353027, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_security_settings_dedupe_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_security_settings\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY project_id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_security_settings_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:21.510116Z", "completed_at": "2025-06-09T18:48:21.515361Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:21.515728Z", "completed_at": "2025-06-09T18:49:06.670969Z"}], "thread_id": "Thread-6", "execution_time": 45.167513847351074, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_settings_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_project_settings\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY project_id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_settings_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:48.683547Z", "completed_at": "2025-06-09T18:48:48.687990Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:48.688296Z", "completed_at": "2025-06-09T18:49:06.770133Z"}], "thread_id": "Thread-15", "execution_time": 18.087213039398193, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_routes_internal_only_dedupe_source", "compiled": true, "compiled_code": "SELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_routes_internal_only\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_routes_internal_only_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:26.074123Z", "completed_at": "2025-06-09T18:48:26.079801Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:26.080145Z", "completed_at": "2025-06-09T18:49:08.070056Z"}], "thread_id": "Thread-29", "execution_time": 41.996564865112305, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_projects_internal_only_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_projects_internal_only\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_projects_internal_only_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:29.973725Z", "completed_at": "2025-06-09T18:48:29.979663Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:29.979936Z", "completed_at": "2025-06-09T18:49:09.370827Z"}], "thread_id": "Thread-18", "execution_time": 39.397817850112915, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_protected_branch_push_access_levels_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_protected_branch_push_access_levels\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_protected_branch_push_access_levels_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:24.672474Z", "completed_at": "2025-06-09T18:48:24.678317Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:24.678656Z", "completed_at": "2025-06-09T18:49:10.770765Z"}], "thread_id": "Thread-20", "execution_time": 46.09897017478943, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_projects_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_projects\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:32.673681Z", "completed_at": "2025-06-09T18:48:32.681307Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:32.681723Z", "completed_at": "2025-06-09T18:49:12.070020Z"}], "thread_id": "Thread-31", "execution_time": 39.39742112159729, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_protected_environments_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_protected_environments\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_protected_environments_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:28.673225Z", "completed_at": "2025-06-09T18:48:28.679105Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:28.679380Z", "completed_at": "2025-06-09T18:49:13.469235Z"}], "thread_id": "Thread-12", "execution_time": 44.797003984451294, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_protected_branch_merge_access_levels_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_protected_branch_merge_access_levels\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_protected_branch_merge_access_levels_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:31.274032Z", "completed_at": "2025-06-09T18:48:31.280090Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:31.280517Z", "completed_at": "2025-06-09T18:49:14.769977Z"}], "thread_id": "Thread-4", "execution_time": 43.49663734436035, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_protected_environment_approval_rules_dedupe_source", "compiled": true, "compiled_code": "\n \nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_protected_environment_approval_rules\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_protected_environment_approval_rules_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:33.971511Z", "completed_at": "2025-06-09T18:48:33.977433Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:33.977707Z", "completed_at": "2025-06-09T18:49:16.171228Z"}], "thread_id": "Thread-22", "execution_time": 42.20043110847473, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_related_epic_links_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_related_epic_links\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_related_epic_links_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:36.672577Z", "completed_at": "2025-06-09T18:48:36.678285Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:36.678555Z", "completed_at": "2025-06-09T18:49:17.569655Z"}], "thread_id": "Thread-1", "execution_time": 40.898082971572876, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_remote_mirrors_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_remote_mirrors\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_remote_mirrors_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:38.073037Z", "completed_at": "2025-06-09T18:48:38.078696Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:38.078963Z", "completed_at": "2025-06-09T18:49:18.869791Z"}], "thread_id": "Thread-27", "execution_time": 40.79753589630127, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_repository_languages_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_repository_languages\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY project_programming_language_id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_repository_languages_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:39.583447Z", "completed_at": "2025-06-09T18:48:39.589542Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:39.589966Z", "completed_at": "2025-06-09T18:49:20.270187Z"}], "thread_id": "Thread-13", "execution_time": 40.687604904174805, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_resource_iteration_events_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_resource_iteration_events\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_resource_iteration_events_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:39.373657Z", "completed_at": "2025-06-09T18:48:39.379445Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:39.379731Z", "completed_at": "2025-06-09T18:49:21.568851Z"}], "thread_id": "Thread-10", "execution_time": 42.196067810058594, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_requirements_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_requirements\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_requirements_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:41.472379Z", "completed_at": "2025-06-09T18:48:41.477866Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:41.478129Z", "completed_at": "2025-06-09T18:49:22.970186Z"}], "thread_id": "Thread-2", "execution_time": 41.498412132263184, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_resource_label_events_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_resource_label_events\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_resource_label_events_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:42.774552Z", "completed_at": "2025-06-09T18:48:42.780229Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:42.780505Z", "completed_at": "2025-06-09T18:49:24.452008Z"}], "thread_id": "Thread-8", "execution_time": 41.67833876609802, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_resource_milestone_events_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_resource_milestone_events\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_resource_milestone_events_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:44.070730Z", "completed_at": "2025-06-09T18:48:44.077349Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:44.077713Z", "completed_at": "2025-06-09T18:49:25.868506Z"}], "thread_id": "Thread-30", "execution_time": 41.79855990409851, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_resource_weight_events_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_resource_weight_events\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_resource_weight_events_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:45.872874Z", "completed_at": "2025-06-09T18:48:45.878620Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:45.878903Z", "completed_at": "2025-06-09T18:49:27.271866Z"}], "thread_id": "Thread-3", "execution_time": 41.399901390075684, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_reviews_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_reviews\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_reviews_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:03.874753Z", "completed_at": "2025-06-09T18:49:03.884924Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:03.885449Z", "completed_at": "2025-06-09T18:49:28.307598Z"}], "thread_id": "Thread-11", "execution_time": 24.44035315513611, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_subscription_add_on_purchases_snapshots_base (models/legacy/snapshots/base/gitlab_dotcom_subscription_add_on_purchases_snapshots_base.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/gitlab_dotcom_subscription_add_on_purchases_snapshots_base.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscription_add_on_purchases_snapshots_base", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.gitlab_dotcom_subscription_add_on_purchases_snapshots\n    \n), renamed AS (\n\n  SELECT\n    id::NUMBER                                                      AS id,\n    created_at::TIMESTAMP                                           AS created_at,\n    updated_at::TIMESTAMP                                           AS updated_at,\n    subscription_add_on_id::NUMBER                                  AS subscription_add_on_id,\n    namespace_id::NUMBER                                            AS namespace_id,\n    quantity::NUMBER                                                AS quantity,\n    expires_on::TIMESTAMP                                           AS expires_on,\n    purchase_xid::VARCHAR                                           AS purchase_xid,\n    dbt_valid_from::TIMESTAMP                                       AS valid_from,\n    dbt_valid_to::TIMESTAMP                                         AS valid_to\n  FROM source\n    \n), final AS (\n\n  SELECT \n    renamed.id,\n    renamed.created_at,\n    renamed.updated_at,\n    renamed.subscription_add_on_id,\n    renamed.namespace_id,\n    renamed.quantity,\n    renamed.expires_on,\n    -- This is an temprary addition until the base table is fixed.\n    -- More details about the existing issues with the base table (https://gitlab.com/gitlab-data/product-analytics/-/issues/2244#note_2183442993)\n    CASE \n      -- Handle specific cases where upgrades occurred before snapshot creation\n      WHEN renamed.purchase_xid IN ('A-S00017713','A-S00031556','A-S00043856','A-S00078868','A-S00096791','A-S00107013') THEN renamed.updated_at\n      -- Detect upgrades/downgrades by comparing current and previous subscription_add_on_id\n      WHEN renamed.subscription_add_on_id != LAG(renamed.subscription_add_on_id) OVER (PARTITION BY renamed.namespace_id ORDER BY renamed.valid_from) THEN valid_from\n      -- Default case: use created_at for all other scenarios\n      ELSE renamed.created_at\n    END                                                             AS corrected_purchase_date,\n    -- If the subscription upgrades then the existing purchase will be valid till the next purchase, \n    CASE\n      -- sometimes expires_on is future dated in those cases valid_to will be used\n      WHEN renamed.valid_to IS NOT NULL THEN renamed.valid_to::DATE\n      -- if valid_to is null and expires_on is not future dated then use expires_on\n      WHEN renamed.expires_on <= CURRENT_DATE() THEN renamed.expires_on::DATE\n      -- for all other scenarios use current date\n      ELSE CURRENT_DATE()\n    END                                                             AS corrected_expires_on_date,\n    renamed.purchase_xid,\n    renamed.valid_from,\n    renamed.valid_to\n  FROM renamed\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_subscription_add_on_purchases_snapshots", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:48.998662Z", "completed_at": "2025-06-09T18:48:49.010693Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:49.011018Z", "completed_at": "2025-06-09T18:49:29.071947Z"}], "thread_id": "Thread-16", "execution_time": 40.07539463043213, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_saml_group_links_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_saml_group_links\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_saml_group_links_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:49.004909Z", "completed_at": "2025-06-09T18:48:49.017142Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:49.017576Z", "completed_at": "2025-06-09T18:49:30.803052Z"}], "thread_id": "Thread-21", "execution_time": 41.80484080314636, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_saml_providers_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_saml_providers\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_saml_providers_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:50.683621Z", "completed_at": "2025-06-09T18:48:50.690794Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:50.691287Z", "completed_at": "2025-06-09T18:49:32.270681Z"}], "thread_id": "Thread-9", "execution_time": 41.587708950042725, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_security_orchestration_policy_configurations_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_security_orchestration_policy_configurations\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_security_orchestration_policy_configurations_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:51.972572Z", "completed_at": "2025-06-09T18:48:51.978311Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:51.978578Z", "completed_at": "2025-06-09T18:49:33.877188Z"}], "thread_id": "Thread-26", "execution_time": 41.90549683570862, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_security_scans_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_security_scans\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_security_scans_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:53.372124Z", "completed_at": "2025-06-09T18:48:53.378286Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:53.378595Z", "completed_at": "2025-06-09T18:49:35.398702Z"}], "thread_id": "Thread-7", "execution_time": 42.02744102478027, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_sentry_issues_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_sentry_issues\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_sentry_issues_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:55.374332Z", "completed_at": "2025-06-09T18:48:55.381847Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:55.382140Z", "completed_at": "2025-06-09T18:49:36.637559Z"}], "thread_id": "Thread-25", "execution_time": 41.26420521736145, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_snippets_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_snippets\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_snippets_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:17.572688Z", "completed_at": "2025-06-09T18:49:17.577763Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:17.578173Z", "completed_at": "2025-06-09T18:49:36.881933Z"}], "thread_id": "Thread-1", "execution_time": 19.314698934555054, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_user_details_snapshots_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_user_details_snapshots_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_user_details_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_user_details_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.gitlab_dotcom_user_details_snapshots\n\n), renamed AS (\n\n    SELECT\n      user_id::NUMBER AS user_id,\n      job_title::VARCHAR AS job_title,\n      registration_objective::NUMBER AS registration_objective,\n      dbt_valid_from::TIMESTAMP AS dbt_valid_from,\n      dbt_valid_to::TIMESTAMP AS dbt_valid_to\n    FROM source\n    \n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_user_details_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:55.112247Z", "completed_at": "2025-06-09T18:48:55.118740Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:55.119034Z", "completed_at": "2025-06-09T18:49:38.070541Z"}], "thread_id": "Thread-19", "execution_time": 42.96144723892212, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_slack_integrations_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_slack_integrations\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_slack_integrations_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:59.672419Z", "completed_at": "2025-06-09T18:48:59.678606Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:59.678940Z", "completed_at": "2025-06-09T18:49:39.570742Z"}], "thread_id": "Thread-14", "execution_time": 39.89913892745972, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_status_page_published_incidents_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_status_page_published_incidents\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_status_page_published_incidents_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:21.571745Z", "completed_at": "2025-06-09T18:49:21.575032Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:21.575310Z", "completed_at": "2025-06-09T18:49:39.591463Z"}], "thread_id": "Thread-10", "execution_time": 18.034017086029053, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_user_preferences_source_non_dedupe (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_user_preferences_source_non_dedupe.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_user_preferences_source_non_dedupe.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_user_preferences_source_non_dedupe", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_user_preferences\n\n), renamed AS (\n\n    SELECT\n      user_id::NUMBER                     AS user_id,\n      issue_notes_filter::VARCHAR         AS issue_notes_filter,\n      merge_request_notes_filter::VARCHAR AS merge_request_notes_filter,\n      created_at::TIMESTAMP               AS created_at,\n      updated_at::TIMESTAMP               AS updated_at,\n      epics_sort::VARCHAR                 AS epic_sort,\n      roadmap_epics_state::VARCHAR        AS roadmap_epics_state,\n      epic_notes_filter::VARCHAR          AS epic_notes_filter,\n      issues_sort::VARCHAR                AS issues_sort,\n      merge_requests_sort::VARCHAR        AS merge_requests_sort,\n      roadmaps_sort::VARCHAR              AS roadmaps_sort,\n      first_day_of_week::VARCHAR          AS first_day_of_week,\n      timezone::VARCHAR                   AS timezone,\n      true::BOOLEAN      AS time_display_relative,\n      true::BOOLEAN         AS time_format_in_24h,\n      projects_sort::VARCHAR              AS projects_sort,\n      true::BOOLEAN   AS show_whitespace_in_diffs,\n      true::BOOLEAN        AS sourcegraph_enabled,\n      true::BOOLEAN          AS setup_for_company,\n      true::BOOLEAN  AS render_whitespace_in_code,\n      tab_width::VARCHAR                  AS tab_width,\n      experience_level::NUMBER            AS experience_level,\n      true::BOOLEAN    AS view_diffs_file_by_file\n\n    FROM source\n\n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_user_preferences_source_non_dedupe", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:20.272728Z", "completed_at": "2025-06-09T18:49:20.277031Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:20.277390Z", "completed_at": "2025-06-09T18:49:39.591698Z"}], "thread_id": "Thread-13", "execution_time": 19.33905005455017, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_user_preferences_snapshots_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_user_preferences_snapshots_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_user_preferences_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_user_preferences_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.gitlab_dotcom_user_preferences_snapshots\n\n), renamed AS (\n\n    SELECT\n      user_id::NUMBER AS user_id,\n      issue_notes_filter::VARCHAR AS issue_notes_filter,\n      merge_request_notes_filter::VARCHAR AS merge_request_notes_filter,\n      created_at::TIMESTAMP AS created_at,\n      updated_at::TIMESTAMP AS updated_at,\n      epics_sort::VARCHAR   AS epic_sort,\n      roadmap_epics_state::VARCHAR AS roadmap_epics_state,\n      epic_notes_filter::VARCHAR AS epic_notes_filter,\n      issues_sort::VARCHAR AS issues_sort,\n      merge_requests_sort::VARCHAR AS merge_requests_sort,\n      roadmaps_sort::VARCHAR AS roadmaps_sort,\n      first_day_of_week::VARCHAR AS first_day_of_week,\n      timezone::VARCHAR AS timezone,\n      time_display_relative::BOOLEAN AS time_display_relative,\n      time_format_in_24h::BOOLEAN AS time_format_in_24h,\n      projects_sort::VARCHAR AS projects_sort,\n      show_whitespace_in_diffs::BOOLEAN AS show_whitespace_in_diffs,\n      sourcegraph_enabled::BOOLEAN AS sourcegraph_enabled,\n      setup_for_company::BOOLEAN AS setup_for_company,\n      render_whitespace_in_code::BOOLEAN AS render_whitespace_in_code,\n      tab_width::VARCHAR AS tab_width,\n      experience_level::NUMBER AS experience_level,\n      view_diffs_file_by_file::BOOLEAN AS view_diffs_file_by_file,\n      dbt_valid_from::TIMESTAMP AS dbt_valid_from,\n      dbt_valid_to::TIMESTAMP AS dbt_valid_to\n    FROM source\n    \n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_user_preferences_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:57.765475Z", "completed_at": "2025-06-09T18:48:57.771526Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:57.771845Z", "completed_at": "2025-06-09T18:49:41.070589Z"}], "thread_id": "Thread-5", "execution_time": 43.305800914764404, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_sprints_internal_only_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_sprints_internal_only\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_sprints_internal_only_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:48:58.273198Z", "completed_at": "2025-06-09T18:48:59.034630Z"}, {"name": "execute", "started_at": "2025-06-09T18:48:59.034928Z", "completed_at": "2025-06-09T18:49:42.472715Z"}], "thread_id": "Thread-32", "execution_time": 44.2003710269928, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ssh_signatures_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_ssh_signatures\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ssh_signatures_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:02.335403Z", "completed_at": "2025-06-09T18:49:02.342583Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:02.342871Z", "completed_at": "2025-06-09T18:49:43.769852Z"}], "thread_id": "Thread-28", "execution_time": 41.43524694442749, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscription_add_on_purchases_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_subscription_add_on_purchases\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscription_add_on_purchases_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:01.075702Z", "completed_at": "2025-06-09T18:49:01.081385Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:01.081667Z", "completed_at": "2025-06-09T18:49:45.373541Z"}], "thread_id": "Thread-24", "execution_time": 44.29857397079468, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_status_page_settings_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_status_page_settings\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY project_id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_status_page_settings_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:06.772787Z", "completed_at": "2025-06-09T18:49:06.778709Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:06.779013Z", "completed_at": "2025-06-09T18:49:46.870279Z"}], "thread_id": "Thread-15", "execution_time": 40.09830093383789, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscriptions_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_subscriptions\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscriptions_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:05.275034Z", "completed_at": "2025-06-09T18:49:05.281169Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:05.281644Z", "completed_at": "2025-06-09T18:49:48.371201Z"}], "thread_id": "Thread-23", "execution_time": 43.096871852874756, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscription_user_add_on_assignment_versions_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_subscription_user_add_on_assignment_versions\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscription_user_add_on_assignment_versions_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:06.673996Z", "completed_at": "2025-06-09T18:49:06.681008Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:06.681299Z", "completed_at": "2025-06-09T18:49:49.770963Z"}], "thread_id": "Thread-6", "execution_time": 43.09791111946106, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscription_user_add_on_assignments_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_subscription_user_add_on_assignments\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscription_user_add_on_assignments_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:29.079429Z", "completed_at": "2025-06-09T18:49:29.084401Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:29.084792Z", "completed_at": "2025-06-09T18:49:50.884342Z"}], "thread_id": "Thread-16", "execution_time": 21.810581922531128, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_vulnerability_reads_dedupe_source (models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_vulnerability_reads_dedupe_source.sql)\n  000200: DataFusion error: Optimizer rule 'common_sub_expression_eliminate' failed\n  caused by\n  Error during planning: Window has mismatch between number of expressions (1) and number of fields in schema (0)\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/dedupe/scd/gitlab_dotcom_vulnerability_reads_dedupe_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerability_reads_dedupe_source", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_db_vulnerability_reads\n\n)\n\n, max_task_instance AS (\n    SELECT MAX(_task_instance) AS max_column_value\n    FROM base\n    WHERE RIGHT( _task_instance, 8) = (\n\n                                SELECT MAX(RIGHT( _task_instance, 8))\n                                FROM base )\n\n), filtered AS (\n\n    SELECT *\n    FROM base\n    WHERE _task_instance = (\n\n                            SELECT max_column_value\n                            FROM max_task_instance\n\n                            )\n    -- Keep only the latest state of the data,\n    -- if we have multiple records per day\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1\n)\n\nSELECT *\nFROM filtered", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerability_reads_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:08.072747Z", "completed_at": "2025-06-09T18:49:08.078492Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:08.078758Z", "completed_at": "2025-06-09T18:49:51.169655Z"}], "thread_id": "Thread-29", "execution_time": 43.097740173339844, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_suggestions_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_suggestions\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_suggestions_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:04.473525Z", "completed_at": "2025-06-09T18:49:04.479770Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:04.480034Z", "completed_at": "2025-06-09T18:49:52.570037Z"}], "thread_id": "Thread-17", "execution_time": 48.09736967086792, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscription_add_ons_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_subscription_add_ons\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscription_add_ons_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:12.072822Z", "completed_at": "2025-06-09T18:49:12.078896Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:12.079158Z", "completed_at": "2025-06-09T18:49:53.971591Z"}], "thread_id": "Thread-31", "execution_time": 41.89969611167908, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_todos_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_todos\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_todos_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:09.373346Z", "completed_at": "2025-06-09T18:49:09.379395Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:09.379676Z", "completed_at": "2025-06-09T18:49:55.784333Z"}], "thread_id": "Thread-18", "execution_time": 46.411699295043945, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_system_note_metadata_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_system_note_metadata\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_system_note_metadata_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:10.773623Z", "completed_at": "2025-06-09T18:49:10.779195Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:10.779461Z", "completed_at": "2025-06-09T18:49:56.870183Z"}], "thread_id": "Thread-20", "execution_time": 46.097352027893066, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_terraform_states_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_terraform_states\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_terraform_states_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:13.472200Z", "completed_at": "2025-06-09T18:49:13.478228Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:13.478523Z", "completed_at": "2025-06-09T18:49:58.606309Z"}], "thread_id": "Thread-12", "execution_time": 45.13497495651245, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_uploads_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_uploads\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_uploads_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:14.772670Z", "completed_at": "2025-06-09T18:49:14.778566Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:14.778837Z", "completed_at": "2025-06-09T18:49:59.570169Z"}], "thread_id": "Thread-4", "execution_time": 44.798218965530396, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_user_custom_attributes_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_user_custom_attributes\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_user_custom_attributes_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:16.174582Z", "completed_at": "2025-06-09T18:49:16.181245Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:16.181529Z", "completed_at": "2025-06-09T18:50:02.052226Z"}], "thread_id": "Thread-22", "execution_time": 45.87838816642761, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_user_details_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_user_details\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_user_details_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:22.973166Z", "completed_at": "2025-06-09T18:49:22.980129Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:22.980412Z", "completed_at": "2025-06-09T18:50:02.370303Z"}], "thread_id": "Thread-2", "execution_time": 39.397828817367554, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_users_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_users\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_users_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:39.625281Z", "completed_at": "2025-06-09T18:49:39.634941Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:39.635891Z", "completed_at": "2025-06-09T18:50:03.913722Z"}], "thread_id": "Thread-13", "execution_time": 24.300941944122314, "adapter_response": {}, "message": "Database Error in model gitlab_ops_ci_builds_source (models/sources/gitlab_ops/gitlab_ops_ci_builds_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_ops/gitlab_ops_ci_builds_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_ci_builds_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_postgres.gitlab_ops_db_ci_builds\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1\n\n), renamed AS (\n\n  SELECT\n    id::NUMBER                        AS ci_build_id,\n    status::VARCHAR                   AS status,\n    finished_at::TIMESTAMP            AS finished_at,\n    created_at::TIMESTAMP             AS created_at,\n    updated_at::TIMESTAMP             AS updated_at,\n    started_at::TIMESTAMP             AS started_at,\n    runner_id::NUMBER                 AS ci_build_runner_id,\n    coverage::VARCHAR                 AS coverage,\n    commit_id::NUMBER                 AS ci_build_commit_id,\n    name::VARCHAR                     AS ci_build_name,\n    options::VARCHAR                  AS options,\n    allow_failure::VARCHAR            AS allow_failure,\n    trigger_request_id::NUMBER        AS ci_build_trigger_request_id,\n    stage_idx::NUMBER                 AS stage_idx,\n    tag::VARCHAR                      AS tag,\n    ref::VARCHAR                      AS ref,\n    user_id::NUMBER                   AS ci_build_user_id,\n    type::VARCHAR                     AS type,\n    description::VARCHAR              AS description,\n    project_id::NUMBER                AS ci_build_project_id,\n    erased_by_id::NUMBER              AS ci_build_erased_by_id,\n    erased_at::TIMESTAMP              AS ci_build_erased_at,\n    artifacts_expire_at::TIMESTAMP    AS ci_build_artifacts_expire_at,\n    environment::VARCHAR              AS environment,\n    queued_at::TIMESTAMP              AS ci_build_queued_at,\n    lock_version::VARCHAR             AS lock_version,\n    coverage_regex::VARCHAR           AS coverage_regex,\n    auto_canceled_by_id::NUMBER       AS ci_build_auto_canceled_by_id,\n    retried::BOOLEAN                  AS retried,\n    stage_id::NUMBER                  AS ci_build_stage_id,\n    protected::BOOLEAN                AS protected,\n    failure_reason::VARCHAR           AS failure_reason,\n    scheduled_at::TIMESTAMP           AS ci_build_scheduled_at,\n    upstream_pipeline_id::NUMBER      AS upstream_pipeline_id\n  FROM source\n\n)\n\n\nSELECT *\nFROM renamed\nORDER BY updated_at", "relation_name": "EMBUCKET.gitlab_ops.gitlab_ops_ci_builds_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:18.872749Z", "completed_at": "2025-06-09T18:49:18.879070Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:18.879341Z", "completed_at": "2025-06-09T18:50:04.171532Z"}], "thread_id": "Thread-27", "execution_time": 45.29985690116882, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_user_preferences_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_user_preferences\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_user_preferences_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:43.772820Z", "completed_at": "2025-06-09T18:50:04.181955Z"}], "thread_id": "Thread-28", "execution_time": 20.44621706008911, "adapter_response": {}, "message": "Compilation Error in model gitlab_ops_label_links_source (models/sources/gitlab_ops/gitlab_ops_label_links_source.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro distinct_source (macros/utils/distinct_source.sql)\n  > called by model gitlab_ops_label_links_source (models/sources/gitlab_ops/gitlab_ops_label_links_source.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_label_links_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_ops.gitlab_ops_label_links_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:46.874513Z", "completed_at": "2025-06-09T18:50:04.191683Z"}], "thread_id": "Thread-15", "execution_time": 17.37019991874695, "adapter_response": {}, "message": "Compilation Error in model gitlab_ops_members_source (models/sources/gitlab_ops/gitlab_ops_members_source.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro distinct_source (macros/utils/distinct_source.sql)\n  > called by model gitlab_ops_members_source (models/sources/gitlab_ops/gitlab_ops_members_source.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_members_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_ops.gitlab_ops_members_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:27.275081Z", "completed_at": "2025-06-09T18:49:27.283695Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:27.286589Z", "completed_at": "2025-06-09T18:50:05.553621Z"}], "thread_id": "Thread-3", "execution_time": 38.27939033508301, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerability_identifiers_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_vulnerability_identifiers\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerability_identifiers_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:45.376906Z", "completed_at": "2025-06-09T18:49:45.380502Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:45.380787Z", "completed_at": "2025-06-09T18:50:05.686559Z"}], "thread_id": "Thread-24", "execution_time": 20.316429138183594, "adapter_response": {}, "message": "Database Error in model gitlab_ops_labels_source (models/sources/gitlab_ops/gitlab_ops_labels_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_ops/gitlab_ops_labels_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_labels_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_postgres.gitlab_ops_db_labels\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n),\nrenamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS label_id,\n      title                                      AS label_title,\n      color,\n      source.project_id::NUMBER                 AS project_id,\n      group_id::NUMBER                          AS group_id,\n      template,\n      type                                       AS label_type,\n      created_at::TIMESTAMP                      AS created_at,\n      updated_at::TIMESTAMP                      AS updated_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_ops.gitlab_ops_labels_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:41.073125Z", "completed_at": "2025-06-09T18:49:41.079034Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:41.079311Z", "completed_at": "2025-06-09T18:50:05.687510Z"}], "thread_id": "Thread-5", "execution_time": 24.631511688232422, "adapter_response": {}, "message": "Database Error in model gitlab_ops_ci_pipelines_source (models/sources/gitlab_ops/gitlab_ops_ci_pipelines_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_ops/gitlab_ops_ci_pipelines_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_ci_pipelines_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_ops_db_ci_pipelines\n    WHERE created_at IS NOT NULL\n  \n    \n    \n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n), renamed AS (\n  \n    SELECT\n      id::NUMBER                    AS ci_pipeline_id, \n      created_at::TIMESTAMP         AS created_at, \n      updated_at::TIMESTAMP         AS updated_at,\n      ref::VARCHAR                  AS ref,\n      tag::BOOLEAN                  AS has_tag, \n      yaml_errors::VARCHAR          AS yaml_errors, \n      committed_at::TIMESTAMP       AS committed_at, \n      project_id::NUMBER            AS project_id, \n      status::VARCHAR               AS status, \n      started_at::TIMESTAMP         AS started_at, \n      finished_at::TIMESTAMP        AS finished_at, \n      duration::NUMBER              AS ci_pipeline_duration, \n      user_id::NUMBER               AS user_id, \n      lock_version::NUMBER          AS lock_version, \n      auto_canceled_by_id::NUMBER   AS auto_canceled_by_id, \n      pipeline_schedule_id::NUMBER  AS pipeline_schedule_id, \n      source::NUMBER                AS ci_pipeline_source, \n      config_source::NUMBER         AS config_source, \n      protected::BOOLEAN            AS is_protected, \n      failure_reason::VARCHAR       AS failure_reason, \n      iid::NUMBER                   AS ci_pipeline_iid, \n      merge_request_id::NUMBER      AS merge_request_id \n    FROM source\n\n)\n\nSELECT *\nFROM renamed\nORDER BY updated_at", "relation_name": "EMBUCKET.gitlab_ops.gitlab_ops_ci_pipelines_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:42.475947Z", "completed_at": "2025-06-09T18:49:42.481398Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:42.481676Z", "completed_at": "2025-06-09T18:50:05.687219Z"}], "thread_id": "Thread-32", "execution_time": 23.222650051116943, "adapter_response": {}, "message": "Database Error in model gitlab_ops_ci_stages_source (models/sources/gitlab_ops/gitlab_ops_ci_stages_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_ops/gitlab_ops_ci_stages_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_ci_stages_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_postgres.gitlab_ops_db_ci_stages\n  WHERE created_at IS NOT NULL\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n  \n    \n\n), renamed AS (\n  \n  SELECT\n    id::NUMBER            AS ci_stage_id,\n    project_id::NUMBER    AS project_id,\n    pipeline_id::NUMBER   AS pipeline_id,\n    created_at::TIMESTAMP AS created_at,\n    updated_at::TIMESTAMP AS updated_at,\n    name::VARCHAR         AS ci_stage_name,\n    status::NUMBER        AS ci_stage_status,\n    lock_version::NUMBER  AS lock_version,\n    position::NUMBER      AS position\n  FROM source\n\n)\n\nSELECT *\nFROM renamed\nORDER BY updated_at", "relation_name": "EMBUCKET.gitlab_ops.gitlab_ops_ci_stages_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:28.317375Z", "completed_at": "2025-06-09T18:49:28.326021Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:28.326424Z", "completed_at": "2025-06-09T18:50:06.970738Z"}], "thread_id": "Thread-11", "execution_time": 38.65401577949524, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerability_occurrences_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_vulnerability_occurrences\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerability_occurrences_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:24.455035Z", "completed_at": "2025-06-09T18:49:24.461329Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:24.461648Z", "completed_at": "2025-06-09T18:50:08.370290Z"}], "thread_id": "Thread-8", "execution_time": 43.916003942489624, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_users_ops_dashboard_projects_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_users_ops_dashboard_projects\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_users_ops_dashboard_projects_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:25.871113Z", "completed_at": "2025-06-09T18:49:25.878747Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:25.879168Z", "completed_at": "2025-06-09T18:50:09.670595Z"}], "thread_id": "Thread-30", "execution_time": 43.80014514923096, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerabilities_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_vulnerabilities\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerabilities_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:52.572855Z", "completed_at": "2025-06-09T18:49:52.576178Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:52.576553Z", "completed_at": "2025-06-09T18:50:09.791921Z"}], "thread_id": "Thread-17", "execution_time": 17.238034963607788, "adapter_response": {}, "message": "Database Error in model gong_call_content_action_item_source (models/sources/gong/sensitive/gong_call_content_action_item_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.gong.call_content_action_item' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/gong/sensitive/gong_call_content_action_item_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gong_call_content_action_item_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.gong.call_content_action_item\n),\n\nrenamed AS (\n  SELECT\n    call_id::NUMBER                 AS call_id,\n    snippet_end_time::NUMBER        AS snippet_end_time,\n    snippet_start_time::NUMBER      AS snippet_start_time,\n    speaker_id::STRING              AS speaker_id,\n    snippet::STRING                 AS snippet,\n    _fivetran_deleted::BOOLEAN      AS _fivetran_deleted,\n    _fivetran_synced::TIMESTAMP     AS _fivetran_synced\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.gong_sensitive.gong_call_content_action_item_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:50.892902Z", "completed_at": "2025-06-09T18:49:50.897629Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:50.897894Z", "completed_at": "2025-06-09T18:50:09.796347Z"}], "thread_id": "Thread-16", "execution_time": 18.91818904876709, "adapter_response": {}, "message": "Database Error in model gitlab_ops_projects_source (models/sources/gitlab_ops/gitlab_ops_projects_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'lower(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tlower(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_ops/gitlab_ops_projects_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_projects_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_postgres.gitlab_ops_db_projects\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                                                  AS project_id,\n      description::VARCHAR                                                        AS project_description,\n      import_source::VARCHAR                                                      AS project_import_source,\n      issues_template::VARCHAR                                                    AS project_issues_template,\n      name::VARCHAR                                                               AS project_name,\n      path::VARCHAR                                                               AS project_path,\n      import_url::VARCHAR                                                         AS project_import_url,\n      merge_requests_template                                                     AS project_merge_requests_template,\n\n      created_at::TIMESTAMP                                                       AS created_at,\n      updated_at::TIMESTAMP                                                       AS updated_at,\n\n      creator_id::NUMBER                                                          AS creator_id,\n      namespace_id::NUMBER                                                        AS namespace_id,\n\n      last_activity_at::TIMESTAMP                                                 AS last_activity_at,\n\n      CASE\n        WHEN visibility_level = '20' THEN 'public'\n        WHEN visibility_level = '10' THEN 'internal'\n        ELSE 'private'\n      END::VARCHAR                                                                AS visibility_level,\n\n      true::BOOLEAN                                                           AS archived,\n\n      IFF(avatar IS NULL, FALSE, TRUE)::BOOLEAN                                   AS has_avatar,\n\n      star_count::NUMBER                                                          AS project_star_count,\n      true::BOOLEAN                                      AS merge_requests_rebase_enabled,\n      IFF(LOWER(import_type) = 'nan', NULL, import_type)                          AS import_type,\n      approvals_before_merge::NUMBER                                              AS approvals_before_merge,\n      true::BOOLEAN                                            AS reset_approvals_on_push,\n      true::BOOLEAN                                     AS merge_requests_ff_only_enabled,\n      true::BOOLEAN                                                             AS mirror,\n      mirror_user_id::NUMBER                                                      AS mirror_user_id,\n      true::BOOLEAN                                             AS shared_runners_enabled,\n      true::BOOLEAN                                              AS build_allow_git_fetch,\n      build_timeout::NUMBER                                                       AS build_timeout,\n      true::BOOLEAN                                              AS mirror_trigger_builds,\n      true::BOOLEAN                                                     AS pending_delete,\n      true::BOOLEAN                                                      AS public_builds,\n      true::BOOLEAN                                       AS last_repository_check_failed,\n      last_repository_check_at::TIMESTAMP                                         AS last_repository_check_at,\n      true::BOOLEAN                                         AS container_registry_enabled,\n      true::BOOLEAN                              AS only_allow_merge_if_pipeline_succeeds,\n      true::BOOLEAN                                         AS has_external_issue_tracker,\n      repository_storage,\n      true::BOOLEAN                                               AS repository_read_only,\n      true::BOOLEAN                                             AS request_access_enabled,\n      true::BOOLEAN                                                  AS has_external_wiki,\n      ci_config_path,\n      true::BOOLEAN                                                        AS lfs_enabled,\n      true::BOOLEAN                   AS only_allow_merge_if_all_discussions_are_resolved,\n      repository_size_limit::NUMBER                                               AS repository_size_limit,\n      true::BOOLEAN                                AS printing_merge_request_link_enabled,\n      IFF(auto_cancel_pending_pipelines :: int = 1, TRUE, FALSE)                  AS has_auto_canceling_pending_pipelines,\n      true::BOOLEAN                                               AS service_desk_enabled,\n      IFF(LOWER(delete_error) = 'nan', NULL, delete_error)                        AS delete_error,\n      last_repository_updated_at::TIMESTAMP                                       AS last_repository_updated_at,\n      storage_version::NUMBER                                                     AS storage_version,\n      true::BOOLEAN                                  AS resolve_outdated_diff_discussions,\n      true::BOOLEAN                     AS disable_overriding_approvers_per_merge_request,\n      true::BOOLEAN                                 AS remote_mirror_available_overridden,\n      true::BOOLEAN                                     AS only_mirror_protected_branches,\n      true::BOOLEAN                                   AS pull_mirror_available_overridden,\n      true::BOOLEAN                                AS mirror_overwrites_diverged_branches,\n      external_authorization_classification_label\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_ops.gitlab_ops_projects_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:53.975958Z", "completed_at": "2025-06-09T18:49:53.980541Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:53.980844Z", "completed_at": "2025-06-09T18:50:09.804209Z"}], "thread_id": "Thread-31", "execution_time": 15.848437070846558, "adapter_response": {}, "message": "Database Error in model gong_call_context_integration_source (models/sources/gong/gong_call_context_integration_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.gong.call_context_integration' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/gong/gong_call_context_integration_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gong_call_context_integration_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.gong.call_context_integration\n),\n\nrenamed AS (\n  SELECT\n    call_id::NUMBER                 AS call_id,\n    object_id::STRING               AS object_id,\n    name::STRING                    AS name,\n    value::VARIANT                  AS value,\n    systems::VARIANT                AS systems,\n    object_type::STRING             AS object_type,\n    timing::VARIANT                 AS timing,\n    _fivetran_deleted::BOOLEAN      AS _fivetran_deleted,\n    _fivetran_synced::TIMESTAMP     AS _fivetran_synced\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.gong.gong_call_context_integration_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:49.773955Z", "completed_at": "2025-06-09T18:49:49.781385Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:49.781682Z", "completed_at": "2025-06-09T18:50:09.809735Z"}], "thread_id": "Thread-6", "execution_time": 20.05143404006958, "adapter_response": {}, "message": "Database Error in model gitlab_ops_merge_requests_source (models/sources/gitlab_ops/gitlab_ops_merge_requests_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'lower(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tlower(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_ops/gitlab_ops_merge_requests_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_merge_requests_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_postgres.gitlab_ops_db_merge_requests\n  \n    \n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                                AS merge_request_id,\n      iid::NUMBER                                               AS merge_request_iid,\n      title::VARCHAR                                            AS merge_request_title,\n\n      IFF(lower(target_branch) = 'master', TRUE, FALSE)         AS is_merge_to_master,\n      IFF(lower(merge_error) = 'nan', NULL, merge_error)        AS merge_error,\n      assignee_id::NUMBER                                       AS assignee_id,\n      updated_by_id::NUMBER                                     AS updated_by_id,\n      merge_user_id::NUMBER                                     AS merge_user_id,\n      last_edited_by_id::NUMBER                                 AS last_edited_by_id,\n      milestone_id::NUMBER                                      AS milestone_id,\n      head_pipeline_id::NUMBER                                  AS head_pipeline_id,\n      latest_merge_request_diff_id::NUMBER                      AS latest_merge_request_diff_id,\n      approvals_before_merge::NUMBER                            AS approvals_before_merge,\n      lock_version::NUMBER                                      AS lock_version,\n      time_estimate::NUMBER                                     AS time_estimate,\n      source_project_id::NUMBER                                 AS project_id,\n      target_project_id::NUMBER                                 AS target_project_id,\n      author_id::NUMBER                                         AS author_id,\n      state_id::NUMBER                                          AS merge_request_state_id,\n      -- Override state by mapping state_id. See issue #3556.\n      CASE\n      WHEN state_id::NUMBER = 1 THEN 'opened'\n      WHEN state_id::NUMBER = 2 THEN 'closed'\n      WHEN state_id::NUMBER = 3 THEN 'merged'\n      WHEN state_id::NUMBER = 4 THEN 'locked'\n      ELSE NULL\n    END                            AS merge_request_state,\n      merge_status                                              AS merge_request_status,\n      merge_when_pipeline_succeeds::BOOLEAN                     AS does_merge_when_pipeline_succeeds,\n      squash::BOOLEAN                                           AS does_squash,\n      discussion_locked::BOOLEAN                                AS is_discussion_locked,\n      allow_maintainer_to_push::BOOLEAN                         AS does_allow_maintainer_to_push,\n      created_at::TIMESTAMP                                     AS created_at,\n      updated_at::TIMESTAMP                                     AS updated_at,\n      last_edited_at::TIMESTAMP                                 AS merge_request_last_edited_at\n\n      --merge_params // hidden for privacy\n\n    FROM source\n\n)\n\nSELECT  *\nFROM renamed\nORDER BY updated_at", "relation_name": "EMBUCKET.gitlab_ops.gitlab_ops_merge_requests_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:30.807362Z", "completed_at": "2025-06-09T18:49:30.814796Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:30.815098Z", "completed_at": "2025-06-09T18:50:11.170478Z"}], "thread_id": "Thread-21", "execution_time": 40.36382007598877, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerability_state_transitions_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_vulnerability_state_transitions\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerability_state_transitions_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:32.273633Z", "completed_at": "2025-06-09T18:49:32.280217Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:32.280507Z", "completed_at": "2025-06-09T18:50:11.171768Z"}], "thread_id": "Thread-9", "execution_time": 38.89890694618225, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_web_hooks_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_web_hooks\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_web_hooks_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:51.172313Z", "completed_at": "2025-06-09T18:49:51.176284Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:51.176720Z", "completed_at": "2025-06-09T18:50:11.274369Z"}], "thread_id": "Thread-29", "execution_time": 20.108242988586426, "adapter_response": {}, "message": "Database Error in model gitlab_usernames_source (models/sources/workday/gitlab_usernames_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/gitlab_usernames_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_usernames_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.workday.gitlab_usernames\n  WHERE NOT _fivetran_deleted\n  \n),\n\nrenamed AS (\n\n  SELECT \n    workday_id::VARCHAR                  AS workday_id,\n    effective_date::DATE                 AS effective_date,    \n    employee_id::NUMBER                  AS employee_id,\n    gitlab_username::VARCHAR             AS gitlab_username,\n    date_time_completed::TIMESTAMP       AS date_time_completed,\n    _fivetran_deleted::BOOLEAN           AS is_deleted,\n    _fivetran_synced::TIMESTAMP          AS uploaded_at\n  FROM source\n\n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.workday.gitlab_usernames_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:55.786872Z", "completed_at": "2025-06-09T18:49:55.790827Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:55.791091Z", "completed_at": "2025-06-09T18:50:11.400469Z"}], "thread_id": "Thread-18", "execution_time": 15.622806072235107, "adapter_response": {}, "message": "Database Error in model gong_call_interaction_source (models/sources/gong/gong_call_interaction_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.gong.call_interaction' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/gong/gong_call_interaction_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gong_call_interaction_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.gong.call_interaction\n),\n\nrenamed AS (\n  SELECT\n    call_id::NUMBER                 AS call_id,\n    name::STRING                    AS name,\n    value::VARIANT                  AS value,\n    _fivetran_deleted::BOOLEAN      AS _fivetran_deleted,\n    _fivetran_synced::TIMESTAMP     AS _fivetran_synced\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.gong.gong_call_interaction_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:02.054691Z", "completed_at": "2025-06-09T18:50:02.058869Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:02.059507Z", "completed_at": "2025-06-09T18:50:11.402537Z"}], "thread_id": "Thread-22", "execution_time": 9.36185598373413, "adapter_response": {}, "message": "Database Error in model gong_tracker_language_source (models/sources/gong/gong_tracker_language_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.gong.tracker_language' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/gong/gong_tracker_language_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gong_tracker_language_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.gong.tracker_language\n),\n\nrenamed AS (\n  SELECT\n    tracker_id::NUMBER                AS tracker_id,\n    tracker_language::STRING          AS tracker_language,\n    include_related_forms::BOOLEAN    AS include_related_forms,\n    _fivetran_deleted::BOOLEAN        AS _fivetran_deleted,\n    _fivetran_synced::TIMESTAMP       AS _fivetran_synced\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.gong.gong_tracker_language_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:59.573050Z", "completed_at": "2025-06-09T18:49:59.576522Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:59.576814Z", "completed_at": "2025-06-09T18:50:11.402234Z"}], "thread_id": "Thread-4", "execution_time": 11.861869096755981, "adapter_response": {}, "message": "Database Error in model gong_call_tracker_source (models/sources/gong/gong_call_tracker_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.gong.call_tracker' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/gong/gong_call_tracker_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gong_call_tracker_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.gong.call_tracker\n),\n\nrenamed AS (\n  SELECT\n    id::NUMBER                      AS tracker_id,\n    call_id::NUMBER                 AS call_id,\n    start_time::NUMBER              AS start_time,\n    phrase::STRING                  AS phrase,\n    speaker_id::STRING              AS speaker_id,\n    name::STRING                    AS tracker_name,\n    type::STRING                    AS type,\n    _fivetran_deleted::BOOLEAN      AS _fivetran_deleted,\n    _fivetran_synced::TIMESTAMP     AS _fivetran_synced\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.gong.gong_call_tracker_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:56.873200Z", "completed_at": "2025-06-09T18:49:56.876748Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:56.877014Z", "completed_at": "2025-06-09T18:50:11.400824Z"}], "thread_id": "Thread-20", "execution_time": 14.562811851501465, "adapter_response": {}, "message": "Database Error in model gong_call_source (models/sources/gong/gong_call_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.gong.call' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/gong/gong_call_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gong_call_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.gong.call\n),\n\nrenamed AS (\n  SELECT\n    id::NUMBER                              AS call_id,\n    url::STRING                             AS url,\n    media::VARIANT                          AS media,\n    custom_data::VARIANT                    AS custom_data,\n    sdr_disposition::STRING                 AS sdr_disposition,\n    is_private::BOOLEAN                     AS is_private,\n    client_unique_id::STRING                AS client_unique_id,\n    direction::STRING                       AS direction,\n    languages::VARIANT                      AS languages,\n    scope::BOOLEAN                          AS scope,\n    duration::NUMBER                        AS duration_seconds,\n    title::STRING                           AS title,\n    meeting_url::STRING                     AS meeting_url,\n    systems::VARIANT                        AS systems,\n    purpose::STRING                         AS purpose,\n    scheduled::TIMESTAMP                    AS scheduled_at,\n    media_video_url::STRING                 AS media_video_url,\n    company_question_count::NUMBER          AS company_question_count,\n    non_company_question_count::NUMBER      AS non_company_question_count,\n    started::TIMESTAMP                      AS started_at,\n    media_audio_url::STRING                 AS media_audio_url,\n    _fivetran_deleted::BOOLEAN              AS _fivetran_deleted,\n    _fivetran_synced::TIMESTAMP             AS _fivetran_synced\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.gong.gong_call_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:58.609021Z", "completed_at": "2025-06-09T18:49:58.613446Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:58.613745Z", "completed_at": "2025-06-09T18:50:11.402855Z"}], "thread_id": "Thread-12", "execution_time": 12.838605880737305, "adapter_response": {}, "message": "Database Error in model gong_call_topic_source (models/sources/gong/gong_call_topic_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.gong.call_topic' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/gong/gong_call_topic_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gong_call_topic_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.gong.call_topic\n),\n\nrenamed AS (\n  SELECT\n    call_id::NUMBER                 AS call_id,\n    duration::NUMBER                AS duration_seconds,\n    name::STRING                    AS topic_name,\n    _fivetran_deleted::BOOLEAN      AS _fivetran_deleted,\n    _fivetran_synced::TIMESTAMP     AS _fivetran_synced\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.gong.gong_call_topic_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:48.374505Z", "completed_at": "2025-06-09T18:49:48.378152Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:48.378428Z", "completed_at": "2025-06-09T18:50:12.081548Z"}], "thread_id": "Thread-23", "execution_time": 23.71300506591797, "adapter_response": {}, "message": "Database Error in model gitlab_ops_merge_request_metrics_source (models/sources/gitlab_ops/gitlab_ops_merge_request_metrics_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_ops/gitlab_ops_merge_request_metrics_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_merge_request_metrics_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_postgres.gitlab_ops_db_merge_request_metrics\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n), renamed AS (\n\n    SELECT\n      id::NUMBER                                              AS merge_request_metric_id,\n      merge_request_id::NUMBER                                AS merge_request_id,\n\n      latest_build_started_at::TIMESTAMP                       AS latest_build_started_at,\n      latest_build_finished_at::TIMESTAMP                      AS latest_build_finished_at,\n      first_deployed_to_production_at::TIMESTAMP               AS first_deployed_to_production_at,\n      merged_at::TIMESTAMP                                     AS merged_at,\n      created_at::TIMESTAMP                                    AS created_at,\n      updated_at::TIMESTAMP                                    AS updated_at\n      \n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_ops.gitlab_ops_merge_request_metrics_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:33.885629Z", "completed_at": "2025-06-09T18:49:33.892131Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:33.892608Z", "completed_at": "2025-06-09T18:50:13.369604Z"}], "thread_id": "Thread-26", "execution_time": 39.484681129455566, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_work_item_parent_links_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_work_item_parent_links\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_work_item_parent_links_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:02.374562Z", "completed_at": "2025-06-09T18:50:02.379931Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:02.380356Z", "completed_at": "2025-06-09T18:50:13.379393Z"}], "thread_id": "Thread-2", "execution_time": 11.018114805221558, "adapter_response": {}, "message": "Database Error in model gong_tracker_source (models/sources/gong/gong_tracker_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.gong.tracker' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/gong/gong_tracker_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gong_tracker_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.gong.tracker\n),\n\nrenamed AS (\n  SELECT\n    tracker_id::NUMBER            AS tracker_id,\n    affiliation::STRING           AS affiliation,\n    created::TIMESTAMP            AS created_at,\n    tracker_name::STRING          AS tracker_name,\n    part_of_question::BOOLEAN     AS part_of_question,\n    said_at_interval::NUMBER      AS said_at_interval,\n    workspace_id::STRING          AS workspace_id,\n    creator_user_id::NUMBER       AS creator_user_id,\n    said_at::TIMESTAMP            AS said_at,\n    updated::TIMESTAMP            AS updated_at,\n    filter_query::STRING          AS filter_query,\n    updater_user_id::NUMBER       AS updater_user_id,\n    _fivetran_deleted::BOOLEAN    AS _fivetran_deleted,\n    _fivetran_synced::TIMESTAMP   AS _fivetran_synced\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.gong.gong_tracker_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:39.617612Z", "completed_at": "2025-06-09T18:49:39.628563Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:39.629010Z", "completed_at": "2025-06-09T18:50:14.771700Z"}], "thread_id": "Thread-10", "execution_time": 35.156899213790894, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_zoom_meetings_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_zoom_meetings\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_zoom_meetings_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:39.579172Z", "completed_at": "2025-06-09T18:49:39.592105Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:39.592415Z", "completed_at": "2025-06-09T18:50:16.170428Z"}], "thread_id": "Thread-14", "execution_time": 36.59697103500366, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_zoekt_indices_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_zoekt_indices\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_zoekt_indices_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:36.889709Z", "completed_at": "2025-06-09T18:49:36.895721Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:36.895976Z", "completed_at": "2025-06-09T18:50:17.646655Z"}], "thread_id": "Thread-1", "execution_time": 40.75796031951904, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_workspaces_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_workspaces\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_workspaces_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:03.929054Z", "completed_at": "2025-06-09T18:50:03.933525Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:03.933883Z", "completed_at": "2025-06-09T18:50:17.675912Z"}], "thread_id": "Thread-13", "execution_time": 13.76033902168274, "adapter_response": {}, "message": "Database Error in model gong_transcript_source (models/sources/gong/sensitive/gong_transcript_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.gong.transcript' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/gong/sensitive/gong_transcript_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gong_transcript_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.gong.transcript\n),\n\nrenamed AS (\n  SELECT\n    call_id::NUMBER               AS call_id,\n    index::NUMBER                 AS index,\n    workspace_id::STRING          AS workspace_id,\n    sentence::STRING              AS sentence,\n    speaker_id::STRING            AS speaker_id,\n    topic::STRING                 AS topic,\n    _fivetran_deleted::BOOLEAN    AS _fivetran_deleted,\n    _fivetran_synced::TIMESTAMP   AS _fivetran_synced\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.gong_sensitive.gong_transcript_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:38.073181Z", "completed_at": "2025-06-09T18:49:38.079768Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:38.080067Z", "completed_at": "2025-06-09T18:50:18.970860Z"}], "thread_id": "Thread-19", "execution_time": 40.898359060287476, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_zoekt_enabled_namespaces_dedupe_source", "compiled": true, "compiled_code": "\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_zoekt_enabled_namespaces\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_zoekt_enabled_namespaces_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:36.640334Z", "completed_at": "2025-06-09T18:49:36.646569Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:36.646854Z", "completed_at": "2025-06-09T18:50:20.371139Z"}], "thread_id": "Thread-25", "execution_time": 43.73151779174805, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_workspaces_agent_configs_dedupe_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_workspaces_agent_configs\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_workspaces_agent_configs_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:04.210860Z", "completed_at": "2025-06-09T18:50:04.227467Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:04.238526Z", "completed_at": "2025-06-09T18:50:20.386362Z"}], "thread_id": "Thread-27", "execution_time": 16.201257944107056, "adapter_response": {}, "message": "Database Error in model gong_users_source (models/sources/gong/sensitive/gong_users_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.gong.users' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/gong/sensitive/gong_users_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gong_users_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.gong.users\n),\n\nrenamed AS (\n  SELECT\n    id::NUMBER                                  AS user_id,\n    gong_connect_enabled::BOOLEAN               AS gong_connect_enabled,\n    meeting_consent_page_url::STRING            AS meeting_consent_page_url,\n    prevent_web_conference_recording::BOOLEAN   AS prevent_web_conference_recording,\n    phone_number::STRING                        AS phone_number,\n    prevent_email_import::BOOLEAN               AS prevent_email_import,\n    emails_imported::NUMBER                     AS emails_imported,\n    telephony_calls_imported::NUMBER            AS telephony_calls_imported,\n    manager_id::NUMBER                          AS manager_id,\n    non_recorded_meetings_imported::NUMBER      AS non_recorded_meetings_imported,\n    extension::STRING                           AS extension,\n    last_name::STRING                           AS last_name,\n    first_name::STRING                          AS first_name,\n    title::STRING                               AS title,\n    web_conferences_recorded::NUMBER            AS web_conferences_recorded,\n    email_address::STRING                       AS email_address,\n    active::BOOLEAN                             AS active,\n    created::TIMESTAMP                          AS created_at,\n    _fivetran_deleted::BOOLEAN                  AS _fivetran_deleted,\n    _fivetran_synced::TIMESTAMP                 AS _fivetran_synced\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.gong_sensitive.gong_users_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:04.261922Z", "completed_at": "2025-06-09T18:50:04.266048Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:04.271284Z", "completed_at": "2025-06-09T18:50:20.391580Z"}], "thread_id": "Thread-15", "execution_time": 16.151294946670532, "adapter_response": {}, "message": "Database Error in model google_ads_ad_group_hourly_stats_source (models/sources/google_ads/google_ads_ad_group_hourly_stats_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,1723)..Location(1,1735)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/google_ads/google_ads_ad_group_hourly_stats_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.google_ads_ad_group_hourly_stats_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.google_ads.ad_group_hourly_stats\n\n), final AS (\n    \n    SELECT \n      id::NUMBER                                    AS hourly_stats_id,\n      customer_id::NUMBER                           AS customer_id,\n      campaign_id::NUMBER                           AS campaign_id,\n      date::DATE                                    AS date,\n      year::NUMBER                                  AS year,\n      quarter::DATE                                 AS quarter,\n      month::DATE                                   AS month,\n      week::DATE                                    AS week,\n      hour::NUMBER                                  AS hour,\n      day_of_week::TEXT                             AS day_of_week,\n      ad_network_type::TEXT                         AS ad_network_type,\n      base_ad_group::TEXT                           AS base_ad_group,\n      campaign_base_campaign::TEXT                  AS campaign_base_campaign,\n      click_type::TEXT                              AS click_type,\n      interaction_event_types::TEXT                 AS interaction_event_types,\n      device::TEXT                                  AS device,\n      conversions::FLOAT                            AS conversions,\n      interactions::NUMBER                          AS interactions,\n      average_cpm::FLOAT                            AS average_cpm,\n      active_view_impressions::NUMBER               AS active_view_impressions,\n      clicks::NUMBER                                AS clicks,\n      active_view_measurable_impressions::NUMBER    AS active_view_measurable_impressions,\n      cost_per_conversion::FLOAT                    AS cost_per_conversion,\n      active_view_measurability::FLOAT              AS active_view_measurability,\n      average_cpc::FLOAT                            AS average_cpc,\n      ctr::FLOAT                                    AS ctr,\n      conversions_value::FLOAT                      AS conversions_value,\n      average_cost::FLOAT                           AS average_cost,\n      interaction_rate::FLOAT                       AS interaction_rate,\n      impressions::NUMBER                           AS impressions,\n      active_view_viewability::FLOAT                AS active_view_viewability,\n      value_per_conversion::FLOAT                   AS value_per_conversion,\n      active_view_cpm::FLOAT                        AS active_view_cpm,\n      active_view_ctr::FLOAT                        AS active_view_ctr,\n      active_view_measurable_cost_micros::NUMBER    AS active_view_measurable_cost_micros,\n      conversions_from_interactions_rate::FLOAT     AS conversions_from_interactions_rate,\n      cost_micros::NUMBER                           AS cost_micros,\n      _fivetran_synced::TIMESTAMP_TZ                AS fivetran_synced\n    FROM source \n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.google_ads.google_ads_ad_group_hourly_stats_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:49:36.187594Z", "completed_at": "2025-06-09T18:49:36.193485Z"}, {"name": "execute", "started_at": "2025-06-09T18:49:36.193859Z", "completed_at": "2025-06-09T18:50:21.770608Z"}], "thread_id": "Thread-7", "execution_time": 45.583786964416504, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_work_item_types_dedupe_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nSELECT *\nFROM EMBUCKET.tap_postgres.gitlab_db_work_item_types\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_work_item_types_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:04.254609Z", "completed_at": "2025-06-09T18:50:04.265727Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:04.266476Z", "completed_at": "2025-06-09T18:50:21.783733Z"}], "thread_id": "Thread-28", "execution_time": 17.540072202682495, "adapter_response": {}, "message": "Database Error in model google_ads_ad_group_history_source (models/sources/google_ads/google_ads_ad_group_history_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/google_ads/google_ads_ad_group_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.google_ads_ad_group_history_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.google_ads.ad_group_history\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER AS ad_group_id,\n    updated_at::TIMESTAMP AS ad_group_updated_at,\n    campaign_id::NUMBER AS campaign_id,\n    base_ad_group_id::NUMBER AS base_ad_group_id,\n    ad_rotation_mode::VARCHAR AS ad_rotation_mode,\n    campaign_name::VARCHAR AS campaign_name,\n    display_custom_bid_dimension::VARCHAR AS ad_group_display_custom_bid_dimension,\n    explorer_auto_optimizer_setting_opt_in::BOOLEAN AS is_explorer_auto_optimizer_setting_opt_in,\n    final_url_suffix::VARCHAR AS ad_group_final_url_suffix,\n    name::VARCHAR AS ad_group_name,\n    status::VARCHAR AS ad_group_status,\n    target_restrictions::VARCHAR AS ad_group_target_restrictions,\n    tracking_url_template::VARCHAR AS ad_group_tracking_url_template,\n    type::VARCHAR AS ad_group_type,\n    _fivetran_synced::TIMESTAMP AS _fivetran_synced\n  FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.google_ads.google_ads_ad_group_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:06.973710Z", "completed_at": "2025-06-09T18:50:06.977115Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:06.977395Z", "completed_at": "2025-06-09T18:50:22.082507Z"}], "thread_id": "Thread-11", "execution_time": 15.114847898483276, "adapter_response": {}, "message": "Database Error in model greenhouse_application_custom_fields_source (models/sources/greenhouse/greenhouse_application_custom_fields_source.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'try_to_date'.\n  Did you mean 'try_to_time'?\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_application_custom_fields_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_application_custom_fields_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \tFROM EMBUCKET.greenhouse.application_custom_fields\n\n), renamed as (\n\n    SELECT\n\n            --keys\n            application_id::NUMBER                  AS application_id,\n            user_id::NUMBER                         AS user_id,\n\n            --info\n            custom_field::varchar                   AS  application_custom_field,\n            float_value::float                      AS  application_custom_field_float_value,\n            display_value::varchar                  AS  application_custom_field_display_value,\n            unit::varchar                           AS  application_custom_field_unit,\n            min_value::NUMBER                       AS  application_custom_field_min_value,\n            max_value::NUMBER                       AS  application_custom_field_max_value,\n            TRY_TO_DATE(date_value::VARCHAR)        AS  application_custom_field_date,\n            created_at::timestamp                   AS  application_custom_field_created_at,\n            updated_at::timestamp                   AS  application_custom_field_updated_at\n\n   \tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_application_custom_fields_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:09.844524Z", "completed_at": "2025-06-09T18:50:09.855989Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:09.861233Z", "completed_at": "2025-06-09T18:50:22.098469Z"}], "thread_id": "Thread-6", "execution_time": 12.272887945175171, "adapter_response": {}, "message": "Database Error in model greenhouse_candidate_custom_fields_source (models/sources/greenhouse/greenhouse_candidate_custom_fields_source.sql)\n  000200: DataFusion error: External error: Feature Arrow datatype Null is not supported. is not supported.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_candidate_custom_fields_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_candidate_custom_fields_source", "compiled": true, "compiled_code": "WITH source as (\n\n    SELECT *\n      FROM EMBUCKET.greenhouse.candidate_custom_fields\n\n), renamed as (\n\n    SELECT\n            --keys\n            candidate_id::NUMBER                AS candidate_id,\n            user_id::NUMBER                     AS greenhouse_user_id,\n\n            --info\n            custom_field::varchar               AS candidate_custom_field,\n            float_value::FLOAT                  AS candidate_custom_field_float_value,\n            null           AS candidate_custom_field_date,\n            display_value::varchar              AS candidate_custom_field_display_value,\n            min_value::NUMBER                   AS candidate_custom_field_min_value,\n            max_value::NUMBER                   AS candidate_custom_field_max_value,\n            created_at::timestamp               AS candidate_custom_field_created_at,\n            updated_at::timestamp               AS candidate_custom_field_updated_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_candidate_custom_fields_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:06.546680Z", "completed_at": "2025-06-09T18:50:06.558674Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:06.559232Z", "completed_at": "2025-06-09T18:50:22.113575Z"}], "thread_id": "Thread-32", "execution_time": 15.58181095123291, "adapter_response": {}, "message": "Database Error in model google_search_console_keyword_page_report_source (models/sources/google_search_console/google_search_console_keyword_page_report_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,501)..Location(1,513)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/google_search_console/google_search_console_keyword_page_report_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.google_search_console_keyword_page_report_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.google_search_console.keyword_page_report\n \n), final AS (\n \n    SELECT   \n      country::TEXT                    AS country,\n      date::DATE                       AS date,\n      device::TEXT                     AS device,\n      page::TEXT                       AS page,\n      query::TEXT                      AS query,\n      search_type::TEXT                AS search_type,\n      site::TEXT                       AS site,\n      clicks::FLOAT                    AS clicks,\n      impressions::FLOAT               AS impressions,\n      ctr::FLOAT                       AS ctr,\n      position::FLOAT                  AS position,\n      _fivetran_synced::TIMESTAMP_TZ   AS _fivetran_synced\n    FROM source\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.google_search_console.google_search_console_keyword_page_report_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:05.561107Z", "completed_at": "2025-06-09T18:50:05.565676Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:05.566257Z", "completed_at": "2025-06-09T18:50:23.983399Z"}], "thread_id": "Thread-3", "execution_time": 18.428402185440063, "adapter_response": {}, "message": "Database Error in model google_ads_ad_stats_source (models/sources/google_ads/google_ads_ad_stats_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/google_ads/google_ads_ad_stats_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.google_ads_ad_stats_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.google_ads.ad_stats\n),\n\nrenamed AS (\n\n  SELECT\n    customer_id::NUMBER AS customer_id,\n    date::DATE AS ad_stats_date,\n    _fivetran_id::VARCHAR AS _fivetran_id,\n    campaign_base_campaign::VARCHAR AS campaign_base_campaign,\n    conversions_value::FLOAT AS conversions_value,\n    conversions::FLOAT AS conversions,\n    interactions::NUMBER AS interactions,\n    ad_id::NUMBER AS ad_id,\n    ad_network_type::VARCHAR AS ad_network_type,\n    interaction_event_types::VARCHAR AS interaction_event_types,\n    campaign_id::NUMBER AS campaign_id,\n    impressions::NUMBER AS impressions,\n    active_view_viewability::FLOAT AS active_view_view_ability,\n    ad_group_id::NUMBER AS ad_group_id,\n    device::VARCHAR AS device,\n    view_through_conversions::NUMBER AS view_through_conversions,\n    active_view_impressions::NUMBER AS active_view_impressions,\n    video_views::NUMBER AS video_views,\n    clicks::NUMBER AS clicks,\n    active_view_measurable_impressions::NUMBER AS active_view_measurable_impressions,\n    active_view_measurable_cost_micros::NUMBER AS active_view_measurable_cost_micros,\n    active_view_measurability::FLOAT AS active_view_measurability,\n    ad_group_base_ad_group::VARCHAR AS ad_group_base_ad_group,\n    cost_micros::NUMBER AS cost_micros,\n    _fivetran_synced::TIMESTAMP AS _fivetran_synced\n  FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.google_ads.google_ads_ad_stats_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:11.476732Z", "completed_at": "2025-06-09T18:50:11.485416Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:11.486551Z", "completed_at": "2025-06-09T18:50:24.100736Z"}], "thread_id": "Thread-20", "execution_time": 12.645493984222412, "adapter_response": {}, "message": "Database Error in model greenhouse_eeoc_responses_source (models/sources/greenhouse/greenhouse_eeoc_responses_source.sql)\n  000200: DataFusion error: Schema error: No field named eeoc_response_submitted_at. Did you mean 'source.submitted_at'?.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_eeoc_responses_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_eeoc_responses_source", "compiled": true, "compiled_code": "WITH source as (\n\n    SELECT *\n\n      FROM EMBUCKET.greenhouse.eeoc_responses\n\n), renamed as (\n\n    SELECT\n\n            --key\n            application_id::NUMBER      AS application_id,\n\n            --info\n            status::varchar             AS candidate_status,\n            race::varchar               AS candidate_race,\n            gender::varchar             AS candidate_gender,\n            disability_status::varchar  AS candidate_disability_status,\n            veteran_status::varchar     AS candidate_veteran_status,\n            submitted_at::timestamp     AS eeoc_response_submitted_at\n\n\n    FROM source\n    WHERE eeoc_response_submitted_at IS NOT NULL\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_eeoc_responses_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:06.537300Z", "completed_at": "2025-06-09T18:50:06.550514Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:06.550913Z", "completed_at": "2025-06-09T18:50:24.131994Z"}], "thread_id": "Thread-5", "execution_time": 17.6153621673584, "adapter_response": {}, "message": "Database Error in model google_ads_expanded_text_ad_history_source (models/sources/google_ads/google_ads_expanded_text_ad_history_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/google_ads/google_ads_expanded_text_ad_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.google_ads_expanded_text_ad_history_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.google_ads.expanded_text_ad_history\n),\n\nrenamed AS (\n\n  SELECT\n    ad_group_id::NUMBER AS ad_group_id,\n    ad_id::NUMBER AS ad_id,\n    updated_at::TIMESTAMP AS ad_text_updated_at,\n    description::VARCHAR AS ad_text_description,\n    description_2::VARCHAR AS ad_text_description_2,\n    headline_part_1::VARCHAR AS ad_text_headline_part_1,\n    headline_part_2::VARCHAR AS ad_text_headline_part_2,\n    headline_part_3::VARCHAR AS ad_text_headline_part_3,\n    path_1::VARCHAR AS ad_text_part_1,\n    path_2::VARCHAR AS ad_text_part_2,\n    _fivetran_synced::TIMESTAMP AS _fivetran_synced\n  FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.google_ads.google_ads_expanded_text_ad_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:11.449576Z", "completed_at": "2025-06-09T18:50:11.459998Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:11.462060Z", "completed_at": "2025-06-09T18:50:24.153279Z"}], "thread_id": "Thread-18", "execution_time": 12.723265886306763, "adapter_response": {}, "message": "Database Error in model greenhouse_candidates_tags_source (models/sources/greenhouse/greenhouse_candidates_tags_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_candidates_tags_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_candidates_tags_source", "compiled": true, "compiled_code": "WITH source as (\n\n    SELECT *\n\n      FROM EMBUCKET.greenhouse.candidates_tags\n\n), renamed as (\n\n    SELECT\n\t\t\t--keys\n\t\t\t  id::NUMBER \t\t\t\t    AS candidate_tag_id,\n    \t\ttag_id::NUMBER\t\t\t   AS tag_id,\n    \t\tcandidate_id::NUMBER\t AS candidate_id,\n\n    \t\t--info\n    \t\tcreated_at::timestamp  AS candidate_tag_created_at,\n    \t\tupdated_at::timestamp  AS candidate_tag_updated_at\n\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_candidates_tags_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:11.283600Z", "completed_at": "2025-06-09T18:50:11.287795Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:11.288420Z", "completed_at": "2025-06-09T18:50:24.391528Z"}], "thread_id": "Thread-29", "execution_time": 13.11712908744812, "adapter_response": {}, "message": "Database Error in model greenhouse_candidates_source (models/sources/greenhouse/greenhouse_candidates_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_candidates_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_candidates_source", "compiled": true, "compiled_code": "WITH source as (\n\n    SELECT *\n    FROM EMBUCKET.greenhouse.candidates\n\n), renamed as (\n\n    SELECT\n            --keys\n            id::NUMBER              AS candidate_id,\n\n            --info\n            company::varchar        AS candidate_company,\n            title::varchar          AS candidate_title,\n            created_at::timestamp   AS candidate_created_at,\n            updated_at::timestamp   AS candidate_updated_at,\n            migrated::boolean       AS is_candidate_migrated,\n            private::boolean        AS is_candidate_private\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_candidates_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:09.837758Z", "completed_at": "2025-06-09T18:50:09.860787Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:09.867197Z", "completed_at": "2025-06-09T18:50:26.356378Z"}], "thread_id": "Thread-16", "execution_time": 16.53062915802002, "adapter_response": {}, "message": "Database Error in model greenhouse_approvals_source (models/sources/greenhouse/greenhouse_approvals_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_approvals_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_approvals_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.approvals\n\n), renamed as (\n\n\tSELECT\n\n            --keys\n            offer_id::NUMBER            AS offer_id,\n            application_id::NUMBER      AS application_id,\n            job_id::NUMBER              AS job_id,\n            candidate_id::NUMBER        AS candidate_id,\n            approver_id::NUMBER         AS approver_id,\n            group_id::NUMBER            AS group_id,\n\n            --info\n            approval_type::varchar      AS approval_type,\n            status::varchar             AS approval_status,\n            version::NUMBER                AS approval_version,\n            final_version::NUMBER          AS approval_version_final,\n            group_order::NUMBER            AS group_order,\n            group_quorum::NUMBER           AS group_quorum,\n            assigned::timestamp         AS approval_assigned_at,\n            completed::timestamp        AS approval_completed_at,\n            created_at::timestamp       AS approval_created_at,\n            updated_at::timestamp       AS approval_updated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_approvals_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:11.176935Z", "completed_at": "2025-06-09T18:50:11.183605Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:11.184196Z", "completed_at": "2025-06-09T18:50:27.623821Z"}], "thread_id": "Thread-21", "execution_time": 16.44810700416565, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_candidate_survey_questions_source", "compiled": true, "compiled_code": "WITH source as (\n\n    SELECT *\n\n      FROM EMBUCKET.greenhouse.candidate_survey_questions\n\n), renamed as (\n\n    SELECT\n            --keys\n            id::NUMBER            AS candidate_survey_question_id,\n\n            --info\n            question::varchar \t\tAS candidate_survey_question\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_candidate_survey_questions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:11.456519Z", "completed_at": "2025-06-09T18:50:11.466963Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:11.471214Z", "completed_at": "2025-06-09T18:50:27.924580Z"}], "thread_id": "Thread-22", "execution_time": 16.550272941589355, "adapter_response": {}, "message": "Database Error in model greenhouse_delivered_candidate_surveys_source (models/sources/greenhouse/greenhouse_delivered_candidate_surveys_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_delivered_candidate_surveys_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_delivered_candidate_surveys_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n\n  FROM EMBUCKET.greenhouse.delivered_candidate_surveys\n\n),\n\nrenamed AS (\n\n  SELECT\n    --keys\n    id::NUMBER              AS id,\n    organization_id::NUMBER AS organization_id,\n    department_id::NUMBER   AS department_id,\n    office_id::NUMBER       AS office_id,\n\n    --info\n    department_name::VARCHAR AS department_name,\n    office_name::VARCHAR AS office_name,\n    submitted_at::TIMESTAMP   AS submitted_at,\n    created_at::TIMESTAMP   AS created_at,\n    updated_at::TIMESTAMP   AS updated_at\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_delivered_candidate_surveys_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:08.373076Z", "completed_at": "2025-06-09T18:50:08.376939Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:08.377205Z", "completed_at": "2025-06-09T18:50:27.861840Z"}], "thread_id": "Thread-8", "execution_time": 19.56155276298523, "adapter_response": {}, "message": "Database Error in model greenhouse_application_question_answers_source (models/sources/greenhouse/greenhouse_application_question_answers_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_application_question_answers_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_application_question_answers_source", "compiled": true, "compiled_code": "WITH source as (\n\n    SELECT *\n        FROM EMBUCKET.greenhouse.application_question_answers\n\n), renamed as (\n\n    SELECT\n\n            --keys\n            job_post_id::NUMBER          AS job_post_id,\n            application_id::NUMBER       AS application_id,\n\n            --info\n            question::varchar            AS application_question,\n            answer::varchar              AS application_answer,\n\n            created_at::timestamp        AS application_question_answer_created_at,\n            updated_at::timestamp        AS application_question_answer_updated_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_application_question_answers_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:09.833354Z", "completed_at": "2025-06-09T18:50:09.849029Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:09.849934Z", "completed_at": "2025-06-09T18:50:27.916494Z"}], "thread_id": "Thread-17", "execution_time": 18.151551961898804, "adapter_response": {}, "message": "Database Error in model greenhouse_applications_source (models/sources/greenhouse/greenhouse_applications_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_applications_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_applications_source", "compiled": true, "compiled_code": "WITH source AS (\n\n\tSELECT *\n  \tFROM EMBUCKET.greenhouse.applications\n\n), stages_source AS (\n\n    SELECT * \n    FROM EMBUCKET.greenhouse.application_stages\n\n), stages AS (\n\n    SELECT * \n    FROM stages_source\n    WHERE entered_on IS NOT NULL\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY application_id ORDER BY entered_on DESC) =1\n\n), renamed as (\n\n\tSELECT  id \t\t\t\t\t\t        AS application_id,\n\n\t\t\t--keys\n\t\t    candidate_id,\n\t\t    stages.stage_id,\n\t\t    source_id,\n\t\t    referrer_id,\n\t\t    rejected_by_id,\n\t\t    job_post_id,\n\t\t    event_id,\n\t\t    rejection_reason_id,\n\t\t    converted_prospect_application_id,\n        recruiter_id            AS application_recruiter_id,\n        coordinator_id          AS application_coordinator_id,\n\n\t\t    --info\n\t\t    status \t\t\t\t\t        AS application_status,\n\t\t    prospect,\n        recruiter               AS application_recruiter,\n        coordinator             AS application_coordinator,\n\t\t    pipeline_percent,\n\t\t    migrated,\n\t\t    rejected_by,\n\t\t    stages.stage_name,\n\t\t    prospect_pool,\n\t\t    prospect_pool_stage,\n\n\t\t    applied_at::timestamp \tAS applied_at,\n\t\t    rejected_at::timestamp \tAS rejected_at,\n\t\t    created_at::timestamp \tAS created_at,\n\t\t    updated_at::timestamp \tAS last_updated_at\n\tFROM source\n    LEFT JOIN stages \n      ON stages.application_id = source.id\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_applications_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:09.841477Z", "completed_at": "2025-06-09T18:50:09.855557Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:09.856298Z", "completed_at": "2025-06-09T18:50:27.827067Z"}], "thread_id": "Thread-31", "execution_time": 18.083835124969482, "adapter_response": {}, "message": "Database Error in model greenhouse_attributes_source (models/sources/greenhouse/greenhouse_attributes_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_attributes_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_attributes_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.attributes\n\n), renamed as (\n\n\tSELECT\n\n            --keys\n            id::NUMBER                          AS attribute_id,\n            organization_id::NUMBER             AS organization_id,\n\n            --info\n            name::varchar                       AS attribute_name,\n            category::varchar                   AS attribute_category,\n            created_at::varchar::timestamp      AS attribute_created_at,\n            updated_at::varchar::timestamp      AS attribute_updated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_attributes_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:17.649394Z", "completed_at": "2025-06-09T18:50:17.676151Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:17.676546Z", "completed_at": "2025-06-09T18:50:27.907867Z"}], "thread_id": "Thread-1", "execution_time": 10.329011917114258, "adapter_response": {}, "message": "Database Error in model greenhouse_jobs_departments_source (models/sources/greenhouse/greenhouse_jobs_departments_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_jobs_departments_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_jobs_departments_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.jobs_departments\n\n), renamed as (\n\n\tSELECT\n\n\t\t\t--keys\n    \t\tid::NUMBER\t\t\t\t      AS job_department_id,\n    \t\tjob_id::NUMBER\t\t\t    AS job_id,\n    \t\tdepartment_id::NUMBER\t  AS department_id,\n\n    \t\t--info\n    \t\tcreated_at::timestamp \tAS job_department_created_at,\n    \t\tupdated_at::timestamp \tAS job_department_updated_at\n\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_jobs_departments_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:11.480840Z", "completed_at": "2025-06-09T18:50:11.491142Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:11.497519Z", "completed_at": "2025-06-09T18:50:27.980218Z"}], "thread_id": "Thread-12", "execution_time": 16.5514817237854, "adapter_response": {}, "message": "Database Error in model greenhouse_hiring_team_source (models/sources/greenhouse/greenhouse_hiring_team_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_hiring_team_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_hiring_team_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.hiring_team\n\n), renamed as (\n\n\tSELECT\n\n\t\t\t--keys\n   \t\t\tjob_id::NUMBER\t\t\t\t  AS job_id,\n    \t\tuser_id::NUMBER\t\t\t\t  AS user_id,\n\n    \t\t--info\n    \t\trole::varchar\t\t\t\t    AS hiring_team_role,\n    \t\tresponsible::boolean\t\tAS is_responsible,\n    \t\tcreated_at::timestamp\t\tAS hiring_team_created_at,\n    \t\tupdated_at::timestamp\t\tAS hiring_team_updated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_hiring_team_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:11.180179Z", "completed_at": "2025-06-09T18:50:11.183902Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:11.190308Z", "completed_at": "2025-06-09T18:50:27.847769Z"}], "thread_id": "Thread-9", "execution_time": 16.747570276260376, "adapter_response": {}, "message": "Database Error in model greenhouse_candidate_surveys_source (models/sources/greenhouse/greenhouse_candidate_surveys_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_candidate_surveys_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_candidate_surveys_source", "compiled": true, "compiled_code": "WITH source as (\n\n    SELECT *\n\n      FROM EMBUCKET.greenhouse.candidate_surveys\n\n), renamed as (\n\n    SELECT\n\n    \t\t--keys\n    \t\tid::NUMBER \t\t\t\t\t      AS candidate_survey_id,\n    \t\torganization_id::NUMBER\t  AS organization_id,\n    \t\tdepartment_id::NUMBER     AS department_id,\n    \t\toffice_id::NUMBER\t\t\t    AS office_id,\n\n   \t\t\t--info\n    \t\tdepartment_name::varchar\tAS department_name,\n    \t\toffice_name::varchar\t\t  AS office_name,\n    \t\tquestion_1::varchar\t\t\t  AS candidate_survey_question_1,\n    \t\tquestion_2::varchar\t\t\t  AS candidate_survey_question_2,\n    \t\tquestion_3::varchar\t\t\t  AS candidate_survey_question_3,\n    \t\tquestion_4::varchar\t\t\t  AS candidate_survey_question_4,\n    \t\tquestion_5::varchar\t\t\t  AS candidate_survey_question_5,\n    \t\tquestion_6::varchar\t\t\t  AS candidate_survey_question_6,\n    \t\tquestion_7::varchar\t\t\t  AS candidate_survey_question_7,\n    \t\tquestion_8::varchar\t\t\t  AS candidate_survey_question_8,\n     \t\tsubmitted_at::timestamp \tAS candidate_survey_submitted_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_candidate_surveys_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:05.706813Z", "completed_at": "2025-06-09T18:50:05.711163Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:05.711491Z", "completed_at": "2025-06-09T18:50:27.926528Z"}], "thread_id": "Thread-24", "execution_time": 22.309203147888184, "adapter_response": {}, "message": "Database Error in model google_ads_campaign_history_source (models/sources/google_ads/google_ads_campaign_history_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/google_ads/google_ads_campaign_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.google_ads_campaign_history_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.google_ads.campaign_history\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER AS campaign_id,\n    updated_at::TIMESTAMP AS campaign_updated_at,\n    customer_id::NUMBER AS customer_id,\n    base_campaign_id::NUMBER AS base_campaign_id,\n    ad_serving_optimization_status::VARCHAR AS campaign_ad_serving_optimization_status,\n    advertising_channel_subtype::VARCHAR AS campaign_advertising_channel_subtype,\n    advertising_channel_type::VARCHAR AS campaign_advertising_channel_type,\n    experiment_type::VARCHAR AS campaign_experiment_type,\n    end_date::VARCHAR AS campaign_end_date,\n    final_url_suffix::VARCHAR AS campaign_final_url_suffix,\n    frequency_caps::VARCHAR AS campaign_frequency_caps,\n    name::VARCHAR AS campaign_name,\n    optimization_score::FLOAT AS campaign_optimization_score,\n    payment_mode::VARCHAR AS campaign_payment_mode,\n    serving_status::VARCHAR AS campaign_serving_status,\n    start_date::VARCHAR AS campaign_start_date,\n    status::VARCHAR AS campaign_status,\n    tracking_url_template::VARCHAR AS campaign_tracking_url_template,\n    vanity_pharma_display_url_mode::VARCHAR AS campaign_vanity_pharma_display_url_mode,\n    vanity_pharma_text::VARCHAR AS campaign_vanity_pharma_text,\n    video_brand_safety_suitability::VARCHAR AS campaign_video_brand_safety_suitability,\n    _fivetran_synced::TIMESTAMP AS _fivetran_synced\n  FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.google_ads.google_ads_campaign_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:21.779721Z", "completed_at": "2025-06-09T18:50:21.789583Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:21.790436Z", "completed_at": "2025-06-09T18:50:27.938485Z"}], "thread_id": "Thread-7", "execution_time": 6.249946117401123, "adapter_response": {}, "message": "Database Error in model greenhouse_rejection_question_custom_fields_source (models/sources/greenhouse/greenhouse_rejection_question_custom_fields_source.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'try_to_date'.\n  Did you mean 'try_to_time'?\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_rejection_question_custom_fields_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_rejection_question_custom_fields_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.rejection_question_custom_fields\n\n), renamed as (\n\n\tSELECT\n\n            --key\n            application_id::NUMBER\t\t\tAS application_id,\n            user_id::NUMBER             AS user_id,\n            \n            --info\n            custom_field::varchar               AS rejection_question_custom_field,\n            float_value::float                  AS rejection_question_custom_field_float_value,\n            TRY_TO_DATE(date_value::VARCHAR)    AS rejection_question_custom_field_date_value,\n            display_value::varchar              AS rejection_question_custom_field_display_value,\n            unit::varchar                       AS rejection_question_custom_field_unit,\n            min_value::NUMBER                  AS rejection_question_custom_field_min_value,\n            max_value::NUMBER                  AS rejection_question_custom_field_max_value,\n            created_at::timestamp               AS rejection_question_custom_field_created_at,\n            updated_at::timestamp               AS rejection_question_custom_field_updated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_rejection_question_custom_fields_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:11.467986Z", "completed_at": "2025-06-09T18:50:11.485862Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:11.491601Z", "completed_at": "2025-06-09T18:50:27.850327Z"}], "thread_id": "Thread-4", "execution_time": 16.465245962142944, "adapter_response": {}, "message": "Database Error in model greenhouse_departments_source (models/sources/greenhouse/greenhouse_departments_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_departments_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_departments_source", "compiled": true, "compiled_code": "WITH source as (\n\n    SELECT *\n\n      FROM EMBUCKET.greenhouse.departments\n\n), renamed as (\n\n    SELECT\n\n                --keys\n                id::NUMBER                  AS department_id,\n                organization_id::NUMBER     AS organization_id,\n                parent_id::NUMBER           AS parent_id,\n\n                --info\n                name::VARCHAR(100)          AS department_name,\n                created_at::timestamp       AS department_created_at,\n                updated_at::timestamp       AS department_updated_at\n\n\n    FROM source\n\n)\n\nSELECT \n  department_id,\n  organization_id,\n  parent_id,\n  replace(replace(department_name,')',''),'(','')::VARCHAR(100) AS department_name,\n  department_created_at,\n  department_updated_at\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_departments_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:24.172226Z", "completed_at": "2025-06-09T18:50:24.190081Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:24.190712Z", "completed_at": "2025-06-09T18:50:28.470091Z"}], "thread_id": "Thread-5", "execution_time": 4.304127931594849, "adapter_response": {}, "message": "Database Error in model greenhouse_survey_builder_surveys_source (models/sources/greenhouse/greenhouse_survey_builder_surveys_source.sql)\n  000200: DataFusion error: Error during planning: Unexpected argument type to 'json_get' at position 1, expected a string, got Boolean.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_survey_builder_surveys_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_survey_builder_surveys_source", "compiled": true, "compiled_code": "WITH survey_builder_surveys AS (\n\n  SELECT *\n\n  FROM EMBUCKET.greenhouse.survey_builder_surveys\n\n),\n\nrenamed AS (\n\n  SELECT\n    --keys\n    id::NUMBER              AS survey_id,\n    organization_id::NUMBER AS organization_id,\n\n    --info\n    key::VARCHAR            AS survey_key,\n    active:BOOLEAN          AS is_survey_active,\n    activated_at::TIMESTAMP AS activated_at,\n    created_at::TIMESTAMP   AS created_at,\n    updated_at::TIMESTAMP   AS updated_at\n\n  FROM survey_builder_surveys\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_survey_builder_surveys_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:12.089950Z", "completed_at": "2025-06-09T18:50:12.092946Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:12.093195Z", "completed_at": "2025-06-09T18:50:28.580811Z"}], "thread_id": "Thread-23", "execution_time": 16.518678188323975, "adapter_response": {}, "message": "Database Error in model greenhouse_interviewer_tags_source (models/sources/greenhouse/greenhouse_interviewer_tags_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_interviewer_tags_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_interviewer_tags_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.interviewer_tags\n\n), renamed as (\n\n\tSELECT\n\n        --key\n        user_id::NUMBER         AS user_id,\n\n        --info\n        tag::varchar            AS interviewer_tag,\n        created_at::timestamp   AS interviewer_tag_created_at,\n        updated_at::timestamp   AS interviewer_tag_upated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_interviewer_tags_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.076287Z", "completed_at": "2025-06-09T18:50:28.098711Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.121974Z", "completed_at": "2025-06-09T18:50:28.552462Z"}], "thread_id": "Thread-17", "execution_time": 0.5444629192352295, "adapter_response": {}, "message": "Database Error in model hyperproof_programs_source (models/sources/hyperproof/hyperproof_programs_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,1778)..Location(1,1785)) })]), args: [Named { name: Ident { value: \"input\", quote_style: None, span: Span(Location(1,1786)..Location(1,1791)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,1795)..Location(1,1805)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,1806)..Location(1,1814)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,1817)..Location(1,1822)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,1826)..Location(1,1830)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"data_by_row\", quote_style: None, span: Span(Location(1,1835)..Location(1,1846)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/hyperproof/hyperproof_programs_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.hyperproof_programs_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n    SELECT * \n    FROM EMBUCKET.hyperproof.programs\n    \n), metric_per_row AS (\n\n    SELECT \n      data_by_row.value['baselineEnabled']::VARCHAR                 AS baseline_enabled,\n      data_by_row.value['clonedProgramId']::VARCHAR                 AS cloned_program_id,\n      data_by_row.value['createdBy']::VARCHAR                       AS created_by,\n      data_by_row.value['createdOn']::TIMESTAMP                     AS created_on,\n      data_by_row.value['description']::VARCHAR                     AS description,\n      data_by_row.value['frameworkLicenseNotice']::VARCHAR          AS framework_license_notice,\n      data_by_row.value['id']::VARCHAR                              AS id,\n      data_by_row.value['isScoringEnabled']::VARCHAR                AS is_scoring_enabled,\n      data_by_row.value['latestUpdatedToProgramId']::VARCHAR        AS latest_updated_to_programId,\n      data_by_row.value['name']::VARCHAR                            AS name,\n      data_by_row.value['orgId']::VARCHAR                           AS org_id,\n      data_by_row.value['overrideHealth']::VARCHAR                  AS override_health,\n      data_by_row.value['permissions']::VARCHAR                     AS permissions,\n      data_by_row.value['primaryContactId']::VARCHAR                AS primary_contact_id,\n      data_by_row.value['sectionRootId']::VARCHAR                   AS section_root_id,\n      data_by_row.value['selectedBaselines']::VARCHAR               AS selected_baselines,\n      data_by_row.value['sourceFrameworkId']::VARCHAR               AS source_framework_id,\n      data_by_row.value['sourceTemplateId']::VARCHAR                AS source_template_id,\n      data_by_row.value['status']::VARCHAR                          AS status,\n      data_by_row.value['updatedBy']::VARCHAR                       AS updated_by,\n      data_by_row.value['updatedOn']::TIMESTAMP                     AS updated_on,\n      data_by_row.value['workStatus']::VARCHAR                      AS work_status,\n      uploaded_at\n    FROM source,\n    LATERAL FLATTEN(input => PARSE_JSON(jsontext), OUTER => True) data_by_row\n\n)\nSELECT *\nFROM metric_per_row", "relation_name": "EMBUCKET.hyperproof.hyperproof_programs_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.069787Z", "completed_at": "2025-06-09T18:50:28.099717Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.127202Z", "completed_at": "2025-06-09T18:50:28.572622Z"}], "thread_id": "Thread-8", "execution_time": 0.5586609840393066, "adapter_response": {}, "message": "Database Error in model hyperproof_controls_source (models/sources/hyperproof/hyperproof_controls_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,1174)..Location(1,1181)) })]), args: [Named { name: Ident { value: \"input\", quote_style: None, span: Span(Location(1,1182)..Location(1,1187)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,1191)..Location(1,1201)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,1202)..Location(1,1210)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,1213)..Location(1,1218)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,1222)..Location(1,1226)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"data_by_row\", quote_style: None, span: Span(Location(1,1231)..Location(1,1242)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/hyperproof/hyperproof_controls_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.hyperproof_controls_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n    SELECT * \n    FROM EMBUCKET.hyperproof.controls\n    \n), metric_per_row AS (\n\n    SELECT \n      data_by_row.value['_isPartialData']::VARCHAR                        AS is_partial_data,\n      data_by_row.value['controlIdentifier']::VARCHAR                     AS control_identifier,\n      data_by_row.value['controlType']::VARCHAR                           AS control_type,\n      data_by_row.value['createdBy']::VARCHAR                             AS created_by,\n      data_by_row.value['description']::VARCHAR                           AS description,\n      data_by_row.value['domainId']::VARCHAR                              AS domain_id,\n      data_by_row.value['domainName']::VARCHAR                            AS domain_name,\n      data_by_row.value['id']::VARCHAR                                    AS control_id,\n      data_by_row.value['name']::VARCHAR                                  AS name,\n      data_by_row.value['orgId']::VARCHAR                                 AS org_id,\n      data_by_row.value['overrideHealth']::VARCHAR                        AS override_health,\n      data_by_row.value['owner']::VARCHAR                                 AS owner,\n      data_by_row.value['permissions']::VARCHAR                           AS permissions,\n      data_by_row.value['status']::VARCHAR                                AS status,\n      data_by_row.value['updatedBy']::VARCHAR                             AS updatedBy,\n      uploaded_at\n    FROM source,\n    LATERAL FLATTEN(input => PARSE_JSON(jsontext), OUTER => True) data_by_row\n\n)\n\nSELECT *\nFROM metric_per_row", "relation_name": "EMBUCKET.hyperproof.hyperproof_controls_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:16.173224Z", "completed_at": "2025-06-09T18:50:16.176614Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:16.176879Z", "completed_at": "2025-06-09T18:50:28.599859Z"}], "thread_id": "Thread-14", "execution_time": 12.471114158630371, "adapter_response": {}, "message": "Database Error in model greenhouse_jobs_attributes_source (models/sources/greenhouse/greenhouse_jobs_attributes_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_jobs_attributes_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_jobs_attributes_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.jobs_attributes\n\n), renamed as (\n\n\tSELECT\n\n\t\t\t--keys\n    \t\tid::NUMBER\t\t\t\t    AS job_attribute_id,\n    \t\tjob_id::NUMBER\t\t\t  AS job_id,\n    \t\tattribute_id::NUMBER\tAS attribute_id,\n\n    \t\t--info\n    \t\tactive::boolean\t\t\t  AS is_active,\n    \t\tcreated_at::timestamp\tAS jobs_attribute_created_at,\n    \t\tupdated_at::timestamp\tAS jobs_attribute_updated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_jobs_attributes_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:17.691142Z", "completed_at": "2025-06-09T18:50:17.696334Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:17.696691Z", "completed_at": "2025-06-09T18:50:28.586447Z"}], "thread_id": "Thread-13", "execution_time": 10.940253734588623, "adapter_response": {}, "message": "Database Error in model greenhouse_jobs_offices_source (models/sources/greenhouse/greenhouse_jobs_offices_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_jobs_offices_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_jobs_offices_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.jobs_offices\n\n), renamed as (\n\n\tSELECT\n\n            --keys\n            id::NUMBER              AS job_office_id,\n            job_id::NUMBER          AS job_id,\n            office_id::NUMBER       AS office_id,\n\n            --info\n            created_at::timestamp   AS job_office_created_at,\n            updated_at::timestamp   AS job_office_updated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_jobs_offices_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:14.778317Z", "completed_at": "2025-06-09T18:50:14.782571Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:14.782864Z", "completed_at": "2025-06-09T18:50:28.591885Z"}], "thread_id": "Thread-10", "execution_time": 13.861382007598877, "adapter_response": {}, "message": "Database Error in model greenhouse_job_posts_source (models/sources/greenhouse/greenhouse_job_posts_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_job_posts_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_job_posts_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.job_posts\n\n), renamed as (\n\n\tSELECT\n\n\t\t\t--keys\n   \t\t\tid::NUMBER\t\t\t\t\t      AS job_post_id,\n   \t\t\tjob_id::NUMBER\t\t\t\t    AS job_id,\n\n   \t\t\t--info\n   \t\t\ttitle::varchar\t\t\t\t    AS job_post_title,\n   \t\t\tlive::boolean\t\t\t\t      AS is_job_live,\n   \t\t\tjob_board_name::varchar\t\tAS job_board_name,\n   \t\t\tlanguage::varchar\t\t\t    AS job_post_language,\n   \t\t\tlocation::varchar\t\t\t    AS job_post_location,\n   \t\t\tcreated_at::timestamp \t\tAS job_post_created_at,\n   \t\t\tupdated_at::timestamp \t\tAS job_post_updated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_job_posts_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.090733Z", "completed_at": "2025-06-09T18:50:28.109237Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.134438Z", "completed_at": "2025-06-09T18:50:28.598259Z"}], "thread_id": "Thread-12", "execution_time": 0.550745964050293, "adapter_response": {}, "message": "Database Error in model incident_history_source (models/sources/observability/incident_history_source.sql)\n  000200: DataFusion error: Error during planning: table 'monte_carlo.prod_insights.incident_history' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/observability/incident_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.incident_history_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM MONTE_CARLO.prod_insights.incident_history\n\n), renamed AS (\n\n    SELECT\n     *\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.incident_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.064197Z", "completed_at": "2025-06-09T18:50:28.111199Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.139414Z", "completed_at": "2025-06-09T18:50:28.598812Z"}], "thread_id": "Thread-31", "execution_time": 0.6028518676757812, "adapter_response": {}, "message": "Database Error in model hyperproof_task_statuses_source (models/sources/hyperproof/hyperproof_task_statuses_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,941)..Location(1,948)) })]), args: [Named { name: Ident { value: \"input\", quote_style: None, span: Span(Location(1,949)..Location(1,954)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,958)..Location(1,968)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,969)..Location(1,977)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,980)..Location(1,985)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,989)..Location(1,993)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"data_by_row\", quote_style: None, span: Span(Location(1,998)..Location(1,1009)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/hyperproof/hyperproof_task_statuses_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.hyperproof_task_statuses_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n    SELECT * \n    FROM EMBUCKET.hyperproof.taskstatuses\n    \n),  metric_per_row AS (\n\n    SELECT\n        data_by_row.value['color']::VARCHAR              AS color,\n        data_by_row.value['createdBy']::VARCHAR          AS created_by,\n        data_by_row.value['createdOn']::TIMESTAMP        AS created_on,\n        data_by_row.value['icon']::VARCHAR               AS icon,\n        data_by_row.value['id']::VARCHAR                 AS task_status_id,\n        data_by_row.value['name']::VARCHAR               AS task_status_name,\n        data_by_row.value['orgId']::VARCHAR              AS org_id,\n        data_by_row.value['sortOrder']::VARCHAR          AS sort_order,\n        data_by_row.value['status']::VARCHAR             AS status,\n        data_by_row.value['type']::VARCHAR               AS type,\n        data_by_row.value['updatedBy']::VARCHAR          AS updated_by,\n        data_by_row.value['updatedOn']::TIMESTAMP        AS updated_on,\n        uploaded_at\n\n    FROM source,\n    LATERAL FLATTEN(input => PARSE_JSON(jsontext), OUTER => True) data_by_row\n\n)\nSELECT *\nFROM metric_per_row", "relation_name": "EMBUCKET.hyperproof.hyperproof_task_statuses_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.218640Z", "completed_at": "2025-06-09T18:50:28.229839Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.236575Z", "completed_at": "2025-06-09T18:50:28.631828Z"}], "thread_id": "Thread-4", "execution_time": 0.46712398529052734, "adapter_response": {}, "message": "Database Error in model iterable_campaign_metrics_source (models/sources/iterable/iterable_campaign_metrics_source.sql)\n  000200: DataFusion error: Schema error: No field named iterable_campaign_id. Valid fields are source.date, source.id, source._fivetran_deleted, source.average_order_value, source.purchases, source.revenue, source.revenue_m, source.total_app_uninstalls, source.total_complaints, source.total_email_bounced, source.total_email_clicked, source.total_email_delivered, source.total_email_opens, source.total_email_sends, source.total_hosted_unsubscribe_clicks, source.total_purchases, source.total_pushes_bounced, source.total_pushes_delivered, source.total_pushes_opened, source.total_pushes_sent, source.total_unsubscribes, source.unique_email_bounced, source.unique_email_clicks, source.unique_email_opens_or_clicks, source.unique_hosted_unsubscribe_clicks, source.unique_purchases, source.unique_pushes_bounced, source.unique_pushes_opened, source.unique_pushes_sent, source.unique_unsubscribes, source.unique_email_opens_filtered_, source.purchases_m_email_, source.sum_of_custom_conversions, source.unique_emails_delivered, source.unique_custom_conversions, source.total_email_opens_filtered_, source.unique_email_opens, source.total_custom_conversions, source.total_email_holdout, source.average_custom_conversion_value, source.total_email_send_skips, source.unique_email_sends, source.revenue_m_email_, source._fivetran_synced.\n  compiled code at target/run/gitlab_snowflake/models/sources/iterable/iterable_campaign_metrics_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.iterable_campaign_metrics_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.iterable.campaign_metrics\n \n), final AS (\n \n    SELECT\n        id::VARCHAR                                AS iterable_campaign_id,\n        date::TIMESTAMP                            AS iterable_campaign_datetime,\n        date::DATE                                 AS iterable_campaign_date,\n        md5(cast(coalesce(cast(iterable_campaign_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(iterable_campaign_date as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) \n                                                   AS iterable_campaign_sk,\n        _fivetran_deleted::BOOLEAN                 AS is_iterable_campaign_deleted,\n        average_order_value::NUMBER                AS iterable_campaign_average_order_value,\n        purchases::NUMBER                          AS iterable_campaign_purchases,\n        revenue::NUMBER                            AS iterable_campaign_revenue,\n        revenue_m::NUMBER                          AS iterable_campaign_revenue_m,\n        total_app_uninstalls::NUMBER               AS iterable_campaign_app_uninstalls_total, \n        total_complaints::NUMBER                   AS iterable_campaign_complaints_total,\n        total_email_bounced::NUMBER                AS iterable_campaign_email_bounced_total,\n        total_email_clicked::NUMBER                AS iterable_campaign_email_clicked_total,\n        total_email_opens::NUMBER                  AS iterable_campaign_email_opened_total,\n        total_email_delivered::NUMBER              AS iterable_campaign_email_delivered_total,\n        total_email_sends::NUMBER                  AS iterable_campaign_email_sends_total,\n        total_hosted_unsubscribe_clicks::NUMBER    AS iterable_campaign_hosted_unsubscribe_clicks_total,\n        total_purchases::NUMBER                    AS iterable_campaign_purchases_total,\n        total_pushes_bounced::NUMBER               AS iterable_campaign_pushes_bounced_total,\n        total_pushes_opened::NUMBER                AS iterable_campaign_pushes_opened_total,\n        total_pushes_sent::NUMBER                  AS iterable_campaign_pushes_sent_total,\n        total_unsubscribes::NUMBER                 AS iterable_campaign_unsubscribes_total,\n        unique_email_bounced::NUMBER               AS iterable_campaign_email_bounced_unique,\n        unique_email_clicks::NUMBER                AS iterable_campaign_email_clicks_unique,\n        unique_email_opens_or_clicks::NUMBER       AS iterable_campaign_email_opens_or_clicks_unique,\n        unique_hosted_unsubscribe_clicks::NUMBER   AS iterable_campaign_hosted_unsubscribe_clicks_unique,\n        unique_purchases::NUMBER                   AS iterable_campaign_purchases_unique,\n        unique_pushes_bounced::NUMBER              AS iterable_campaign_pushes_bounced_unique,\n        unique_pushes_opened::NUMBER               AS iterable_campaign_pushes_opened_unique,\n        unique_pushes_sent::NUMBER                 AS iterable_campaign_pushes_sent_unique,\n        unique_unsubscribes::NUMBER                AS iterable_campaign_unsubscribes_unique,\n        unique_email_opens_filtered_::NUMBER       AS iterable_campaign_email_opens_filtered_unique,\n        purchases_m_email_::NUMBER                 AS iterable_campaign_purchases_email_m,\n        sum_of_custom_conversions::NUMBER          AS iterable_campaign_custom_conversions_sum,\n        unique_emails_delivered::NUMBER            AS iterable_campaign_emails_delivered_unique,\n        unique_custom_conversions::NUMBER          AS iterable_campaign_custom_conversions_unique,\n        total_email_opens_filtered_::NUMBER        AS iterable_campaign_email_opens_filtered_total,\n        unique_email_opens::NUMBER                 AS iterable_campaign_email_opens_unique,\n        total_custom_conversions::NUMBER           AS iterable_campaign_custom_conversions_total,\n        total_email_holdout::NUMBER                AS iterable_campaign_email_holdouts_total,\n        average_custom_conversion_value::NUMBER    AS iterable_campaign_custom_conversion_value_average,\n        total_email_send_skips::NUMBER             AS iterable_campaign_email_send_skips_total,\n        unique_email_sends::NUMBER                 AS iterable_campaign_email_sends_unique,\n        revenue_m_email_::NUMBER                   AS iterable_campaign_revenue_m_email\n    FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.iterable.iterable_campaign_metrics_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:09.673653Z", "completed_at": "2025-06-09T18:50:09.677242Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:09.677595Z", "completed_at": "2025-06-09T18:50:28.874925Z"}], "thread_id": "Thread-30", "execution_time": 19.202099084854126, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_applications_jobs_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \tFROM EMBUCKET.greenhouse.applications_jobs\n\n), renamed as (\n\n\tSELECT\n\t\t\t--keys\n    \t\tapplication_id::NUMBER\t\tAS application_id,\n    \t\tjob_id::NUMBER\t\t\t\tAS job_id\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_applications_jobs_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:13.400405Z", "completed_at": "2025-06-09T18:50:13.405362Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:13.405729Z", "completed_at": "2025-06-09T18:50:29.317905Z"}], "thread_id": "Thread-2", "execution_time": 15.942338228225708, "adapter_response": {}, "message": "Database Error in model greenhouse_interviews_source (models/sources/greenhouse/greenhouse_interviews_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_interviews_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_interviews_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.interviews\n\n), renamed as (\n\n\tSELECT\n\n\t\t\t--keys\n    \t\tid::NUMBER\t\t\t\t              AS interview_id,\n    \t\torganization_id::NUMBER         AS organization_id,\n\n    \t\t--info\n    \t\tname::varchar\t\t\t              AS interview_name,\n    \t\tcreated_at::varchar::timestamp \tAS interview_created_at,\n    \t\tupdated_at::varchar::timestamp \tAS interview_updated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_interviews_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:20.419021Z", "completed_at": "2025-06-09T18:50:20.426244Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:20.426820Z", "completed_at": "2025-06-09T18:50:29.645093Z"}], "thread_id": "Thread-27", "execution_time": 9.244634866714478, "adapter_response": {}, "message": "Database Error in model greenhouse_opening_custom_fields_source (models/sources/greenhouse/greenhouse_opening_custom_fields_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_opening_custom_fields_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_opening_custom_fields_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \tFROM EMBUCKET.greenhouse.opening_custom_fields\n\n\n), renamed as (\n\n\tSELECT\n\n\t  --key\n   \t  opening_id::varchar\t\t\t\t  AS opening_id,\n\n   \t  --info\n   \t  key::varchar\t\t\t                  AS opening_custom_field,\n   \t  display_value::varchar\t\t\t  AS opening_custom_field_display_value,\n   \t  created_at::timestamp \t\t\t  AS opening_custom_field_created_at,\n   \t  updated_at::timestamp \t\t\t  AS opening_custom_field_updated_at\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_opening_custom_fields_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:20.422779Z", "completed_at": "2025-06-09T18:50:20.432305Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:20.432641Z", "completed_at": "2025-06-09T18:50:28.884114Z"}], "thread_id": "Thread-15", "execution_time": 8.47077488899231, "adapter_response": {}, "message": "Database Error in model greenhouse_referrers_source (models/sources/greenhouse/greenhouse_referrers_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_referrers_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_referrers_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \tFROM EMBUCKET.greenhouse.referrers\n\n), renamed as (\n\n\tSELECT  id \t\t\t\t\t\t\t\t\t\t\tAS referrer_id,\n          name          \t\t\t\t\tAS referrer_name,\n    \t\t\t--keys\n          organization_id,\n          user_id,\n\n          created_at::timestamp \tAS created_at,\n          updated_at::timestamp \tAS updated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_referrers_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:18.973767Z", "completed_at": "2025-06-09T18:50:18.976953Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:18.977205Z", "completed_at": "2025-06-09T18:50:29.351396Z"}], "thread_id": "Thread-19", "execution_time": 10.383482217788696, "adapter_response": {}, "message": "Database Error in model greenhouse_jobs_source (models/sources/greenhouse/greenhouse_jobs_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_jobs_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_jobs_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.greenhouse.jobs\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    --keys\n    id::NUMBER              AS job_id,\n    organization_id::NUMBER AS organization_id,\n    requisition_id::VARCHAR AS requisition_id,\n    department_id::NUMBER   AS department_id,\n\n    --info\n    name::VARCHAR           AS job_name,\n    status::VARCHAR         AS job_status,\n    opened_at::TIMESTAMP    AS job_opened_at,\n    closed_at::TIMESTAMP    AS job_closed_at,\n    level::VARCHAR          AS job_level,\n    confidential::BOOLEAN   AS is_confidential,\n    is_template::BOOLEAN    AS is_template,\n    created_at::TIMESTAMP   AS job_created_at,\n    notes::VARCHAR          AS job_notes,\n    updated_at::TIMESTAMP   AS job_updated_at\n\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_jobs_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:24.109053Z", "completed_at": "2025-06-09T18:50:24.116458Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:24.117091Z", "completed_at": "2025-06-09T18:50:29.385263Z"}], "thread_id": "Thread-20", "execution_time": 5.287855863571167, "adapter_response": {}, "message": "Database Error in model greenhouse_survey_builder_questions_source (models/sources/greenhouse/greenhouse_survey_builder_questions_source.sql)\n  000200: DataFusion error: Error during planning: Unexpected argument type to 'json_get' at position 1, expected a string, got Boolean.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_survey_builder_questions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_survey_builder_questions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n\n  FROM EMBUCKET.greenhouse.survey_builder_questions\n\n),\n\nrenamed AS (\n\n  SELECT\n    --keys\n    id::NUMBER              AS question_id,\n    organization_id::NUMBER AS organization_id,\n    survey_id::NUMBER       AS survey_id,\n\n    --info\n    value::VARCHAR          AS candidate_survey_question,\n    answer_type::VARCHAR    AS answer_type,\n    priority::NUMBER        AS question_priority,\n    active:BOOLEAN          AS is_question_active,\n    created_at::TIMESTAMP   AS created_at,\n    updated_at::TIMESTAMP   AS updated_at\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_survey_builder_questions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:20.374842Z", "completed_at": "2025-06-09T18:50:20.391185Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:20.400748Z", "completed_at": "2025-06-09T18:50:29.379530Z"}], "thread_id": "Thread-25", "execution_time": 9.029122829437256, "adapter_response": {}, "message": "Database Error in model greenhouse_offices_source (models/sources/greenhouse/greenhouse_offices_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_offices_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_offices_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.offices\n\n), renamed as (\n\n\tSELECT\n\n            --keys\n            id::NUMBER                          AS office_id,\n            organization_id::NUMBER             AS organization_id,\n            parent_id::NUMBER                   AS office_parent_id,\n\n            --info\n            name::varchar                       AS office_name,\n            created_at::timestamp               AS office_created_at,\n            updated_at::timestamp               AS office_updated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_offices_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:13.380575Z", "completed_at": "2025-06-09T18:50:13.393928Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:13.394725Z", "completed_at": "2025-06-09T18:50:29.629622Z"}], "thread_id": "Thread-26", "execution_time": 16.25002098083496, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_interviewers_source", "compiled": true, "compiled_code": "WITH source as (\n\n    SELECT *\n    FROM EMBUCKET.greenhouse.interviewers\n    -- intentionally excluded record, details in https://gitlab.com/gitlab-data/analytics/-/issues/10211\n    -- hide PII columns, just exclude one record intentionally\n    WHERE NOT (user IS NULL\n    AND scorecard_id IS NULL\n    AND interview_id = 101187575002)\n\n), renamed as (\n\n  SELECT distinct user AS interviewer_name\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_interviewers_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:22.922481Z", "completed_at": "2025-06-09T18:50:22.931647Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:22.938422Z", "completed_at": "2025-06-09T18:50:29.370613Z"}], "thread_id": "Thread-11", "execution_time": 6.485253810882568, "adapter_response": {}, "message": "Database Error in model greenhouse_scorecard_question_answers_source (models/sources/greenhouse/greenhouse_scorecard_question_answers_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_scorecard_question_answers_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_scorecard_question_answers_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.scorecard_question_answers\n\n), renamed as (\n\n\tSELECT\n\n            --keys\n            scorecard_id::NUMBER                AS scorecard_id,\n            application_id::NUMBER              AS application_id,\n\n            --info\n            question::varchar                   AS scorecard_question,\n            answer::varchar                     AS scorecard_answer,\n            created_at::timestamp               AS scorecard_question_answer_created_at,\n            updated_at::varchar::timestamp      AS scorecard_question_answer_updated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_scorecard_question_answers_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:21.800615Z", "completed_at": "2025-06-09T18:50:21.805168Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:21.805520Z", "completed_at": "2025-06-09T18:50:29.645691Z"}], "thread_id": "Thread-28", "execution_time": 7.864694118499756, "adapter_response": {}, "message": "Database Error in model greenhouse_rejection_reasons_source (models/sources/greenhouse/greenhouse_rejection_reasons_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_rejection_reasons_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_rejection_reasons_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.rejection_reasons\n\n), renamed as (\n\n\tSELECT\n    \t\t--keys\n    \t\tid::NUMBER\t\t\t\t\t\t\t\tAS rejection_reason_id,\n    \t\torganization_id::NUMBER\t\tAS organization_id,\n\n    \t\t--info\n    \t\tname::varchar\t\t\t\t\t\t\tAS rejection_reason_name,\n    \t\ttype::varchar   \t\t\t\t\tAS rejection_reason_type,\n    \t\tcreated_at::timestamp \t\tAS rejection_reason_created_at,\n    \t\tupdated_at::timestamp \t\tAS rejection_reason_updated_at\n\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_rejection_reasons_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.731774Z", "completed_at": "2025-06-09T18:50:28.806750Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.825061Z", "completed_at": "2025-06-09T18:50:30.810339Z"}], "thread_id": "Thread-4", "execution_time": 2.136254072189331, "adapter_response": {}, "message": "Database Error in model job_profiles_snapshots_source (models/sources/workday/job_profiles_snapshots_source.sql)\n  000200: DataFusion error: Error during planning: Cannot infer common argument type for comparison operation Boolean = Int64\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/job_profiles_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.job_profiles_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".snapshots.job_profiles_snapshots\n  WHERE NOT _fivetran_deleted\n\n),\n\nfinal AS (\n\n  SELECT\n    report_effective_date::DATE             AS report_effective_date,\n    job_code::VARCHAR                       AS job_code,\n    job_profile::VARCHAR                    AS job_profile,\n    job_family::VARCHAR                     AS job_family,\n    management_level::VARCHAR               AS management_level,\n    job_level::FLOAT                        AS job_level,\n    inactive::BOOLEAN                       AS inactive,\n    IFF(inactive::BOOLEAN = 0, TRUE, FALSE) AS is_job_profile_active,\n    dbt_valid_from::TIMESTAMP               AS valid_from,\n    dbt_valid_to::TIMESTAMP                 AS valid_to,\n    job_workday_id::VARCHAR                 AS job_workday_id\n  FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.workday.job_profiles_snapshots_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:23.993002Z", "completed_at": "2025-06-09T18:50:23.998737Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:23.999084Z", "completed_at": "2025-06-09T18:50:30.836603Z"}], "thread_id": "Thread-3", "execution_time": 6.8529579639434814, "adapter_response": {}, "message": "Database Error in model greenhouse_survey_builder_answers_source (models/sources/greenhouse/greenhouse_survey_builder_answers_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_survey_builder_answers_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_survey_builder_answers_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n\n  FROM EMBUCKET.greenhouse.survey_builder_answers\n\n),\n\nrenamed AS (\n\n  SELECT\n    --keys\n    id::NUMBER                            AS answer_id,\n    question_id::NUMBER                   AS question_id,\n    organization_id::NUMBER               AS organization_id,\n    survey_id::NUMBER                     AS survey_id,\n    delivered_candidate_survey_id::NUMBER AS delivered_candidate_survey_id,\n\n    --info\n    value::VARCHAR                        AS answer,\n    comment::VARCHAR                      AS comment,\n    created_at::TIMESTAMP                 AS created_at,\n    updated_at::TIMESTAMP                 AS updated_at,\n    submitted_at::TIMESTAMP               AS submitted_at\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_survey_builder_answers_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:22.931941Z", "completed_at": "2025-06-09T18:50:22.943709Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:22.945530Z", "completed_at": "2025-06-09T18:50:30.844591Z"}], "thread_id": "Thread-6", "execution_time": 7.944847822189331, "adapter_response": {}, "message": "Database Error in model greenhouse_scorecards_attributes_source (models/sources/greenhouse/greenhouse_scorecards_attributes_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_scorecards_attributes_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_scorecards_attributes_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.scorecards_attributes\n\n), renamed as (\n\n\tSELECT\n\n            --keys\n            scorecard_id::NUMBER                AS scorecard_id,\n            attribute_id::NUMBER                AS scorecard_attribute_id,\n\n            --info\n            rating::varchar                     AS scorecard_attribute_rating,\n            notes::varchar                      AS scorecard_attribute_notes,\n            created_at::timestamp               AS scorecard_attribute_created_at,\n            updated_at::timestamp               AS scorecard_attribute_updated_at\n\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_scorecards_attributes_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.721500Z", "completed_at": "2025-06-09T18:50:28.763764Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.764297Z", "completed_at": "2025-06-09T18:50:30.868174Z"}], "thread_id": "Thread-14", "execution_time": 2.209099054336548, "adapter_response": {}, "message": "Database Error in model iterable_event_source (models/sources/iterable/iterable_event_source.sql)\n  000200: DataFusion error: This feature is not implemented: Arrays with unspecified type is not supported\n  compiled code at target/run/gitlab_snowflake/models/sources/iterable/iterable_event_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.iterable_event_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.iterable.event\n \n), final AS (\n \n    SELECT\n        _fivetran_id::VARCHAR           AS iterable_event_fivetran_id,\n        _fivetran_user_id::VARCHAR      AS iterable_user_fivetran_id,\n        campaign_id::VARCHAR            AS iterable_event_campaign_id,\n        message_id::VARCHAR             AS iterable_event_message_id,\n        content_id::VARCHAR             AS iterable_event_content_id,\n        created_at::TIMESTAMP           AS iterable_event_created_at,\n        created_at::DATE                AS iterable_event_created_date,\n        event_name::VARCHAR             AS iterable_event_name,\n        ip::VARCHAR                     AS iterable_event_ip,\n        is_custom_event::BOOLEAN        AS is_iterable_custom_event,\n        message_bus_id::VARCHAR         AS iterable_event_message_bus_id,\n        message_type_id::VARCHAR        AS iterable_event_message_type_id,\n        recipient_state::VARCHAR        AS iterable_event_recipient_state,\n        status::VARCHAR                 AS iterable_event_status,\n        unsub_source::VARCHAR           AS iterable_event_unsubscribe_source,\n        user_agent::VARCHAR             AS iterable_event_user_agent,\n        user_agent_device::VARCHAR      AS iterable_event_user_agent_device,\n        transactional_data::VARCHAR     AS iterable_event_transactional_data,\n        additional_properties::ARRAY    AS iterable_event_additional_properties\n    FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.iterable.iterable_event_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:29.811540Z", "completed_at": "2025-06-09T18:50:29.843034Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:29.856370Z", "completed_at": "2025-06-09T18:50:31.240837Z"}], "thread_id": "Thread-28", "execution_time": 1.5046052932739258, "adapter_response": {}, "message": "Database Error in model marketo_activity_add_to_list_source (models/sources/marketo/marketo_activity_add_to_list_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,261)..Location(1,273)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_add_to_list_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_add_to_list_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_add_to_list\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                               AS marketo_activity_add_to_list_id,\n      lead_id::NUMBER                          AS lead_id,\n      activity_date::TIMESTAMP_TZ              AS activity_date,\n      activity_type_id::NUMBER                 AS activity_type_id,\n      campaign_id::NUMBER                      AS campaign_id,\n      primary_attribute_value_id::NUMBER       AS primary_attribute_value_id,\n      primary_attribute_value::TEXT            AS primary_attribute_value,\n      source::TEXT                             AS source\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_add_to_list_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.113378Z", "completed_at": "2025-06-09T18:50:28.147027Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.169335Z", "completed_at": "2025-06-09T18:50:31.342968Z"}], "thread_id": "Thread-9", "execution_time": 3.248034954071045, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.infralabel_pl", "compiled": true, "compiled_code": "-- infra label to pl mapping\n\nSELECT * FROM EMBUCKET.seed_engineering.gcp_billing_infra_pl_mapping\nUNPIVOT(allocation FOR type IN (free, internal, paid))", "relation_name": "EMBUCKET.workspace_engineering.infralabel_pl", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:29.715975Z", "completed_at": "2025-06-09T18:50:29.757584Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:29.790937Z", "completed_at": "2025-06-09T18:50:31.322625Z"}], "thread_id": "Thread-19", "execution_time": 1.6557860374450684, "adapter_response": {}, "message": "Database Error in model location_factors_yaml_flatten_source (models/sources/gitlab_data_yaml/location_factors_yaml_flatten_source.sql)\n  000200: DataFusion error: Schema error: No field named valid_to. Valid fields are source.jsontext, source.uploaded_at, source.lead_uploaded_at, source.max_uploaded_at.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/location_factors_yaml_flatten_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.location_factors_yaml_flatten_source", "compiled": true, "compiled_code": "WITH source AS (\n      /* \n       Selecting only non error results as there will be nothing to \n       flatten  if there was an error\n       */\n\n    SELECT\n      jsontext,\n      uploaded_at,\n      LEAD(uploaded_at,1) OVER (ORDER BY uploaded_at) AS lead_uploaded_at,\n      MAX(uploaded_at) OVER ()                        AS max_uploaded_at\n    FROM EMBUCKET.gitlab_data_yaml.location_factors \n    WHERE NOT CONTAINS(jsontext, 'Server Error')\n      \n), grouped AS (\n      /*\n      Reducing to only the changed values to reduce processing load\n      and create a contiguious range of data.\n      */\n      \n    SELECT DISTINCT\n      jsontext,\n      MIN(uploaded_at) OVER (PARTITION BY jsontext)      AS valid_from,\n      MAX(lead_uploaded_at) OVER (PARTITION BY jsontext) AS valid_to,\n      IFF(valid_to = max_uploaded_at, TRUE, FALSE)       AS is_current\n    FROM source\n\n), level_1 AS (\n\n    SELECT\n      valid_from,\n      valid_to,\n      is_current,\n      level_1.value['area']::VARCHAR                AS area_level_1,\n      level_1.value['country']::VARCHAR             AS country_level_1,\n      level_1.value['locationFactor']::NUMBER(6, 3) AS locationfactor_level_1,\n      level_1.value['factor']::NUMBER(6, 3)         AS factor_level_1,\n      level_1.value['metro_areas']::VARIANT         AS metro_areas_level_1,\n      level_1.value['states_or_provinces']::VARIANT AS states_or_provinces_level_1\n    FROM grouped\n    INNER JOIN LATERAL FLATTEN(INPUT => TRY_PARSE_JSON(jsontext), OUTER => TRUE) AS level_1\n\n), level_1_metro_areas AS (\n\n    SELECT\n      level_1.*,\n      level_1_metro_areas.value['name']::VARCHAR         AS metro_areas_name_level_2,\n      level_1_metro_areas.value['factor']::NUMBER(6, 3)  AS metro_areas_factor_level_2,\n      level_1_metro_areas.value['sub_location']::VARCHAR AS metro_areas_sub_location_level_2\n    FROM level_1\n    INNER JOIN LATERAL FLATTEN(INPUT => TRY_PARSE_JSON(metro_areas_level_1), OUTER => TRUE) AS level_1_metro_areas\n    UNION ALL\n    -- For the country level override when there is also a metro area\n    SELECT\n      level_1.*,\n      NULL AS metro_areas_name_level_2,\n      NULL AS metro_areas_factor_level_2,\n      NULL AS metro_areas_sub_location_level_2\n    FROM level_1\n    WHERE factor_level_1 IS NOT NULL\n      AND metro_areas_level_1 IS NOT NULL\n\n), level_1_states_or_provinces AS (\n\n    SELECT\n      level_1_metro_areas.*,\n      level_1_states_or_provinces.value['name']::VARCHAR        AS states_or_provinces_name_level_2,\n      level_1_states_or_provinces.value['factor']::NUMBER(6, 3) AS states_or_provinces_factor_level_2,\n      level_1_states_or_provinces.value['metro_areas']::VARIANT AS states_or_provinces_metro_areas_level_2\n    FROM level_1_metro_areas\n    INNER JOIN LATERAL FLATTEN(INPUT => TRY_PARSE_JSON(states_or_provinces_level_1), OUTER =>\n                               TRUE) AS level_1_states_or_provinces\n\n), level_2_states_or_provinces_metro_areas AS (\n\n    SELECT\n      level_1_states_or_provinces.*,\n      level_2_states_or_provinces_metro_areas.value['name']::VARCHAR        AS states_or_provinces_metro_areas_name_level_2,\n      level_2_states_or_provinces_metro_areas.value['factor']::NUMBER(6, 3) AS states_or_provinces_metro_areas_factor_level_2\n    FROM level_1_states_or_provinces\n    INNER JOIN LATERAL FLATTEN(INPUT => TRY_PARSE_JSON(states_or_provinces_metro_areas_level_2), OUTER =>\n                                 TRUE) AS level_2_states_or_provinces_metro_areas\n\n)\n\n  SELECT\n    valid_from,\n    valid_to,\n    is_current,\n    area_level_1,\n    country_level_1,\n    locationfactor_level_1,\n    factor_level_1,\n    metro_areas_name_level_2,\n    metro_areas_factor_level_2,\n    metro_areas_sub_location_level_2,\n    states_or_provinces_name_level_2,\n    states_or_provinces_factor_level_2,\n    states_or_provinces_metro_areas_name_level_2,\n    states_or_provinces_metro_areas_factor_level_2\n  FROM level_2_states_or_provinces_metro_areas", "relation_name": "EMBUCKET.gitlab_data_yaml.location_factors_yaml_flatten_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:29.746315Z", "completed_at": "2025-06-09T18:50:29.795138Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:29.822687Z", "completed_at": "2025-06-09T18:50:31.360303Z"}], "thread_id": "Thread-20", "execution_time": 1.6940841674804688, "adapter_response": {}, "message": "Database Error in model location_factors_yaml_source (models/sources/gitlab_data_yaml/location_factors_yaml_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,568)..Location(1,575)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,576)..Location(1,581)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,585)..Location(1,595)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,596)..Location(1,604)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,607)..Location(1,612)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,616)..Location(1,620)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,625)..Location(1,626)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/location_factors_yaml_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.location_factors_yaml_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *,\n      DATE_TRUNC('day', uploaded_at)::DATE            AS snapshot_date,\n      RANK() OVER (PARTITION BY DATE_TRUNC('day', uploaded_at) ORDER BY uploaded_at DESC) AS rank\n    FROM EMBUCKET.gitlab_data_yaml.location_factors\n    ORDER BY uploaded_at DESC\n  \n), original_yaml_file_format AS (\n\n    SELECT\n      d.value['area']::VARCHAR                  AS area,\n      d.value['country']::VARCHAR               AS country,\n      d.value['locationFactor']::FLOAT          AS location_factor,\n      snapshot_date,\n      rank\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n    WHERE snapshot_date <= '2020-10-21'\n\n), united_states AS (\n\n    SELECT DISTINCT\n      initial_unnest.value['country']::VARCHAR      AS country, \n      countries_info.value['name']::VARCHAR         AS location_state,\n      metro_areas.value['name']::VARCHAR            AS metro_area,\n      metro_areas.value['factor']::VARCHAR          AS location_factor,\n      snapshot_date,\n      rank\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) initial_unnest,\n    LATERAL FLATTEN(INPUT => parse_json(initial_unnest.value), OUTER => TRUE) countries,\n    TABLE(FLATTEN(input => countries.value, RECURSIVE => TRUE))  countries_info,\n    TABLE(FLATTEN(input => countries_info.value, RECURSIVE => TRUE))  metro_areas\n    WHERE snapshot_date >= '2021-01-04'\n      AND countries_info.index IS NOT NULL\n      AND metro_areas.index IS NOT NULL\n      AND country = 'United States'\n\n), other AS (\n\n    SELECT DISTINCT\n      initial_unnest.value['country']::VARCHAR      AS country, \n      countries_info.value['sub_location']::VARCHAR AS state,\n      countries_info.value['name']::VARCHAR         AS metro_area,\n      countries_info.value['factor']::VARCHAR       AS location_factor,\n      snapshot_date,\n      rank,\n      countries_info.index                          AS country_info_index\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) initial_unnest,\n    LATERAL FLATTEN(INPUT => parse_json(initial_unnest.value), OUTER => TRUE) countries,\n    TABLE(FLATTEN(input => countries.value, RECURSIVE => TRUE))  countries_info\n    WHERE snapshot_date >= '2021-01-04'\n      AND countries_info.index IS NOT NULL\n    \n), countries_without_metro_areas AS (\n\n    SELECT DISTINCT\n      CASE\n        WHEN initial_unnest.value['country']::VARCHAR = 'Israel' THEN 'All'\n        WHEN initial_unnest.value['metro_areas']::VARCHAR IS NOT NULL THEN 'Everywhere else'\n        ELSE 'All'\n      END                                           AS area,\n      initial_unnest.value['country']::VARCHAR      AS country, \n      initial_unnest.value['factor']::VARCHAR       AS location_factor,\n      snapshot_date,\n      rank\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) initial_unnest,\n    LATERAL FLATTEN(INPUT => parse_json(initial_unnest.value), OUTER => TRUE) countries\n    WHERE snapshot_date >= '2021-01-04'\n      AND location_factor IS NOT NULL\n\n), unioned AS (\n  \n    SELECT \n      area,\n      country,\n      location_factor,\n      snapshot_date,\n      rank\n    FROM original_yaml_file_format\n\n    UNION ALL\n\n    SELECT\n      metro_area || ', '|| location_state                AS area,\n      country,\n      location_factor,\n      snapshot_date,\n      rank\n    FROM united_states\n\n    UNION ALL \n  \n    SELECT\n      metro_area || IFF( state is null,'',', ' || state ) AS metro_area,\n      country,\n      location_factor,\n      snapshot_date,\n      rank\n    FROM other\n    WHERE country != 'United States'\n\n    UNION  ALL\n\n    SELECT\n      area AS metro_area,\n      country,\n      location_factor,\n      snapshot_date,\n      rank\n    FROM countries_without_metro_areas\n\n    UNION ALL \n\n    SELECT\n      metro_area,\n      country,\n      location_factor,\n      snapshot_date,\n      rank\n    FROM other\n    WHERE country = 'United States'\n      AND location_factor IS NOT NULL\n      AND metro_area IN ('Hawaii','Washington DC')\n    ---this is to capture data points with just metro area  \n\n)\n\nSELECT *\nFROM unioned\nWHERE rank = 1", "relation_name": "EMBUCKET.gitlab_data_yaml.location_factors_yaml_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:24.184933Z", "completed_at": "2025-06-09T18:50:24.203604Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:24.204181Z", "completed_at": "2025-06-09T18:50:31.344841Z"}], "thread_id": "Thread-18", "execution_time": 7.21451210975647, "adapter_response": {}, "message": "Database Error in model greenhouse_tags_source (models/sources/greenhouse/greenhouse_tags_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_tags_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_tags_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.tags\n\n), renamed as (\n\n\tSELECT\n\n                --keys\n                id::NUMBER                  AS tag_id,\n                organization_id::NUMBER     AS organization_id,\n\n                --info\n                name::varchar               AS tag_name,\n                created_at::timestamp       AS tag_created_at,\n                updated_at::timestamp       AS tag_updated_at\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_tags_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:29.736936Z", "completed_at": "2025-06-09T18:50:29.784258Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:29.786132Z", "completed_at": "2025-06-09T18:50:31.361064Z"}], "thread_id": "Thread-2", "execution_time": 1.7000789642333984, "adapter_response": {}, "message": "Database Error in model key_assets_source (models/sources/observability/key_assets_source.sql)\n  000200: DataFusion error: Error during planning: table 'monte_carlo.prod_insights.key_assets' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/observability/key_assets_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.key_assets_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM MONTE_CARLO.prod_insights.key_assets\n\n), renamed AS (\n\n    SELECT\n     *\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.key_assets_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:29.723752Z", "completed_at": "2025-06-09T18:50:29.776544Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:29.796344Z", "completed_at": "2025-06-09T18:50:31.372603Z"}], "thread_id": "Thread-26", "execution_time": 1.7014570236206055, "adapter_response": {}, "message": "Database Error in model main_test_stats_e2e_source (models/sources/e2e_metrics/main_test_stats_e2e_source.sql)\n  000200: DataFusion error: Schema error: No field named main_test_stats_id. Valid fields are source.payload, source.uploaded_at.\n  compiled code at target/run/gitlab_snowflake/models/sources/e2e_metrics/main_test_stats_e2e_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.main_test_stats_e2e_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT\n    PARSE_JSON(payload) AS payload,\n    uploaded_at\n  FROM EMBUCKET.e2e_metrics.main_test_stats\n\n),\n\nfinal AS (\n\n  SELECT\n    payload:fields.api_fabrication::NUMBER      AS api_fabrication,\n    payload:fields.failure_exception::VARCHAR   AS failure_exception,\n    payload:fields.failure_issue::VARCHAR       AS failure_issue,\n    payload:fields.id::VARCHAR                  AS main_test_stats_id,\n    payload:fields.job_id::VARCHAR              AS job_id,\n    payload:fields.import_time::VARCHAR         AS import_time,\n    payload:fields.job_url::VARCHAR             AS job_url,\n    payload:fields.pipeline_id::VARCHAR         AS pipeline_id,\n    payload:fields.pipeline_url::VARCHAR        AS pipeline_url,\n    payload:fields.run_time::NUMBER             AS run_time,\n    payload:fields.total_fabrication::NUMBER    AS total_fabrication,\n    payload:fields.ui_fabrication::NUMBER       AS ui_fabrication,\n    payload:name::VARCHAR                       AS name,\n    payload:time::TIMESTAMP                     AS time,\n    payload:tags.blocking::BOOLEAN              AS is_blocking,\n    payload:tags.file_path::VARCHAR             AS tags_file_path,\n    payload:tags.import_repo::VARCHAR           AS tags_import_repo,\n    payload:tags.import_type::VARCHAR           AS tags_import_type,\n    payload:tags.job_name::VARCHAR              AS tags_job_name,\n    payload:tags.merge_request::BOOLEAN         AS is_merge_request,\n    payload:tags.name::VARCHAR                  AS tags_name,\n    payload:tags.product_group::VARCHAR         AS tags_product_group,\n    payload:tags.quarantined::BOOLEAN           AS is_quarantined,\n    payload:tags.run_type::VARCHAR              AS tags_run_type,\n    payload:tags.smoke::BOOLEAN                 AS is_smoke,\n    payload:tags.stage::VARCHAR                 AS tags_stage,\n    payload:tags.status::VARCHAR                AS tags_status,\n    payload:tags.testcase::VARCHAR              AS tags_testcase,\n    uploaded_at                                 AS uploaded_at,\n    md5(cast(coalesce(cast(MAIN_TEST_STATS_ID as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_TESTCASE as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_FILE_PATH as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(NAME as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_PRODUCT_GROUP as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_STAGE as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(JOB_ID as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_JOB_NAME as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(JOB_URL as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(PIPELINE_ID as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(PIPELINE_URL as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(IS_MERGE_REQUEST as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(IS_SMOKE as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(IS_QUARANTINED as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(RUN_TIME as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_RUN_TYPE as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_STATUS as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(UI_FABRICATION as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(API_FABRICATION as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TOTAL_FABRICATION as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(UPLOADED_AT as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS combined_composite_keys\n  FROM source\n)\n\nSELECT *\nFROM final\nQUALIFY ROW_NUMBER() OVER (PARTITION BY combined_composite_keys ORDER BY uploaded_at DESC) = 1", "relation_name": "EMBUCKET.e2e_metrics.main_test_stats_e2e_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:29.709516Z", "completed_at": "2025-06-09T18:50:29.720946Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:29.778651Z", "completed_at": "2025-06-09T18:50:31.396664Z"}], "thread_id": "Thread-30", "execution_time": 1.711515188217163, "adapter_response": {}, "message": "Database Error in model job_profiles_source (models/sources/workday/job_profiles_source.sql)\n  000200: DataFusion error: Error during planning: Cannot infer common argument type for comparison operation Boolean = Int64\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/job_profiles_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.job_profiles_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.workday.job_profiles\n  WHERE NOT _fivetran_deleted\n\n\n),\n\nrenamed AS (\n\n  SELECT\n    job_code::VARCHAR                       AS job_code,\n    job_profile::VARCHAR                    AS job_profile,\n    job_family::VARCHAR                     AS job_family,\n    management_level::VARCHAR               AS management_level,\n    job_level::VARCHAR                      AS job_level,\n    IFF(inactive::BOOLEAN = 0, TRUE, FALSE) AS is_job_profile_active,\n    job_workday_id::VARCHAR                 AS job_workday_id\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.workday.job_profiles_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:22.934866Z", "completed_at": "2025-06-09T18:50:22.944346Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:22.950504Z", "completed_at": "2025-06-09T18:50:32.842825Z"}], "thread_id": "Thread-32", "execution_time": 9.930808067321777, "adapter_response": {}, "message": "Database Error in model greenhouse_scorecards_source (models/sources/greenhouse/greenhouse_scorecards_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_scorecards_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_scorecards_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.greenhouse.scorecards\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    --keys\n    id::NUMBER                              AS scorecard_id,\n    application_id::NUMBER                  AS application_id,\n    stage_id::NUMBER                        AS stage_id,\n    interview_id::NUMBER                    AS interview_id,\n    interviewer_id::NUMBER                  AS interviewer_id,\n    submitter_id::NUMBER                    AS submitter_id,\n\n    --info\n    key_takeaways::VARCHAR                  AS key_takeaways,\n    overall_recommendation::VARCHAR         AS scorecard_overall_recommendation,\n    submitted_at::TIMESTAMP                 AS scorecard_submitted_at,\n    scheduled_interview_ended_at::TIMESTAMP AS scorecard_scheduled_interview_ended_at,\n    total_focus_attributes::NUMBER          AS scorecard_total_focus_attributes,\n    completed_focus_attributes::NUMBER      AS scorecard_completed_focus_attributes,\n    stage_name::VARCHAR                     AS scorecard_stage_name,\n    created_at::TIMESTAMP                   AS scorecard_created_at,\n    updated_at::TIMESTAMP                   AS scorecard_updated_at,\n    interview_name::VARCHAR                 AS interview_name,\n    interviewer::VARCHAR                    AS interviewer,\n    submitter::VARCHAR                      AS scorecard_submitter\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_scorecards_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.173464Z", "completed_at": "2025-06-09T18:50:28.199507Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.199888Z", "completed_at": "2025-06-09T18:50:32.861659Z"}], "thread_id": "Thread-7", "execution_time": 4.752441167831421, "adapter_response": {}, "message": "Database Error in model iterable_campaign_list_history_source (models/sources/iterable/iterable_campaign_list_history_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/iterable/iterable_campaign_list_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.iterable_campaign_list_history_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.iterable.campaign_list_history\n \n), final AS (\n \n    SELECT\n        campaign_id::VARCHAR           AS iterable_campaign_id,\n        list_id::VARCHAR               AS iterable_campaign_list_id,\n        updated_at::TIMESTAMP          AS iterable_campaign_list_updated_at,\n        updated_at::DATE               AS iterable_campaign_list_updated_date\n    FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.iterable.iterable_campaign_list_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:31.464547Z", "completed_at": "2025-06-09T18:50:31.483744Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:31.505776Z", "completed_at": "2025-06-09T18:50:32.978114Z"}], "thread_id": "Thread-18", "execution_time": 1.5496869087219238, "adapter_response": {}, "message": "Database Error in model marketo_activity_change_score_source (models/sources/marketo/marketo_activity_change_score_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,264)..Location(1,276)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_change_score_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_change_score_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_change_score\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                   AS marketo_activity_change_score_id,\n      lead_id::NUMBER                              AS lead_id,\n      activity_date::TIMESTAMP_TZ                  AS activity_date,\n      activity_type_id::NUMBER                     AS activity_type_id,\n      campaign_id::NUMBER                          AS campaign_id,\n      primary_attribute_value_id::NUMBER           AS primary_attribute_value_id,\n      primary_attribute_value::TEXT                AS primary_attribute_value,\n      change_value::TEXT                           AS change_value,\n      old_value::NUMBER                            AS old_value,\n      new_value::NUMBER                            AS new_value,\n      reason::TEXT                                 AS reason,\n      relative_urgency::NUMBER                     AS relative_urgency,\n      priority::NUMBER                             AS priority,\n      relative_score::NUMBER                       AS relative_score,\n      urgency::FLOAT                               AS urgency\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_change_score_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.002536Z", "completed_at": "2025-06-09T18:50:28.014913Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.029715Z", "completed_at": "2025-06-09T18:50:33.094455Z"}], "thread_id": "Thread-22", "execution_time": 5.092632055282593, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.haproxy_backend_pl", "compiled": true, "compiled_code": "-- infra label to pl mapping\n\nSELECT * FROM EMBUCKET.seed_engineering.gcp_billing_haproxy_pl_mapping\nUNPIVOT(allocation FOR type IN (free, internal, paid))", "relation_name": "EMBUCKET.workspace_engineering.haproxy_backend_pl", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:29.750786Z", "completed_at": "2025-06-09T18:50:33.064165Z"}], "thread_id": "Thread-25", "execution_time": 3.4951438903808594, "adapter_response": {}, "message": "Compilation Error in model mailgun_events (models/sources/mailgun/mailgun_events.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__union_tables (macros/utils/union_tables.sql)\n  > called by macro union_tables (macros/utils/union_tables.sql)\n  > called by model mailgun_events (models/sources/mailgun/mailgun_events.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.mailgun_events", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.mailgun_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:24.401876Z", "completed_at": "2025-06-09T18:50:24.405255Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:24.406962Z", "completed_at": "2025-06-09T18:50:33.188248Z"}], "thread_id": "Thread-29", "execution_time": 8.787044286727905, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_user_actions_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.user_actions\n\n), renamed as (\n\n\tSELECT\n\n                --keys\n                id::NUMBER          AS user_action_id,\n                job_id::NUMBER      AS job_id,\n                user_id::NUMBER     AS user_id,\n\n                --info\n                type::varchar       AS user_action_type\n\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_user_actions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:29.733372Z", "completed_at": "2025-06-09T18:50:29.777142Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:29.802344Z", "completed_at": "2025-06-09T18:50:33.189080Z"}], "thread_id": "Thread-27", "execution_time": 3.57039475440979, "adapter_response": {}, "message": "Database Error in model labs_source (models/sources/demo_architecture_portal/labs_source.sql)\n  000200: DataFusion error: Execution error: schema provider does not support registering tables\n  compiled code at target/run/gitlab_snowflake/models/sources/demo_architecture_portal/labs_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.labs_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.demo_architecture_portal.labs\n\n), renamed AS (\n\n  SELECT\n    id::NUMBER                        AS id,\n    date::VARCHAR                     AS lab_date,\n    attendance::VARCHAR               AS attendance,\n    region::VARCHAR                   AS region,\n    topic::VARCHAR                    AS topic,\n    sfdc_id::VARCHAR                  AS sfdc_id,\n    delivery::VARCHAR                 AS delivery,\n    opp::VARCHAR                      AS opp,\n    covered_topics::VARCHAR           AS covered_topics,\n    host_users::VARCHAR               AS host_users, \n    managers::VARCHAR                 AS managers,\n    url::VARCHAR                      AS url\n\n  FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.demo_architecture_portal.labs_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:30.912177Z", "completed_at": "2025-06-09T18:50:30.920512Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:30.928496Z", "completed_at": "2025-06-09T18:50:33.196789Z"}], "thread_id": "Thread-6", "execution_time": 2.3882222175598145, "adapter_response": {}, "message": "Database Error in model marketo_activity_add_to_sfdc_campaign_source (models/sources/marketo/marketo_activity_add_to_sfdc_campaign_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,288)..Location(1,300)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_add_to_sfdc_campaign_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_add_to_sfdc_campaign_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_add_to_sfdc_campaign\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                            AS marketo_activity_add_to_sfdc_campaign_id,\n      lead_id::NUMBER                       AS lead_id,\n      activity_date::TIMESTAMP_TZ           AS activity_date,\n      activity_type_id::NUMBER              AS activity_type_id,\n      campaign_id::NUMBER                   AS campaign_id,\n      primary_attribute_value_id::NUMBER    AS primary_attribute_value_id,\n      primary_attribute_value::TEXT         AS primary_attribute_value,\n      status::TEXT                          AS status\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_add_to_sfdc_campaign_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:32.895409Z", "completed_at": "2025-06-09T18:50:32.903954Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:32.904780Z", "completed_at": "2025-06-09T18:50:33.230398Z"}], "thread_id": "Thread-7", "execution_time": 0.45034074783325195, "adapter_response": {}, "message": "Database Error in model marketo_activity_click_link_source (models/sources/marketo/marketo_activity_click_link_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,258)..Location(1,270)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_click_link_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_click_link_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_click_link\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_click_link_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      client_ip_address::TEXT                   AS client_ip_address,\n      webpage_id::NUMBER                        AS webpage_id,\n      user_agent::TEXT                          AS user_agent,\n      query_parameters::TEXT                    AS query_parameters,\n      referrer_url::TEXT                        AS referrer_url\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_click_link_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.727225Z", "completed_at": "2025-06-09T18:50:28.771199Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.799287Z", "completed_at": "2025-06-09T18:50:33.209970Z"}], "thread_id": "Thread-10", "execution_time": 4.65540623664856, "adapter_response": {}, "message": "Database Error in model iterable_list_user_history_source (models/sources/iterable/iterable_list_user_history_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/iterable/iterable_list_user_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.iterable_list_user_history_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.iterable.list_user_history\n \n), final AS (\n\n    SELECT\n        list_id::VARCHAR          AS iterable_list_id,\n        updated_at::TIMESTAMP     AS iterable_list_user_history_updated_at,\n        updated_at::DATE          AS iterable_list_user_history_updated_date,\n        _fivetran_id::VARCHAR     AS iterable_list_user_fivetran_id\n    FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.iterable.iterable_list_user_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.024404Z", "completed_at": "2025-06-09T18:50:28.056196Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.081618Z", "completed_at": "2025-06-09T18:50:33.228633Z"}], "thread_id": "Thread-21", "execution_time": 5.368047714233398, "adapter_response": {}, "message": "Database Error in model handbook_values_page_contributors_source (models/sources/handbook/handbook_values_page_contributors_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/handbook/handbook_values_page_contributors_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.handbook_values_page_contributors_source", "compiled": true, "compiled_code": "WITH contributors AS (\n\n    SELECT *\n    FROM EMBUCKET.handbook.values_page_git_log_before_2020_06\n\n    UNION ALL\n\n    SELECT *\n    FROM EMBUCKET.handbook.values_page_git_log\n\n), rename AS (\n\n    SELECT\n      name::VARCHAR     AS author_name,\n      sha::VARCHAR      AS git_sha,\n      email::VARCHAR    AS author_email,\n      date::TIMESTAMP   AS git_commit_at,\n      message::VARCHAR  AS git_message\n    FROM contributors\n\n)\n\nSELECT *\nFROM rename", "relation_name": "EMBUCKET.handbook.handbook_values_page_contributors_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:30.884783Z", "completed_at": "2025-06-09T18:50:30.893059Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:30.893367Z", "completed_at": "2025-06-09T18:50:33.241232Z"}], "thread_id": "Thread-3", "execution_time": 2.4937589168548584, "adapter_response": {}, "message": "Database Error in model marketo_activity_add_to_opportunity_source (models/sources/marketo/marketo_activity_add_to_opportunity_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,282)..Location(1,294)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_add_to_opportunity_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_add_to_opportunity_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_add_to_opportunity\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                    AS marketo_activity_add_to_opportunity_id,\n      lead_id::NUMBER                               AS lead_id,\n      activity_date::TIMESTAMP_TZ                   AS activity_date,\n      activity_type_id::NUMBER                      AS activity_type_id,\n      campaign_id::NUMBER                           AS campaign_id,\n      primary_attribute_value_id::NUMBER            AS primary_attribute_value_id,\n      primary_attribute_value::TEXT                 AS primary_attribute_value,\n      role::TEXT                                    AS track_id\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_add_to_opportunity_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.117921Z", "completed_at": "2025-06-09T18:50:28.151223Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.158342Z", "completed_at": "2025-06-09T18:50:33.240860Z"}], "thread_id": "Thread-1", "execution_time": 5.286839246749878, "adapter_response": {}, "message": "Database Error in model icp_successful_accounts_scores_source (models/sources/data_science/icp_successful_accounts_scores_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/data_science/icp_successful_accounts_scores_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.icp_successful_accounts_scores_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n        crm_account_id,\n        score_date,\n        cluster_id,\n        cluster_name,\n        icp_group,\n        model_version,\n        submodel,\n        uploaded_at::TIMESTAMP as uploaded_at\n    FROM EMBUCKET.data_science.icp_successful_accounts_scores\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.data_science.icp_successful_accounts_scores_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:31.444733Z", "completed_at": "2025-06-09T18:50:31.463559Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:31.471150Z", "completed_at": "2025-06-09T18:50:33.249594Z"}], "thread_id": "Thread-9", "execution_time": 1.9333808422088623, "adapter_response": {}, "message": "Database Error in model marketo_activity_change_nurture_cadence_source (models/sources/marketo/marketo_activity_change_nurture_cadence_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,294)..Location(1,306)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_change_nurture_cadence_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_change_nurture_cadence_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_change_nurture_cadence\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_change_nurture_cadence_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      new_nurture_cadence::TEXT                 AS new_nurture_cadence,\n      previous_nurture_cadence::TEXT            AS previous_nurture_cadence\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_change_nurture_cadence_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.737638Z", "completed_at": "2025-06-09T18:50:28.770673Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.793627Z", "completed_at": "2025-06-09T18:50:33.248697Z"}], "thread_id": "Thread-12", "execution_time": 4.66310715675354, "adapter_response": {}, "message": "Database Error in model iterable_message_type_source (models/sources/iterable/iterable_message_type_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/iterable/iterable_message_type_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.iterable_message_type_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.iterable.message_type\n \n), final AS (\n\n    SELECT\n        id::VARCHAR                         AS iterable_message_type_id,\n        updated_at::TIMESTAMP               AS iterable_message_updated_at,\n        updated_at::DATE                    AS iterable_message_updated_date,\n        created_at::TIMESTAMP               AS iterable_message_created_at,\n        created_at::DATE                    AS iterable_message_created_date,\n        channel_id::VARCHAR                 AS iterable_message_channel_id,\n        rate_limit_per_minute::VARCHAR      AS iterable_message_rate_limit_per_minute,\n        frequency_cap::VARCHAR              AS iterable_message_frequency_cap,\n        subscription_policy::VARCHAR        AS iterable_message_subscription_policy,\n        name::VARCHAR                       AS iterable_message_name\n    FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.iterable.iterable_message_type_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:31.477148Z", "completed_at": "2025-06-09T18:50:31.504727Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:31.521702Z", "completed_at": "2025-06-09T18:50:33.242249Z"}], "thread_id": "Thread-2", "execution_time": 1.9061219692230225, "adapter_response": {}, "message": "Database Error in model marketo_activity_change_segment_source (models/sources/marketo/marketo_activity_change_segment_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,270)..Location(1,282)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_change_segment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_change_segment_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_change_segment\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_change_segment_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      new_segment_id::NUMBER                    AS new_segment_id\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_change_segment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:31.248647Z", "completed_at": "2025-06-09T18:50:31.317531Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:31.345199Z", "completed_at": "2025-06-09T18:50:33.278109Z"}], "thread_id": "Thread-28", "execution_time": 2.1155459880828857, "adapter_response": {}, "message": "Database Error in model marketo_activity_change_data_value_source (models/sources/marketo/marketo_activity_change_data_value_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,279)..Location(1,291)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_change_data_value_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_change_data_value_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_change_data_value\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_change_data_value_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      old_value::TEXT                           AS old_value,\n      new_value::TEXT                           AS new_value,\n      reason::TEXT                              AS reason,\n      source::TEXT                              AS source,\n      api_method_name::TEXT                     AS api_method_name,\n      modifying_user::TEXT                      AS modifying_user,\n      request_id::TEXT                          AS request_id\n\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_change_data_value_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:31.484220Z", "completed_at": "2025-06-09T18:50:31.521215Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:31.537540Z", "completed_at": "2025-06-09T18:50:33.286178Z"}], "thread_id": "Thread-30", "execution_time": 1.8960249423980713, "adapter_response": {}, "message": "Database Error in model marketo_activity_change_status_in_sfdc_campaign_source (models/sources/marketo/marketo_activity_change_status_in_sfdc_campaign_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,318)..Location(1,330)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_change_status_in_sfdc_campaign_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_change_status_in_sfdc_campaign_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_change_status_in_sfdc_campaign\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_change_status_in_sfdc_campaign_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      old_status::TEXT                          AS old_status,\n      new_status::TEXT                          AS new_status\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_change_status_in_sfdc_campaign_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:30.879798Z", "completed_at": "2025-06-09T18:50:30.891241Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:30.900613Z", "completed_at": "2025-06-09T18:50:33.287129Z"}], "thread_id": "Thread-4", "execution_time": 2.4984259605407715, "adapter_response": {}, "message": "Database Error in model marketo_activity_add_to_nurture_source (models/sources/marketo/marketo_activity_add_to_nurture_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,270)..Location(1,282)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_add_to_nurture_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_add_to_nurture_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_add_to_nurture\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                              AS marketo_activity_add_to_nurture_id,\n      lead_id::NUMBER                         AS lead_id,\n      activity_date::TIMESTAMP_TZ             AS activity_date,\n      activity_type_id::NUMBER                AS activity_type_id,\n      campaign_id::NUMBER                     AS campaign_id,\n      primary_attribute_value_id::NUMBER      AS primary_attribute_value_id,\n      primary_attribute_value::TEXT           AS primary_attribute_value,\n      track_id::NUMBER                        AS track_id\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_add_to_nurture_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:32.988187Z", "completed_at": "2025-06-09T18:50:32.993105Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:32.993525Z", "completed_at": "2025-06-09T18:50:33.293804Z"}], "thread_id": "Thread-18", "execution_time": 0.3779788017272949, "adapter_response": {}, "message": "Database Error in model marketo_activity_convert_lead_source (models/sources/marketo/marketo_activity_convert_lead_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,264)..Location(1,276)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_convert_lead_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_convert_lead_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_convert_lead\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_convert_lead_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_convert_lead_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:30.924686Z", "completed_at": "2025-06-09T18:50:30.940357Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:30.940755Z", "completed_at": "2025-06-09T18:50:33.286672Z"}], "thread_id": "Thread-14", "execution_time": 2.4491467475891113, "adapter_response": {}, "message": "Database Error in model marketo_activity_call_webhook_source (models/sources/marketo/marketo_activity_call_webhook_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,264)..Location(1,276)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_call_webhook_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_call_webhook_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_call_webhook\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                          AS marketo_activity_call_webhook_id,\n      lead_id::NUMBER                     AS lead_id,\n      activity_date::TIMESTAMP_TZ         AS activity_date,\n      activity_type_id::NUMBER            AS activity_type_id,\n      campaign_id::NUMBER                 AS campaign_id,\n      primary_attribute_value_id::NUMBER  AS primary_attribute_value_id,\n      primary_attribute_value::TEXT       AS primary_attribute_value,\n      response::TEXT                      AS response,\n      error_type::NUMBER                  AS error_type\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_call_webhook_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:31.435565Z", "completed_at": "2025-06-09T18:50:31.458007Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:31.491290Z", "completed_at": "2025-06-09T18:50:33.202179Z"}], "thread_id": "Thread-19", "execution_time": 1.9087097644805908, "adapter_response": {}, "message": "Database Error in model marketo_activity_change_nurture_track_source (models/sources/marketo/marketo_activity_change_nurture_track_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,288)..Location(1,300)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_change_nurture_track_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_change_nurture_track_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_change_nurture_track\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                    AS marketo_activity_change_nurture_track_id,\n      lead_id::NUMBER                               AS lead_id,\n      activity_date::TIMESTAMP_TZ                   AS activity_date,\n      activity_type_id::NUMBER                      AS activity_type_id,\n      campaign_id::NUMBER                           AS campaign_id,\n      primary_attribute_value_id::NUMBER            AS primary_attribute_value_id,\n      primary_attribute_value::TEXT                 AS primary_attribute_value,\n      previous_track_id::NUMBER                     AS previous_track_id,\n      new_track_id::NUMBER                          AS new_track_id\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_change_nurture_track_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:31.497203Z", "completed_at": "2025-06-09T18:50:31.527047Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:31.547681Z", "completed_at": "2025-06-09T18:50:33.306553Z"}], "thread_id": "Thread-26", "execution_time": 1.9039020538330078, "adapter_response": {}, "message": "Database Error in model marketo_activity_change_status_in_progression_source (models/sources/marketo/marketo_activity_change_status_in_progression_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,312)..Location(1,324)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_change_status_in_progression_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_change_status_in_progression_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_change_status_in_progression\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_change_status_in_progression_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      old_status_id::NUMBER                     AS old_status_id,\n      new_status_id::NUMBER                     AS new_status_id,\n      acquired_by::BOOLEAN                      AS acquired_by,\n      old_status::TEXT                          AS old_status,\n      new_status::TEXT                          AS new_status,\n      program_member_id::NUMBER                 AS program_member_id,\n      success::BOOLEAN                          AS success,\n      registration_code::TEXT                   AS registration_code,\n      webinar_url::TEXT                         AS webinar_url,\n      reason::TEXT                              AS reason,\n      reached_success_date::TIMESTAMP_NTZ       AS reached_success_date\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_change_status_in_progression_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.758229Z", "completed_at": "2025-06-09T18:50:28.784374Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.818918Z", "completed_at": "2025-06-09T18:50:33.307187Z"}], "thread_id": "Thread-13", "execution_time": 4.687820911407471, "adapter_response": {}, "message": "Database Error in model iterable_list_source (models/sources/iterable/iterable_list_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/iterable/iterable_list_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.iterable_list_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.iterable.list\n \n), final AS (\n\n    SELECT\n        id::VARCHAR              AS iterable_list_id,\n        created_at::TIMESTAMP    AS iterable_list_created_at,\n        created_at::DATE         AS iterable_list_created_date,\n        description::VARCHAR     AS iterable_list_description,\n        list_type::VARCHAR       AS iterable_list_type,\n        name::VARCHAR            AS iterable_list_name\n    FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.iterable.iterable_list_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:26.364368Z", "completed_at": "2025-06-09T18:50:26.368329Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:26.369947Z", "completed_at": "2025-06-09T18:50:33.336858Z"}], "thread_id": "Thread-16", "execution_time": 7.0063560009002686, "adapter_response": {}, "message": "Database Error in model greenhouse_user_candidate_links_source (models/sources/greenhouse/greenhouse_user_candidate_links_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/greenhouse/greenhouse_user_candidate_links_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.greenhouse_user_candidate_links_source", "compiled": true, "compiled_code": "WITH source as (\n\n\tSELECT *\n  \t  FROM EMBUCKET.greenhouse.user_candidate_links\n\n), renamed as (\n\n\tSELECT\n            --keys\n            user_id::NUMBER             AS user_id,\n            candidate_id::NUMBER        AS candidate_id,\n\n            --info\n            created_at::timestamp       AS user_candidate_link_created_at,\n            updated_at::timestamp       AS user_candidate_link_updated_at\n\n\n\tFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.greenhouse.greenhouse_user_candidate_links_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.694524Z", "completed_at": "2025-06-09T18:50:28.757651Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.773440Z", "completed_at": "2025-06-09T18:50:33.335860Z"}], "thread_id": "Thread-17", "execution_time": 4.700078010559082, "adapter_response": {}, "message": "Database Error in model iterable_email_link_param_history_source (models/sources/iterable/iterable_email_link_param_history_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/iterable/iterable_email_link_param_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.iterable_email_link_param_history_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.iterable.email_link_param_history\n \n), final AS (\n \n    SELECT\n        key::VARCHAR            AS iterable_email_link_param_key,\n        value::VARCHAR          AS iterable_email_link_param_value,\n        template_id::VARCHAR    AS iterable_email_template_id,\n        updated_at::TIMESTAMP   AS iterable_email_link_param_updated_at,\n        updated_at::DATE        AS iterable_email_link_param_updated_date\n    FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.iterable.iterable_email_link_param_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:32.876599Z", "completed_at": "2025-06-09T18:50:32.886179Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:32.887911Z", "completed_at": "2025-06-09T18:50:33.321113Z"}], "thread_id": "Thread-32", "execution_time": 0.5036239624023438, "adapter_response": {}, "message": "Database Error in model marketo_activity_click_email_source (models/sources/marketo/marketo_activity_click_email_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,261)..Location(1,273)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_click_email_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_click_email_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_click_email\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                  AS marketo_activity_click_email_id,\n      lead_id::NUMBER                             AS lead_id,\n      activity_date::TIMESTAMP_TZ                 AS activity_date,\n      activity_type_id::NUMBER                    AS activity_type_id,\n      campaign_id::NUMBER                         AS campaign_id,\n      primary_attribute_value_id::NUMBER          AS primary_attribute_value_id,\n      primary_attribute_value::TEXT               AS primary_attribute_value,\n      campaign_run_id::NUMBER                     AS campaign_run_id,\n      platform::TEXT                              AS platform,\n      is_mobile_device::BOOLEAN                   AS is_mobile_device,\n      step_id::NUMBER                             AS step_id,\n      device::TEXT                                AS device,\n      choice_number::NUMBER                       AS choice_number,\n      is_bot_activity::BOOLEAN                    AS is_bot_activity,\n      user_agent::TEXT                            AS user_agent,\n      bot_activity_pattern::TEXT                  AS bot_activity_pattern,\n      link::TEXT                                  AS link,\n      test_variant::NUMBER                        AS test_variant\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_click_email_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:31.459078Z", "completed_at": "2025-06-09T18:50:31.504073Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:31.514865Z", "completed_at": "2025-06-09T18:50:33.336617Z"}], "thread_id": "Thread-20", "execution_time": 1.944880723953247, "adapter_response": {}, "message": "Database Error in model marketo_activity_change_owner_source (models/sources/marketo/marketo_activity_change_owner_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,264)..Location(1,276)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_change_owner_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_change_owner_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_change_owner\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                   AS marketo_activity_change_owner_id,\n      lead_id::NUMBER                              AS lead_id,\n      activity_date::TIMESTAMP_TZ                  AS activity_date,\n      activity_type_id::NUMBER                     AS activity_type_id,\n      campaign_id::NUMBER                          AS campaign_id,\n      primary_attribute_value_id::NUMBER           AS primary_attribute_value_id,\n      primary_attribute_value::TEXT                AS primary_attribute_value,\n      old_owner::TEXT                              AS old_owner\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_change_owner_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.685477Z", "completed_at": "2025-06-09T18:50:28.716585Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.751326Z", "completed_at": "2025-06-09T18:50:33.390574Z"}], "thread_id": "Thread-23", "execution_time": 4.724735975265503, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.iterable_channel_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.iterable.channel\n \n), final AS (\n \n    SELECT\n        id::VARCHAR                AS iterable_channel_id,\n        channel_type::VARCHAR      AS iterable_channel_type,\n        message_medium::VARCHAR    AS iterable_channel_message_medium,\n        name::VARCHAR              AS iterable_channel_name\n    FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.iterable.iterable_channel_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.780590Z", "completed_at": "2025-06-09T18:50:28.809773Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.845613Z", "completed_at": "2025-06-09T18:50:33.395565Z"}], "thread_id": "Thread-31", "execution_time": 4.722894906997681, "adapter_response": {}, "message": "Database Error in model iterable_template_history_source (models/sources/iterable/iterable_template_history_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/iterable/iterable_template_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.iterable_template_history_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.iterable.template_history\n \n), final AS (\n \n    SELECT\n        id::VARCHAR                 AS iterable_template_id,\n        updated_at::TIMESTAMP       AS iterable_template_updated_at,\n        updated_at::DATE            AS iterable_template_updated_date,\n        message_type_id::VARCHAR    AS iterable_template_message_type_id,\n        client_template_id::VARCHAR AS iterable_template_client_id,\n        created_at::TIMESTAMP       AS iterable_template_created_at,\n        created_at::DATE            AS iterable_template_created_date,\n        creator_user_id::VARCHAR    AS iterable_template_creator_user_id,\n        name::VARCHAR               AS iterable_template_name,\n        template_type::VARCHAR      AS iterable_template_type\n    FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.iterable.iterable_template_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:29.729707Z", "completed_at": "2025-06-09T18:50:29.777515Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:29.808035Z", "completed_at": "2025-06-09T18:50:33.395834Z"}], "thread_id": "Thread-15", "execution_time": 3.709907054901123, "adapter_response": {}, "message": "Database Error in model linkedin_ads_ad_analytics_by_creative_source (models/sources/linkedin_ads/linkedin_ads_ad_analytics_by_creative_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/linkedin_ads/linkedin_ads_ad_analytics_by_creative_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.linkedin_ads_ad_analytics_by_creative_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.linkedin_ads.ad_analytics_by_creative\n\n),\n\nrenamed AS (\n\n  SELECT\n    creative_id::NUMBER AS creative_id,\n\tday::TIMESTAMP AS day,\n\tclicks::NUMBER AS clicks,\n\timpressions::NUMBER AS impressions,\n\tone_click_leads::NUMBER AS one_click_leads,\n\topens::NUMBER AS opens,\n\tcost_in_usd::NUMBER AS cost_in_usd,\n\t_fivetran_synced::TIMESTAMP AS _fivetran_synced\n\n  FROM source\n  \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.linkedin_ads.linkedin_ads_ad_analytics_by_creative_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.183371Z", "completed_at": "2025-06-09T18:50:28.213542Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.222541Z", "completed_at": "2025-06-09T18:50:33.469260Z"}], "thread_id": "Thread-24", "execution_time": 5.333349943161011, "adapter_response": {}, "message": "Database Error in model internal_events_ping_namespace (models/sources/saas_usage_ping/internal_events_ping_namespace.sql)\n  000200: DataFusion error: Error during planning: Internal error: Function 'dateadd' failed to match any signature, errors: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Int64), Int64)) but received NativeType::Float64, DataType: Float64.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker,Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Int64), Int64)) but received NativeType::Float64, DataType: Float64.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker,Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Int64), Int64)) but received NativeType::Float64, DataType: Float64.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'dateadd(Utf8, Float64, Utf8)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tdateadd(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Int64), Int64))), Coercion(TypeSignatureClass::Timestamp, implicit_coercion=ImplicitCoercion([Native(LogicalType(Native(String), String))], default_type=Timestamp(Nanosecond, None)))\n  \tdateadd(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Int64), Int64))), Coercion(TypeSignatureClass::Time))\n  \tdateadd(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Int64), Int64))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Date), Date))))\n  compiled code at target/run/gitlab_snowflake/models/sources/saas_usage_ping/internal_events_ping_namespace.sql", "failures": null, "unique_id": "model.gitlab_snowflake.internal_events_ping_namespace", "compiled": true, "compiled_code": "\n\nWITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.saas_usage_ping.internal_events_namespace_metrics\n    \n    QUALIFY ROW_NUMBER() OVER (PARTITION BY namespace_ultimate_parent_id, ping_name, ping_date ORDER BY _uploaded_at DESC) = 1\n\n), renamed AS (\n\n    SELECT\n      md5(cast(coalesce(cast(namespace_ultimate_parent_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ping_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ping_date as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))           AS saas_usage_ping_gitlab_dotcom_namespace_id,\n      namespace_ultimate_parent_id::INT                       AS namespace_ultimate_parent_id,\n      counter_value::INT                                      AS counter_value,\n      ping_name::VARCHAR                                      AS ping_name,\n      level::VARCHAR                                          AS ping_level,\n      query_ran::VARCHAR                                      AS query_ran,\n      error::VARCHAR                                          AS error,\n      ping_date::TIMESTAMP                                    AS ping_date,\n      dateadd('s', _uploaded_at, '1970-01-01')::TIMESTAMP     AS _uploaded_at\n    FROM base\n\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.saas_usage_ping.internal_events_ping_namespace", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:33.431559Z", "completed_at": "2025-06-09T18:50:33.449910Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:33.455370Z", "completed_at": "2025-06-09T18:50:33.575206Z"}], "thread_id": "Thread-6", "execution_time": 0.18467307090759277, "adapter_response": {}, "message": "Database Error in model marketo_activity_execute_campaign_source (models/sources/marketo/marketo_activity_execute_campaign_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,276)..Location(1,288)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_execute_campaign_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_execute_campaign_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_execute_campaign\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                           AS marketo_activity_execute_campaign_id,\n      lead_id::NUMBER                                      AS lead_id,\n      activity_date::TIMESTAMP_TZ                          AS activity_date,\n      activity_type_id::NUMBER                             AS activity_type_id,\n      campaign_id::NUMBER                                  AS campaign_id,\n      primary_attribute_value_id::NUMBER                   AS primary_attribute_value_id,\n      primary_attribute_value::TEXT                        AS primary_attribute_value,\n      used_parent_campaign_token_context::BOOLEAN          AS used_parent_campaign_token_context,\n      qualified::BOOLEAN                                   AS qualified\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_execute_campaign_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:33.423945Z", "completed_at": "2025-06-09T18:50:33.439754Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:33.444436Z", "completed_at": "2025-06-09T18:50:33.601505Z"}], "thread_id": "Thread-29", "execution_time": 0.2131047248840332, "adapter_response": {}, "message": "Database Error in model marketo_activity_email_bounced_source (models/sources/marketo/marketo_activity_email_bounced_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,267)..Location(1,279)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_email_bounced_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_email_bounced_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_email_bounced\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_email_bounced_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      campaign_run_id::NUMBER                   AS campaign_run_id,\n      category::NUMBER                          AS category,\n      email::TEXT                               AS email,\n      details::TEXT                             AS details,\n      subcategory::NUMBER                       AS subcategory,\n      step_id::NUMBER                           AS step_id,\n      choice_number::NUMBER                     AS choice_number,\n      test_variant::NUMBER                      AS test_variant\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_email_bounced_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.700249Z", "completed_at": "2025-06-09T18:50:28.769801Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.785322Z", "completed_at": "2025-06-09T18:50:33.601181Z"}], "thread_id": "Thread-8", "execution_time": 4.952739953994751, "adapter_response": {}, "message": "Database Error in model iterable_email_template_history_source (models/sources/iterable/iterable_email_template_history_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/iterable/iterable_email_template_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.iterable_email_template_history_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.iterable.email_template_history\n \n), final AS (\n \n    SELECT\n        id::VARCHAR                              AS iterable_email_template_id,\n        updated_at::TIMESTAMP                    AS iterable_email_template_updated_at,\n        updated_at::DATE                         AS iterable_email_template_updated_date,\n        campaign_id::VARCHAR                     AS iterable_email_template_campaign_id,\n        from_email::VARCHAR                      AS iterable_email_template_from_email,\n        from_name::VARCHAR                       AS iterable_email_template_from_name,\n        google_analytics_campaign_name::VARCHAR  AS iterable_email_template_google_analytics_campaign_name,\n        html::VARCHAR                            AS iterable_email_template_html,\n        plain_text::VARCHAR                      AS iterable_email_template_plain_text,\n        preheader_text::VARCHAR                  AS iterable_email_template_preheader_text,\n        reply_to_email::VARCHAR                  AS iterable_email_template_reply_to_email,\n        subject::VARCHAR                         AS iterable_email_template_subject,\n        locale::VARCHAR                          AS iterable_email_template_locale,\n        cache_data_feed::VARCHAR                 AS iterable_email_template_cache_data_feed,\n        data_feed_id::VARCHAR                    AS iterable_email_template_data_feed_id,\n        data_feed_ids::VARCHAR                   AS iterable_email_template_data_feed_ids,\n        is_default_locale::BOOLEAN               AS is_iterable_email_template_default_locale,\n        merge_data_feed_context::VARCHAR         AS iterable_email_template_merge_data_feed_context,\n    FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.iterable.iterable_email_template_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:33.419853Z", "completed_at": "2025-06-09T18:50:33.439240Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:33.440053Z", "completed_at": "2025-06-09T18:50:33.600682Z"}], "thread_id": "Thread-25", "execution_time": 0.22102975845336914, "adapter_response": {}, "message": "Database Error in model marketo_activity_email_bounced_soft_source (models/sources/marketo/marketo_activity_email_bounced_soft_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,282)..Location(1,294)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_email_bounced_soft_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_email_bounced_soft_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_email_bounced_soft\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_email_bounced_soft_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      campaign_run_id::NUMBER                   AS campaign_run_id,\n      category::NUMBER                          AS category,\n      email::TEXT                               AS email,\n      details::TEXT                             AS details,\n      subcategory::NUMBER                       AS subcategory,\n      step_id::NUMBER                           AS step_id,\n      choice_number::NUMBER                     AS choice_number,\n      test_variant::NUMBER                      AS test_variant\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_email_bounced_soft_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:33.412540Z", "completed_at": "2025-06-09T18:50:33.423244Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:33.434403Z", "completed_at": "2025-06-09T18:50:33.608918Z"}], "thread_id": "Thread-22", "execution_time": 0.23333287239074707, "adapter_response": {}, "message": "Database Error in model marketo_activity_delete_lead_source (models/sources/marketo/marketo_activity_delete_lead_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,261)..Location(1,273)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_delete_lead_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_delete_lead_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_delete_lead\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_delete_lead_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      campaign::TEXT                            AS campaign\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_delete_lead_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:33.427054Z", "completed_at": "2025-06-09T18:50:33.449525Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:33.451322Z", "completed_at": "2025-06-09T18:50:33.673993Z"}], "thread_id": "Thread-27", "execution_time": 0.2630791664123535, "adapter_response": {}, "message": "Database Error in model marketo_activity_email_delivered_source (models/sources/marketo/marketo_activity_email_delivered_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,273)..Location(1,285)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_email_delivered_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_email_delivered_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_email_delivered\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_email_delivered_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      campaign_run_id::NUMBER                   AS campaign_run_id,\n      step_id::NUMBER                           AS step_id,\n      test_variant::NUMBER                      AS test_variant,\n      choice_number::NUMBER                     AS choice_number\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_email_delivered_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:29.815415Z", "completed_at": "2025-06-09T18:50:29.841460Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:29.851947Z", "completed_at": "2025-06-09T18:50:34.587892Z"}], "thread_id": "Thread-11", "execution_time": 4.886885166168213, "adapter_response": {}, "message": "Database Error in model map_gitlab_dotcom_xmau_metrics (models/common_mapping/map_gitlab_dotcom_xmau_metrics.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/common_mapping/map_gitlab_dotcom_xmau_metrics.sql", "failures": null, "unique_id": "model.gitlab_snowflake.map_gitlab_dotcom_xmau_metrics", "compiled": true, "compiled_code": "\n\nWITH gitlab_dotcom_xmau_metrics AS (\n\n    SELECT * \n    FROM EMBUCKET.seed_product.gitlab_dotcom_xmau_metrics_common\n\n), dotcom_event_to_edm_event AS (\n\n    SELECT * \n    FROM EMBUCKET.seed_product.legacy_dotcom_event_name_to_edm_event_name_mapping\n\n),\n\nmapping_table AS (\n\n    SELECT\n      gitlab_dotcom_xmau_metrics.common_events_to_include,\n      dotcom_event_to_edm_event.legacy_dotcom_event_name AS legacy_events_to_include,\n      gitlab_dotcom_xmau_metrics.stage_name,\n      gitlab_dotcom_xmau_metrics.smau,\n      gitlab_dotcom_xmau_metrics.group_name,\n      gitlab_dotcom_xmau_metrics.gmau,\n      gitlab_dotcom_xmau_metrics.section_name,\n      gitlab_dotcom_xmau_metrics.is_umau\n    FROM gitlab_dotcom_xmau_metrics\n    LEFT JOIN dotcom_event_to_edm_event\n      ON gitlab_dotcom_xmau_metrics.common_events_to_include = dotcom_event_to_edm_event.prep_event_name\n\n)\n\nSELECT\n      *,\n      '@iweeks'::VARCHAR       AS created_by,\n      '@iweeks'::VARCHAR       AS updated_by,\n      '2022-04-09'::DATE        AS model_created_date,\n      '2022-05-11'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM mapping_table", "relation_name": "EMBUCKET.common_mapping.map_gitlab_dotcom_xmau_metrics", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.232366Z", "completed_at": "2025-06-09T18:50:34.287979Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.364717Z", "completed_at": "2025-06-09T18:50:34.676957Z"}], "thread_id": "Thread-21", "execution_time": 0.536247968673706, "adapter_response": {}, "message": "Database Error in model marketo_activity_interesting_moment_source (models/sources/marketo/marketo_activity_interesting_moment_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,282)..Location(1,294)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_interesting_moment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_interesting_moment_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_interesting_moment\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_interesting_moment_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      source::TEXT                              AS source,\n      description::TEXT                         AS description,\n      date::TIMESTAMP_NTZ                       AS date\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_interesting_moment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.249743Z", "completed_at": "2025-06-09T18:50:34.321305Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.391887Z", "completed_at": "2025-06-09T18:50:34.682386Z"}], "thread_id": "Thread-2", "execution_time": 0.5438272953033447, "adapter_response": {}, "message": "Database Error in model marketo_activity_remove_from_list_source (models/sources/marketo/marketo_activity_remove_from_list_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,276)..Location(1,288)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_remove_from_list_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_remove_from_list_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_remove_from_list\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_remove_from_list_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      source::TEXT                              AS source\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_remove_from_list_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.253246Z", "completed_at": "2025-06-09T18:50:34.332677Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.400847Z", "completed_at": "2025-06-09T18:50:34.687527Z"}], "thread_id": "Thread-28", "execution_time": 0.5484998226165771, "adapter_response": {}, "message": "Database Error in model marketo_activity_remove_from_sfdc_campaign_source (models/sources/marketo/marketo_activity_remove_from_sfdc_campaign_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,303)..Location(1,315)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_remove_from_sfdc_campaign_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_remove_from_sfdc_campaign_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_remove_from_sfdc_campaign\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_remove_from_sfdc_campaign_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      status::TEXT                              AS status\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_remove_from_sfdc_campaign_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.229422Z", "completed_at": "2025-06-09T18:50:34.283184Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.358386Z", "completed_at": "2025-06-09T18:50:34.731844Z"}], "thread_id": "Thread-10", "execution_time": 0.5690391063690186, "adapter_response": {}, "message": "Database Error in model marketo_activity_fill_out_linkedin_lead_gen_form_source (models/sources/marketo/marketo_activity_fill_out_linkedin_lead_gen_form_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,321)..Location(1,333)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_fill_out_linkedin_lead_gen_form_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_fill_out_linkedin_lead_gen_form_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_fill_out_linkedin_lead_gen_form\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_fill_out_linkedin_lead_gen_form_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      lead_gen_campaign_name::TEXT              AS lead_gen_campaign_name,\n      lead_gen_creative_id::NUMBER              AS lead_gen_creative_id,\n      lead_gen_account_name::TEXT               AS lead_gen_account_name\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_fill_out_linkedin_lead_gen_form_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.238786Z", "completed_at": "2025-06-09T18:50:34.304068Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.376138Z", "completed_at": "2025-06-09T18:50:34.742526Z"}], "thread_id": "Thread-1", "execution_time": 0.5674829483032227, "adapter_response": {}, "message": "Database Error in model marketo_activity_new_lead_source (models/sources/marketo/marketo_activity_new_lead_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,252)..Location(1,264)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_new_lead_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_new_lead_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_new_lead\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_new_lead_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      modifying_user::TEXT                      AS modifying_user,\n      created_date::DATE                        AS created_date,\n      api_method_name::TEXT                     AS api_method_name,\n      source_type::TEXT                         AS source_type,\n      request_id::TEXT                          AS request_id,\n      form_name::TEXT                           AS form_name,\n      lead_source::TEXT                         AS lead_source,\n      sfdc_type::TEXT                           AS sfdc_type,\n      list_name::TEXT                           AS list_name\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_new_lead_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.223873Z", "completed_at": "2025-06-09T18:50:34.276832Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.353015Z", "completed_at": "2025-06-09T18:50:34.741339Z"}], "thread_id": "Thread-7", "execution_time": 0.5844500064849854, "adapter_response": {}, "message": "Database Error in model marketo_activity_fill_out_form_source (models/sources/marketo/marketo_activity_fill_out_form_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,267)..Location(1,279)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_fill_out_form_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_fill_out_form_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_fill_out_form\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_fill_out_form_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      form_fields::TEXT                         AS form_fields,\n      client_ip_address::TEXT                   AS client_ip_address,\n      webpage_id::NUMBER                        AS webpage_id,\n      user_agent::TEXT                          AS user_agent,\n      query_parameters::TEXT                    AS query_parameters,\n      referrer_url::TEXT                        AS referrer_url\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_fill_out_form_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.245803Z", "completed_at": "2025-06-09T18:50:34.316641Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.382151Z", "completed_at": "2025-06-09T18:50:34.759120Z"}], "thread_id": "Thread-12", "execution_time": 0.5845229625701904, "adapter_response": {}, "message": "Database Error in model marketo_activity_push_lead_to_marketo_source (models/sources/marketo/marketo_activity_push_lead_to_marketo_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,288)..Location(1,300)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_push_lead_to_marketo_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_push_lead_to_marketo_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_push_lead_to_marketo\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_push_lead_to_marketo_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      api_method_name::TEXT                     AS api_method_name,\n      modifying_user::TEXT                      AS modifying_user,\n      request_id::TEXT                          AS request_id,\n      source::TEXT                              AS source\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_push_lead_to_marketo_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.242922Z", "completed_at": "2025-06-09T18:50:34.317091Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.386367Z", "completed_at": "2025-06-09T18:50:34.759366Z"}], "thread_id": "Thread-9", "execution_time": 0.5905399322509766, "adapter_response": {}, "message": "Database Error in model marketo_activity_open_email_source (models/sources/marketo/marketo_activity_open_email_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,258)..Location(1,270)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_open_email_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_open_email_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_open_email\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_open_email_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      campaign_run_id::NUMBER                   AS campaign_run_id,\n      platform::TEXT                            AS platform,\n      is_mobile_device::BOOLEAN                 AS is_mobile_device,\n      step_id::NUMBER                           AS step_id,\n      device::TEXT                              AS device,\n      test_variant::NUMBER                      AS test_variant,\n      choice_number::NUMBER                     AS choice_number,\n      is_bot_activity::BOOLEAN                  AS is_bot_activity,\n      user_agent::TEXT                          AS user_agent,\n      bot_activity_pattern::TEXT                AS bot_activity_pattern\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_open_email_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.260556Z", "completed_at": "2025-06-09T18:50:34.339672Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.405685Z", "completed_at": "2025-06-09T18:50:34.771632Z"}], "thread_id": "Thread-4", "execution_time": 0.5920150279998779, "adapter_response": {}, "message": "Database Error in model marketo_activity_send_alert_source (models/sources/marketo/marketo_activity_send_alert_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,258)..Location(1,270)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_send_alert_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_send_alert_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_send_alert\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_send_alert_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      send_to_owner::TEXT                       AS send_to_owner,\n      send_to_list::TEXT                        AS send_to_list\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_send_alert_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:28.675022Z", "completed_at": "2025-06-09T18:50:28.693533Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:28.746680Z", "completed_at": "2025-06-09T18:50:33.979561Z"}], "thread_id": "Thread-5", "execution_time": 5.343107223510742, "adapter_response": {}, "message": "Database Error in model iterable_campaign_suppression_list_history_source (models/sources/iterable/iterable_campaign_suppression_list_history_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/iterable/iterable_campaign_suppression_list_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.iterable_campaign_suppression_list_history_source", "compiled": true, "compiled_code": "WITH source AS (\n  \n   SELECT *\n   FROM EMBUCKET.iterable.campaign_suppression_list_history\n \n), final AS (\n \n    SELECT\n        campaign_id::VARCHAR             AS iterable_campaign_id,\n        suppressed_list_id::VARCHAR      AS iterable_campaign_suppressed_list_id,\n        updated_at::TIMESTAMP            AS iterable_campaign_list_updated_at,\n        updated_at::DATE                 AS iterable_campaign_list_updated_date\n    FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.iterable.iterable_campaign_suppression_list_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.235061Z", "completed_at": "2025-06-09T18:50:34.291816Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.370935Z", "completed_at": "2025-06-09T18:50:34.773410Z"}], "thread_id": "Thread-3", "execution_time": 0.5987069606781006, "adapter_response": {}, "message": "Database Error in model marketo_activity_merge_leads_source (models/sources/marketo/marketo_activity_merge_leads_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,261)..Location(1,273)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_merge_leads_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_merge_leads_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_merge_leads\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_merge_leads_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      merge_ids::TEXT                           AS merge_ids,\n      merged_in_sales::BOOLEAN                  AS merged_in_sales,\n      merge_source::TEXT                        AS merge_source,\n      master_updated::BOOLEAN                   AS master_updated\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_merge_leads_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.273313Z", "completed_at": "2025-06-09T18:50:34.363720Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.419595Z", "completed_at": "2025-06-09T18:50:34.805621Z"}], "thread_id": "Thread-19", "execution_time": 0.5960879325866699, "adapter_response": {}, "message": "Database Error in model marketo_activity_sfdc_activity_updated_source (models/sources/marketo/marketo_activity_sfdc_activity_updated_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,291)..Location(1,303)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_sfdc_activity_updated_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_sfdc_activity_updated_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_sfdc_activity_updated\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_sfdc_activity_updated_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      status::TEXT                              AS status,\n      description::TEXT                         AS description,\n      is_task::BOOLEAN                          AS is_task,\n      priority::TEXT                            AS priority,\n      activity_owner::TEXT                      AS activity_owner,\n      due_date::DATE                            AS due_date\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_sfdc_activity_updated_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.264403Z", "completed_at": "2025-06-09T18:50:34.352499Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.411371Z", "completed_at": "2025-06-09T18:50:34.805854Z"}], "thread_id": "Thread-18", "execution_time": 0.6045200824737549, "adapter_response": {}, "message": "Database Error in model marketo_activity_send_email_source (models/sources/marketo/marketo_activity_send_email_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,258)..Location(1,270)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_send_email_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_send_email_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_send_email\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                 AS marketo_activity_send_email_id,\n      lead_id::NUMBER                            AS lead_id,\n      activity_date::TIMESTAMP_TZ                AS activity_date,\n      activity_type_id::NUMBER                   AS activity_type_id,\n      campaign_id::NUMBER                        AS campaign_id,\n      primary_attribute_value_id::NUMBER         AS primary_attribute_value_id,\n      primary_attribute_value::TEXT              AS primary_attribute_value,\n      campaign_run_id::NUMBER                    AS campaign_run_id,\n      step_id::NUMBER                            AS step_id,\n      choice_number::NUMBER                      AS choice_number,\n      test_variant::NUMBER                       AS test_variant\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_send_email_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.292212Z", "completed_at": "2025-06-09T18:50:34.381643Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.443626Z", "completed_at": "2025-06-09T18:50:34.878754Z"}], "thread_id": "Thread-32", "execution_time": 0.6665527820587158, "adapter_response": {}, "message": "Database Error in model marketo_activity_visit_webpage_source (models/sources/marketo/marketo_activity_visit_webpage_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,267)..Location(1,279)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_visit_webpage_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_visit_webpage_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_visit_webpage\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_visit_webpage_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      webpage_url::TEXT                         AS webpage_url,\n      search_engine::TEXT                       AS search_engine,\n      client_ip_address::TEXT                   AS client_ip_address,\n      user_agent::TEXT                          AS user_agent,\n      query_parameters::TEXT                    AS query_parameters,\n      referrer_url::TEXT                        AS referrer_url,\n      search_query::TEXT                        AS search_query\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_visit_webpage_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.257174Z", "completed_at": "2025-06-09T18:50:34.327052Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.396737Z", "completed_at": "2025-06-09T18:50:34.792865Z"}], "thread_id": "Thread-30", "execution_time": 0.5947198867797852, "adapter_response": {}, "message": "Database Error in model marketo_activity_request_campaign_source (models/sources/marketo/marketo_activity_request_campaign_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,276)..Location(1,288)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_request_campaign_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_request_campaign_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_request_campaign\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_request_campaign_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      source::TEXT                              AS source\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_request_campaign_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.336186Z", "completed_at": "2025-06-09T18:50:34.415360Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.497636Z", "completed_at": "2025-06-09T18:50:35.018273Z"}], "thread_id": "Thread-8", "execution_time": 0.8125529289245605, "adapter_response": {}, "message": "Database Error in model netsuite_accounting_books_source (models/sources/netsuite/netsuite_accounting_books_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,387)..Location(1,399)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/netsuite/netsuite_accounting_books_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_accounting_books_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.accounting_books\n\n), renamed AS (\n\n    SELECT\n      --Primary Key\n      accounting_book_id::FLOAT                   AS accounting_book_id,\n\n      --Info\n      accounting_book_extid::VARCHAR              AS accounting_book_extid,\n      accounting_book_name::VARCHAR               AS accounting_book_name,\n      base_book_id::FLOAT                         AS base_book_id,\n      date_created::TIMESTAMP_TZ                  AS date_created,\n      date_last_modified::TIMESTAMP_TZ            AS date_last_modified,\n      effective_period_id::FLOAT                  AS effective_period_id,\n      form_template_component_id::VARCHAR         AS form_template_component_id,\n      form_template_id::FLOAT                     AS form_template_id,\n      true::BOOLEAN                         AS is_primary,\n      status::VARCHAR                             AS status\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_accounting_books_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.317546Z", "completed_at": "2025-06-09T18:50:34.405318Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.468491Z", "completed_at": "2025-06-09T18:50:35.009757Z"}], "thread_id": "Thread-15", "execution_time": 0.8135881423950195, "adapter_response": {}, "message": "Database Error in model model_mart_crm_opportunity_id (models/workspaces/workspace_data_science/model_mart_crm_opportunity_id.sql)\n  000200: DataFusion error: Error during planning: table 'my_snowflake_prep_database.workspace_data_science.opportunity_forecasting_scores' not found\n  compiled code at target/run/gitlab_snowflake/models/workspaces/workspace_data_science/model_mart_crm_opportunity_id.sql", "failures": null, "unique_id": "model.gitlab_snowflake.model_mart_crm_opportunity_id", "compiled": true, "compiled_code": "\n\nWITH oppt_latest_date AS (\n\n    SELECT MAX(score_date) AS score_date\n    FROM MY_SNOWFLAKE_PREP_DATABASE.workspace_data_science.opportunity_forecasting_scores\n\n), oppt AS (\n\n   SELECT\n      dim_crm_opportunity_id AS crm_opportunity_id,\n      score_date AS forecast_score_date,\n      forecasted_days_remaining AS forecasted_days_remaining,\n      forecasted_close_won_date AS forecasted_close_won_date,\n      forecasted_close_won_quarter AS forecasted_close_won_quarter,\n      score_group AS forecasted_score_group,\n      insights AS forecast_insights,\n      submodel AS forecast_submodel,\n      model_version AS forecast_model_version\n    FROM MY_SNOWFLAKE_PREP_DATABASE.workspace_data_science.opportunity_forecasting_scores\n\n)\n\nSELECT\n  a.crm_opportunity_id,\n  a.forecast_score_date::DATE AS forecast_score_date,\n  a.forecasted_days_remaining,\n  a.forecasted_close_won_date,\n  a.forecasted_close_won_quarter,\n  a.forecasted_score_group,\n  a.forecast_insights,\n  a.forecast_submodel,\n  a.forecast_model_version\n FROM oppt a\nINNER JOIN oppt_latest_date b\n   ON a.forecast_score_date = b.score_date", "relation_name": "EMBUCKET.workspace_data_science.model_mart_crm_opportunity_id", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.277243Z", "completed_at": "2025-06-09T18:50:34.364430Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.428879Z", "completed_at": "2025-06-09T18:50:35.248971Z"}], "thread_id": "Thread-26", "execution_time": 1.1254968643188477, "adapter_response": {}, "message": "Database Error in model marketo_activity_sync_lead_to_sfdc_source (models/sources/marketo/marketo_activity_sync_lead_to_sfdc_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,279)..Location(1,291)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_sync_lead_to_sfdc_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_sync_lead_to_sfdc_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_sync_lead_to_sfdc\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_sync_lead_to_sfdc_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_sync_lead_to_sfdc_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.288380Z", "completed_at": "2025-06-09T18:50:34.381132Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.438123Z", "completed_at": "2025-06-09T18:50:35.254635Z"}], "thread_id": "Thread-17", "execution_time": 1.1229777336120605, "adapter_response": {}, "message": "Database Error in model marketo_activity_update_opportunity_source (models/sources/marketo/marketo_activity_update_opportunity_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,282)..Location(1,294)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_update_opportunity_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_update_opportunity_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_update_opportunity\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_update_opportunity_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      data_value_changes::TEXT                  AS data_value_changes\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_update_opportunity_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.327420Z", "completed_at": "2025-06-09T18:50:34.409805Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.474165Z", "completed_at": "2025-06-09T18:50:35.210062Z"}], "thread_id": "Thread-6", "execution_time": 1.1062610149383545, "adapter_response": {}, "message": "Database Error in model monitor_recom_field_health_source (models/sources/observability/monitor_recom_field_health_source.sql)\n  000200: DataFusion error: Error during planning: table 'monte_carlo.prod_insights.monitor_recom_field_health' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/observability/monitor_recom_field_health_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.monitor_recom_field_health_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM MONTE_CARLO.prod_insights.monitor_recom_field_health\n\n), renamed AS (\n\n    SELECT\n     *\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.monitor_recom_field_health_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.333046Z", "completed_at": "2025-06-09T18:50:34.410119Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.479895Z", "completed_at": "2025-06-09T18:50:35.217566Z"}], "thread_id": "Thread-29", "execution_time": 1.1110830307006836, "adapter_response": {}, "message": "Database Error in model monitors_source (models/sources/observability/monitors_source.sql)\n  000200: DataFusion error: Error during planning: table 'monte_carlo.prod_insights.monitors' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/observability/monitors_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.monitors_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM MONTE_CARLO.prod_insights.monitors\n\n), renamed AS (\n\n    SELECT\n     *\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.monitors_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.283690Z", "completed_at": "2025-06-09T18:50:34.375664Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.433726Z", "completed_at": "2025-06-09T18:50:35.237828Z"}], "thread_id": "Thread-16", "execution_time": 1.1175670623779297, "adapter_response": {}, "message": "Database Error in model marketo_activity_unsubscribe_email_source (models/sources/marketo/marketo_activity_unsubscribe_email_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,279)..Location(1,291)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_unsubscribe_email_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_unsubscribe_email_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_unsubscribe_email\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_unsubscribe_email_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      campaign_run_id::NUMBER                   AS campaign_run_id,\n      webform_id::NUMBER                        AS webform_id,\n      client_ip_address::TEXT                   AS client_ip_address,\n      form_fields::TEXT                         AS form_fields,\n      webpage_id::NUMBER                        AS webpage_id,\n      user_agent::TEXT                          AS user_agent,\n      query_parameters::TEXT                    AS query_parameters,\n      referrer_url::TEXT                        AS referrer_url,\n      test_variant::NUMBER                      AS test_variant\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_unsubscribe_email_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.269152Z", "completed_at": "2025-06-09T18:50:34.357739Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.416211Z", "completed_at": "2025-06-09T18:50:35.238074Z"}], "thread_id": "Thread-14", "execution_time": 1.1199109554290771, "adapter_response": {}, "message": "Database Error in model marketo_activity_sfdc_activity_source (models/sources/marketo/marketo_activity_sfdc_activity_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,267)..Location(1,279)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_activity_sfdc_activity_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_sfdc_activity_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_sfdc_activity\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS marketo_activity_sfdc_activity_id,\n      lead_id::NUMBER                           AS lead_id,\n      activity_date::TIMESTAMP_TZ               AS activity_date,\n      activity_type_id::NUMBER                  AS activity_type_id,\n      campaign_id::NUMBER                       AS campaign_id,\n      primary_attribute_value_id::NUMBER        AS primary_attribute_value_id,\n      primary_attribute_value::TEXT             AS primary_attribute_value,\n      status::TEXT                              AS status,\n      description::TEXT                         AS description,\n      is_task::BOOLEAN                          AS is_task,\n      priority::TEXT                            AS priority,\n      activity_owner::TEXT                      AS activity_owner,\n      due_date::DATE                            AS due_date\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_sfdc_activity_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.340295Z", "completed_at": "2025-06-09T18:50:34.411113Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.485214Z", "completed_at": "2025-06-09T18:50:35.177191Z"}], "thread_id": "Thread-25", "execution_time": 1.0435798168182373, "adapter_response": {}, "message": "Database Error in model netsuite_accounting_periods_source (models/sources/netsuite/netsuite_accounting_periods_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,650)..Location(1,662)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/netsuite/netsuite_accounting_periods_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_accounting_periods_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.accounting_periods\n\n), renamed AS (\n\n    SELECT\n      md5(cast(coalesce(cast(accounting_period_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(full_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))\n                                                    AS accounting_period_unique_id,\n      --Primary Key\n      accounting_period_id::FLOAT                   AS accounting_period_id,\n\n      --Foreign Keys\n      parent_id::FLOAT                              AS parent_id,\n      year_id::FLOAT                                AS year_id,\n\n      --Info\n      name::VARCHAR                                 AS accounting_period_name,\n      full_name::VARCHAR                            AS accounting_period_full_name,\n      fiscal_calendar_id::FLOAT                     AS fiscal_calendar_id,\n      closed_on::TIMESTAMP_TZ                       AS accounting_period_close_date,\n      ending::TIMESTAMP_TZ                          AS accounting_period_end_date,\n      starting::TIMESTAMP_TZ                        AS accounting_period_starting_date,\n\n      --Meta\n      true::BOOLEAN              AS is_accounts_payable_locked,\n      true::BOOLEAN           AS is_accounts_receivables_locked,\n      true::BOOLEAN                           AS is_all_locked,\n      true::BOOLEAN                       AS is_payroll_locked,\n      true::BOOLEAN                               AS is_accouting_period_closed,\n      true::BOOLEAN              AS is_accounts_payable_closed,\n      true::BOOLEAN           AS is_accounts_receivables_closed,\n      true::BOOLEAN                           AS is_all_closed,\n      true::BOOLEAN                       AS is_payroll_closed,\n      true::BOOLEAN                           AS is_accounting_period_inactive,\n      true::BOOLEAN                        AS is_accounting_period_adjustment,\n      true::BOOLEAN                              AS is_quarter,\n      true::BOOLEAN                               AS is_year\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_accounting_periods_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.321944Z", "completed_at": "2025-06-09T18:50:34.404902Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.464311Z", "completed_at": "2025-06-09T18:50:35.255208Z"}], "thread_id": "Thread-24", "execution_time": 1.1207499504089355, "adapter_response": {}, "message": "Database Error in model monitor_issues_and_solutions_source (models/sources/observability/monitor_issues_and_solutions_source.sql)\n  000200: DataFusion error: Error during planning: table 'monte_carlo.prod_insights.monitor_issues_and_solutions' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/observability/monitor_issues_and_solutions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.monitor_issues_and_solutions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM MONTE_CARLO.prod_insights.monitor_issues_and_solutions\n\n), renamed AS (\n\n    SELECT\n     *\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.monitor_issues_and_solutions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.579846Z", "completed_at": "2025-06-09T18:50:35.621059Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.625353Z", "completed_at": "2025-06-09T18:50:36.580011Z"}], "thread_id": "Thread-25", "execution_time": 1.0866420269012451, "adapter_response": {}, "message": "Database Error in model performance_growth_potential_source (models/sources/workday/performance_growth_potential_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,652)..Location(1,659)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,660)..Location(1,665)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,669)..Location(1,679)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"REVIEWS_ALL_STATUSES_GROUP\", quote_style: None, span: Span(Location(1,680)..Location(1,706)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,712)..Location(1,713)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/performance_growth_potential_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_growth_potential_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.workday.performance_growth_potential\n  WHERE NOT _fivetran_deleted\n\n), \n\nrenamed AS (\n\n  SELECT\n    source.employee_id::NUMBER                      AS employee_id,\n    d.value['GROWTH_POTENTIAL_RATING']::VARCHAR     AS growth_potential_rating,\n    d.value['PERFORMANCE_RATING']::VARCHAR          AS performance_rating,\n    d.value['WORKDAY_ID']::VARCHAR                  AS workday_id,\n    d.value['Review_Period_-_Start_Date']::DATE     AS review_period_start_date,\n    d.value['Review_Period_-_End_Date']::DATE       AS review_period_end_date\n  FROM source\n  INNER JOIN LATERAL FLATTEN(INPUT => PARSE_JSON(REVIEWS_ALL_STATUSES_GROUP)) AS d\n\n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.workday.performance_growth_potential_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.143220Z", "completed_at": "2025-06-09T18:50:35.208714Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.309516Z", "completed_at": "2025-06-09T18:50:36.919607Z"}], "thread_id": "Thread-32", "execution_time": 1.878147840499878, "adapter_response": {}, "message": "Database Error in model omamori_gitlab_deleted_projects_source (models/sources/omamori/omamori_gitlab_deleted_projects_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.omamori.gitlab_deleted_projects_external' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/omamori/omamori_gitlab_deleted_projects_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.omamori_gitlab_deleted_projects_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH source AS (\n  SELECT\n    PARSE_JSON(value) AS json_value,\n    -- obtain 'uploaded_at_gcs' from the parquet filename, i.e:\n    -- 'entity_data/20230502/20230502T000025-entity_data-from-19700101T000000-until-20230426T193740.parquet'\n    TO_TIMESTAMP('20240417T123000', 'YYYYMMDDTHH24MISS') AS uploaded_at_gcs\n  FROM\n    RAW.omamori.gitlab_deleted_projects_external\n\n  \n),\n\nrenamed AS (\n  SELECT\n    json_value['id']::INT                                          AS id,\n    (json_value['deleted_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS deleted_at,\n    (json_value['updated_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS updated_at,\n    uploaded_at_gcs\n  FROM source\n),\n\ndedupped AS (\n  SELECT * FROM renamed\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n)\n\nSELECT * FROM dedupped", "relation_name": "EMBUCKET.omamori.omamori_gitlab_deleted_projects_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.492509Z", "completed_at": "2025-06-09T18:50:35.509907Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.555865Z", "completed_at": "2025-06-09T18:50:37.027303Z"}], "thread_id": "Thread-17", "execution_time": 1.6290998458862305, "adapter_response": {}, "message": "Database Error in model omamori_rule_evaluation_matches_source (models/sources/omamori/omamori_rule_evaluation_matches_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.omamori.rule_evaluation_matches_external' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/omamori/omamori_rule_evaluation_matches_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.omamori_rule_evaluation_matches_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH source AS (\n  SELECT\n    PARSE_JSON(value) AS json_value,\n    -- obtain 'uploaded_at_gcs' from the parquet filename, i.e:\n    -- 'entity_data/20230502/20230502T000025-entity_data-from-19700101T000000-until-20230426T193740.parquet'\n    TO_TIMESTAMP('20240417T123000', 'YYYYMMDDTHH24MISS') AS uploaded_at_gcs\n  FROM\n    RAW.omamori.rule_evaluation_matches_external\n\n  \n),\n\nrenamed AS (\n  SELECT\n    json_value['id']::INT                                          AS id,\n    json_value['entity_datum_id']::INT                             AS entity_datum_id,\n    json_value['rule_evaluation_id']::INT                          AS rule_evaluation_id,\n    (json_value['created_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS created_at,\n    (json_value['updated_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS updated_at,\n    uploaded_at_gcs\n  FROM source\n),\n\ndedupped AS (\n  SELECT * FROM renamed\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n)\n\nSELECT * FROM dedupped", "relation_name": "EMBUCKET.omamori.omamori_rule_evaluation_matches_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.511245Z", "completed_at": "2025-06-09T18:50:35.547980Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.565406Z", "completed_at": "2025-06-09T18:50:37.108115Z"}], "thread_id": "Thread-26", "execution_time": 1.701037883758545, "adapter_response": {}, "message": "Database Error in model omamori_mitigation_plans_source (models/sources/omamori/omamori_mitigation_plans_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.omamori.mitigation_plans_external' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/omamori/omamori_mitigation_plans_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.omamori_mitigation_plans_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH source AS (\n  SELECT\n    PARSE_JSON(value) AS json_value,\n    -- obtain 'uploaded_at_gcs' from the parquet filename, i.e:\n    -- 'entity_data/20230502/20230502T000025-entity_data-from-19700101T000000-until-20230426T193740.parquet'\n    TO_TIMESTAMP('20240417T123000', 'YYYYMMDDTHH24MISS') AS uploaded_at_gcs\n  FROM\n    RAW.omamori.mitigation_plans_external\n\n  \n),\n\nrenamed AS (\n  SELECT\n    json_value['id']::INT                                           AS id,\n    json_value['entity_type']::VARCHAR                              AS entity_type,\n    json_value['priority']::VARCHAR                                 AS priority,\n    json_value['status']::VARCHAR                                   AS status,\n    json_value['feature']::VARCHAR                                  AS feature,\n    json_value['category']::VARCHAR                                 AS category,\n    json_value['last_applied_mitigation_plan_template_id']::INT     AS last_applied_mitigation_plan_template_id,\n    json_value['from_rule_evaluation_id']::INT                      AS from_rule_evaluation_id,\n    (json_value['created_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP  AS created_at,\n    json_value['created_by_id']::INT                                AS created_by_id,\n    (json_value['reviewed_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS reviwed_at,\n    json_value['reviewed_by_id']::INT                               AS reviewed_by_id,\n    (json_value['executed_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS executed_at,\n    json_value['executed_by_id']::INT                               AS executed_by_id,\n    (json_value['updated_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP  AS updated_at,\n    uploaded_at_gcs\n  FROM source\n),\n\ndedupped AS (\n  SELECT * FROM renamed\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n)\n\nSELECT * FROM dedupped", "relation_name": "EMBUCKET.omamori.omamori_mitigation_plans_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.186123Z", "completed_at": "2025-06-09T18:50:35.289307Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.348607Z", "completed_at": "2025-06-09T18:50:37.126152Z"}], "thread_id": "Thread-18", "execution_time": 2.124156951904297, "adapter_response": {}, "message": "Database Error in model omamori_entity_data_source (models/sources/omamori/omamori_entity_data_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.omamori.entity_data_external' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/omamori/omamori_entity_data_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.omamori_entity_data_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH source AS (\n  SELECT\n    PARSE_JSON(value) AS json_value,\n    -- obtain 'uploaded_at_gcs' from the parquet filename, i.e:\n    -- 'entity_data/20230502/20230502T000025-entity_data-from-19700101T000000-until-20230426T193740.parquet'\n    TO_TIMESTAMP('20240417T123000', 'YYYYMMDDTHH24MISS') AS uploaded_at_gcs\n  FROM\n    RAW.omamori.entity_data_external\n\n  \n),\n\nrenamed AS (\n  SELECT\n    json_value['id']::INT                                          AS id,\n    json_value['entity_id']::INT                                   AS entity_id,\n    json_value['entity_type']::VARCHAR                             AS entity_type,\n    -- convert epoch microseconds to Snowflake timestamp\n    (json_value['created_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS created_at,\n    (json_value['updated_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS updated_at,\n    uploaded_at_gcs\n  FROM source\n),\n\ndedupped AS (\n  SELECT * FROM renamed\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n)\n\nSELECT * FROM dedupped", "relation_name": "EMBUCKET.omamori.omamori_entity_data_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.210604Z", "completed_at": "2025-06-09T18:50:35.318494Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.354816Z", "completed_at": "2025-06-09T18:50:37.115389Z"}], "thread_id": "Thread-30", "execution_time": 2.0784568786621094, "adapter_response": {}, "message": "Database Error in model omamori_mitigation_plan_entity_data_source (models/sources/omamori/omamori_mitigation_plan_entity_data_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.omamori.mitigation_plan_entity_data_external' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/omamori/omamori_mitigation_plan_entity_data_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.omamori_mitigation_plan_entity_data_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH source AS (\n  SELECT\n    PARSE_JSON(value) AS json_value,\n    -- obtain 'uploaded_at_gcs' from the parquet filename, i.e:\n    -- 'entity_data/20230502/20230502T000025-entity_data-from-19700101T000000-until-20230426T193740.parquet'\n    TO_TIMESTAMP('20240417T123000', 'YYYYMMDDTHH24MISS') AS uploaded_at_gcs\n  FROM\n    RAW.omamori.mitigation_plan_entity_data_external\n\n  \n),\n\nrenamed AS (\n  SELECT\n    json_value['id']::INT                                          AS id,\n    json_value['status']::VARCHAR                                  AS status,\n    json_value['entity_datum_id']::INT                             AS entity_datum_id,\n    json_value['mitigation_plan_id']::INT                          AS mitigation_plan_id,\n    -- convert epoch microseconds to Snowflake timestamp\n    (json_value['created_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS created_at,\n    (json_value['updated_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS updated_at,\n    uploaded_at_gcs\n  FROM source\n),\n\ndedupped AS (\n  SELECT * FROM renamed\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n)\n\nSELECT * FROM dedupped", "relation_name": "EMBUCKET.omamori.omamori_mitigation_plan_entity_data_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.412909Z", "completed_at": "2025-06-09T18:50:35.438078Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.468591Z", "completed_at": "2025-06-09T18:50:37.145943Z"}], "thread_id": "Thread-8", "execution_time": 1.831834077835083, "adapter_response": {}, "message": "Database Error in model omamori_mitigation_plan_tags_source (models/sources/omamori/omamori_mitigation_plan_tags_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.omamori.mitigation_plan_tags_external' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/omamori/omamori_mitigation_plan_tags_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.omamori_mitigation_plan_tags_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH source AS (\n  SELECT\n    PARSE_JSON(value) AS json_value,\n    -- obtain 'uploaded_at_gcs' from the parquet filename, i.e:\n    -- 'entity_data/20230502/20230502T000025-entity_data-from-19700101T000000-until-20230426T193740.parquet'\n    TO_TIMESTAMP('20240417T123000', 'YYYYMMDDTHH24MISS') AS uploaded_at_gcs\n  FROM\n    RAW.omamori.mitigation_plan_tags_external\n\n  \n),\n\nrenamed AS (\n  SELECT\n    json_value['id']::INT                                          AS id,\n    (json_value['created_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS created_at,\n    (json_value['updated_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS updated_at,\n    json_value['mitigation_plan_id']::INT                          AS mitigation_plan_id,\n    json_value['tag_id']::INT                                      AS tag_id,\n    uploaded_at_gcs\n  FROM source\n),\n\ndedupped AS (\n  SELECT * FROM renamed\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n)\n\nSELECT * FROM dedupped", "relation_name": "EMBUCKET.omamori.omamori_mitigation_plan_tags_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.484941Z", "completed_at": "2025-06-09T18:50:35.504868Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.521557Z", "completed_at": "2025-06-09T18:50:37.163940Z"}], "thread_id": "Thread-29", "execution_time": 1.7318370342254639, "adapter_response": {}, "message": "Database Error in model omamori_tags_source (models/sources/omamori/omamori_tags_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.omamori.tags_external' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/omamori/omamori_tags_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.omamori_tags_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH source AS (\n  SELECT\n    PARSE_JSON(value) AS json_value,\n    -- obtain 'uploaded_at_gcs' from the parquet filename, i.e:\n    -- 'entity_data/20230502/20230502T000025-entity_data-from-19700101T000000-until-20230426T193740.parquet'\n    TO_TIMESTAMP('20240417T123000', 'YYYYMMDDTHH24MISS') AS uploaded_at_gcs\n  FROM\n    RAW.omamori.tags_external\n\n  \n),\n\nrenamed AS (\n  SELECT\n    json_value['id']::INT                                          AS id,\n    json_value['name']::VARCHAR                                    AS tag_name,\n\n    (json_value['created_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS created_at,\n    (json_value['updated_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS updated_at,\n    uploaded_at_gcs\n  FROM source\n),\n\ndedupped AS (\n  SELECT * FROM renamed\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n)\n\nSELECT * FROM dedupped", "relation_name": "EMBUCKET.omamori.omamori_tags_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.154813Z", "completed_at": "2025-06-09T18:50:35.203563Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.291256Z", "completed_at": "2025-06-09T18:50:37.498807Z"}], "thread_id": "Thread-9", "execution_time": 2.4881680011749268, "adapter_response": {}, "message": "Database Error in model netsuite_transaction_lines_source (models/sources/netsuite/netsuite_transaction_lines_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'lower(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tlower(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/sources/netsuite/netsuite_transaction_lines_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_transaction_lines_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.transaction_lines\n\n), renamed AS (\n\n    SELECT\n      md5(cast(coalesce(cast(transaction_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(transaction_line_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))\n                                        AS transaction_lines_unique_id,\n      --Primary Key\n      transaction_id::FLOAT             AS transaction_id,\n      transaction_line_id::FLOAT        AS transaction_line_id,\n\n      --Foreign Keys\n      account_id::FLOAT                 AS account_id,\n      class_id::FLOAT                   AS class_id,\n      department_id::FLOAT              AS department_id,\n      subsidiary_id::FLOAT              AS subsidiary_id,\n      company_id::FLOAT                 AS company_id,\n\n      -- info\n      memo::VARCHAR                     AS memo,\n      receipt_url::VARCHAR              AS receipt_url,\n      amount::FLOAT                     AS amount,\n      gross_amount::FLOAT               AS gross_amount,\n\n      LOWER(non_posting_line)::VARCHAR  AS non_posting_line\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_transaction_lines_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.476211Z", "completed_at": "2025-06-09T18:50:35.503508Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.540056Z", "completed_at": "2025-06-09T18:50:37.526478Z"}], "thread_id": "Thread-6", "execution_time": 2.060807228088379, "adapter_response": {}, "message": "Database Error in model omamori_rule_evaluations_source (models/sources/omamori/omamori_rule_evaluations_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.omamori.rule_evaluations_external' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/omamori/omamori_rule_evaluations_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.omamori_rule_evaluations_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH source AS (\n  SELECT\n    PARSE_JSON(value) AS json_value,\n    -- obtain 'uploaded_at_gcs' from the parquet filename, i.e:\n    -- 'entity_data/20230502/20230502T000025-entity_data-from-19700101T000000-until-20230426T193740.parquet'\n    TO_TIMESTAMP('20240417T123000', 'YYYYMMDDTHH24MISS') AS uploaded_at_gcs\n  FROM\n    RAW.omamori.rule_evaluations_external\n\n  \n),\n\nrenamed AS (\n  SELECT\n    json_value['id']::INT                                          AS id,\n    json_value['rule']::VARCHAR                                    AS rule,\n    json_value['result']::VARCHAR                                  AS outcome,\n    json_value['elapsed_ms']::INT                                  AS elapsed_ms,\n    json_value['throttled_count']::INT                             AS throttled_count,\n    json_value['duplicates_removed_count']::INT                    AS duplicates_removed_count,\n    (json_value['created_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS created_at,\n    (json_value['updated_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS updated_at,\n    uploaded_at_gcs\n  FROM source\n),\n\ndedupped AS (\n  SELECT * FROM renamed\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n)\n\nSELECT * FROM dedupped", "relation_name": "EMBUCKET.omamori.omamori_rule_evaluations_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.162690Z", "completed_at": "2025-06-09T18:50:35.217007Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.322919Z", "completed_at": "2025-06-09T18:50:39.494741Z"}], "thread_id": "Thread-4", "execution_time": 4.459715127944946, "adapter_response": {}, "message": "Database Error in model netsuite_transactions_source (models/sources/netsuite/netsuite_transactions_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,740)..Location(1,752)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/netsuite/netsuite_transactions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_transactions_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.transactions\n\n), renamed AS (\n\n    SELECT\n      --Primary Key\n      transaction_id::FLOAT                AS transaction_id,\n\n      --Info\n      entity_id::FLOAT                     AS entity_id,\n      accounting_period_id::FLOAT          AS accounting_period_id,\n      currency_id::FLOAT                   AS currency_id,\n      transaction_type::VARCHAR            AS transaction_type,\n      external_ref_number::VARCHAR         AS external_ref_number,\n      transaction_extid::VARCHAR           AS transaction_ext_id,\n      transaction_number::VARCHAR          AS transaction_number,\n      memo::VARCHAR                        AS memo,\n      tranid::VARCHAR                      AS document_id,\n      opening_balance_transaction::VARCHAR AS balance,\n      exchange_rate::FLOAT                 AS exchange_rate,\n      weighted_total::FLOAT                AS total,\n      status::VARCHAR                      AS status,\n      due_date::TIMESTAMP_TZ               AS due_date,\n      trandate::TIMESTAMP_TZ               AS transaction_date,\n      sales_effective_date::TIMESTAMP_TZ   AS sales_effective_date\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_transactions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.398603Z", "completed_at": "2025-06-09T18:50:35.431004Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.457216Z", "completed_at": "2025-06-09T18:50:39.598557Z"}], "thread_id": "Thread-15", "execution_time": 4.34325098991394, "adapter_response": {}, "message": "Database Error in model omamori_mitigation_plan_template_tags_source (models/sources/omamori/omamori_mitigation_plan_template_tags_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.omamori.mitigation_plan_template_tags_external' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/omamori/omamori_mitigation_plan_template_tags_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.omamori_mitigation_plan_template_tags_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH source AS (\n  SELECT\n    PARSE_JSON(value) AS json_value,\n    -- obtain 'uploaded_at_gcs' from the parquet filename, i.e:\n    -- 'entity_data/20230502/20230502T000025-entity_data-from-19700101T000000-until-20230426T193740.parquet'\n    TO_TIMESTAMP('20240417T123000', 'YYYYMMDDTHH24MISS') AS uploaded_at_gcs\n  FROM\n    RAW.omamori.mitigation_plan_template_tags_external\n\n  \n),\n\nrenamed AS (\n  SELECT\n    json_value['id']::INT                                          AS id,\n    (json_value['created_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS created_at,\n    (json_value['updated_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS updated_at,\n    json_value['mitigation_plan_template_id']::INT                 AS mitigation_plan_template_id,\n    json_value['tag_id']::INT                                      AS tag_id,\n    uploaded_at_gcs\n  FROM source\n),\n\ndedupped AS (\n  SELECT * FROM renamed\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n)\n\nSELECT * FROM dedupped", "relation_name": "EMBUCKET.omamori.omamori_mitigation_plan_template_tags_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.348825Z", "completed_at": "2025-06-09T18:50:34.415949Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.505765Z", "completed_at": "2025-06-09T18:50:39.614331Z"}], "thread_id": "Thread-27", "execution_time": 5.390842914581299, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_budget_category_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.budget_category\n\n), renamed AS (\n\n    SELECT\n      --Primary Key\n      budget_category_id::FLOAT             AS budget_category_id,\n\n      --Info\n      true::BOOLEAN                   AS is_inactive,\n      true::BOOLEAN                    AS is_global,\n      name::VARCHAR                         AS budget_category,\n      true::BOOLEAN            AS is_fivetran_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_budget_category_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.280450Z", "completed_at": "2025-06-09T18:50:34.364111Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.424856Z", "completed_at": "2025-06-09T18:50:39.656417Z"}], "thread_id": "Thread-13", "execution_time": 5.44008207321167, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_type_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.activity_type\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                AS marketo_activity_type_id,\n      name::TEXT                AS name,\n      description::TEXT         AS description\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_activity_type_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.313656Z", "completed_at": "2025-06-09T18:50:34.396295Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.460300Z", "completed_at": "2025-06-09T18:50:39.685509Z"}], "thread_id": "Thread-31", "execution_time": 5.4663660526275635, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.media_buys_source", "compiled": true, "compiled_code": "WITH\nsource AS (\n  SELECT * FROM\n    EMBUCKET.just_global_campaigns.media_buys\n),\n\ndedupped AS (\n  SELECT *\n  FROM source\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY media_buy_date, region, country, campaign_name, media_buy_name, creative_name ORDER BY uploaded_at DESC) = 1\n)\n\nSELECT *\nFROM dedupped", "relation_name": "EMBUCKET.just_global_campaigns.media_buys_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.137608Z", "completed_at": "2025-06-09T18:50:35.192760Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.267147Z", "completed_at": "2025-06-09T18:50:39.733321Z"}], "thread_id": "Thread-10", "execution_time": 4.699540853500366, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_currency_exchange_rates_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.netsuite_fivetran.currency_exchange_rates\n\n), renamed AS (\n\n  SELECT\n\n    --Primary Key\n    currency_rate_id::FLOAT AS currency_rate_id,\n\n    --Foreign keys\n    anchor_currency_id::FLOAT AS anchor_currency_id,\n    base_currency_id::FLOAT AS base_currency_id,\n    currency_id::FLOAT AS currency_id,\n    currency_rate_provider_id::VARCHAR AS currency_rate_provider_id,\n    currency_rate_type_id::FLOAT AS currency_rate_type_id,\n    entity_id::VARCHAR AS entity_id,\n\n    --Information\n    exchange_rate::FLOAT AS exchange_rate,\n    is_anchor_only::VARCHAR AS is_anchor_only,\n\n    --Metadata\n    date_effective::DATE AS date_effective,\n    date_last_modified::DATE AS date_last_modified\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_currency_exchange_rates_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.166798Z", "completed_at": "2025-06-09T18:50:35.237363Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.329182Z", "completed_at": "2025-06-09T18:50:39.738224Z"}], "thread_id": "Thread-3", "execution_time": 4.706603050231934, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.ntv_handbook_file_classification_mapping", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.seed_engineering.handbook_file_classification_mapping\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.specific.ntv_handbook_file_classification_mapping", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.526868Z", "completed_at": "2025-06-09T18:50:35.550854Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.572900Z", "completed_at": "2025-06-09T18:50:39.590609Z"}], "thread_id": "Thread-16", "execution_time": 4.238824844360352, "adapter_response": {}, "message": "Database Error in model omamori_users_source (models/sources/omamori/omamori_users_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.omamori.users_external' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/omamori/omamori_users_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.omamori_users_source", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n\nWITH source AS (\n  SELECT\n    PARSE_JSON(value) AS json_value,\n    -- obtain 'uploaded_at_gcs' from the parquet filename, i.e:\n    -- 'entity_data/20230502/20230502T000025-entity_data-from-19700101T000000-until-20230426T193740.parquet'\n    TO_TIMESTAMP('20240417T123000', 'YYYYMMDDTHH24MISS') AS uploaded_at_gcs\n  FROM\n    RAW.omamori.users_external\n\n  \n),\n\nrenamed AS (\n  SELECT\n\n\n    json_value['id']::INT                                          AS id,\n    json_value['username']::VARCHAR                                AS username,\n    json_value['name']::VARCHAR                                    AS full_name,\n    json_value['role']::VARCHAR                                    AS user_role,\n    json_value['service_user']::BOOLEAN                            AS service_user,\n\n    (json_value['created_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS created_at,\n    (json_value['updated_at']::NUMBER(36, 3) / 1000000)::TIMESTAMP AS updated_at,\n    uploaded_at_gcs\n  FROM source\n),\n\ndedupped AS (\n  SELECT * FROM renamed\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n)\n\nSELECT * FROM dedupped", "relation_name": "EMBUCKET.omamori.omamori_users_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.308726Z", "completed_at": "2025-06-09T18:50:34.391531Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.453634Z", "completed_at": "2025-06-09T18:50:39.771117Z"}], "thread_id": "Thread-23", "execution_time": 5.552241802215576, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.mart_arr_clone_rollup_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.full_table_clones.mart_arr_rollup\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.mart_arr_clone_rollup_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.344306Z", "completed_at": "2025-06-09T18:50:34.415611Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.501999Z", "completed_at": "2025-06-09T18:50:39.730184Z"}], "thread_id": "Thread-22", "execution_time": 5.506956100463867, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_accounts_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.accounts\n\n), renamed AS (\n\n    SELECT\n      --Primary Key\n      account_id::FLOAT                                   AS account_id,\n\n      --Foreign Keys\n      parent_id::FLOAT                                    AS parent_account_id,\n      currency_id::FLOAT                                  AS currency_id,\n      department_id::FLOAT                                AS department_id,\n\n      --Info\n      name::VARCHAR                                       AS account_name,\n      full_name::VARCHAR                                  AS account_full_name,\n      full_description::VARCHAR                           AS account_full_description,\n      accountnumber::VARCHAR                              AS account_number,\n      expense_type_id::FLOAT                              AS expense_type_id,\n      type_name::VARCHAR                                  AS account_type,\n      type_sequence::FLOAT                                AS account_type_sequence,\n      openbalance::FLOAT                                  AS current_account_balance,\n      cashflow_rate_type::VARCHAR                         AS cashflow_rate_type,\n      general_rate_type::VARCHAR                          AS general_rate_type,\n\n      --Meta\n      true::BOOLEAN                                 AS is_account_inactive,\n      true::BOOLEAN                            AS is_balancesheet_account,\n      true::BOOLEAN                 AS is_account_included_in_elimination,\n      true::BOOLEAN                       AS is_account_included_in_reval,\n      true::BOOLEAN                    AS is_account_including_child_subscriptions,\n      true::BOOLEAN                                AS is_leftside_account,\n      true::BOOLEAN                                 AS is_summary_account\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_accounts_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.076067Z", "completed_at": "2025-06-09T18:50:35.171081Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.233322Z", "completed_at": "2025-06-09T18:50:39.754495Z"}], "thread_id": "Thread-5", "execution_time": 4.782031059265137, "adapter_response": {}, "message": "Database Error in model netsuite_vendors_source (models/sources/netsuite/netsuite_vendors_source.sql)\n  000200: DataFusion error: type_coercion\n  caused by\n  Error during planning: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Boolean, DataType: Boolean.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'lower(Boolean)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tlower(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/sources/netsuite/netsuite_vendors_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_vendors_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.vendors\n\n), renamed AS (\n\n    SELECT\n      --Primary Key\n      vendor_id::FLOAT                   AS vendor_id,\n\n      --Foreign Key\n      represents_subsidiary_id::FLOAT    AS subsidiary_id,\n      currency_id::FLOAT                 AS currency_id,\n\n      --Info\n      companyname::VARCHAR               AS vendor_name,\n      openbalance::FLOAT                 AS vendor_balance,\n      comments::VARCHAR                  AS vendor_comments,\n\n      --Meta\n      true::BOOLEAN            AS is_1099_eligible,\n      true::BOOLEAN                AS is_inactive,\n      true::BOOLEAN                 AS is_person\n\n    FROM source\n    WHERE LOWER(_fivetran_deleted) = 'false'\n\n)\n\nSELECT *\nFROM renamed\n\n--We no longer have first and last names for folks who are paid by contracts.", "relation_name": "EMBUCKET.netsuite.netsuite_vendors_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.158251Z", "completed_at": "2025-06-09T18:50:35.216723Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.318881Z", "completed_at": "2025-06-09T18:50:39.847267Z"}], "thread_id": "Thread-11", "execution_time": 4.809228897094727, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_budget_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.budget\n\n), renamed AS (\n\n    SELECT\n      --Primary Key\n      budget_id::FLOAT             AS budget_id,\n\n      --Foreign Keys\n      accounting_period_id::FLOAT  AS accounting_period_id,\n      account_id::FLOAT            AS account_id,\n      department_id::FLOAT         AS department_id,\n      subsidiary_id::FLOAT         AS subsidiary_id,\n      category_id::FLOAT           AS category_id,\n\n      --Info\n      amount::FLOAT                AS budget_amount,\n      _fivetran_deleted::BOOLEAN   AS is_fivetran_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_budget_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:38.023205Z", "completed_at": "2025-06-09T18:50:38.042142Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:38.060100Z", "completed_at": "2025-06-09T18:50:39.793156Z"}], "thread_id": "Thread-30", "execution_time": 1.8387680053710938, "adapter_response": {}, "message": "Database Error in model performance_indicators_engineering_source (models/sources/gitlab_data_yaml/performance_indicators_engineering_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,302)..Location(1,309)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,310)..Location(1,315)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,319)..Location(1,329)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,330)..Location(1,338)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,341)..Location(1,346)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,350)..Location(1,354)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,359)..Location(1,360)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_engineering_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_engineering_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.engineering_function_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_engineering_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:38.055321Z", "completed_at": "2025-06-09T18:50:38.078906Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:38.099993Z", "completed_at": "2025-06-09T18:50:39.786087Z"}], "thread_id": "Thread-8", "execution_time": 1.8422369956970215, "adapter_response": {}, "message": "Database Error in model performance_indicators_finance_source (models/sources/gitlab_data_yaml/performance_indicators_finance_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,290)..Location(1,297)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,298)..Location(1,303)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,307)..Location(1,317)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,318)..Location(1,326)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,329)..Location(1,334)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,338)..Location(1,342)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,347)..Location(1,348)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_finance_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_finance_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.finance_team_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_finance_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:36.930795Z", "completed_at": "2025-06-09T18:50:36.936667Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:36.936983Z", "completed_at": "2025-06-09T18:50:39.745256Z"}], "thread_id": "Thread-32", "execution_time": 2.884773015975952, "adapter_response": {}, "message": "Database Error in model performance_indicators_customer_support_source (models/sources/gitlab_data_yaml/performance_indicators_customer_support_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,303)..Location(1,310)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,311)..Location(1,316)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,320)..Location(1,330)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,331)..Location(1,339)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,342)..Location(1,347)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,351)..Location(1,355)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,360)..Location(1,361)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_customer_support_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_customer_support_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.customer_support_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_customer_support_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:38.033744Z", "completed_at": "2025-06-09T18:50:38.054771Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:38.072044Z", "completed_at": "2025-06-09T18:50:39.803205Z"}], "thread_id": "Thread-18", "execution_time": 1.855592966079712, "adapter_response": {}, "message": "Database Error in model performance_indicators_enablement_section_source (models/sources/gitlab_data_yaml/performance_indicators_enablement_section_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,307)..Location(1,314)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,315)..Location(1,320)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,324)..Location(1,334)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,335)..Location(1,343)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,346)..Location(1,351)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,355)..Location(1,359)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,364)..Location(1,365)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_enablement_section_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_enablement_section_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.enablement_section_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_enablement_section_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:38.045593Z", "completed_at": "2025-06-09T18:50:38.071483Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:38.086011Z", "completed_at": "2025-06-09T18:50:39.801511Z"}], "thread_id": "Thread-9", "execution_time": 1.8625051975250244, "adapter_response": {}, "message": "Database Error in model performance_indicators_marketing_source (models/sources/gitlab_data_yaml/performance_indicators_marketing_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,289)..Location(1,296)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,297)..Location(1,302)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,306)..Location(1,316)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,317)..Location(1,325)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,328)..Location(1,333)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,337)..Location(1,341)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,346)..Location(1,347)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_marketing_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_marketing_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.marketing_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_marketing_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:38.050134Z", "completed_at": "2025-06-09T18:50:38.077574Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:38.093218Z", "completed_at": "2025-06-09T18:50:39.864824Z"}], "thread_id": "Thread-6", "execution_time": 1.8968329429626465, "adapter_response": {}, "message": "Database Error in model performance_indicators_ops_section_source (models/sources/gitlab_data_yaml/performance_indicators_ops_section_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,293)..Location(1,300)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,301)..Location(1,306)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,310)..Location(1,320)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,321)..Location(1,329)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,332)..Location(1,337)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,341)..Location(1,345)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,350)..Location(1,351)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_ops_section_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_ops_section_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.ops_section_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_ops_section_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.552342Z", "completed_at": "2025-06-09T18:50:35.583425Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.615333Z", "completed_at": "2025-06-09T18:50:39.827229Z"}], "thread_id": "Thread-14", "execution_time": 4.372292995452881, "adapter_response": {}, "message": "Database Error in model opportunity_forecasting_scores_source (models/sources/data_science/opportunity_forecasting_scores_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/data_science/opportunity_forecasting_scores_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.opportunity_forecasting_scores_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n        dim_crm_opportunity_id,\n        score_date,\n        forecasted_days_remaining,\n        forecasted_close_won_date,\n        forecasted_close_won_quarter,\n        score_group,\n        insights,\n        submodel,\n        model_version,\n        uploaded_at::TIMESTAMP as uploaded_at\n    FROM EMBUCKET.data_science.opportunity_forecasting_scores\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.data_science.opportunity_forecasting_scores_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.534319Z", "completed_at": "2025-06-09T18:50:35.571768Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.588472Z", "completed_at": "2025-06-09T18:50:39.834051Z"}], "thread_id": "Thread-24", "execution_time": 4.394668102264404, "adapter_response": {}, "message": "Database Error in model performance_indicators_corporate_finance_source (models/sources/gitlab_data_yaml/performance_indicators_corporate_finance_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,305)..Location(1,312)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,313)..Location(1,318)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,322)..Location(1,332)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,333)..Location(1,341)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,344)..Location(1,349)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,353)..Location(1,357)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,362)..Location(1,363)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_corporate_finance_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_corporate_finance_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.corporate_finance_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_corporate_finance_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:37.193223Z", "completed_at": "2025-06-09T18:50:37.201363Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:37.208203Z", "completed_at": "2025-06-09T18:50:39.774100Z"}], "thread_id": "Thread-17", "execution_time": 2.6666717529296875, "adapter_response": {}, "message": "Database Error in model performance_indicators_dev_section_source (models/sources/gitlab_data_yaml/performance_indicators_dev_section_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,293)..Location(1,300)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,301)..Location(1,306)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,310)..Location(1,320)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,321)..Location(1,329)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,332)..Location(1,337)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,341)..Location(1,345)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,350)..Location(1,351)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_dev_section_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_dev_section_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.dev_section_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_dev_section_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:38.028353Z", "completed_at": "2025-06-09T18:50:38.044328Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:38.066982Z", "completed_at": "2025-06-09T18:50:39.838448Z"}], "thread_id": "Thread-29", "execution_time": 1.899115800857544, "adapter_response": {}, "message": "Database Error in model performance_indicators_infrastructure_department_source (models/sources/gitlab_data_yaml/performance_indicators_infrastructure_department_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,321)..Location(1,328)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,329)..Location(1,334)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,338)..Location(1,348)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,349)..Location(1,357)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,360)..Location(1,365)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,369)..Location(1,373)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,378)..Location(1,379)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_infrastructure_department_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_infrastructure_department_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.infrastructure_department_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_infrastructure_department_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:39.505214Z", "completed_at": "2025-06-09T18:50:39.510516Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:39.510874Z", "completed_at": "2025-06-09T18:50:39.894443Z"}], "thread_id": "Thread-4", "execution_time": 0.4242739677429199, "adapter_response": {}, "message": "Database Error in model performance_indicators_people_success_source (models/sources/gitlab_data_yaml/performance_indicators_people_success_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,299)..Location(1,306)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,307)..Location(1,312)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,316)..Location(1,326)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,327)..Location(1,335)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,338)..Location(1,343)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,347)..Location(1,351)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,356)..Location(1,357)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_people_success_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_people_success_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.people_success_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_people_success_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:37.201837Z", "completed_at": "2025-06-09T18:50:37.224178Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:37.225152Z", "completed_at": "2025-06-09T18:50:39.878657Z"}], "thread_id": "Thread-26", "execution_time": 2.727123737335205, "adapter_response": {}, "message": "Database Error in model performance_indicators_development_department_source (models/sources/gitlab_data_yaml/performance_indicators_development_department_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,315)..Location(1,322)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,323)..Location(1,328)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,332)..Location(1,342)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,343)..Location(1,351)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,354)..Location(1,359)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,363)..Location(1,367)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,372)..Location(1,373)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_development_department_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_development_department_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.development_department_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_development_department_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:36.634516Z", "completed_at": "2025-06-09T18:50:36.647540Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:36.647871Z", "completed_at": "2025-06-09T18:50:39.887871Z"}], "thread_id": "Thread-25", "execution_time": 3.2952919006347656, "adapter_response": {}, "message": "Database Error in model performance_indicators_cost_source (models/sources/gitlab_data_yaml/performance_indicators_cost_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,294)..Location(1,301)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,302)..Location(1,307)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,311)..Location(1,321)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,322)..Location(1,330)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,333)..Location(1,338)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,342)..Location(1,346)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,351)..Location(1,352)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_cost_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_cost_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.chief_of_staff_team_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_cost_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.100810Z", "completed_at": "2025-06-09T18:50:35.172653Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.238282Z", "completed_at": "2025-06-09T18:50:40.808722Z"}], "thread_id": "Thread-28", "execution_time": 5.776471138000488, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_currencies_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.currencies\n\n), renamed AS (\n\n    SELECT\n      --Primary Key\n      currency_id::FLOAT             AS currency_id,\n\n      --Info\n      name::VARCHAR                  AS currency_name,\n      precision_0::FLOAT             AS decimal_precision,\n      symbol::VARCHAR                AS currency_symbol,\n\n      --Meta\n      true::BOOLEAN           AS is_currency_inactive,\n      true::BOOLEAN     AS is_fivetran_deleted\n\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_currencies_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.049637Z", "completed_at": "2025-06-09T18:50:35.162286Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.204007Z", "completed_at": "2025-06-09T18:50:40.838069Z"}], "thread_id": "Thread-12", "execution_time": 5.809655666351318, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_subsidiaries_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.subsidiaries\n\n), renamed AS (\n\n    SELECT\n      --Primary Key\n      subsidiary_id::FLOAT               AS subsidiary_id,\n\n      --Info\n      full_name::VARCHAR                 AS subsidiary_full_name,\n      name::VARCHAR                      AS subsidiary_name,\n      base_currency_id::FLOAT            AS base_currency_id,\n      fiscal_calendar_id::FLOAT          AS fiscal_calendar_id,\n      parent_id::FLOAT                   AS parent_id,\n\n      --Meta\n      true::BOOLEAN                AS is_subsidiary_inactive,\n      true::BOOLEAN            AS is_elimination_subsidiary\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_subsidiaries_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.082265Z", "completed_at": "2025-06-09T18:50:35.170805Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.223122Z", "completed_at": "2025-06-09T18:50:40.840237Z"}], "thread_id": "Thread-2", "execution_time": 5.808915853500366, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_consolidated_exchange_rates_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.consolidated_exchange_rates\n\n), renamed AS (\n\n    SELECT\n      --Primary Key\n      consolidated_exchange_rate_id::FLOAT   AS consolidated_exchange_rate_id,\n\n      --Foreign Keys\n      accounting_period_id::FLOAT            AS accounting_period_id,\n      from_subsidiary_id::FLOAT              AS from_subsidiary_id,\n      to_subsidiary_id::FLOAT                AS to_subsidiary_id,\n\n      --Info\n      accounting_book_id::FLOAT              AS accounting_book_id,\n      average_budget_rate::FLOAT             AS average_budget_rate,\n      current_budget_rate::FLOAT             AS current_budget_rate,\n      average_rate::FLOAT                    AS average_rate,\n      current_rate::FLOAT                    AS current_rate,\n      historical_budget_rate::FLOAT          AS historical_budget_rate,\n      historical_rate::FLOAT                 AS historical_rate,\n      _fivetran_deleted::BOOLEAN             AS is_fivetran_deleted\n\n\n    FROM source\n\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_consolidated_exchange_rates_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:39.762980Z", "completed_at": "2025-06-09T18:50:39.825808Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:39.888635Z", "completed_at": "2025-06-09T18:50:40.848815Z"}], "thread_id": "Thread-15", "execution_time": 1.1457929611206055, "adapter_response": {}, "message": "Database Error in model performance_indicators_product_source (models/sources/gitlab_data_yaml/performance_indicators_product_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,285)..Location(1,292)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,293)..Location(1,298)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,302)..Location(1,312)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,313)..Location(1,321)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,324)..Location(1,329)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,333)..Location(1,337)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,342)..Location(1,343)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_product_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_product_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.product_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_product_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.061808Z", "completed_at": "2025-06-09T18:50:35.170374Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.217828Z", "completed_at": "2025-06-09T18:50:40.839404Z"}], "thread_id": "Thread-21", "execution_time": 5.808835029602051, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_classes_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.classes\n\n), renamed AS (\n\n    SELECT\n      --Primary Key\n      class_id::FLOAT              AS class_id,\n\n      --Info\n      name::VARCHAR                AS class_name,\n      full_name::VARCHAR           AS class_full_name,\n      true::BOOLEAN          AS is_inactive,\n      true::BOOLEAN   AS is_fivetran_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_classes_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:39.957528Z", "completed_at": "2025-06-09T18:50:39.999355Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.021485Z", "completed_at": "2025-06-09T18:50:40.945181Z"}], "thread_id": "Thread-27", "execution_time": 1.0534939765930176, "adapter_response": {}, "message": "Database Error in model performance_indicators_quality_department_source (models/sources/gitlab_data_yaml/performance_indicators_quality_department_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,307)..Location(1,314)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,315)..Location(1,320)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,324)..Location(1,334)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,335)..Location(1,343)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,346)..Location(1,351)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,355)..Location(1,359)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,364)..Location(1,365)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_quality_department_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_quality_department_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.quality_department_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_quality_department_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.016379Z", "completed_at": "2025-06-09T18:50:40.056862Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.105925Z", "completed_at": "2025-06-09T18:50:41.019294Z"}], "thread_id": "Thread-3", "execution_time": 1.0751287937164307, "adapter_response": {}, "message": "Database Error in model performance_indicators_ux_department_source (models/sources/gitlab_data_yaml/performance_indicators_ux_department_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,297)..Location(1,304)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,305)..Location(1,310)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,314)..Location(1,324)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,325)..Location(1,333)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,336)..Location(1,341)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,345)..Location(1,349)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,354)..Location(1,355)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_ux_department_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_ux_department_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.ux_department_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_ux_department_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:39.991035Z", "completed_at": "2025-06-09T18:50:40.016102Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.046978Z", "completed_at": "2025-06-09T18:50:41.018345Z"}], "thread_id": "Thread-13", "execution_time": 1.1192450523376465, "adapter_response": {}, "message": "Database Error in model performance_indicators_recruiting_source (models/sources/gitlab_data_yaml/performance_indicators_recruiting_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,291)..Location(1,298)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,299)..Location(1,304)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,308)..Location(1,318)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,319)..Location(1,327)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,330)..Location(1,335)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,339)..Location(1,343)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,348)..Location(1,349)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_recruiting_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_recruiting_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.recruiting_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_recruiting_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.006344Z", "completed_at": "2025-06-09T18:50:40.039130Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.070765Z", "completed_at": "2025-06-09T18:50:41.021063Z"}], "thread_id": "Thread-9", "execution_time": 1.050513744354248, "adapter_response": {}, "message": "Database Error in model qualtrics_distribution (models/sources/qualtrics/qualtrics_distribution.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,216)..Location(1,223)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,224)..Location(1,229)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,233)..Location(1,243)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,244)..Location(1,252)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,255)..Location(1,260)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,264)..Location(1,268)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,273)..Location(1,274)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/qualtrics/qualtrics_distribution.sql", "failures": null, "unique_id": "model.gitlab_snowflake.qualtrics_distribution", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.qualtrics.distribution\n\n), intermediate AS (\n\n    SELECT \n      d.value AS data_by_row,\n      uploaded_at\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), outer => true) d\n\n), parsed AS (\n\n    SELECT \n      data_by_row['recipients']['mailingListId']::VARCHAR   AS mailing_list_id,\n      data_by_row['id']::VARCHAR                            AS distribution_id,\n      data_by_row['surveyLink']['surveyId']::VARCHAR        AS survey_id,\n      data_by_row['sendDate']::TIMESTAMP                    AS mailing_sent_at,\n      data_by_row['stats']['blocked']::NUMBER              AS email_blocked_count,\n      data_by_row['stats']['bounced']::NUMBER              AS email_bounced_count,\n      data_by_row['stats']['complaints']::NUMBER           AS complaint_count,\n      data_by_row['stats']['failed']::NUMBER               AS email_failed_count,\n      data_by_row['stats']['finished']::NUMBER             AS survey_finished_count,\n      data_by_row['stats']['opened']::NUMBER               AS email_opened_count,\n      data_by_row['stats']['sent']::NUMBER                 AS email_sent_count,\n      data_by_row['stats']['skipped']::NUMBER              AS email_skipped_count,\n      data_by_row['stats']['started']::NUMBER              AS survey_started_count,\n      uploaded_at::TIMESTAMP                                AS uploaded_at\n    FROM intermediate\n\n)\n\nSELECT * \nFROM parsed", "relation_name": "EMBUCKET.qualtrics.qualtrics_distribution", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:39.986368Z", "completed_at": "2025-06-09T18:50:40.015836Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.041503Z", "completed_at": "2025-06-09T18:50:41.037158Z"}], "thread_id": "Thread-10", "execution_time": 1.1260159015655518, "adapter_response": {}, "message": "Database Error in model performance_indicators_security_department_source (models/sources/gitlab_data_yaml/performance_indicators_security_department_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,309)..Location(1,316)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,317)..Location(1,322)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,326)..Location(1,336)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,337)..Location(1,345)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,348)..Location(1,353)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,357)..Location(1,361)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,366)..Location(1,367)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_security_department_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_security_department_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.security_department_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_security_department_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.116172Z", "completed_at": "2025-06-09T18:50:40.846383Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.934118Z", "completed_at": "2025-06-09T18:50:41.073111Z"}], "thread_id": "Thread-4", "execution_time": 1.0396687984466553, "adapter_response": {}, "message": "Database Error in model releases_source (models/sources/gitlab_data_yaml/releases_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,360)..Location(1,367)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,368)..Location(1,373)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,377)..Location(1,387)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,388)..Location(1,396)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,399)..Location(1,404)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,408)..Location(1,412)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,417)..Location(1,418)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/releases_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.releases_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *,\n      RANK() OVER (PARTITION BY DATE_TRUNC('day', uploaded_at) ORDER BY uploaded_at DESC) AS rank\n    FROM EMBUCKET.gitlab_data_yaml.releases\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date,\n      rank\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), intermediate_stage AS (\n\n    SELECT\n      data_by_row['version']::VARCHAR                           AS major_minor_version,\n      SPLIT_PART(major_minor_version, '.', 1)                   AS major_version,\n      SPLIT_PART(major_minor_version, '.', 2)                   AS minor_version,\n      TRY_TO_DATE(data_by_row['date']::VARCHAR)                 AS release_date,\n      data_by_row['manager_americas'][0]::VARCHAR               AS release_manager_americas,\n      data_by_row['manager_apac_emea'][0]::VARCHAR              AS release_manager_emea,\n      rank,\n      snapshot_date\n    FROM intermediate\n      \n)\n\nSELECT *\nFROM intermediate_stage", "relation_name": "EMBUCKET.gitlab_data_yaml.releases_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.151921Z", "completed_at": "2025-06-09T18:50:35.202240Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.284495Z", "completed_at": "2025-06-09T18:50:41.098659Z"}], "thread_id": "Thread-7", "execution_time": 6.0627219676971436, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_entity_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.entity\n\n), renamed AS (\n\n    SELECT\n      --Primary Key\n      entity_id::FLOAT             AS entity_id,\n\n      --Info\n      name::VARCHAR                AS entity_name,\n      full_name::VARCHAR           AS entity_full_name,\n      _fivetran_deleted::BOOLEAN   As is_fivetran_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_entity_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.102512Z", "completed_at": "2025-06-09T18:50:40.835831Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.890778Z", "completed_at": "2025-06-09T18:50:41.104577Z"}], "thread_id": "Thread-6", "execution_time": 1.077631950378418, "adapter_response": {}, "message": "Database Error in model qualtrics_mailing_contacts (models/sources/qualtrics/qualtrics_mailing_contacts.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,215)..Location(1,222)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,223)..Location(1,228)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,232)..Location(1,242)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,243)..Location(1,251)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,254)..Location(1,259)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,263)..Location(1,267)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,272)..Location(1,273)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/qualtrics/qualtrics_mailing_contacts.sql", "failures": null, "unique_id": "model.gitlab_snowflake.qualtrics_mailing_contacts", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.qualtrics.contact\n\n), intermediate AS (\n\n    SELECT d.value as data_by_row, uploaded_at\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), outer => true) d\n\n), parsed AS (\n\n    SELECT \n      data_by_row['contactId']::VARCHAR     AS contact_id,\n      data_by_row['email']::VARCHAR         AS contact_email,\n      data_by_row['phone']::VARCHAR         AS contact_phone,\n      data_by_row['firstName']::VARCHAR     AS contact_first_name,\n      data_by_row['lastName']::VARCHAR      AS contact_last_name,\n      data_by_row['mailingListId']::VARCHAR AS mailing_list_id,\n      data_by_row['unsubscribed']::BOOLEAN  AS is_unsubscribed,\n      uploaded_at::TIMESTAMP                AS mailing_list_membership_observed_at\n    FROM intermediate\n\n)\nSELECT * \nFROM parsed", "relation_name": "EMBUCKET.sensitive.qualtrics_mailing_contacts", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.880560Z", "completed_at": "2025-06-09T18:50:40.930682Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.946364Z", "completed_at": "2025-06-09T18:50:41.116504Z"}], "thread_id": "Thread-26", "execution_time": 1.0103158950805664, "adapter_response": {}, "message": "Database Error in model roles_yaml_source (models/sources/gitlab_data_yaml/roles_yaml_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,359)..Location(1,366)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,367)..Location(1,372)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,376)..Location(1,386)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,387)..Location(1,395)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,398)..Location(1,403)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,407)..Location(1,411)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,416)..Location(1,417)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/roles_yaml_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.roles_yaml_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *,\n      RANK() OVER (PARTITION BY DATE_TRUNC('day', uploaded_at) ORDER BY uploaded_at DESC) AS rank\n    FROM EMBUCKET.gitlab_data_yaml.roles\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date,\n      rank\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), intermediate_role_information AS (\n\n    SELECT\n      snapshot_date,\n      data_by_row['title']::VARCHAR           AS title,\n      data_by_row['levels']::VARCHAR          AS role_levels,\n      data_by_row['open']::VARCHAR            AS is_open,\n      data_by_row['salary']::VARCHAR          AS previous_salary_value,\n      data_by_row['ic_ttc']                   AS ic_values,\n      data_by_row['manager_ttc']              AS manager_values,\n      data_by_row['director_ttc']             AS director_values,\n      data_by_row['senior_director_ttc']      AS senior_director_values,\n      rank\n    FROM intermediate\n\n), renamed AS (\n\n    SELECT\n      snapshot_date,\n      title,\n      role_levels,\n      TRY_TO_BOOLEAN(is_open)                                                             AS is_open,\n      TRY_TO_NUMERIC(previous_salary_value)                                               AS previous_salary_value,\n      TRY_TO_NUMERIC(ic_values['compensation']::VARCHAR)                                  AS individual_contributor_compensation,\n      TRY_TO_NUMERIC(ic_values['percentage_variable']::VARCHAR,5,2)                       AS individual_contributor_percentage_variable,\n      TRY_TO_BOOLEAN(ic_values['from_base']::VARCHAR)                                     AS individual_contributor_from_base,\n      TRY_TO_NUMERIC(manager_values['compensation']::VARCHAR)                             AS manager_compensation,\n      TRY_TO_NUMERIC(manager_values['percentage_variable']::VARCHAR)                      AS manager_percentage_variable,\n      TRY_TO_BOOLEAN(manager_values['from_base']::VARCHAR)                                AS manager_from_base,\n      TRY_TO_NUMERIC(director_values['compensation']::VARCHAR)                            AS director_compensation,\n      TRY_TO_NUMERIC(director_values['percentage_variable']::VARCHAR,5,2)                 AS director_percentage_variable,\n      TRY_TO_BOOLEAN(director_values['from_base']::VARCHAR)                               AS director_from_base,\n      TRY_TO_NUMERIC(senior_director_values['compensation']::VARCHAR)                     AS senior_director_compensation,\n      TRY_TO_NUMERIC(senior_director_values['percentage_variable']::VARCHAR,5,2)          AS senior_director_percentage_variable,\n      TRY_TO_BOOLEAN(senior_director_values['from_base']::VARCHAR)                        AS senior_director_from_base,\n      rank\n    FROM intermediate_role_information\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_data_yaml.roles_yaml_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.090467Z", "completed_at": "2025-06-09T18:50:40.828394Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.870933Z", "completed_at": "2025-06-09T18:50:41.241590Z"}], "thread_id": "Thread-8", "execution_time": 1.229975938796997, "adapter_response": {}, "message": "Database Error in model prep_namespace_hist (models/common_prep/prep_namespace_hist.sql)\n  000200: DataFusion error: Schema error: No field named \"DBT_VALID_FROM\". Valid fields are snapshots.id, snapshots.name, snapshots.path, snapshots.owner_id, snapshots.created_at, snapshots.updated_at, snapshots.type, snapshots.avatar, snapshots.membership_lock, snapshots.share_with_group_lock, snapshots.visibility_level, snapshots.request_access_enabled, snapshots.ldap_sync_status, snapshots.ldap_sync_error, snapshots.ldap_sync_last_update_at, snapshots.ldap_sync_last_successful_update_at, snapshots.ldap_sync_last_sync_at, snapshots.lfs_enabled, snapshots.parent_id, snapshots.shared_runners_minutes_limit, snapshots.repository_size_limit, snapshots.require_two_factor_authentication, snapshots.two_factor_grace_period, snapshots.plan_id, snapshots.project_creation_level, snapshots.auto_devops_enabled, snapshots._uploaded_at, snapshots.namespaces_rank_in_key, snapshots.dbt_scd_id, snapshots.dbt_updated_at, snapshots.dbt_valid_from, snapshots.dbt_valid_to, snapshots.extra_shared_runners_minutes_limit, snapshots.push_rule_id, snapshots.shared_runners_enabled, snapshots.custom_project_templates_group_id, snapshots.traversal_ids, snapshots.pgp_is_deleted, snapshots.pgp_is_deleted_updated_at.\n  compiled code at target/run/gitlab_snowflake/models/common_prep/prep_namespace_hist.sql", "failures": null, "unique_id": "model.gitlab_snowflake.prep_namespace_hist", "compiled": true, "compiled_code": "WITH snapshots AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.gitlab_dotcom_namespaces_snapshots\n    \n), renamed as (\n\n    SELECT\n      dbt_scd_id::VARCHAR                               AS namespace_snapshot_id,\n      id::NUMBER                                        AS dim_namespace_id,\n      name::VARCHAR                                     AS namespace_name,\n      path::VARCHAR                                     AS namespace_path,\n      owner_id::NUMBER                                  AS owner_id,\n      IFNULL(type, 'User')::VARCHAR                     AS namespace_type,\n      IFF(avatar IS NULL, FALSE, TRUE)                  AS has_avatar,\n      created_at::TIMESTAMP                             AS namespace_created_at,\n      updated_at::TIMESTAMP                             AS namespace_updated_at,\n      membership_lock::BOOLEAN                          AS is_membership_locked,\n      request_access_enabled::BOOLEAN                   AS has_request_access_enabled,\n      share_with_group_lock::BOOLEAN                    AS has_share_with_group_locked,\n      CASE\n        WHEN visibility_level = '20' THEN 'public'\n        WHEN visibility_level = '10' THEN 'internal'\n        ELSE 'private'\n      END                                               AS visibility_level,\n      ldap_sync_status,\n      ldap_sync_error,\n      ldap_sync_last_update_at::TIMESTAMP               AS ldap_sync_last_update_at,\n      ldap_sync_last_successful_update_at::TIMESTAMP    AS ldap_sync_last_successful_update_at,\n      ldap_sync_last_sync_at::TIMESTAMP                 AS ldap_sync_last_sync_at,\n      lfs_enabled::BOOLEAN                              AS lfs_enabled,\n      parent_id::NUMBER                                 AS parent_id,\n      shared_runners_enabled::BOOLEAN                   AS shared_runners_enabled,\n      shared_runners_minutes_limit::NUMBER              AS shared_runners_minutes_limit,\n      extra_shared_runners_minutes_limit::NUMBER        AS extra_shared_runners_minutes_limit,\n      repository_size_limit::NUMBER                     AS repository_size_limit,\n      require_two_factor_authentication::BOOLEAN        AS does_require_two_factor_authentication,\n      two_factor_grace_period::NUMBER                   AS two_factor_grace_period,\n      project_creation_level::NUMBER                    AS project_creation_level,\n      push_rule_id::NUMBER                              AS push_rule_id,\n      \"DBT_VALID_FROM\"::TIMESTAMP                       AS valid_from,\n      \"DBT_VALID_TO\"::TIMESTAMP                         AS valid_to\n    FROM snapshots\n    \n)\n\nSELECT\n      *,\n      '@ischweickartDD'::VARCHAR       AS created_by,\n      '@pempey'::VARCHAR       AS updated_by,\n      '2021-06-15'::DATE        AS model_created_date,\n      '2021-11-10'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM renamed", "relation_name": "EMBUCKET.common_prep.prep_namespace_hist", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:39.969839Z", "completed_at": "2025-06-09T18:50:40.011091Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.033464Z", "completed_at": "2025-06-09T18:50:41.018720Z"}], "thread_id": "Thread-31", "execution_time": 1.1321477890014648, "adapter_response": {}, "message": "Database Error in model performance_indicators_sales_source (models/sources/gitlab_data_yaml/performance_indicators_sales_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,281)..Location(1,288)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,289)..Location(1,294)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,298)..Location(1,308)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,309)..Location(1,317)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,320)..Location(1,325)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,329)..Location(1,333)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,338)..Location(1,339)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/performance_indicators_sales_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_sales_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.sales_pi\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['name']::VARCHAR                         AS pi_name,\n      data_by_row['org']::VARCHAR                          AS org_name,\n      data_by_row['definition']::VARCHAR                   AS pi_definition,\n      data_by_row['is_key']::BOOLEAN                       AS is_key,\n      data_by_row['is_primary']::BOOLEAN                   AS is_primary,\n      data_by_row['public']::BOOLEAN                       AS is_public,\n      data_by_row['sisense_data'] IS NOT NULL              AS is_embedded,\n      data_by_row['target']::VARCHAR                       AS pi_target,\n      data_by_row['target_name']::VARCHAR                  AS pi_metric_target_name,\n      data_by_row['monthly_recorded_targets']::VARCHAR     AS pi_monthly_recorded_targets,\n      data_by_row['monthly_estimated_targets']::VARCHAR    AS pi_monthly_estimated_targets,\n      data_by_row['metric_name']::VARCHAR                  AS pi_metric_name,\n      data_by_row['telemetry_type']::VARCHAR               AS telemetry_type,\n      data_by_row['urls']::VARCHAR                         AS pi_url,\n      data_by_row['sisense_data'].chart::VARCHAR           AS sisense_chart_id,\n      data_by_row['sisense_data'].dashboard::VARCHAR       AS sisense_dashboard_id,\n      snapshot_date\n    FROM intermediate\n\n), intermediate_stage AS (\n\n    SELECT \n      md5(cast(coalesce(cast(pi_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(org_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_definition as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_public as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(is_embedded as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_target as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_metric_target_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_recorded_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_monthly_estimated_targets as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(pi_url as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS unique_key,\n      renamed.*\n    FROM renamed\n\n), final AS (\n\n    SELECT *,\n      FIRST_VALUE(snapshot_date) OVER (PARTITION BY pi_name ORDER BY snapshot_date) AS date_first_added, \n      MIN(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date)      AS valid_from_date,\n      MAX(snapshot_date) OVER (PARTITION BY unique_key ORDER BY snapshot_date DESC) AS valid_to_date\n    FROM intermediate_stage\n\n)\n\nSELECT *\nFROM final\n\n\n", "relation_name": "EMBUCKET.gitlab_data_yaml.performance_indicators_sales_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.814658Z", "completed_at": "2025-06-09T18:50:40.863476Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.909321Z", "completed_at": "2025-06-09T18:50:41.254808Z"}], "thread_id": "Thread-24", "execution_time": 1.2367830276489258, "adapter_response": {}, "message": "Database Error in model qualtrics_survey (models/sources/qualtrics/qualtrics_survey.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,225)..Location(1,232)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,233)..Location(1,238)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,242)..Location(1,252)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,253)..Location(1,261)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,264)..Location(1,269)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,273)..Location(1,277)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,282)..Location(1,283)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/qualtrics/qualtrics_survey.sql", "failures": null, "unique_id": "model.gitlab_snowflake.qualtrics_survey", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.qualtrics.survey\n    ORDER BY uploaded_at DESC\n    LIMIT 1\n\n), intermediate AS (\n\n    SELECT d.value as data_by_row\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), outer => true) d\n\n), parsed AS (\n\n    SELECT \n      data_by_row['id']::VARCHAR    AS survey_id,\n      data_by_row['name']::VARCHAR  AS survey_name\n    FROM intermediate\n    WHERE data_by_row IS NOT NULL\n\n)\nSELECT *\nFROM parsed", "relation_name": "EMBUCKET.qualtrics.qualtrics_survey", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:34.297460Z", "completed_at": "2025-06-09T18:50:34.391239Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:34.449260Z", "completed_at": "2025-06-09T18:50:41.261782Z"}], "thread_id": "Thread-20", "execution_time": 7.049195051193237, "adapter_response": {}, "message": "Database Error in model marketo_lead_source (models/sources/marketo/marketo_lead_source.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha256'?\n  compiled code at target/run/gitlab_snowflake/models/sources/marketo/marketo_lead_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.marketo_lead_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.lead\n\n), renamed AS (\n\n    SELECT\n        --Primary Key\n        id::FLOAT                                 AS marketo_lead_id,\n        --Info\n        email::VARCHAR                            AS email,\n        \n\n    sha2(\n        TRIM(\n            LOWER(\n                email || \n                ENCRYPT_RAW(\n                  to_binary('SALT_EMAIL', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS email_hash,\n\n\n        sfdc_lead_id::VARCHAR                     AS sfdc_lead_id,\n        sfdc_contact_id::VARCHAR                  AS sfdc_contact_id,\n        first_name::VARCHAR                       AS first_name,\n        last_name::VARCHAR                        AS last_name,\n        company::VARCHAR                          AS company_name,\n        title::VARCHAR                            AS job_title,\n        CASE\n    WHEN LOWER(INSERT(INSERT(job_title, 1, 0, ''), LEN(job_title)+2, 0, '')) LIKE ANY (\n      '%head% it%', '%vp%technology%','%director%technology%', '%director%engineer%',\n      '%chief%information%', '%chief%technology%', '%president%technology%', '%vp%technology%',\n      '%director%development%', '% it%director%', '%director%information%', '%director% it%',\n      '%chief%engineer%', '%director%quality%', '%vp%engineer%', '%head%information%',\n      '%vp%information%', '%president%information%', '%president%engineer%',\n      '%president%development%', '%director% it%', '%engineer%director%', '%head%engineer%',\n      '%engineer%head%', '%chief%software%', '%director%procurement%', '%procurement%director%',\n      '%head%procurement%', '%procurement%head%', '%chief%procurement%', '%vp%procurement%',\n      '%procurement%vp%', '%president%procurement%', '%procurement%president%', '%head%devops%'\n      )\n      OR ARRAY_CONTAINS('cio'::VARIANT, SPLIT(LOWER(job_title), ' '))\n      OR ARRAY_CONTAINS('cio'::VARIANT, SPLIT(LOWER(job_title), ','))\n      OR ARRAY_CONTAINS('cto'::VARIANT, SPLIT(LOWER(job_title), ' '))\n      OR ARRAY_CONTAINS('cto'::VARIANT, SPLIT(LOWER(job_title), ','))\n      OR ARRAY_CONTAINS('cfo'::VARIANT, SPLIT(LOWER(job_title), ' '))\n      OR ARRAY_CONTAINS('cfo'::VARIANT, SPLIT(LOWER(job_title), ','))\n        THEN 'IT Decision Maker'\n\n    WHEN LOWER(INSERT(INSERT(job_title, 1, 0, ''), LEN(job_title)+2, 0, '')) LIKE ANY (\n      '%manager%information%', '%manager%technology%', '%database%administrat%', '%manager%engineer%',\n      '%engineer%manager%', '%information%manager%', '%technology%manager%', '%manager%development%',\n      '%manager%quality%', '%manager%network%', '% it%manager%', '%manager% it%',\n      '%manager%systems%', '%manager%application%', '%technical%manager%', '%manager%technical%',\n      '%manager%infrastructure%', '%manager%implementation%', '%devops%manager%', '%manager%devops%',\n      '%manager%software%', '%procurement%manager%', '%manager%procurement%'\n      )\n      AND NOT ARRAY_CONTAINS('project'::VARIANT, SPLIT(LOWER(job_title), ' '))\n        THEN 'IT Manager'\n\n    WHEN LOWER(INSERT(INSERT(job_title, 1, 0, ''), LEN(job_title)+2, 0, '')) LIKE ANY (\n      '% it %', '% it,%', '%infrastructure%', '%engineer%',\n      '%techno%', '%information%', '%developer%', '%database%',\n      '%solutions architect%', '%system%', '%software%', '%technical lead%',\n      '%programmer%', '%network administrat%', '%application%', '%procurement%',\n      '%development%', '%tech%lead%'\n      )\n        THEN 'IT Individual Contributor'\n\n    ELSE NULL\n\n  END AS it_job_title_hierarchy,\n        country::VARCHAR                          AS country,\n        mobile_phone::VARCHAR                     AS mobile_phone,\n        sfdc_type::VARCHAR                        AS sfdc_type,\n        inactive_lead_c::BOOLEAN                  AS is_lead_inactive,\n        inactive_contact_c::BOOLEAN               AS is_contact_inactive,\n        sales_segmentation_c::VARCHAR             AS sales_segmentation,\n        is_email_bounced::BOOLEAN                 AS is_email_bounced,\n        email_bounced_date::DATE                  AS email_bounced_date,\n        unsubscribed::BOOLEAN                     AS is_unsubscribed,\n        opt_in::BOOLEAN                           AS is_opt_in,\n        compliance_segment_value::VARCHAR         AS compliance_segment_value,\n        pql_product_qualified_lead_c::BOOLEAN     AS is_pql_marketo,\n        cdbispaidtier_c::BOOLEAN                  AS is_paid_tier_marketo,\n        ptpt_is_contact_c::BOOLEAN                AS is_ptpt_contact_marketo,\n        ptp_is_ptp_contact_c::BOOLEAN             AS is_ptp_contact_marketo,\n        cdb_impacted_by_user_limit_c::BOOLEAN     AS is_impacted_by_user_limit_marketo,\n        currently_in_trial_c::BOOLEAN             AS is_currently_in_trial_marketo,\n        trial_start_date_c::DATE                  AS trial_start_date_marketo,\n        trial_end_date_c::DATE                    AS trial_end_date_marketo,\n        updated_at::TIMESTAMP                     AS updated_at,\n        _FIVETRAN_SYNCED,\n        PRIORITY,\n        URGENCY,\n        RELATIVE_SCORE,\n        RELATIVE_URGENCY,\n        LEAD_SCORE,\n        DEMOGRAPHIC_SCORE,\n        LEAD_SOURCE,\n        LEAD_STATUS,\n        ACQUISITION_PROGRAM_ID,\n        MKTO_ACQUISITION_DATE,\n        PATH_FACTORY_ASSETS_VIEWED_C,\n        PATH_FACTORY_CONTENT_COUNT_C,\n        PATH_FACTORY_CONTENT_JOURNEY_C,\n        PATH_FACTORY_ENGAGEMENT_SCORE_C,\n        PATH_FACTORY_ENGAGEMENT_TIME_C,\n        PATH_FACTORY_QUERY_STRING_C,\n        BEHAVIOR_SCORE,\n        GENERIC_EMAIL_DOMAIN,\n        OPT_IN_DATE,\n        RECORD_TYPE_ID_CONTACT,\n        OWNER_PROFILE_C_LEAD,\n        PHOTO_URL,\n        STATE_CODE,\n        MKTO_SI_SALES_INSIGHT_C,\n        DEMANDBASE_SID_C,\n        COUNTRY_CODE,\n        SUB_REGION_C_LEAD,\n        ACTIVE_USER_C,\n        MKTO_SI_ADD_TO_MARKETO_CAMPAIGN_C,\n        SALES_SEGMENTATION_C_LEAD,\n        MQL_COUNTER_C,\n        RAW_DATE_TIME_C,\n        REGION_SUB_REGION_C_LEAD,\n        CREATED_DATE_TIME_C,\n        ZI_COMPANY_OTHER_DOMAINS_C,\n        ATAM_SUB_REGION_C,\n        ATAM_TERRITORY_C,\n        TSP_UNIQUE_TERRITORY_NAME_C,\n        ATAM_AREA_C,\n        ATAM_REGION_C,\n        BIZIBLE_2_ENGAGEMENT_SCORE_C,\n        ATAM_APPROVED_NEXT_OWNER_C,\n        ATAM_NEXT_OWNER_ROLE_C,\n        ATAM_NEXT_OWNER_TEAM_C,\n        ATAM_OWNER_DIFFERENCE_C,\n        ATAM_OWNER_ROLE_ACRO_C,\n        TSP_MANAGER_DIFFERENCE_C,\n        MQL_DATE_C,\n        INITIAL_MQL_DATE_C,\n        INDUSTRY,\n        ACTIVELY_BEING_SEQUENCED_C,\n        NUMBER_OF_ACTIVE_SEQUENCES_C,\n        SEQUENCE_STATUS_C,\n        NURTURE_DATE_TIME_C,\n        NURTURE_REASONS_C,\n        OWNER_TEAM_C,\n        REGION_C,\n        BIZIBLE_2_LANDING_PAGE_FT_C,\n        BIZIBLE_2_LANDING_PAGE_LC_C,\n        BIZIBLE_2_MARKETING_CHANNEL_FT_C,\n        BIZIBLE_2_MARKETING_CHANNEL_LC_C,\n        BIZIBLE_2_TOUCHPOINT_DATE_FT_C,\n        BIZIBLE_2_TOUCHPOINT_DATE_LC_C,\n        BIZIBLE_2_TOUCHPOINT_SOURCE_FT_C,\n        BIZIBLE_2_TOUCHPOINT_SOURCE_LC_C,\n        LEAN_DATA_MATCHED_ACCOUNT_SALES_SEGMENT_C,\n        LEAN_DATA_MATCHED_ACCOUNT_C,\n        PATH_FACTORY_EXPERIENCE_NAME_C,\n        PREVIOUS_NURTURE_REASON_C,\n        PATH_FACTORY_ASSET_TYPE_C,\n        PATH_FACTORY_CONTENT_LIST_C,\n        PATH_FACTORY_FUNNEL_STATE_C,\n        PATH_FACTORY_TOPIC_LIST_C,\n        EMPLOYEE_BUCKETS_C,\n        PHONE,\n        WEBSITE,\n        NEWSLETTER_SEGMENT_C_LEAD,\n        SUBSCRIBE_WEBCAST_C,\n        SUBSCRIBE_LIVE_EVENTS_C,\n        GDPR_COMPLIANT_C,\n        BIZIBLE_2_AD_CAMPAIGN_NAME_FT_C,\n        BIZIBLE_2_AD_CAMPAIGN_NAME_LC_C,\n        SIGN_UP_DATE,\n        LEAN_DATA_TERRITORY_C,\n        TRIAL_GIT_LAB_COM_C,\n        OPT_OUT_DATE,\n        SEC_PROJECT_NAMES,\n        BIZIBLE_2_ACCOUNT_C,\n        EMAIL_SUSPENDED,\n        EMAIL_SUSPENDED_AT,\n        EMAIL_SUSPENDED_CAUSE,\n        LAST_UTM_CAMPAIGN_C,\n        LAST_UTM_CONTENT_C,\n        LAST_UTM_SOURCE_C,\n        LAST_UTM_MEDIUM_C,\n        PERSON_TIME_ZONE,\n        ALL_REMOTE_FUNCTION,\n        ALL_REMOTE_ROLE,\n        DB_COMPANY_ADDRESS_C,\n        DB_COMPANY_CITY_C,\n        DB_COMPANY_COUNTRY_C,\n        DB_COMPANY_NAME_C,\n        DB_COMPANY_PHONE_C,\n        DB_COMPANY_POSTAL_C,\n        DB_COMPANY_STATE_C,\n        DB_EMPLOYEE_COUNT_C,\n        DB_INDUSTRY_C,\n        DB_PRIMARY_SIC_C,\n        DB_SUB_INDUSTRY_C,\n        DB_WEBSITE_C,\n        REASONFOR_ALL_REMOTE,\n        GIT_LAB_COM_USER_C,\n        ACCEPTED_DATE_TIME_C,\n        NAME_OF_ACTIVE_SEQUENCE_C,\n        EE_TRIAL_START_C,\n        EE_TRIAL_START_DATE_C,\n        TRIAL_ENTERPRISE_C,\n        TRIAL_LICENSE_KEY,\n        EE_TRIAL_END_DATE_C,\n        PUBLIC_SECTOR_PARTNER_C,\n        INITIAL_START_DATE_C,\n        PARENT_ACCOUNT_SHIPPING_COUNTRY_C,\n        VARTOPIA_DRS_DOMAIN_C,\n        MAX_FOR_POTENTIAL_EE_USERS_C,\n        MQL_DATE_TIME_C,\n        ZENDESK_LAST_SYNC_DATE_C_LEAD,\n        ORIGINAL_SOURCE_TYPE,\n        ULTIMATE_PARENT_ACCOUNT_ZIP_DISC_ORG_F_3_C,\n        COUNT_OF_OPEN_RENEWAL_OPPORTUNITIES_C,\n        UNIQUE_WEB_VISITORS_ROLLING_30_C,\n        ZI_COMPANY_NAICS_CODE_C,\n        SALES_SEGMENTATION_UPDATED_C,\n        CURRENT_CUSTOMER_C,\n        NUMBER_OF_EMPLOYEES_DATA_FOX_C,\n        REGISTRATION_SOURCE_TYPE,\n        ZI_PRODUCTS_AND_SERVICES_C,\n        DB_AUDIENCE_C,\n        TZ_LT_INFO_C,\n        ZZZ_ULT_PARENT_EMPLOYES_NUM_C,\n        ULTIMATE_PARENT_SALES_SEGMENT_EMP_TEXT_C,\n        VAT_ID_C,\n        RECURLY_FIRST_NAME_C,\n        BILLING_STATE_CODE,\n        PARENT_ACCOUNT_SHIPPING_STATE_C,\n        BUSINESS_DEVELOPMENT_REP_CONTACT_C,\n        VARTOPIA_DRS_NUMBER_OF_EXPIRED_REGISTRATIONS_C_CONTACT,\n        GS_PLAN_ACTIVE_C,\n        ACCOUNT_PHONE_C,\n        PRODUCTS_PURCHASED_C,\n        VARTOPIA_DRS_CLOSED_WON_REGISTRATIONS_C_CONTACT,\n        PUB_SEC_OWNER_C_LEAD,\n        ZI_EMPLOYMENT_HISTORY_C,\n        MKTO_COMPANY_NOTES,\n        ENGAGIO_LEFT_COMPANY_C,\n        DFOX_LAST_SYNCED_DATE_C_ACCOUNT,\n        ENGAGIO_ENGAGEMENT_MINUTES_LAST_7_DAYS_C_ACCOUNT,\n        RING_LEAD_STREET_ADDRESS_C,\n        ZOOM_INFO_CONTACT_PROFILE_URL_C,\n        LEAN_DATA_MATCHED_ACCOUNT_INDUSTRY_C,\n        ADDRESS,\n        TEMP_DF_PARENT_ACCOUNT_C,\n        ENGAGIO_DEPARTMENT_C,\n        ROUND_ROBIN_ID_C,\n        LICENSE_UTILIZATION_C,\n        ACTIVE_USER_C_ACCOUNT,\n        ULTIMATE_PARENT_POTENTIAL_EEUSERS_C,\n        ABM_TIER_3_DATE_C,\n        DSCORGPKG_EMAIL_INVALID_C,\n        GACID,\n        ZI_CONTACT_ZIP_CODE_C,\n        RING_LEAD_CITY_C,\n        MIGRATION_SERVICES_REQUESTED,\n        LICENSE_USER_COUNT_C,\n        BDR_JOB_TITLE,\n        GIT_LABCOM_USER_ID_C,\n        DFOX_SOURCED_FROM_DATA_FOX_C_ACCOUNT,\n        INDUSTRY_C,\n        REGION_C_ACCOUNT,\n        ACCOUNT_MANAGER_C,\n        UPA_ACCOUNT_TERRITORY_ZIP_F_3_C,\n        TWITTER_HANDLE_C,\n        WEBCAST_SPEAKER_REFERENCE_C_ACCOUNT,\n        AD_IMPRESSIONS_ROLLING_90_C,\n        INFERRED_CITY,\n        ZENDESK_CREATED_UPDATED_FLAG_C,\n        ZENDESK_ZENDESK_ORGANIZATION_C,\n        CHANNEL_MANAGER_C,\n        TZ_TIMEZONE_C_ACCOUNT,\n        RECURLY_PAST_DUE_C,\n        ULTIMATE_PARENT_ACCOUNT_BILLING_STATE_C,\n        NEXT_FY_USER_SEGMENT_TEMP_C,\n        LEAN_DATA_MATCHED_ACCOUNT_NAME_C,\n        EMAIL_2_C,\n        ZENDESK_ZENDESK_ID_C,\n        SALUTATION,\n        COUNT_OF_COUNT_OF_CHILD_ACCOUNTS_C,\n        DOZISF_ZOOM_INFO_LAST_UPDATED_C_ACCOUNT,\n        ZI_CONTACT_STATE_C,\n        PATH_FACTORY_CONTENT_SLUG_C,\n        ULTIMATE_PARENT_ACCOUNT_ZIP_DATA_FOX_C,\n        LEAN_DATA_MATCHED_ACCOUNT_EMPLOYEES_C,\n        ZI_WEBSITE_C,\n        NAMED_ACCOUNT_C,\n        IMPLEMENTATION_SERVICE_REQUESTED,\n        ALYCECOM_MOST_RECENT_GIFT_INVITATION_SENT_DATE_C_ACCOUNT,\n        TEMP_DF_HIER_ULTIMATE_PARENT_BILLING_ZI_C,\n        ZI_NUMBER_OF_DEVELOPERS_C,\n        LEAN_DATA_MATCHED_ACCOUNT_BILLING_COUNTRY_C,\n        ABM_TIER_C,\n        RATINGSCALE,\n        BUSINESS_DEVELOPMENT_REP_C_ACCOUNT,\n        SPECIALIZED_TRAININGS_REQUESTED,\n        COMPANY_LOCAL,\n        MKTO_2_INFERRED_CITY_C,\n        NEXT_FY_PLANNING_NOTES_TEMP_C,\n        HOME_OFFICE_CITY,\n        SHIPPING_LATITUDE,\n        TZ_TIMEZONE_IANA_C,\n        DSCORGPKG_JOB_FUNCTION_C,\n        TZ_TIMEZONE_C,\n        EVENT_MEETING_TIME,\n        NUMBER_OF_LICENSES_C,\n        COMPANY_NATURAL_NAME_C,\n        ACCOUNT_ADDRESS_MANUAL_SOURCE_USER_C,\n        DOZISF_ZOOM_INFO_FIRST_UPDATED_C,\n        QUALIFYING_DATE_TIME_C,\n        MKTO_71_ORIGINAL_UTM_MEDIUM_C,\n        RECURLY_PLAN_NAME_C,\n        LAST_UTM_OFFERTYPE_C,\n        ULTIMATE_PARENT_ACCOUNT_COUNTRY_DATA_FOX_C,\n        RECURLY_ACCOUNT_CODE_C,\n        ACCOUNT_ID_18_C,\n        SFDC_LEAD_OWNER_ID,\n        ZI_MANAGEMENT_LEVEL_C,\n        ZI_COMPANY_EMPLOYEE_RANGE_C,\n        ZI_COMPANY_CITY_C,\n        GS_MONITORING_ACTIVE_C,\n        ENGAGIO_MATCHED_ACCOUNT_ENGAGE_MINS_LAST_7_DAYS_C,\n        BDR_LAST_NAME,\n        RECURLY_PLAN_CODE_C,\n        SDR_C,\n        MATCHED_ACCOUNT_GTM_STRATEGY_C,\n        CITY,\n        VARTOPIA_DRS_NUMBER_OF_CLOSED_WON_REGISTRATIONS_C_CONTACT,\n        NDE_NODE_GENERATED_CHECKBOX_C,\n        GIT_LAB_COM_USER_C_ACCOUNT,\n        B_TLKWEBCAST_CAMPAIGN_REFERENCE,\n        RING_LEAD_STATE_C,\n        LEAN_DATA_MATCHED_ACCOUNT_WEBSITE_C,\n        CORE_USER_C,\n        ROLE_C,\n        TZ_TIMEZONE_FULL_C,\n        SIG_REFERENCE_C_ACCOUNT,\n        SOLUTIONS_TO_BE_REPLACED_C,\n        RING_LEAD_COUNTRY_C,\n        INTENT_C,\n        DOZISF_ZOOM_INFO_ID_C,\n        ZI_COMPANY_ZIP_CODE_C,\n        CONTACT_COMPANY,\n        CORE_CHECK_IN_NOTES_FORMATTED_2_C,\n        ZENDESK_RESULT_C_LEAD,\n        RING_LEAD_PHONE_C,\n        UNQUALIFIED_DATE_TIME_C,\n        B_TLKRECORDED_MINUTES_VIEWED,\n        B_TLKWEBCAST_TITLE,\n        ENGAGIO_MATCHED_ACCOUNT_EMPLOYEES_C,\n        LOCALLY_MANAGED_C,\n        SDR_ASSIGNED_C,\n        TRENDING_OFFSITE_INTENT_C,\n        ANONYMOUS_IP,\n        VERIFY_ACTIVE_C,\n        ULTIMATE_PARENT_ACCOUNT_ZIP_DISC_ORG_C,\n        BDR_FIRST_NAME,\n        MARKETING_COMM_OPT_OUT_C_ACCOUNT,\n        CORE_CHECK_IN_NOTES_C,\n        WON_RENEWAL_OPP_THIS_MONTH_C,\n        COUNT_OF_CROSS_SELL_OPPS_C,\n        HEALTH_C,\n        BDR_EMAIL_ADDRESS,\n        ACCOUNT_C,\n        ZI_STREET_C,\n        ZENDESK_LAST_SYNC_DATE_C,\n        ULTIMATE_PARENT_ADDRESS_SOURCE_FORMULA_C,\n        IS_PARTNER,\n        ENTITY_BENEFICIARY_INFORMATION_C,\n        ZI_CONTACT_STREET_C,\n        TSP_LAST_CHANGE_DATE_C,\n        TECH_STACK_C,\n        INTERESTED_IN_GIT_LAB_EE_C,\n        ALLIANCES_DISCOUNT_C,\n        GS_LIFECYCLE_STAGE_C,\n        WORLD_TOUR_CITY,\n        ST_MONITOR_APPETITE_FOR_REPLACEMENT_C,\n        ULTIMATE_PARENT_OLD_C,\n        ULTIMATE_PARENT_ACCOUNT_SHIPPING_STATE_C,\n        DEPARTMENT,\n        PREVIOUS_UNQUALIFIED_REASON,\n        HOME_OFFICE_POSTAL_CODE,\n        FREE_COM_USER_C,\n        ENGAGIO_MATCHED_ACCOUNT_TYPE_C,\n        ZI_CITY_C,\n        TERMINUS_CLICKS_C_ACCOUNT,\n        LOGO_REFERENCE_C_ACCOUNT,\n        OSS_REASON_FOR_APPLICATION_C,\n        PATH_FACTORY_CONTENT_LANGUAGE_C,\n        HOW_ARE_YOU_USING_GIT_LAB_C,\n        DATA_FOX_PARENT_ACCOUNT_WORK_TEMP_C,\n        ENGAGIO_STATUS_C,\n        TEMP_DF_HIER_ULTIMATE_PARENT_NAMED_C,\n        ENGAGIO_ROLE_C,\n        TEMP_ULTIMATE_PARENT_ID_MATCH_C,\n        IACV_THIS_ACCOUNT_Q_4_2018_C,\n        SDR_ASSIGNED_ROLE_C,\n        SUPPORT_LEVEL_NUMERIC_C,\n        IS_LEAD,\n        SURGE_HEAT_C,\n        CUSTOMER_C,\n        ZI_COMPANY_COUNTRY_C,\n        VARTOPIA_DRS_TOTAL_NUMBER_OF_REGISTRATIONS_C_CONTACT,\n        STATE,\n        LEAN_DATA_MATCHED_ACCOUNT_TYPE_C,\n        ENGAGIO_NUMBER_OF_PEOPLE_C,\n        PLAN_ACTIVE_C,\n        ENGAGIO_PIPELINE_PREDICT_SCORE_C,\n        ZI_ULTIMATE_PARENT_COMPANY_ZOOMINFO_ID_C,\n        B_TLKTOTAL_MINUTES_VIEWED,\n        WEBCAST_ACTIVITY_ACTIVITY_TYPE,\n        VARTOPIA_DRS_NUMBER_OF_APPROVED_REGISTRATIONS_C_CONTACT,\n        ALERTS_C,\n        ZI_ACCOUNT_NAME_C,\n        PARTNERS_IS_ACTIVE_C,\n        ZENDESK_RESULT_C,\n        VARTOPIA_DRS_CLOSED_LOST_REGISTRATIONS_C_CONTACT,\n        SECURE_ACTIVE_C,\n        MARKETING_SUSPENDED,\n        COOKIES,\n        DIETARY_RESTRICTION_C,\n        TZ_TIMEZONE_FULL_C_ACCOUNT,\n        ZI_NAICS_CODE_C,\n        ACCOUNT_TERRITORY_C,\n        ENGAGIO_QUALIFICATION_SCORE_C,\n        NDE_NODE_CONTEXT_FORMULA_C_ACCOUNT,\n        COMPANY_SEARCH_QUERY_C,\n        SALES_REFERENCE_C_ACCOUNT,\n        COUNT_OF_OPPORTUNITIES_C,\n        ZI_TOTAL_FUNDING_C,\n        SUB_INDUSTRY_C_ACCOUNT,\n        IS_A_CONTRACTED_PARTNER_C,\n        PUB_SEC_OWNER_C,\n        ORIGINAL_SOURCE_INFO,\n        M_QLDATE_2,\n        INFER_INFER_SCORE_C,\n        TEMP_DF_HIER_ULTIMATE_PAR_BILL_COUNTRY_C,\n        ZI_COMPANY_STATE_C,\n        ACCOUNT_OWNER_C,\n        ENGAGIO_MATCH_TIME_C,\n        REGISTRATION_SOURCE_INFO,\n        ZI_COUNTRY_C,\n        CUSTOMER_HEALTH_SCORE_DATE_C,\n        ULTIMATE_PARENT_SALES_SEGMENT_EMPLOYEES_C,\n        ATAM_ADDRESS_POSTAL_CODE_C,\n        GS_SECURITY_ACTIVE_C,\n        IACV_THIS_ACCOUNT_Q_3_2018_C,\n        ACCOUNT_STREET_ADDRESS_MANUAL_ADMIN_C,\n        DOMAINS_C,\n        EMAIL_OPT_OUT_C,\n        EVENTS_SEGMENT,\n        ULTIMATE_PARENT_SALES_SEGMENTATION_C,\n        ANNUAL_REVENUE,\n        ZI_CONTACT_ACCURACY_GRADE_C,\n        ZI_FAX_C,\n        IS_CONTACT_C,\n        PERSON_PRIMARY_LEAD_INTEREST,\n        PHOTO_URL_ACCOUNT,\n        ATTEND_ORGANIZED_GIT_LAB_MEETUP_C,\n        TECHNICAL_ACCOUNT_MANAGER_C,\n        GENERIC_1,\n        TEMP_DUPLICATED_ACCOUNT_C,\n        ZI_COMPANY_REVENUE_RANGE_C,\n        DOUBLE_OPT_IN_DATE,\n        ZI_EMPLOYEES_C,\n        SUPPORT_EDU_OSS_C,\n        O_SSCERTIFIED_NOTFOR_PROFIT,\n        ENGAGIO_ENGAGEMENT_MINUTES_LAST_3_MONTHS_C,\n        MKTO_71_ORIGINAL_UTM_SOURCE_C,\n        CAB_REFERENCE_C,\n        BLACK_LISTED,\n        ZENDESK_IS_CREATED_UPDATED_FLAG_C,\n        DO_NOT_ROUTE_C,\n        GTM_STRATEGY_C,\n        BILLING_POSTAL_CODE,\n        ABERDEEN_CLOUD_PROVIDER_C,\n        CONVERTED_DATE_C,\n        MAIN_PHONE,\n        IF_USING_CE_HOW_ARE_YOU_USING_CE_C,\n        ENTITY_OVERRIDE_C,\n        COMPANY_DESC_RESELLER_C,\n        IS_GIT_LAB_GEO_CUSTOMER_C,\n        FAX,\n        ZENDESK_ZENDESK_OUTOF_SYNC_C,\n        IMPARTNER_PRM_IS_DEAL_REGISTRATION_C,\n        ZI_STATE_PROVINCE_C,\n        WEB_PORTAL_PURCHASE_DATE_TIME_C,\n        B_TLKQUESTIONS_TEXT,\n        TOTAL_ACCOUNT_VALUE_C,\n        UNQUALIFIED_REASONS_C,\n        PRINTFECTION_CODE,\n        VARTOPIA_DRS_DENIED_REGISTRATIONS_C_CONTACT,\n        INFERRED_PHONE_AREA_CODE,\n        MAILING_COUNTRY_CODE,\n        ZI_COMPANY_IS_DEFUNCT_C,\n        ZI_INDUSTRY_C,\n        ULTIMATE_PARENT_ACCOUNT_STATE_DATA_FOX_C,\n        LEAN_DATA_OWNER_C,\n        ACCOUNT_STATE_MANUAL_USER_C,\n        LAST_TSP_UPDATE_REASON_C,\n        DOMAIN_C,\n        ULTIMATE_PARENT_ACCOUNT_BILLING_ZIP_C,\n        LEAD_OWNER_SLACK_ID,\n        ZI_ULTIMATE_PARENT_COMPANY_NAME_C,\n        IS_SP_URL_FILLED_C,\n        OSS_PROJECT_LINK_C,\n        LEAD_PERSON,\n        BILLING_LONGITUDE,\n        ZI_EMPLOYEE_COUNT_C,\n        DOUBLE_OPT_IN,\n        MATCHED_ACCOUNT_SDR_ASSIGNED_C,\n        MKTO_2_INFERRED_STATE_REGION_C,\n        RECURLY_LAST_NAME_C,\n        VARTOPIA_DRS_NUMBER_OF_CLOSED_LOST_REGISTRATIONS_C_CONTACT,\n        LAST_UNIQUE_VISITORS_SNAPSHOT_C,\n        MAILING_ADDRESS,\n        ULTIMATE_PARENT_ACCOUNT_SEGMENT_ROLLUP_C,\n        SUBSCRIBERS_BRIGHT_TALKUSER_ID,\n        PARTNER_ACCOUNT_C,\n        EO_ACUSTOMER_NAME,\n        PRODUCT_CATEGORY_C,\n        BILLING_STREET,\n        ZI_CONTACT_ACCURACY_SCORE_C_CONTACT,\n        B_TLKVIEWING_URL,\n        INFERRED_POSTAL_CODE,\n        NDE_NODE_GENERATED_FORMULA_C,\n        CE_DOWNLOAD_DATE,\n        INFERRED_COMPANY,\n        GS_CI_ACTIVE_C,\n        ENTITY_CONTACT_INFORMATION_C,\n        ACCOUNT_OWNER_MANAGER_EMAIL_C,\n        NEXT_FY_USER_REGION_TEMP_C,\n        ZI_CONTACT_ACCURACY_SCORE_C,\n        CE_INSTANCES_C,\n        ZI_DESCRIPTION_C,\n        CMRR_ALL_ACCOUNTS_C,\n        PARENT_ACCOUNT_SHIPPING_ZIP_C,\n        EDUCATION_REQUESTED,\n        TSP_LAST_UPDATE_TIMESTAMP_C,\n        MIDDLE_NAME_LEAD,\n        NUMBER_OF_DEVELOPERS_BUCKET_C,\n        ZI_CONTACT_COUNTRY_C,\n        HOW_CAN_WE_HELP_C,\n        VARTOPIA_DRS_NUMBER_OF_DENIED_REGISTRATIONS_C_CONTACT,\n        ZENDESK_LAST_SYNC_STATUS_C,\n        TEMP_DF_HIER_ULTIMATE_PARENT_SHIPPING_S_C,\n        DATA_QUALITY_SCORE_C,\n        MKTO_2_LEAD_SCORE_C,\n        RING_LEAD_EMAIL_ADDRESS_C,\n        ACCOUNT_COUNTRY_MANUAL_USER_C,\n        COMMENT_CAPTURE,\n        MATCHED_ACCOUNT_TERRITORY_C,\n        SHIPPING_COUNTRY_CODE_C,\n        HOME_OFFICE_COUNTRY,\n        ACCOUNT_OWNER_TEAM_C,\n        ACCOUNT_OWNER_EMAIL_C,\n        RECURLY_UUID_C,\n        ZENDESK_ZENDESK_ORGANIZATION_ID_C,\n        LAST_UTM_TERM_C,\n        COUNT_OF_OPEN_NEW_ADD_ON_OPPS_C,\n        ZI_COMPANY_TICKER_C,\n        ENGAGIO_MATCHED_ACCOUNT_ENGAGIO_STATUS_C,\n        FIELD_MARKETING_MANAGER_C,\n        ALLIANCE_RECORD_C_ACCOUNT,\n        ST_PACKAGE_CONTRACT_END_DATE_C,\n        TOTAL_CUSTOMER_VALUE_C,\n        CUSTOMER_SINCE_C,\n        ZQU_COUNTY_C,\n        ZI_CERTIFICATION_DATE_C,\n        VARTOPIA_DRS_CREATED_FROM_REGISTRATION_C_CONTACT,\n        BUSINESS_DEVELOPMENT_REPRESENTATIVE_C,\n        MKTO_71_ORIGINAL_UTM_TERM_C,\n        ZI_REVENUE_C,\n        MKTO_SI_SALES_INSIGHT_C_ACCOUNT,\n        ENGAGIO_ENGAGEMENT_MINUTES_LAST_7_DAYS_C,\n        MKTO_71_ORIGINAL_UTM_CAMPAIGN_C,\n        ACCOUNT_STREET_MANUAL_USER_C,\n        USING_CE_C_LEAD,\n        SOLUTIONS_FEATURES_OF_INTEREST_C,\n        SUCCESS_ENGINEER_C,\n        ENGAGIO_MATCHED_ACCOUNT_ENGAGE_MINS_LAST_3_MONTHS_C,\n        SUBSCRIBE_SUBPROCESSOR,\n        VARTOPIA_DRS_VARTOPIA_PARTNER_TRANSACTION_ID_C,\n        ST_MONITOR_TECH_C,\n        ULTIMATE_PARENT_C,\n        AD_IMPRESSIONS_ROLLING_30_C,\n        GEMSTONE_TYPE_C,\n        ST_PLAN_TECH_C,\n        OUTBOUND_BDR_C,\n        ACCOUNT_STATE_MANUAL_ADMIN_C,\n        TZ_TIMEZONE_IANA_C_ACCOUNT,\n        LEAN_DATA_MATCHED_ACCOUNT_BILLING_STATE_C,\n        VARTOPIA_DRS_APPROVED_REGISTRATION_C,\n        ZI_COMPANY_LINKED_IN_URL_C,\n        WEB_VISIT_DATA_UP_TO_DATE_AS_OF_C,\n        BILLING_LATITUDE,\n        ACCOUNT_CITY_MANUAL_USER_C,\n        ENGAGIO_MQADATE_C,\n        ZI_TICKER_SYMBOL_C,\n        OSS_SUPPORTING_EVIDENCE_C,\n        RECORD_TYPE_ID,\n        PERSON_TYPE,\n        NDE_NODE_GENERATED_LEAD_FORMULA_C,\n        AE_COMMENTS_C_CONTACT,\n        UPA_ACCOUNT_TERRITORY_ZIP_C,\n        EMAIL_BOUNCED_REASON,\n        TOTAL_TECH_ENG_DESIGN_DEV_USERS_C,\n        NEXT_FY_USER_AREA_TEMP_C,\n        ULTIMATE_PARENT_ACCOUNT_SHIPPING_COUNTRY_C,\n        NDE_NODE_PRIORITY_C,\n        NAME_LOCAL,\n        SIC_CODE,\n        VARTOPIA_DRS_VARTOPIA_ACCESS_C,\n        CURRENT_MRR_C,\n        LEAN_DATA_REGION_C,\n        ATAM_ADDRESS_CITY_C,\n        ABERDEEN_TECHNOLOGY_STACK_C,\n        UPA_ACCOUNT_TERRITORY_STATE_C,\n        COMPETITORS_C,\n        OSS_PROJECT_DESCRIPTION_C,\n        Y_CBATCH,\n        FIRST_ORDER_AVAILABLE_C,\n        SOLUTIONS_ARCHITECT_C,\n        B_TLKACTIVITY_MESSAGE,\n        ULTIMATE_PARENT_ID_C,\n        DOZISF_ZOOM_INFO_FIRST_UPDATED_C_ACCOUNT,\n        BAD_DATA_DATE_TIME_C,\n        NDE_YOU_SHOULD_MENTION_C_ACCOUNT,\n        X_30_DAY_OPT_OUT_C,\n        LAST_NAME_LOCAL,\n        WEB_VISITS_ROLLING_30_C,\n        PRODUCTS_SOLD_RESELLER_C,\n        PREVIOUS_BAD_DATA_REASON,\n        TSP_OVERRIDE_STATUS_C,\n        BILLING_STATE,\n        MAILING_STATE_CODE,\n        CAB_REFERENCE_C_ACCOUNT,\n        BDR_PHONE_NUMBER,\n        PRODUCT_OSS_EDU_C,\n        DB_COMPANY_CITY_C_CONTACT,\n        TEMP_DF_PARENT_ACCOUNT_ID_C,\n        POTENTIAL_USERS_C,\n        SFSSDUPE_CATCHER_OVERRIDE_DUPE_CATCHER_C,\n        TEMP_DF_HIER_ULTIMATE_PAR_SHIP_COUNTRY_C,\n        PARENT_ACCOUNT_OWNER_C,\n        FEDERAL_ACCOUNT_C,\n        LATEST_LEAD_CONVERSION_NUMBER_OF_EMPLOY_C,\n        BILLING_COUNTRY_CODE,\n        ULTIMATE_PARENT_ACCOUNT_ZIP_DATA_FOX_F_3_C,\n        PATH_FACTORY_EXTERNAL_ID_C,\n        PARENT_ACCOUNT_BILLING_STATE_C,\n        ENGAGIO_MATCHED_ACCOUNT_HQ_STATE_C,\n        PARENT_ACCOUNT_BILLING_ZIP_C,\n        MAILING_LONGITUDE,\n        ACCOUNT_ADDRESS_MANUAL_DATE_O_C,\n        DEV_OPS_VIRTUAL_CUSTOM_C,\n        LEAN_DATA_REPORTING_TARGET_ACCOUNT_C,\n        PACKAGE_ACTIVE_C,\n        ALLIANCE_RECORD_C,\n        HEALTH_SCORE_REASONS_C,\n        LEAD_PARTITION_ID,\n        RING_LEAD_ZIP_POSTAL_CODE_C,\n        SHIPPING_COUNTRY_CODE,\n        CONSENT_TO_DATA_SHARING_WITH_WHITESOURCE_C,\n        ZENDESK_LAST_SYNC_STATUS_C_LEAD,\n        TEMP_DF_ULTIMATE_PARENT_ACCOUNT_LU_C,\n        AD_CLICKS_ROLLING_90_C,\n        NON_CRIMEAN_C,\n        ZI_TECHNOLOGIES_C,\n        ZI_PARENT_COMPANY_NAME_C,\n        ASSOCIATED_TERMINUS_ACCOUNTS_C,\n        TECHNICAL_ACCOUNT_MANAGER_LU_C,\n        JB_TEST_SALES_SEGMENT_C,\n        BILLING_COUNTRY,\n        LAST_EVENT_NOTES_C,\n        CASE_STUDY_REFERENCE_C_ACCOUNT,\n        TEMP_DF_HIER_ULTIMATE_PARENT_SHIPPING_Z_C,\n        ULTIMATE_PARENT_SALES_SEGMENTATION_DEL_C,\n        ORIGINAL_SEARCH_ENGINE,\n        ULTIMATE_PARENT_ACCOUNT_STATE_DISC_ORG_C,\n        RING_LEAD_GENERAL_ARCHIVE_C,\n        ZI_CONTACT_CITY_C,\n        B_TLKWEBCAST_ID,\n        NUMBER_OF_EMPLOYEES,\n        GS_CD_ACTIVE_C,\n        NDE_NODE_PRIORITY_C_CONTACT,\n        ENGAGIO_MATCHED_ACCOUNT_OWNER_NAME_C,\n        ABERDEEN_NUMBER_OF_DEVELOPERS_C,\n        LEAN_DATA_MATCHED_ACCOUNT_BILLING_POSTAL_CODE_C,\n        GS_SCM_ACTIVE_C,\n        ENGAGIO_WEB_VISITS_LAST_3_MONTHS_C,\n        NDE_NODE_CONTEXT_FORMULA_C,\n        CIMINUTEUSAGE,\n        ORIGINAL_REFERRER,\n        DSCORGPKG_IT_BUDGET_C_ACCOUNT,\n        ACCOUNT_CITY_MANUAL_ADMIN_C,\n        SDR_ACCOUNT_TEAM_C,\n        JOIN_URL,\n        B_TLKLAST_ACTIVITY_DATE,\n        DSCORGPKG_FISCAL_YEAR_END_C_ACCOUNT,\n        ST_PLAN_CONTRACT_END_DATE_C,\n        ZENDESK_TAGS_C,\n        TZ_UTF_OFFSET_C,\n        ULTIMATE_PARENT_SALES_SEGMENT_TEXT_C,\n        EVENT_SPEAKER_REFERENCE_C,\n        OUTREACH_STAGE_C,\n        LEAN_DATA_MATCHED_ACCOUNT_ANNUAL_REVENUE_C,\n        ROLE_PROSPECT_PLAYS_IN_EVALUATION_C,\n        ENGAGIO_ENGAGEMENT_MINUTES_LAST_3_MONTHS_C_ACCOUNT,\n        GATRACKID_C,\n        SHIPPING_LONGITUDE,\n        NDE_NODE_CONTEXT_C,\n        ULTIMATE_PARENT_ACCOUNT_NAMED_C,\n        FIRST_NAME_LOCAL,\n        NDE_NODE_GENERATED_C,\n        HIGH_LEVEL_BUSINESS_NEED_IMPACT_ON_BIZ_C,\n        TERMINUS_IMPRESSIONS_C_ACCOUNT,\n        SHIPPING_STATE_CODE,\n        ZI_COMPANY_REVENUE_C,\n        MKTO_IS_PARTNER,\n        MKTO_NAME,\n        INQUIRY_DATE_TIME_C,\n        AATEST_C,\n        DOAC_REFERENCE_C_ACCOUNT,\n        MAILING_LATITUDE,\n        NEXT_FY_TSP_TERRITORY_TEMP_C,\n        INFERRED_METROPOLITAN_AREA,\n        PATH_FACTORY_TRACK_CUSTOM_URL_C,\n        ZENDESK_CREATE_IN_ZENDESK_C_ACCOUNT,\n        DATA_QUALITY_DESCRIPTION_C_ACCOUNT,\n        ZI_MOBILE_PHONE_NUMBER_C,\n        ENTITY_BANK_INFORMATION_C,\n        ULTIMATE_PARENT_IS_CURRENT_ACCOUNT_C,\n        TEMP_DF_ULTIMATE_PARENT_ACCOUNT_C,\n        TALK_ABOUT_GIT_LAB_C,\n        ENGAGIO_ENGAGED_PEOPLE_C,\n        NDE_NODE_CONTEXT_C_ACCOUNT,\n        ULTIMATE_PARENT_ACCOUNT_SHIPPING_ZIP_C,\n        HOME_OFFICE_STREET,\n        TEMP_DF_HIER_ULTIMATE_PARENT_OWNER_C,\n        IS_GIT_LAB_EECUSTOMER_C,\n        SUBSCRIBED_SECURITY_ALERTS_C,\n        SOLUTIONS_ARCHITECT_LOOKUP_C,\n        ZENDESK_CREATE_IN_ZENDESK_C,\n        INITIAL_MQL_DATE_TIME_C,\n        GS_HEALTH_SCORE_LABEL_C,\n        PARTNER_ACCOUNT_ID,\n        ZI_PHONE_C,\n        EVENT_SPEAKER_REFERENCE_C_ACCOUNT,\n        CONTRACTED_CHANNEL_TEAM_USE_ONLY_C,\n        LEAN_DATA_ROUTING_STATUS_C,\n        SUBSCRIPTION_AMOUNT_C,\n        PATH_FACTORY_TRACK_ID_C,\n        TEMP_DATA_FOX_MIS_MATCH_C,\n        ENGAGIO_INTENT_MINUTES_LAST_30_DAYS_C_ACCOUNT,\n        ASSOCIATED_TERMINUS_ACCOUNTS_UP_TO_DATE_AS_OF_C,\n        GCLID,\n        COUNT_OF_OPEN_RENEWAL_OPPS_C,\n        ZI_COMPANY_STREET_C,\n        EDUCATION_USER_CASE_C,\n        PARTNERS_PUBLIC_SECTOR_PARTNER_C,\n        ANALYST_REFERENCE_C_ACCOUNT,\n        ENGAGIO_MATCHED_ACCOUNT_C,\n        CUSTOMER_SLACK_CHANNEL_C,\n        HAS_OPTED_OUT_OF_FAX,\n        VARTOPIA_DRS_COMPANY_ADMIN_C,\n        DOZISF_ZOOM_INFO_LAST_UPDATED_C,\n        ENGAGIO_MATCHED_ACCOUNT_NAME_C,\n        SUBSCRIBE_PARTNERS,\n        INFERRED_STATE_REGION,\n        OTHER_COUNTRY_CODE,\n        ULTIMATE_PARENT_ACCOUNT_OWNER_C,\n        EDUCATION_USE_CASE_NOTES_C,\n        ACCOUNT_TIER_NOTES_HISTORY_C,\n        CURRENT_DEV_OPS_OR_SDLC_TOOLS_NOTES_C,\n        SFSSDUPE_CATCHER_OVERRIDE_DUPE_CATCHER_C_CONTACT,\n        PATH_FACTORY_CONTENT_SOURCE_URL_C,\n        REGION_SUB_REGION_C,\n        POTENTIAL_EE_USERS_TOTAL_C,\n        DB_COMPANY_COUNTRY_C_CONTACT,\n        ISGROUPNAMESPACEOWNER_C,\n        MARKETING_COMM_OPT_OUT_C,\n        DB_COMPANY_STATE_C_CONTACT,\n        BAD_DATA_REASONS_C,\n        LAST_VISIT_MOMENT_C,\n        ZI_EMPLOYEE_COUNT_C_CONTACT,\n        HOW_MANY_SEATS_ARE_THEY_INTERESTED_IN_PU_C,\n        NDE_NODE_PRIORITY_C_ACCOUNT,\n        CONTRIBUTED_TO_OPEN_SOURCE_C,\n        LAST_VISIT_SESSIONS_SNAPSHOT_C,\n        RECURLY_SUBSCRIBER_C,\n        INTERESTED_IN_HOSTED_SOLUTION_C,\n        VIDEO_TESTIMONIAL_REFERENCE_C_ACCOUNT,\n        SUCCESS_PLAN_URL_C,\n        AD_DATA_UP_TO_DATE_AS_OF_C,\n        LEAN_DATA_SUB_REGION_C,\n        EVENT_DATE_CODE,\n        ACCOUNT_OWNERSHIP_NOTES_C,\n        POTENTIAL_EE_USERS_C,\n        ZI_CERTIFIED_ACTIVE_COMPANY_C,\n        ACCOUNT_TYPE_C,\n        POSTAL_CODE,\n        LAST_SALE_VIA_PARTNER_C,\n        MKTO_2_INFERRED_COUNTRY_C,\n        MKTO_PERSON_NOTES,\n        LAST_AD_CLICK_DATE_C,\n        NEXT_FY_ACCOUNT_OWNER_TEMP_C,\n        TEMP_ULTIMATE_PARENT_ACCOUNT_DISCO_ORG_ID_C,\n        ENGAGIO_IN_PLAY_C,\n        CREATED_AT,\n        OSS_GIT_LAB_PROFILE_C,\n        ZI_NAICS_CODE_C_LEAD,\n        BUSINESS_DEVELOPMENT_REP_C,\n        TZ_LT_INFO_C_ACCOUNT,\n        EDUCATION_LICENSE_USAGE_C,\n        E_EP_91_RELEASE_LICENSE_KEY,\n        CREATE_ACTIVE_C,\n        UPA_IS_HOLDING_COMPANY_C,\n        WEBCAST_SPEAKER_REFERENCE_C,\n        MKTO_71_ORIGINAL_UTM_CONTENT_C,\n        ZI_WITHIN_EU_C,\n        HOLDING_COMPANY_NAME_C,\n        LAST_EMAIL_DATE_1,\n        ATAM_ADDRESS_STREET_C,\n        PATH_FACTORY_CONTENT_TITLE_C,\n        SUBSCRIBE_ALL_REMOTE,\n        REQUEST_FOR_LEAD_CONVERSION_C,\n        SUB_REGION_C,\n        DATA_QUALITY_DESCRIPTION_C,\n        RELEASE_ACTIVE_C,\n        SURVEY_NAME,\n        DOZISF_ZOOM_INFO_COMPANY_ID_C,\n        TERRITORIES_COVERED_C,\n        ENGAGIO_TOP_URLS_C,\n        PARTNERS_PARTNER_STATUS_C,\n        VARTOPIA_DRS_EXPIRED_REGISTRATIONS_C_CONTACT,\n        TRIGGER_WORKFLOW_C_LEAD,\n        RECURLY_IN_TRIAL_C,\n        ENTITY_C,\n        MANAGE_ACTIVE_C,\n        EVENTATTENDAGAIN,\n        DEPLOYMENT_PREFERENCE_C,\n        ULTIMATE_PARENT_SALES_SEGMENT_TEXT_DEL_C,\n        DIGITAL_OCEAN_PROMO_CODE_C,\n        ULTIMATE_PARENT_ADDRESS_COUNTRY_C,\n        ZI_SUPPLEMENTAL_EMAIL_C,\n        B_TLKLIVE_MINUTES_VIEWED,\n        ENGAGIO_FIRST_ENGAGEMENT_DATE_C,\n        DFOX_ID_C_ACCOUNT,\n        ZI_ZOOM_INFO_CONTACT_PROFILE_URL_C,\n        TZ_UTF_OFFSET_C_ACCOUNT,\n        USING_CE_C,\n        TERMINUS_SPEND_C_ACCOUNT,\n        SFSSDUPE_CATCHER_OVERRIDE_DUPE_CATCHER_C_ACCOUNT,\n        ESTIMATE_TOTAL_SEATS_AVAIL_AT_COMPANY_C,\n        DO_NOT_CONTACT_C,\n        FY_22_ON_BRONZE_STARTER_C,\n        COUNT_OF_CUSTOMER_ONBOARDINGS_1_4_C,\n        HOME_OFFICE_STATE,\n        ORIGINAL_SEARCH_PHRASE,\n        ZI_PARENT_COMPANY_ZOOMINFO_ID_C,\n        MKTO_IS_CUSTOMER,\n        LEAN_DATA_REPORTING_TARGET_ACCOUNT_NUMBER_C,\n        DOZISF_ZOOM_INFO_ID_C_ACCOUNT,\n        IS_ANONYMOUS,\n        SUFFIX,\n        HAMSTER_RENEWAL_DATE,\n        NDE_NODE_PRIORITY_FORMULA_C,\n        IS_FILE_LOCKING_CUSTOMER_C,\n        MKTO_2_INFERRED_COMPANY_C,\n        ATAM_ACCOUNT_CARR_C,\n        OUTBOUND_BDR_C_CONTACT,\n        B_TLKQUESTIONS_ANSWERED,\n        EMAIL_INVALID_CAUSE,\n        ECUSTOMS_IM_STATUS_C_ACCOUNT,\n        TERMINUS_VELOCITY_LEVEL_C_ACCOUNT,\n        COMMENT_HISTORY,\n        UNSUBSCRIBED_REASON,\n        ZENDESK_NOTES_C_LEAD,\n        CE_DOWNLOAD,\n        BUYING_PROCESS_FOR_PROCURING_GIT_LAB_C,\n        WEB_FORM_C,\n        RECURLY_CLOSED_C,\n        IS_CONTRACTED_PARTNER_C,\n        ACCOUNT_TIER_C,\n        CMRR_ALL_CHILD_ACCOUNTS_C,\n        ZI_INDUSTRY_C_LEAD,\n        ST_PACKAGE_TECH_C,\n        ATAM_ADDRESS_STATE_C,\n        IMPARTNER_PRM_DEAL_REGISTRATION_STATUS_C,\n        RECURLY_COMPANY_C,\n        ZI_COMPANY_DESCRIPTION_C,\n        NDE_NODE_PRIORITY_FORMULA_C_ACCOUNT,\n        ATAM_GEO_STORY_C,\n        QUOTE_REFERENCE_C_ACCOUNT,\n        DSCORGPKG_LEAD_SOURCE_C,\n        QUALIFIED_DATE_TIME_C,\n        ST_PLAN_APPETITE_FOR_REPLACEMENT_C,\n        MATCHED_STATUS,\n        ZI_ZIP_POSTAL_CODE_C,\n        ENGAGIO_FIRST_ENGAGEMENT_DATE_C_ACCOUNT,\n        AD_CLICKS_ROLLING_30_C,\n        ZI_SIC_CODE_C,\n        NEXT_FY_USER_GEO_TEMP_C,\n        PARENT_ACCOUNT_BILLING_COUNTRY_C,\n        ENGAGIO_HIGH_INTENT_KEYWORDS_C,\n        RECURLY_UPDATED_AT_C,\n        PERSON_SCORE_2,\n        EDUCATION_ROLE_C,\n        NDE_YOU_SHOULD_MENTION_C,\n        NEW_LOGO_TARGET_ACCOUNT_C,\n        ACCOUNT_ZIP_MANUAL_USER_C,\n        SALES_SEGMENTATION_NEW_C,\n        ECCN_QUARANTINE_C,\n        DO_NOT_CALL,\n        WEB_PORTAL_PURCHASE_COMPANY_SIZE_C,\n        ATAM_ADDRESS_COUNTRY_C,\n        COUNT_OF_OPEN_RENEWAL_OPPS_THIS_MONTH_C,\n        TEMP_DF_HIER_ULTIMATE_PARENT_SEGMENT_E_C,\n        ACCOUNT_COUNTRY_MANUAL_ADMIN_C,\n        ENTITY_LEGAL_NAME_C,\n        EVENT_DATE_CODE_4,\n        EVENT_DATE_CODE_3,\n        ENGAGIO_MATCHED_ACCOUNT_INDUSTRY_C,\n        EVENT_DATE_CODE_2,\n        EVENT_DATE_CODE_1,\n        DO_NOT_CALL_REASON,\n        OPEN_SOURCE_LICENSE_C,\n        ZI_TECHNOLOGIES_C_LEAD,\n        TEMP_DF_HIER_ULTIMATE_PARENT_BILLING_ST_C,\n        TRANSFER_DATE_C,\n        JB_OLD_SS_C,\n        EMAIL_INVALID,\n        SFDC_ACCOUNT_ID,\n        IS_GIT_HOST_CUSTOMER_C,\n        ACCOUNT_TIER_NOTES_C,\n        DATA_QUALITY_SCORE_C_ACCOUNT,\n        NEXT_RENEWAL_DATE_C,\n        SAME_ACCT_OWNER_AND_UP_ACCT_OWNER_C,\n        INQUIRY_SCORE,\n        LEAD_SOURCE_C,\n        COUNT_OF_NEW_BUSINESS_WON_OPPS_C,\n        COUNT_OF_LOST_RENEWAL_OPPORTUNITIES_C,\n        ACCOUNT_ZIP_MANUAL_ADMIN_C,\n        ZENDESK_ZENDESK_OUTOF_SYNC_C_LEAD,\n        INFERRED_COUNTRY,\n        NUMBER_OF_OPEN_OPPORTUNITIES_C,\n        WON_RENEWAL_OPP_LAST_MONTH_C,\n        NAMESPACE,\n        ST_PACKAGE_APPETITE_FOR_REPLACEMENT_C,\n        UPA_ACCOUNT_TERRITORY_COUNTRY_C,\n        BILLING_CITY,\n        ZI_COMPANY_PHONE_C,\n        TEMP_WEB_STORE_RENEWAL_ISSUE_STATUS_C,\n        SUB_INDUSTRY_C,\n        ZI_OWNER_C,\n        ST_MONITOR_CONTRACT_END_DATE_C,\n        MKTO_SI_HIDE_DATE_C,\n        DO_YOU_HAVE_A_BUDGET_FOR_THIS_C,\n        CONTACT_OWNER_TEAM_C,\n        WHERE_ARE_YOU_IN_YOUR_C,\n        IMPARTNER_PRM_DATE_ASSIGNED_TO_PARTNER_C,\n        FIRST_ORDER_OPPORTUNITY_C,\n        WHAT_RELEVANT_PRODUCT_S_WOULD_YOU_C,\n        ZENDESK_TAGS_C_LEAD,\n        DISCUSS_WHAT_STAGES_OF_DEV_OPS_C,\n        DB_WATCH_LIST_CAMPAIGN_CODE_C,\n        DB_WATCH_LIST_ACCOUNT_OWNER_C,\n        DB_WATCH_LIST_ACCOUNT_TYPE_C,\n        PARTNER_CONSENT_C,\n        ZI_IT_DEPARTMENT_BUDGET_C,\n        CDB_RESP_FOR_GROUP_SAAS_FREE_TIER_C,\n        CDB_RESP_FOR_GROUP_SAAS_PREMIUM_TIER_C,\n        CDB_RESP_FOR_GROUP_SAA_S_TRIAL_C,\n        CDB_IS_GROUP_NAMESPACE_OWNER_C,\n        CDB_IS_SELF_MANAGED_ULTIMATE_TIER_C,\n        CDB_IND_NAMESPACE_IS_SAA_S_PREMIUM_TIE_C,\n        CDB_GROUP_OWNER_OF_SAA_S_FREE_TIER_C,\n        CDB_GROUP_MEMBER_OF_SAA_S_FREE_TIER_C,\n        CDB_GROUP_MEMBER_OF_SAA_S_BRONZE_TIER_C,\n        CDB_GIT_LAB_COM_EMAIL_OPTED_IN_C,\n        CDB_IS_SELF_MANAGED_STARTER_TIER_C,\n        CDB_GROUP_OWNER_OF_SAA_S_ULTIMATE_TIER_C,\n        CDB_GROUP_MEMBER_OF_SAA_S_PREMIUM_TIER_C,\n        CDB_IS_INDIVIDUAL_NAMESPACE_OWNER_C,\n        CDB_IS_GIT_LAB_COM_USER_C,\n        CDB_GROUP_OWNER_OF_SAA_S_PREMIUM_TIER_C,\n        CDB_GROUP_OWNER_OF_SAA_S_BRONZE_TIER_C,\n        CDB_IS_GROUP_NAMESPACE_MEMBER_C,\n        CDB_RESP_FOR_GROUP_SAAS_BRONZE_TIER_C,\n        CDB_IS_ZUORA_BILLING_CONTACT_C,\n        CDB_IND_NAMESPACE_IS_SAA_S_ULTIMATE_TI_C,\n        CDB_IND_NAMESPACE_IS_SAA_S_TRIAL_C,\n        CDB_GROUP_MEMBER_OF_SAA_S_ULTIMATE_TIER_C,\n        CDB_IS_CUSTOMER_DB_OWNER_C,\n        CDB_RESP_FOR_GROUP_SAAS_ULTIMATE_TIER_C,\n        CDB_IND_NAMESPACE_IS_SAA_S_FREE_TIER_C,\n        CDB_GROUP_OWNER_OF_SAA_S_TRIAL_C,\n        CDB_RESPONSIBLE_FOR_FREE_TIER_ONLY_C,\n        CDB_IS_SELF_MANAGED_PREMIUM_TIER_C,\n        CDB_IS_CUSTOMER_DB_USER_C,\n        CDB_GROUP_MEMBER_OF_SAA_S_TRIAL_C,\n        CDB_IND_NAMESPACE_IS_SAA_S_BRONZE_TIER_C,\n        CDB_IND_NAMESPACE_IS_SAA_S_PREMIUM_TIE_C_CONTACT,\n        DO_NOT_EMAIL_REASON,\n        CDB_DIM_MARKETING_CONTACT_ID_C,\n        CDB_GIT_LAB_COM_ACTIVE_STATE_C,\n        CDB_LAST_NAME_C,\n        CDB_CUSTOMER_DB_CUSTOMER_ID_C,\n        CDB_GIT_LAB_COM_CREATED_DATE_C,\n        CDB_CUSTOMER_DB_CONFIRMED_DATE_C,\n        CDB_GIT_LAB_COM_CONFIRMED_DATE_C,\n        CDB_GIT_LAB_COM_USER_NAME_C,\n        CDB_CUSTOMER_DB_CREATED_DATE_C,\n        CDB_DAYS_SINCE_SAA_S_TRIAL_ENDED_C,\n        CDB_GIT_LAB_COM_LAST_LOGIN_DATE_C,\n        CDB_FIRST_NAME_C,\n        CDB_ZUORA_CONTACT_ID_C,\n        CDB_ZUORA_ACTIVE_STATE_C,\n        EMAIL_VERIFICATION_STATUS,\n        SETUP_FOR_COMPANY_TEAM_USE_C,\n        GACLIENTID_C,\n        TSP_DECISION_RATIONALE_C,\n        GIT_OPS_SALES_PLAY_C,\n        ZI_COMPANY_SIC_CODE_C,\n        TEMP_SUBSCRIPTION,\n        TEMP_TERM_END_DATE,\n        ZI_WEBSITE_C_LEAD,\n        ZI_JOB_TITLE_C,\n        ZI_FIRST_NAME_C,\n        ZI_LAST_NAME_C,\n        CRM_PARTNER_ID_C,\n        ZI_PHONE_NUMBER_C,\n        HEALTH_CHECK_EMPLOYEES_BUCKET_C,\n        RING_LEAD_STATUS_C,\n        ECIDS,\n        KEY_PERSONA_FIRST_ACTION_TIMESTAMP_C,\n        KEY_PERSONA_FIRST_ACTION_C,\n        WORKED_DATE_C,\n        LINKEDIN_SI_COMPANY_PROFILE_C,\n        DECISION_MAKER_COUNT_LINKEDIN_C,\n        ORDER_TYPE_2_3_OPPS_C,\n        IMPARTNER_SYNC_C,\n        ZI_SUB_INDUSTRY_C,\n        QUALIFICATION_NOTES_C,\n        AGGREGATE_DEVELOPER_COUNT_C,\n        CDB_COMPANY_NAME_C,\n        ZI_FORTUNE_RANKING_C,\n        PARTNER_ACCOUNT_CUSTOM_C,\n        DOZISF_ZOOM_INFO_NON_MATCHED_REASON_C,\n        DOZISF_ZOOM_INFO_ENRICH_STATUS_C,\n        PARTER_MISSING_INFO_FOR_CONVERSION_C,\n        AVA_AVAAI_HOT_LEAD_C,\n        AVA_AVAAI_FURTHER_ACTION_C,\n        AVA_AVAAI_LEAD_AT_RISK_C,\n        AVA_AVAAI_SMS_OPT_OUT_C,\n        AVA_AVAAI_ACTION_REQUIRED_C,\n        ZI_SUB_INDUSTRY_C_LEAD,\n        VARTOPIA_DRS_PARTNER_ACCOUNT_C,\n        CDB_COUNTRY_C,\n        AVA_AVAAI_CONVERSICA_LEAD_STATUS_DATE_C,\n        AVA_AVAAI_CONVERSICA_LEAD_STATUS_C,\n        AVA_AVAAI_CONVERSATION_STAGE_C,\n        AVA_AVAAI_LAST_MESSAGE_DATE_C,\n        AVA_AVAAI_CONVERSATION_STATUS_DATE_C,\n        AVA_AVAAI_CONVERSATION_STAGE_DATE_C,\n        AVA_AVAAI_LAST_RESPONSE_DATE_C,\n        AVA_AVAAI_HOT_LEAD_DATE_C,\n        AVA_AVAAI_DATE_ADDED_C,\n        AVA_AVAAI_LEAD_PROFILE_C,\n        AVA_AVAAI_CONVERSATION_STATUS_C,\n        AVA_AVAAI_FIRST_MESSAGE_DATE_C,\n        AVA_AVAAI_DISCOVERED_EMAIL_1_C,\n        HOW_MANY_PEOPLE_WILL_BE_EVALUATING_C,\n        GROUP_NAMESPACE_ID_C,\n        VARTOPIA_DRS_DATE_SHARED_C,\n        VARTOPIA_DRS_PARTNER_PROSPECT_ADMIN_EMAIL_NEW_C,\n        VARTOPIA_DRS_DATE_ASSIGNED_C,\n        VARTOPIA_DRS_DATE_REJECTED_C,\n        VARTOPIA_DRS_NUMBER_OF_TIMES_ASSIGNED_C,\n        VARTOPIA_DRS_DATE_ACCEPTED_C,\n        VARTOPIA_DRS_DATE_RECALLED_C,\n        GS_HEALTH_SCM_C,\n        GS_HEALTH_OVERALL_PRODUCT_USAGE_C,\n        GS_HEALTH_CD_C,\n        GS_HEALTH_LICENSE_UTILIZATION_C,\n        GS_HEALTH_DEV_SEC_OPS_C,\n        AVA_AVAAI_CONFIRMED_PHONE_1_C,\n        GS_HEALTH_CI_C,\n        PROPOSED_ACCOUNT_OWNER_C,\n        PROPOSED_ISR_C,\n        LAST_EVENT_PROGRAM_NAME,\n        SUB_INDUSTRY_OVERRIDE_C,\n        INDUSTRY_OVERRIDE_C,\n        AVA_AVAAI_ACTION_REQUIRED_DATE_C,\n        AVA_AVAAI_CONFIRMED_PHONE_2_C,\n        PARENT_LAM_UPA_AGGREGATE_DEV_COUNT_C,\n        AVA_AVAAI_FURTHER_ACTION_DATE_C,\n        OUTREACH_ACTIVELY_BEING_SEQUENCED_C,\n        EXCLUDE_FROM_ZOOM_INFO_ENRICH_C,\n        PREVALENT_TIER_HIERARCHY_C,\n        CDB_TIME_SINCE_SAA_S_TRIAL_ENDED_C,\n        PQLNAMESPACE_USERS_C,\n        PQLNUMBEROFSTAGESACTIVATEDBYNAMESPACE_C,\n        PQLSTAGENAMESACTIVATEDBYNAMESPACE_C,\n        CDB_TIME_SINCE_SAA_S_TRIAL_OWNER_SIGNUP_C,\n        CDB_ZUORA_CREATED_DATE_C,\n        CDB_TIME_SINCE_SM_OWNER_TRIAL_SIGN_UP_C,\n        ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT_C,\n        ACCOUNT_DEMOGRAPHICS_TERRITORY_C_ACCOUNT,\n        ACCOUNT_DEMOGRAPHICS_TERRITORY_C,\n        ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT_C_ACCOUNT,\n        ACCOUNT_DEMOGRAPHICS_REGION_C_ACCOUNT,\n        ACCOUNT_DEMOGRAPHICS_REGION_C,\n        ACCOUNT_DEMOGRAPHICS_GEO_C,\n        ACCOUNT_DEMOGRAPHICS_GEO_C_ACCOUNT,\n        VARTOPIA_DRS_PARTNER_PROSPECT_ACCEPTANCE_C,\n        ACCOUNT_DEMOGRAPHICS_UPA_STREET_C,\n        ACCOUNT_DEMOGRAPHICS_EMPLOYEE_COUNT_C,\n        ACCOUNT_DEMOGRAPHICS_UPA_STATE_C,\n        LAM_C,\n        ACCOUNT_DEMOGRAPHICS_INDUSTRY_C,\n        ACCOUNT_DEMOGRAPHICS_AREA_C,\n        ACCOUNT_DEMOGRAPHICS_SUB_INDUSTRY_C,\n        ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY_C,\n        ACCOUNT_DEMOGRAPHICS_MAX_FAMILY_EMPLOYE_C,\n        ACCOUNT_DEMOGRAPHICS_LAST_UPDATED_DATE_C,\n        ACCOUNT_DEMOGRAPHICS_UPA_POSTAL_CODE_C,\n        ACCOUNT_DEMOGRAPHICS_UPA_CITY_C,\n        LAM_DEV_COUNT_C,\n        BDR_PROSPECTING_STATUS_C,\n        MATCHED_ACCOUNT_BDR_PROSPECTING_STATUS_C,\n        PQL_NAMESPACE_NAME_C,\n        PERSON_LINKEDIN_URL_C,\n        RINGLEAD_MERGE_DATE_TIME_C,\n        LAST_RINGLEAD_MERGE_DATE_TIME_C,\n        DEDICATED_ENGINEERING_C,\n        INTEGRATION_SERVICES_C,\n        RESTRICTED_ACCOUNT_C,\n        VARTOPIA_DRS_FIELDS_UPDATED_ON_C,\n        EDUCATION_NEWSLETTER_C,\n        VARTOPIA_DRS_VARTOPIA_PARTNER_ACCOUNT_C,\n        PQL_NAMESPACE_ID_C,\n        PQL_USAGE_PACKET_C,\n        LAM_TIER_C,\n        BLOCK_MARKETO_SYNC_C,\n        LEAD_ACQUISITION_SOURCE_C,\n        PTC_SCORE_VALUE_C,\n        PTE_SCORE_VALUE_C,\n        SALES_TERRITORY_C,\n        HIGH_PRIORITY_C,\n        UNSUBSCRIBED_REASON_DETAIL,\n        MATCHED_ACCOUNT_KEY_ACCOUNT_C,\n        SIGNUP_REASON_C,\n        HIGH_PRIORITY_TIMESTAMP_C,\n        MATCHED_ACCOUNT_LAM_DEV_COUNT_C,\n        HIGH_CONVERSION_COHORT_C,\n        IMPACTED_BY_USER_LIMIT_C,\n        IMPACTED_BY_STORAGE_LIMIT_C,\n        IMPACT_STRING_C,\n        CDB_GIT_LAB_COM_USER_ID_C,\n        CDB_IMPACTED_BY_STORAGE_LIMIT_C,\n        PATHFACTORY_LANGUAGE,\n        KEY_ACCOUNT_C,\n        ACCOUNT_FAMILY_HIGHEST_ZSUB_END_DATE_C,\n        USER_C,\n        UNKNOWN_ACCOUNT_C,\n        CUSTOMER_HEIRARCHY_C,\n        ZI_DO_NOT_CALL_MOBILE_PHONE_C,\n        ZI_DO_NOT_CALL_DIRECT_PHONE_C,\n        CAMPAIGN_NOTES_C,\n        PQLNAMESPACECREATORJOBDESCRIPTION_C,\n        PQLNAMESOF_INTEGRATIONS_INSTALLED_C,\n        PQLNUMBEROF_INTEGRATIONS_INSTALLED_C,\n        EMAIL_DOMAIN,\n        HIDDEN_DIRECT_PHONE_NUMBER_DNC_C,\n        VARTOPIA_DRS_PARTNER_PROSPECT_STATUS_C,\n        IS_FIRST_ORDER_PERSON_C,\n        PARTNER_MANAGED_C,\n        PROSPECT_HEIRARCHY_C,\n        FORMER_CUSTOMER_ACCOUNT_C,\n        TEAM_OPS_OPT_IN_C,\n        CDB_USER_IS_MEMBER_OF_PUBLIC_ULTIMATE_C,\n        CDB_USER_IS_MEMBER_OF_PRIVATE_ULTIMATE_C,\n        PTPT_PAST_SCORE_GROUP_C,\n        PTPT_NAMESPACE_ID_C,\n        PTPT_SCORE_DATE_C,\n        PTPT_INSIGHTS_C,\n        PTPT_SCORE_GROUP_C,\n        IMPARTNER_WEB_FORM_C,\n        VARTOPIA_DRS_PARTNER_PROSPECT_ADMIN_EMAIL_C,\n        VARTOPIA_DRS_VARTOPIA_TRANSACTION_ID_C,\n        INELIGIBLE_REASON_C,\n        ZOOM_APP_IS_CREATED_BY_ZOOM_APP_C,\n        CHANNEL_RECORD_C,\n        EMAIL_BOUNCE_CATEGORY,\n        EMAIL_BOUNCES,\n        EMAIL_BOUNCE_DETAILS,\n        EMAIL_BOUNCE_SUBJECT_LANE,\n        EMAIL_BOUNCE_DATE_MKTO,\n        DELIVERS_AFTER_BOUNCES,\n        EMAIL_DELIVERED_AFTER_BOUNCE,\n        VARTOPIA_ACCEPTED_DATE_C,\n        VARTOPIA_CREATED_DATE_C,\n        VARTOPIA_RECALL_DATE_C,\n        WORKING_CITY_C,\n        WORKING_STATE_C,\n        O_N_24_QA,\n        O_N_24_SURVEY_QUESTION_4,\n        O_N_24_SURVEY_QUESTION_5,\n        O_N_24_SURVEY_QUESTION_1,\n        O_N_24_SURVEY_QUESTION_2,\n        O_N_24_SURVEY_QUESTION_3,\n        ON_24_NOTE_UPLOAD_ACTIVATE,\n        O_N_24_SURVEY_ANSWER_4,\n        O_N_24_SURVEY_ANSWER_5,\n        ON_24_POLL_QUESTION_1,\n        ON_24_POLL_QUESTION_4,\n        O_N_24_SURVEY_ANSWER_1,\n        ON_24_POLL_QUESTION_5,\n        O_N_24_SURVEY_ANSWER_2,\n        ON_24_POLL_QUESTION_2,\n        O_N_24_SURVEY_ANSWER_3,\n        ON_24_POLL_QUESTION_3,\n        ON_24_POLL_COMBINE_3,\n        ON_24_POLL_ANSWER_2,\n        ON_24_POLL_ANSWER_3,\n        ON_24_POLL_ANSWER_4,\n        ON_24_POLL_COMBINE_1,\n        ON_24_POLL_ANSWER_5,\n        ON_24_POLL_COMBINE_2,\n        ON_24_POLL_ANSWER_1,\n        ON_24_SURVEY_COMBINE_3,\n        ON_24_SURVEY_COMBINE_2,\n        ON_24_SURVEY_COMBINE_1,\n        PARTNER_TYPE_C,\n        LAST_LEAD_SOURCE_C,\n        SCORE_C,\n        LAST_LEAD_SOURCE_DETAILS_C,\n        CDB_USER_LIMIT_ENFORCEMENT_DATE_C,\n        CDB_USER_LIMIT_NOTIFICATION_DATE_C,\n        PREFERRED_LANGUAGE_C,\n        ACCOUNT_DEMOGRAPHICS_SALES_SEGMENT_2_C,\n        CDB_USER_LIMIT_IMPACTED_NAMESPACE_C,\n        PUBSEC_TYPE_C_CONTACT,\n        PUBSEC_TYPE_C,\n        HIDDEN_MOBILE_PHONE_NUMBER_DNC_C,\n        STAMPED_ACCOUNT_DEMO_SEGMENT_C,\n        RECORD_SALES_OWNER_EMAIL,\n        VARTOPIA_DRS_CLOSED_LOST_REGISTRATIONS_PERCENTAGE_C_CONTACT,\n        VARTOPIA_DRS_EXPIRED_REGISTRATIONS_PERCENTAGE_C,\n        VARTOPIA_DRS_APPROVED_REGISTRATION_PERCENTAGE_C_CONTACT,\n        VARTOPIA_DRS_CLOSED_WON_REGISTRATIONS_PERCENTAGE_C,\n        VARTOPIA_DRS_CLOSED_WON_REGISTRATIONS_PERCENTAGE_C_CONTACT,\n        VARTOPIA_DRS_APPROVED_REGISTRATION_PERCENTAGE_C,\n        VARTOPIA_DRS_CLOSED_LOST_REGISTRATIONS_PERCENTAGE_C,\n        VARTOPIA_DRS_DENIED_REGISTRATIONS_PECENTAGE_C,\n        VARTOPIA_DRS_DENIED_REGISTRATIONS_PECENTAGE_C_CONTACT,\n        VARTOPIA_DRS_EXPIRED_REGISTRATIONS_PERCENTAGE_C_CONTACT,\n        UNSUBSCRIBE_ALL_MARKETING,\n        COMPANY_ADDRESS_POSTAL_CODE_C,\n        COMPANY_ADDRESS_CITY_C,\n        COMPANY_ADDRESS_STATE_C,\n        COMPANY_ADDRESS_COUNTRY_C,\n        COMPANY_ADDRESS_STREET_C,\n        ACCOUNT_DEMOGRAPHICS_UPA_STATE_NAME_C,\n        PARTNER_RECALLED_C,\n        ACCOUNT_DEMOGRAPHICS_UPA_COUNTRY_NAME_C,\n        OUTREACH_DATE_ADDED_TO_SEQUENCE_C,\n        TRAC_HIER_DOMAIN_C,\n        TRAC_HIER_OWNER_C,\n        TRAC_HIER_EXCLUDED_FROM_ACCOUNT_HIERARCHIES_C,\n        TRAC_HIER_GLOBAL_ULTIMATE_GROUPING_ID_C,\n        TRAC_HIER_RE_RUN_TRACTION_HIERARCHIES_C,\n        TRAC_HIER_DISABLE_HIERARCHIES_C,\n        TRAC_HIER_HIERARCHY_ID_C,\n        TRAC_HIER_PARENT_COMPANY_C,\n        TRAC_HIER_DUNS_GLOBAL_ULTIMATE_PARENT_C,\n        TRAC_RTC_DISABLE_COMPLETE_C,\n        TRAC_RTC_RESTORE_TO_ORIGINAL_LEAD_C,\n        TRAC_RTC_TIME_DELAY_PROCESSED_C_CONTACT,\n        TRAC_RTC_REALTIME_CLEAN_FAILED_C,\n        TRAC_RTC_REALTIME_CLEAN_PROCESSED_C,\n        TRAC_RTC_DATE_OF_LAST_COMPLETION_C_CONTACT,\n        TRAC_RTC_REALTIME_CLEAN_CONTACT_MATCH_C,\n        TRAC_RTC_REALTIME_CLEAN_FAILED_C_CONTACT,\n        TRAC_RTC_TRACTION_COMPLETE_STATUS_TEXT_C,\n        TRAC_RTC_TIME_DELAY_PROCESSED_C,\n        TRAC_RTC_TRACTION_COMPLETE_DOMAIN_C_CONTACT,\n        TRAC_RTC_WEBSITE_DOMAIN_C,\n        TRAC_RTC_TRACTION_COMPLETE_STATUS_C,\n        TRAC_RTC_ORIGINAL_COMPLETION_DATE_C_CONTACT,\n        TRAC_RTC_REALTIME_CLEAN_COMPANY_MATCH_C,\n        TRAC_RTC_RE_RUN_REALTIME_CLEAN_C_CONTACT,\n        TRAC_RTC_TRACTION_COMPLETE_DOMAIN_C,\n        TRAC_RTC_RE_RUN_REALTIME_CLEAN_C,\n        TRAC_RTC_TRACTION_COMPLETE_LEAD_MATCH_C,\n        TRAC_RTC_DISABLE_COMPLETE_C_CONTACT,\n        TRAC_RTC_TRACTION_COMPLETE_CUSTOM_MATCH_C,\n        TRAC_RTC_REALTIME_CLEAN_PROCESSED_C_CONTACT,\n        TRAC_RTC_ORIGINAL_LEAD_DATA_C,\n        TRAC_RTC_MATCH_TYPE_C,\n        TRAC_RTC_REALTIME_CLEAN_ERROR_MESSAGE_C,\n        TRAC_RTC_ACCOUNT_C,\n        TRAC_RTC_ORIGINAL_COMPLETION_DATE_C,\n        TRAC_RTC_DATE_OF_LAST_COMPLETION_C,\n        TRAC_RTC_TRACTION_COMPLETE_MATCH_KEY_C,\n        TRAC_HIER_PRIMARY_MASTER_ACCOUNT_C,\n        TRAC_RTC_REALTIME_CLEAN_ERROR_MESSAGE_C_CONTACT,\n        SINGLE_USE_FIELD,\n        ENGAGEMENT_MANAGER_C,\n        COGNISM_EMAIL_C,\n        ZI_EMAIL_C,\n        TRAC_HIER_LAST_BUILD_HIERARCHY_DATE_C,\n        CANADA_EMAIL_NO_MATCH,\n        CANADA_ZI,\n        CANADA_ZI_EMAIL_NO_MATCH,\n        PTP_PAST_INSIGHTS_C,\n        PTP_INSIGHTS_C,\n        PTP_SCORE_DATE_C,\n        PTP_NAMESPACE_ID_C,\n        PTP_SCORE_GROUP_C,\n        PTP_PAST_SCORE_GROUP_C,\n        ZI_RECORD_PURCHASED_DATE_C,\n        PTP_DAYS_SINCE_TRIAL_START_C,\n        PHOTOGRAPHY_WAIVER,\n        CDB_GROUP_MAINTAINER_OF_SAA_S_PAID_TIER_C,\n        DIETARY_ALLERGY_YESNO,\n        DIETARY_RESTRICTION_ALLERGY,\n        DIETARY_RESTRICTION_DETAIL,\n        PHYSICAL_ASSISTANCE_NEEDS,\n        EMERGENCY_CONTACT,\n        EMERGENCY_CONTACT_PHONE_NUMBER,\n        INTEGER_OPEN_FIELD,\n        TEXT_AREA_OPEN_FIELD,\n        STARTUPS_PROGRAM_STATUS_C,\n        DIETARY_RESTRICTIONS_OTHER_2,\n        PLANNING_TO_ATTEND_YES_NO,\n        SPECIAL_EVENT_INVITE,\n        EVENT_DATE_CODE_5,\n        PHYSICAL_ASSISTANCE_DETAILS,\n        CONTENT_SYNDICATION_ASSET,\n        ZI_ULTIMATE_PARENT_ID_C,\n        ZI_ULTIMATE_PARENT_NAME_C,\n        JOIN_FOR_MAIN_EVENT,\n        TRAC_RTC_FIRST_RESPONSE_TIME_IN_SECONDS_C_CONTACT,\n        TRAC_RTC_FIRST_RESPONSE_TIME_START_C_CONTACT,\n        TRAC_RTC_RESPONSE_TIME_WITHIN_BUSINESS_HOURS_C_CONTACT,\n        ZOOM_INFO_ZILIST_TAG,\n        CPE_CREDIT,\n        IMPARTNER_PRM_PARTNER_ACCOUNT_C,\n        INTEGRATE_LEAD_ID,\n        VARTOPIA_DRS_ACTIVATE_ACCOUNT_MAPPING_C,\n        VARTOPIA_DRS_REJECTION_REASON_C,\n        NONPROFITMISSION,\n        NONPROFITFOCUSAREA,\n        CANADA_EMAIL_CHECK,\n        DAYS_SINCE_LAST_ACTIVITY_QUALIFIED_C,\n        SHIRT_SIZE_C,\n        TRIAL_LICENSE_KEY_2023,\n        CDB_DAYS_SINCE_SELF_MANAGED_OWNER_SIGNUP_C,\n        PTP_SOURCE_C,\n        CDB_DAYS_SINCE_SAA_S_SIGNUP_C,\n        MATCHABLE_GENERIC_EMAIL,\n        IS_DEFAULTED_TRIAL_C,\n        SCORETESTING,\n        DEMOGRAPHIC_SCORE_AT_MQL,\n        BEHAVIOR_SCORE_AT_MQL,\n        TRAC_RTC_TRACTION_COMPLETE_PAUSED_C_CONTACT,\n        TRAC_RTC_TRACTION_COMPLETE_PAUSED_C,\n        SECURITY_UNSUBSCRIBE,\n        G_2_ACTION,\n        SAFEBASE_CONTACT_REQUIRED_FOR_ACCOUNT_CREATION_C_CONTACT,\n        SAFEBASE_INVITED_C,\n        SAFEBASE_NDA_DONE_C,\n        SAFEBASE_CONTACT_REQUIRED_FOR_ACCOUNT_CREATION_C,\n        SUB_INDUSTRY_ACCT_HIERARCHY_C,\n        LAST_CRMPARTNER_ID,\n        SUBSCRIBE_COMMUNITY_NEWSLETTER,\n        ABM_TIER_C_LEAD,\n        SPECIAL_REQUESTS,\n        LEAD_SCORE_CLASSIFICATION_C,\n        PARTNER_TRIAL,\n        GITLAB_HANDLE_BETA,\n        GITLAB_PERSONA_BETA,\n        GITLAB_PROJECT_ID_BETA,\n        GITLAB_PERSONA_2_BETA\n\n    FROM source\n    QUALIFY ROW_NUMBER() OVER(PARTITION BY id ORDER BY updated_at DESC) = 1\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.marketo.marketo_lead_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.809624Z", "completed_at": "2025-06-09T18:50:40.848944Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.901699Z", "completed_at": "2025-06-09T18:50:41.086808Z"}], "thread_id": "Thread-14", "execution_time": 1.0528268814086914, "adapter_response": {}, "message": "Database Error in model qualtrics_question (models/sources/qualtrics/qualtrics_question.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,206)..Location(1,213)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,214)..Location(1,219)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,223)..Location(1,233)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,234)..Location(1,242)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,245)..Location(1,250)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,254)..Location(1,258)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,263)..Location(1,264)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/qualtrics/qualtrics_question.sql", "failures": null, "unique_id": "model.gitlab_snowflake.qualtrics_question", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.qualtrics.questions\n\n), questions AS (\n\n    SELECT \n      d.value AS data_by_row,\n      uploaded_at\n    FROM source,\n    LATERAL FLATTEN(INPUT => PARSE_JSON(jsontext), outer => true) d\n  \n), parsed AS (\n\n    SELECT \n      data_by_row['survey_id']::VARCHAR               AS survey_id,\n      data_by_row['QuestionID']::VARCHAR              AS question_id,\n      data_by_row['QuestionDescription']::VARCHAR     AS question_description,\n      data_by_row['Choices']::ARRAY                   AS answer_choices\n    FROM questions\n    QUALIFY ROW_NUMBER() OVER (\n      PARTITION BY question_id\n      ORDER BY uploaded_at DESC\n    ) = 1\n\n)\nSELECT * \nFROM parsed", "relation_name": "EMBUCKET.qualtrics.qualtrics_question", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.173224Z", "completed_at": "2025-06-09T18:50:35.260742Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.335853Z", "completed_at": "2025-06-09T18:50:42.834449Z"}], "thread_id": "Thread-19", "execution_time": 7.788090944290161, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.ntv_projects_part_of_product", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT * \n  FROM EMBUCKET.seed_engineering.projects_part_of_product\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.specific.ntv_projects_part_of_product", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:35.193403Z", "completed_at": "2025-06-09T18:50:35.288891Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:35.343779Z", "completed_at": "2025-06-09T18:50:42.861259Z"}], "thread_id": "Thread-1", "execution_time": 7.8265368938446045, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_customers_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite_fivetran.customers\n\n), renamed AS (\n\n    SELECT\n      --Primary Key\n      customer_id::FLOAT                 AS customer_id,\n\n      --Foreign Keys\n      subsidiary_id::FLOAT               AS subsidiary_id,\n      currency_id::FLOAT                 AS currency_id,\n      parent_id::FLOAT                   AS parent_id,\n      department_id::FLOAT               AS department_id,\n\n      --Info\n      companyname::VARCHAR               AS customer_name,\n      name::VARCHAR                      AS customer_alt_name,\n      full_name::VARCHAR                 AS customer_full_name,\n      rev_rec_forecast_rule_id::FLOAT    AS rev_rec_forecast_rule_id,\n\n      --deposit_balance_foreign\n      openbalance::FLOAT                 AS customer_balance,\n      days_overdue::FLOAT                AS days_overdue,\n      _fivetran_deleted                AS is_fivetran_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.netsuite.netsuite_customers_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.522409Z", "completed_at": "2025-06-09T18:50:41.584781Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.618531Z", "completed_at": "2025-06-09T18:50:42.875898Z"}], "thread_id": "Thread-15", "execution_time": 1.4589660167694092, "adapter_response": {}, "message": "Database Error in model servicenow_prd_incident_task_source (models/sources/servicenow_prd/servicenow_prd_incident_task_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.servicenow_prd.incident_task' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/servicenow_prd/servicenow_prd_incident_task_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.servicenow_prd_incident_task_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.servicenow_prd.incident_task\n),\n\nrenamed AS (\n  SELECT\n    sys_id::VARCHAR                AS sys_id,\n    incident_value::VARCHAR        AS incident_value,\n    sys_created_on::TIMESTAMP      AS sys_created_on,\n    sys_updated_on::TIMESTAMP      AS sys_updated_on,\n    _fivetran_synced::TIMESTAMP    AS _fivetran_synced,\n    _fivetran_deleted::BOOLEAN     AS _fivetran_deleted\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.servicenow_prd.servicenow_prd_incident_task_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.419797Z", "completed_at": "2025-06-09T18:50:41.447061Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.460741Z", "completed_at": "2025-06-09T18:50:42.902154Z"}], "thread_id": "Thread-2", "execution_time": 1.5509231090545654, "adapter_response": {}, "message": "Database Error in model servicenow_prd_incident_source (models/sources/servicenow_prd/servicenow_prd_incident_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.servicenow_prd.incident' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/servicenow_prd/servicenow_prd_incident_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.servicenow_prd_incident_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.servicenow_prd.incident\n),\n\nrenamed AS (\n  SELECT\n    sys_id::VARCHAR                   AS sys_id,\n    rfc_value::VARCHAR                AS rfc_value,\n    reopened_time::TIMESTAMP          AS reopened_time,\n    severity::NUMBER                  AS severity,\n    caller_id_value::VARCHAR          AS caller_id_value,\n    parent_incident_value::VARCHAR    AS parent_incident_value,\n    sys_updated_on::TIMESTAMP         AS sys_updated_on,\n    incident_state::NUMBER            AS incident_state,\n    close_code::VARCHAR               AS close_code,\n    calendar_stc::NUMBER              AS calendar_stc,\n    resolved_at::TIMESTAMP            AS resolved_at,\n    u_vendor::VARCHAR                 AS u_vendor,\n    origin_table::VARCHAR             AS origin_table,\n    resolved_by_value::VARCHAR        AS resolved_by_value,\n    u_on_behalf_of_value::VARCHAR     AS u_on_behalf_of_value,\n    sys_created_on::TIMESTAMP         AS sys_created_on,\n    problem_id_value::VARCHAR         AS problem_id_value,\n    child_incidents::NUMBER           AS child_incidents,\n    reopen_count::NUMBER              AS reopen_count,\n    caused_by_value::VARCHAR          AS caused_by_value,\n    subcategory::VARCHAR              AS subcategory,\n    business_stc::NUMBER              AS business_stc,\n    hold_reason::NUMBER               AS hold_reason,\n    u_vendor_ticket_number::VARCHAR   AS u_vendor_ticket_number,\n    reopened_by_value::VARCHAR        AS reopened_by_value,\n    _fivetran_synced::TIMESTAMP       AS _fivetran_synced,\n    _fivetran_deleted::BOOLEAN        AS _fivetran_deleted\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.servicenow_prd.servicenow_prd_incident_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.452712Z", "completed_at": "2025-06-09T18:50:41.477522Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.494303Z", "completed_at": "2025-06-09T18:50:42.947788Z"}], "thread_id": "Thread-27", "execution_time": 1.556542158126831, "adapter_response": {}, "message": "Database Error in model servicenow_prd_problem_task_source (models/sources/servicenow_prd/servicenow_prd_problem_task_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.servicenow_prd.problem_task' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/servicenow_prd/servicenow_prd_problem_task_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.servicenow_prd_problem_task_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.servicenow_prd.problem_task\n),\n\nrenamed AS (\n  SELECT\n    sys_id::VARCHAR                AS sys_id,\n    started_by_value::VARCHAR      AS started_by_value,\n    started_at::TIMESTAMP          AS started_at,\n    fix_notes::VARCHAR             AS fix_notes,\n    vendor_value::VARCHAR          AS vendor_value,\n    reopen_count::NUMBER           AS reopen_count,\n    sys_updated_on::TIMESTAMP      AS sys_updated_on,\n    close_code::VARCHAR            AS close_code,\n    sys_created_on::TIMESTAMP      AS sys_created_on,\n    reopened_by_value::VARCHAR     AS reopened_by_value,\n    problem_task_type::VARCHAR     AS problem_task_type,\n    reopened_at::TIMESTAMP         AS reopened_at,\n    problem_value::VARCHAR         AS problem_value,\n    cause_code::VARCHAR            AS cause_code,\n    _fivetran_synced::TIMESTAMP    AS _fivetran_synced,\n    _fivetran_deleted::BOOLEAN     AS _fivetran_deleted\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.servicenow_prd.servicenow_prd_problem_task_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.026452Z", "completed_at": "2025-06-09T18:50:40.060328Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.112229Z", "completed_at": "2025-06-09T18:50:43.016170Z"}], "thread_id": "Thread-16", "execution_time": 3.0406429767608643, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.prep_dim_subscription_snapshot_base", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.dim_subscription_snapshot\n    \n)\n\nSELECT *\nFROM base", "relation_name": "EMBUCKET.common_prep.prep_dim_subscription_snapshot_base", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.550296Z", "completed_at": "2025-06-09T18:50:41.592205Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.632322Z", "completed_at": "2025-06-09T18:50:42.968364Z"}], "thread_id": "Thread-21", "execution_time": 1.5379912853240967, "adapter_response": {}, "message": "Database Error in model servicenow_prd_problem_source (models/sources/servicenow_prd/servicenow_prd_problem_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.servicenow_prd.problem' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/servicenow_prd/servicenow_prd_problem_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.servicenow_prd_problem_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.servicenow_prd.problem\n),\n\nrenamed AS (\n  SELECT\n    sys_id::VARCHAR                           AS sys_id,\n    rfc_value::VARCHAR                        AS rfc_value,\n    confirmed_by_value::VARCHAR               AS confirmed_by_value,\n    confirmed_at::TIMESTAMP                   AS confirmed_at,\n    sys_updated_on::TIMESTAMP                 AS sys_updated_on,\n    duplicate_of_value::VARCHAR               AS duplicate_of_value,\n    workaround_communicated_at::TIMESTAMP     AS workaround_communicated_at,\n    fix_at::TIMESTAMP                         AS fix_at,\n    resolved_at::TIMESTAMP                    AS resolved_at,\n    fix_communicated_by_value::VARCHAR        AS fix_communicated_by_value,\n    resolved_by_value::VARCHAR                AS resolved_by_value,\n    sys_created_on::TIMESTAMP                 AS sys_created_on,\n    fix_by_value::VARCHAR                     AS fix_by_value,\n    workaround_applied::BOOLEAN               AS workaround_applied,\n    fix_communicated_at::TIMESTAMP            AS fix_communicated_at,\n    related_incidents::NUMBER                 AS related_incidents,\n    reopen_count::NUMBER                      AS reopen_count,\n    subcategory::VARCHAR                      AS subcategory,\n    known_error::BOOLEAN                      AS known_error,\n    first_reported_by_task_value::VARCHAR     AS first_reported_by_task_value,\n    workaround_communicated_by_value::VARCHAR AS workaround_communicated_by_value,\n    category::VARCHAR                         AS category,\n    reopened_by_value::VARCHAR                AS reopened_by_value,\n    reopened_at::TIMESTAMP                    AS reopened_at,\n    resolution_code::VARCHAR                  AS resolution_code,\n    major_problem::BOOLEAN                    AS major_problem,\n    _fivetran_synced::TIMESTAMP               AS _fivetran_synced,\n    _fivetran_deleted::BOOLEAN                AS _fivetran_deleted\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.servicenow_prd.servicenow_prd_problem_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.535203Z", "completed_at": "2025-06-09T18:50:41.578698Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.612977Z", "completed_at": "2025-06-09T18:50:42.994403Z"}], "thread_id": "Thread-13", "execution_time": 1.5414152145385742, "adapter_response": {}, "message": "Database Error in model servicenow_prd_sys_user_group_source (models/sources/servicenow_prd/servicenow_prd_sys_user_group_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.servicenow_prd.sys_user_group' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/servicenow_prd/servicenow_prd_sys_user_group_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.servicenow_prd_sys_user_group_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.servicenow_prd.sys_user_group\n),\n\nrenamed AS (\n  SELECT\n    sys_id::VARCHAR                   AS sys_id,\n    sys_updated_by::VARCHAR           AS sys_updated_by,\n    default_assignee_value::VARCHAR   AS default_assignee_value,\n    name::VARCHAR                     AS name,\n    manager_value::VARCHAR            AS manager_value,\n    include_members::BOOLEAN          AS include_members,\n    sys_updated_on::TIMESTAMP         AS sys_updated_on,\n    sys_mod_count::NUMBER             AS sys_mod_count,\n    cost_center_value::VARCHAR        AS cost_center_value,\n    source::VARCHAR                   AS source,\n    sys_created_on::TIMESTAMP         AS sys_created_on,\n    exclude_manager::BOOLEAN          AS exclude_manager,\n    type::VARCHAR                     AS type,\n    description::VARCHAR              AS description,\n    parent_value::VARCHAR             AS parent_value,\n    sys_created_by::VARCHAR           AS sys_created_by,\n    active::BOOLEAN                   AS active,\n    _fivetran_synced::TIMESTAMP       AS _fivetran_synced,\n    _fivetran_deleted::BOOLEAN        AS _fivetran_deleted\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.servicenow_prd.servicenow_prd_sys_user_group_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.375152Z", "completed_at": "2025-06-09T18:50:41.379328Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.380027Z", "completed_at": "2025-06-09T18:50:43.007669Z"}], "thread_id": "Thread-12", "execution_time": 1.6937010288238525, "adapter_response": {}, "message": "Database Error in model sensitive_queries_tags (models/sources/data_classification/sensitive_queries_tags.sql)\n  000200: DataFusion error: Error during planning: table 'snowflake.account_usage.tag_references' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/data_classification/sensitive_queries_tags.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sensitive_queries_tags", "compiled": true, "compiled_code": "\n\nWITH tags AS (\n\n  SELECT tag_name::VARCHAR        AS tag_name,\n         tag_value::VARCHAR       AS tag_value,\n         tag_schema::VARCHAR      AS tag_schema,\n         object_database::VARCHAR AS accessed_database,\n         object_schema::VARCHAR   AS accessed_schema,\n         object_name::VARCHAR     AS accessed_table,\n         column_name::VARCHAR     AS accessed_column\n  FROM snowflake.account_usage.tag_references\n  WHERE object_database IN ('RAW', 'PREP', 'PROD')\n\n), mnpi_tags AS (\n\n  SELECT 'MNPI'::VARCHAR   AS classification_type,\n         tag_name          AS tag_name,\n         tag_value         AS tag_value,\n         accessed_database AS accessed_database,\n         accessed_schema   AS accessed_schema,\n         accessed_table    AS accessed_table,\n         NULL              AS accessed_column\n  FROM tags\n  WHERE tag_name  = 'MNPI_DATA'\n  AND tag_value = 'yes'\n\n), pii_tags AS (\n\nSELECT 'PII'::VARCHAR    AS classification_type,\n       tag_name          AS tag_name,\n       tag_value         AS tag_value,\n       accessed_database AS accessed_database,\n       accessed_schema   AS accessed_schema,\n       accessed_table    AS accessed_table,\n       accessed_column   AS accessed_column\n  FROM tags\n  WHERE tag_schema   = 'CORE'\n  AND tag_name IN ('PRIVACY_CATEGORY', 'SEMANTIC_CATEGORY')\n\n), unioned AS (\n\n  SELECT *\n  FROM mnpi_tags\n  UNION\n  SELECT *\n  FROM pii_tags\n\n)\n\n  SELECT *\n  FROM unioned", "relation_name": "EMBUCKET.data_classification.sensitive_queries_tags", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.345067Z", "completed_at": "2025-06-09T18:50:41.402785Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.403184Z", "completed_at": "2025-06-09T18:50:43.009482Z"}], "thread_id": "Thread-25", "execution_time": 1.7244229316711426, "adapter_response": {}, "message": "Database Error in model rspec_overall_time_source (models/sources/rspec/rspec_overall_time_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,194)..Location(1,206)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/rspec/rspec_overall_time_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.rspec_overall_time_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.rspec.overall_time\n\n), renamed AS (\n\n    SELECT\n      commit_hash::VARCHAR                  AS commit,\n      commit_time::TIMESTAMP_TZ             AS commit_at_time,\n      total_time::FLOAT                     AS total_time_taken_seconds,\n      number_of_tests::FLOAT                AS number_of_tests,\n      time_per_single_test::FLOAT           AS time_per_single_test_seconds,\n      total_queries::FLOAT                  AS total_queries,\n      total_query_time::FLOAT               AS total_query_time_seconds,\n      total_requests::FLOAT                 AS total_requests,\n      _UPDATED_AT::FLOAT                    AS updated_at\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.rspec.rspec_overall_time_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.566825Z", "completed_at": "2025-06-09T18:50:41.611584Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.642599Z", "completed_at": "2025-06-09T18:50:43.039814Z"}], "thread_id": "Thread-3", "execution_time": 1.581888198852539, "adapter_response": {}, "message": "Database Error in model servicenow_prd_sla_source (models/sources/servicenow_prd/servicenow_prd_sla_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.servicenow_prd.sla' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/servicenow_prd/servicenow_prd_sla_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.servicenow_prd_sla_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.servicenow_prd.sla\n),\n\nrenamed AS (\n  SELECT\n    sys_id::VARCHAR                   AS sys_id,\n    users_value::VARCHAR              AS users_value,\n    signatures::VARCHAR               AS signatures,\n    technical_lead_value::VARCHAR     AS technical_lead_value,\n    sys_updated_on::TIMESTAMP         AS sys_updated_on,\n    change_procedures::VARCHAR        AS change_procedures,\n    ends::DATE                        AS ends,\n    begins::DATE                      AS begins,\n    reponsibilities::VARCHAR          AS reponsibilities,\n    calendar_value::VARCHAR           AS calendar_value,\n    contract_value::VARCHAR           AS contract_value,\n    sys_created_on::TIMESTAMP         AS sys_created_on,\n    number::VARCHAR                   AS number,\n    functional_area::VARCHAR          AS functional_area,\n    service_goals::VARCHAR            AS service_goals,\n    security_notes::VARCHAR           AS security_notes,\n    responsible_user_value::VARCHAR   AS responsible_user_value,\n    department_value::VARCHAR         AS department_value,\n    description::VARCHAR              AS description,\n    active::BOOLEAN                   AS active,\n    sys_created_by::VARCHAR           AS sys_created_by,\n    notes::VARCHAR                    AS notes,\n    sys_updated_by::VARCHAR           AS sys_updated_by,\n    sys_class_name::VARCHAR           AS sys_class_name,\n    maintenance_value::VARCHAR        AS maintenance_value,\n    transaction_load::FLOAT           AS transaction_load,\n    name::VARCHAR                     AS name,\n    business_unit::VARCHAR            AS business_unit,\n    incident_procedures::VARCHAR      AS incident_procedures,\n    disaster_recovery::VARCHAR        AS disaster_recovery,\n    sys_mod_count::NUMBER             AS sys_mod_count,\n    informed_user_value::VARCHAR      AS informed_user_value,\n    short_description::VARCHAR        AS short_description,\n    avail_pct::FLOAT                  AS avail_pct,\n    next_review::DATE                 AS next_review,\n    response_time::FLOAT              AS response_time,\n    business_lead_value::VARCHAR      AS business_lead_value,\n    consultant_user_value::VARCHAR    AS consultant_user_value,\n    accountable_user_value::VARCHAR   AS accountable_user_value,\n    _fivetran_synced::TIMESTAMP       AS _fivetran_synced,\n    _fivetran_deleted::BOOLEAN        AS _fivetran_deleted\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.servicenow_prd.servicenow_prd_sla_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.594432Z", "completed_at": "2025-06-09T18:50:41.640773Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.693900Z", "completed_at": "2025-06-09T18:50:43.025727Z"}], "thread_id": "Thread-31", "execution_time": 1.5635650157928467, "adapter_response": {}, "message": "Database Error in model sfdc_bizible_person_source (models/sources/sfdc/sfdc_bizible_person_source.sql)\n  000200: DataFusion error: This feature is not implemented: QUALIFY\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_bizible_person_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_bizible_person_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.bizible2__bizible_person__c\n\n), deduped AS (\n\n    SELECT \n      base.id                              AS person_id,\n      CASE\n        WHEN base.bizible2__lead__c IS NULL THEN contact.bizible2__lead__c\n        ELSE base.bizible2__lead__c\n      END                                  AS bizible_lead_id,\n      base.bizible2__lead__c               AS base_lead_id,\n      contact.bizible2__lead__c            AS contact_lead_id,\n      base.bizible2__contact__c            AS bizible_contact_id,\n      base.isdeleted::BOOLEAN              AS is_deleted\n      \n    FROM source AS base\n    LEFT JOIN source AS contact\n        ON base.bizible2__contact__c = contact.bizible2__contact__c\n    WHERE is_deleted = 'FALSE' \n    QUALIFY (ROW_NUMBER() OVER(PARTITION BY bizible_contact_id ORDER BY base.lastmodifieddate DESC, base.createddate DESC) = 1\n        OR ROW_NUMBER() OVER(PARTITION BY bizible_lead_id ORDER BY base.lastmodifieddate DESC, base.createddate DESC) = 1 )\n\n), final AS (\n\n    SELECT\n      person_id,\n      bizible_lead_id,\n      bizible_contact_id,\n      is_deleted\n      \n    FROM deduped\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.sfdc.sfdc_bizible_person_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.580673Z", "completed_at": "2025-06-09T18:50:41.624897Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.669186Z", "completed_at": "2025-06-09T18:50:43.022788Z"}], "thread_id": "Thread-4", "execution_time": 1.5645151138305664, "adapter_response": {}, "message": "Database Error in model sfdc_account_history_source (models/sources/sfdc/sfdc_account_history_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'lower(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tlower(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_account_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_account_history_source", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.accounthistory\n\n), renamed AS (\n\n    SELECT\n      accountid                     AS account_id,\n      id                            AS account_history_id,\n      createddate                   AS field_modified_at,\n      LOWER(field)                  AS account_field,\n      newvalue__fl                  AS new_value_float,\n      newvalue__st                  AS new_value_string,\n      newvalue__bo                  AS new_value_boolean,\n      oldvalue__fl                  AS old_value_float,\n      oldvalue__st                  AS old_value_string,\n      oldvalue__bo                  AS old_value_boolean,\n      COALESCE(\n        newvalue__fl::VARCHAR,\n        newvalue__st::VARCHAR,\n        newvalue__bo::VARCHAR\n      )                             AS new_value,\n      COALESCE(\n        oldvalue__fl::VARCHAR,\n        oldvalue__st::VARCHAR,\n        oldvalue__bo::VARCHAR\n      )                             AS old_value,\n      isdeleted                     AS is_deleted,\n      createdbyid                   AS created_by_id\n    FROM base  \n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_account_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.572403Z", "completed_at": "2025-06-09T18:50:41.622018Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.650258Z", "completed_at": "2025-06-09T18:50:43.051341Z"}], "thread_id": "Thread-9", "execution_time": 1.5842220783233643, "adapter_response": {}, "message": "Database Error in model servicenow_prd_sys_user_source (models/sources/servicenow_prd/servicenow_prd_sys_user_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.servicenow_prd.sys_user' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/servicenow_prd/servicenow_prd_sys_user_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.servicenow_prd_sys_user_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.servicenow_prd.sys_user\n),\n\nrenamed AS (\n  SELECT\n    sys_id::VARCHAR                       AS sys_id,\n    sso_source::VARCHAR                   AS sso_source,\n    default_perspective_value::VARCHAR    AS default_perspective_value,\n    cost_center_value::VARCHAR            AS cost_center_value,\n    hashed_user_id::VARCHAR               AS hashed_user_id,\n    sys_created_on::TIMESTAMP             AS sys_created_on,\n    active::BOOLEAN                       AS active,\n    sys_created_by::VARCHAR               AS sys_created_by,\n    sys_class_name::VARCHAR               AS sys_class_name,\n    sys_mod_count::NUMBER                 AS sys_mod_count,\n    date_format::VARCHAR                  AS date_format,\n    time_format::VARCHAR                  AS time_format,\n    locked_out::BOOLEAN                   AS locked_out,\n    schedule_value::VARCHAR               AS schedule_value,\n    manager_value::VARCHAR                AS manager_value,\n    sys_updated_on::TIMESTAMP             AS sys_updated_on,\n    u_gl_department::VARCHAR              AS u_gl_department,\n    failed_attempts::NUMBER               AS failed_attempts,\n    last_login::DATE                      AS last_login,\n    sys_domain_path::VARCHAR              AS sys_domain_path,\n    sys_domain_value::VARCHAR             AS sys_domain_value,\n    sys_updated_by::VARCHAR               AS sys_updated_by,\n    internal_integration_user::BOOLEAN    AS internal_integration_user,\n    u_gl_division::VARCHAR                AS u_gl_division,\n    source::VARCHAR                       AS source,\n    federated_id::VARCHAR                 AS federated_id,\n    accumulated_roles::VARCHAR            AS accumulated_roles,\n    enable_multifactor_authn::BOOLEAN     AS enable_multifactor_authn,\n    u_job_start_date::DATE                AS u_job_start_date,\n    email::VARCHAR                        AS email,\n    _fivetran_synced::TIMESTAMP           AS _fivetran_synced,\n    _fivetran_deleted::BOOLEAN            AS _fivetran_deleted\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.servicenow_prd.servicenow_prd_sys_user_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.087224Z", "completed_at": "2025-06-09T18:50:40.824694Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.865172Z", "completed_at": "2025-06-09T18:50:43.125504Z"}], "thread_id": "Thread-30", "execution_time": 3.1101620197296143, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.prep_mart_retention_parent_account_snapshot_base", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.mart_retention_parent_account_snapshot\n    \n)\n\nSELECT *\nFROM base", "relation_name": "EMBUCKET.restricted_safe_common_prep.prep_mart_retention_parent_account_snapshot_base", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.170205Z", "completed_at": "2025-06-09T18:50:43.201697Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:43.217237Z", "completed_at": "2025-06-09T18:50:43.493304Z"}], "thread_id": "Thread-2", "execution_time": 0.3507521152496338, "adapter_response": {}, "message": "Database Error in model sfdc_contact_history_source (models/sources/sfdc/sfdc_contact_history_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'lower(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tlower(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_contact_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_contact_history_source", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.contacthistory\n\n), renamed AS (\n\n    SELECT\n      contactid             AS contact_id,\n      id                    AS contact_history_id,\n      createddate           AS field_modified_at,\n      LOWER(field)          AS contact_field,\n      newvalue__fl          AS new_value_float,\n      newvalue__de          AS new_value_decimal,\n      newvalue__st          AS new_value_string,\n      oldvalue__fl          AS old_value_float,\n      oldvalue__de          AS old_value_decimal,\n      oldvalue__st          AS old_value_string,\n      isdeleted             AS is_deleted,\n      createdbyid           AS created_by_id\n    FROM base\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_contact_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.052743Z", "completed_at": "2025-06-09T18:50:40.110031Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.829020Z", "completed_at": "2025-06-09T18:50:43.040387Z"}], "thread_id": "Thread-18", "execution_time": 3.0939078330993652, "adapter_response": {}, "message": "Database Error in model ptpl_scores_source (models/sources/data_science/ptpl_scores_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/data_science/ptpl_scores_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.ptpl_scores_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT\n        lead_id,\n        score_date,\n        score,\n        decile,\n        score_group,\n        insights,\n        submodel,\n        model_version,\n        uploaded_at::TIMESTAMP as uploaded_at\n    FROM EMBUCKET.data_science.ptpl_scores\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.data_science.ptpl_scores_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.077025Z", "completed_at": "2025-06-09T18:50:40.819844Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.859205Z", "completed_at": "2025-06-09T18:50:43.129127Z"}], "thread_id": "Thread-11", "execution_time": 3.1162610054016113, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.prep_mart_available_to_renew_snapshot_base", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.mart_available_to_renew_snapshot\n\n)\n\nSELECT *\nFROM base", "relation_name": "EMBUCKET.restricted_safe_common_prep.prep_mart_available_to_renew_snapshot_base", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.589087Z", "completed_at": "2025-06-09T18:50:41.626103Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.626460Z", "completed_at": "2025-06-09T18:50:43.070574Z"}], "thread_id": "Thread-8", "execution_time": 1.599313735961914, "adapter_response": {}, "message": "Database Error in model sfdc_bizible_attribution_touchpoint_source (models/sources/sfdc/sfdc_bizible_attribution_touchpoint_source.sql)\n  000200: DataFusion error: Schema error: No field named bizible_form_url_raw. Did you mean 'source.bizible2__form_url_raw__c'?.\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_bizible_attribution_touchpoint_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_bizible_attribution_touchpoint_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.salesforce_v2_stitch.bizible2__bizible_attribution_touchpoint__c\n\n\n\n), renamed AS (\n\n    SELECT\n      id                                      AS touchpoint_id,\n      -- sfdc object lookups\n      bizible2__sf_campaign__c                AS campaign_id,\n      bizible2__opportunity__c                AS opportunity_id,\n      bizible2__contact__c                    AS bizible_contact,\n      bizible2__account__c                    AS bizible_account,\n\n      -- attribution counts\n      bizible2__count_first_touch__c          AS bizible_count_first_touch,\n      bizible2__count_lead_creation_touch__c  AS bizible_count_lead_creation_touch,\n      bizible2__count_custom_model__c         AS bizible_attribution_percent_full_path,\n      bizible2__count_u_shaped__c             AS bizible_count_u_shaped,\n      bizible2__count_w_shaped__c             AS bizible_count_w_shaped,\n      bizible2__count_custom_model_2__c       AS bizible_count_custom_model,\n\n\t-- attribution weights\n      bizible2__attribution_first_touch__c    AS bizible_weight_first_touch,\n      bizible2__attribution_lead_conversion_touch__c\n                                              AS bizible_weight_lead_conversion,\n      bizible2__attribution_custom_model__c   AS bizible_weight_full_path,\n      bizible2__attribution_u_shaped__c       AS bizible_weight_u_shaped,\n      bizible2__attribution_w_shaped__c       AS bizible_weight_w_shaped,\n      bizible2__attribution_custom_model_2__c AS bizible_weight_custom_model,\n\n\n      -- touchpoint info\n      bizible2__touchpoint_date__c            AS bizible_touchpoint_date,\n      bizible2__touchpoint_position__c        AS bizible_touchpoint_position,\n      bizible2__touchpoint_source__c          AS bizible_touchpoint_source,\n      source_type__c                          AS bizible_touchpoint_source_type,\n      bizible2__touchpoint_type__c            AS bizible_touchpoint_type,\n      bizible2__ad_campaign_name__c           AS bizible_ad_campaign_name,\n      bizible2__ad_content__c                 AS bizible_ad_content,\n      bizible2__ad_group_name__c              AS bizible_ad_group_name,\n      bizible2__form_url__c                   AS bizible_form_url,\n      bizible2__form_url_raw__c               AS bizible_form_url_raw,\n      bizible2__landing_page__c               AS bizible_landing_page,\n      bizible2__landing_page_raw__c           AS bizible_landing_page_raw,\n      bizible2__marketing_channel__c          AS bizible_marketing_channel,\n      bizible2__marketing_channel_path__c     AS bizible_marketing_channel_path,\n      bizible2__medium__c                     AS bizible_medium,\n      bizible2__referrer_page__c              AS bizible_referrer_page,\n      bizible2__referrer_page_raw__c          AS bizible_referrer_page_raw,\n      bizible2__sf_campaign__c                AS bizible_salesforce_campaign,\n      NULL                                    AS utm_budget,\n      NULL                                    AS utm_offersubtype,\n      NULL                                    AS utm_offertype,\n      NULL                                    AS utm_targetregion,\n      NULL                                    AS utm_targetsubregion,\n      NULL                                    AS utm_targetterritory,\n      NULL                                    AS utm_usecase,\n      CASE\n        WHEN SPLIT_PART(SPLIT_PART(bizible_form_url_raw,'utm_content=',2),'&',1)IS null\n          THEN SPLIT_PART(SPLIT_PART(bizible_landing_page_raw,'utm_content=',2),'&',1)\n        ELSE SPLIT_PART(SPLIT_PART(bizible_form_url_raw,'utm_content=',2),'&',1)\n      END AS utm_content,\n\n      -- touchpoint revenue info\n      bizible2__revenue_custom_model__c       AS bizible_revenue_full_path,\n      bizible2__revenue_custom_model_2__c     AS bizible_revenue_custom_model,\n      bizible2__revenue_first_touch__c        AS bizible_revenue_first_touch,\n      bizible2__revenue_lead_conversion__c    AS bizible_revenue_lead_conversion,\n      bizible2__revenue_u_shaped__c           AS bizible_revenue_u_shaped,\n      bizible2__revenue_w_shaped__c           AS bizible_revenue_w_shaped,\n\n      isdeleted::BOOLEAN                      AS is_deleted,\n      createddate                             AS bizible_created_date\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_bizible_attribution_touchpoint_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.679361Z", "completed_at": "2025-06-09T18:50:41.731315Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.763412Z", "completed_at": "2025-06-09T18:50:43.056660Z"}], "thread_id": "Thread-24", "execution_time": 1.5501160621643066, "adapter_response": {}, "message": "Database Error in model sfdc_bizible_touchpoint_snapshots_source (models/legacy/snapshots/base/sfdc_bizible_touchpoint_snapshots_source.sql)\n  000200: DataFusion error: Schema error: No field named bizible_form_url_raw. Did you mean 'source.bizible2__form_url_raw__c'?.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/sfdc_bizible_touchpoint_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_bizible_touchpoint_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.sfdc_bizible_touchpoint_snapshots\n\n), renamed AS (\n\n    SELECT\n      id                                      AS touchpoint_id,\n      bizible2__bizible_person__c             AS bizible_person_id,\n\n      -- sfdc object lookups\n      bizible2__sf_campaign__c                AS campaign_id,\n      bizible2__contact__c                    AS bizible_contact,\n      bizible2__account__c                    AS bizible_account,      \n      \n      -- attribution counts\n      bizible2__count_first_touch__c          AS bizible_count_first_touch,\n      bizible2__count_lead_creation_touch__c  AS bizible_count_lead_creation_touch,\n      bizible2__count_u_shaped__c             AS bizible_count_u_shaped,\n\n      -- touchpoint info\n      bizible2__touchpoint_date__c            AS bizible_touchpoint_date,\n      bizible2__touchpoint_position__c        AS bizible_touchpoint_position,\n      bizible2__touchpoint_source__c          AS bizible_touchpoint_source,\n      source_type__c                          AS bizible_touchpoint_source_type,\n      bizible2__touchpoint_type__c            AS bizible_touchpoint_type,      \n      bizible2__ad_campaign_name__c           AS bizible_ad_campaign_name,\n      bizible2__ad_content__c                 AS bizible_ad_content,\n      bizible2__ad_group_name__c              AS bizible_ad_group_name,\n      bizible2__form_url__c                   AS bizible_form_url,\n      bizible2__form_url_raw__c               AS bizible_form_url_raw,\n      bizible2__landing_page__c               AS bizible_landing_page,\n      bizible2__landing_page_raw__c           AS bizible_landing_page_raw,\n      bizible2__marketing_channel__c          AS bizible_marketing_channel,\n      bizible2__marketing_channel_path__c     AS bizible_marketing_channel_path,\n      bizible2__medium__c                     AS bizible_medium, \n      bizible2__referrer_page__c              AS bizible_referrer_page,   \n      bizible2__referrer_page_raw__c          AS bizible_referrer_page_raw, \n      bizible2__sf_campaign__c                AS bizible_salesforce_campaign,\n      utm_budget__c                           AS utm_budget,\n      utm_offersubtype__c                     AS utm_offersubtype,\n      utm_offertype__c                        AS utm_offertype,\n      utm_targetregion__c                     AS utm_targetregion,\n      utm_targetsubregion__c                  AS utm_targetsubregion,\n      utm_targetterritory__c                  AS utm_targetterritory,\n      utm_usecase__c                          AS utm_usecase,\n      CASE \n        WHEN SPLIT_PART(SPLIT_PART(bizible_form_url_raw,'utm_content=',2),'&',1)IS null\n          THEN SPLIT_PART(SPLIT_PART(bizible_landing_page_raw,'utm_content=',2),'&',1)\n        ELSE SPLIT_PART(SPLIT_PART(bizible_form_url_raw,'utm_content=',2),'&',1) \n      END AS utm_content,\n\n      isdeleted                               AS is_deleted,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n    \n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.sfdc_bizible_touchpoint_snapshots_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.553947Z", "completed_at": "2025-06-09T18:50:41.604343Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.636690Z", "completed_at": "2025-06-09T18:50:43.095710Z"}], "thread_id": "Thread-26", "execution_time": 1.6044089794158936, "adapter_response": {}, "message": "Database Error in model sfdc_bizible_attribution_touchpoint_snapshots_source (models/legacy/snapshots/base/sfdc_bizible_attribution_touchpoint_snapshots_source.sql)\n  000200: DataFusion error: Schema error: No field named bizible_form_url_raw. Did you mean 'source.bizible2__form_url_raw__c'?.\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/sfdc_bizible_attribution_touchpoint_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_bizible_attribution_touchpoint_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.sfdc_bizible_attribution_touchpoint_snapshots\n\n), renamed AS (\n\n    SELECT\n      id                                      AS touchpoint_id,\n      -- sfdc object lookups\n      bizible2__sf_campaign__c                AS campaign_id,\n      bizible2__opportunity__c                AS opportunity_id,\n      bizible2__contact__c                    AS bizible_contact,\n      bizible2__account__c                    AS bizible_account,\n      \n      -- attribution counts\n      bizible2__count_first_touch__c          AS bizible_count_first_touch,\n      bizible2__count_lead_creation_touch__c  AS bizible_count_lead_creation_touch,\n      bizible2__count_custom_model__c         AS bizible_attribution_percent_full_path,\n      bizible2__count_u_shaped__c             AS bizible_count_u_shaped,\n      bizible2__count_w_shaped__c             AS bizible_count_w_shaped,\n      bizible2__count_custom_model_2__c       AS bizible_count_custom_model,\n\n\t-- attribution weights\n      bizible2__attribution_first_touch__c    AS bizible_weight_first_touch,\n      bizible2__attribution_lead_conversion_touch__c  \n                                              AS bizible_weight_lead_conversion,\n      bizible2__attribution_custom_model__c   AS bizible_weight_full_path,\n      bizible2__attribution_u_shaped__c       AS bizible_weight_u_shaped,\n      bizible2__attribution_w_shaped__c       AS bizible_weight_w_shaped,\n      bizible2__attribution_custom_model_2__c AS bizible_weight_custom_model,\n\n\n      -- touchpoint info\n      bizible2__touchpoint_date__c            AS bizible_touchpoint_date,\n      bizible2__touchpoint_position__c        AS bizible_touchpoint_position,\n      bizible2__touchpoint_source__c          AS bizible_touchpoint_source,\n      source_type__c                          AS bizible_touchpoint_source_type,\n      bizible2__touchpoint_type__c            AS bizible_touchpoint_type,      \n      bizible2__ad_campaign_name__c           AS bizible_ad_campaign_name,\n      bizible2__ad_content__c                 AS bizible_ad_content, \n      bizible2__ad_group_name__c              AS bizible_ad_group_name,\n      bizible2__form_url__c                   AS bizible_form_url,\n      bizible2__form_url_raw__c               AS bizible_form_url_raw,\n      bizible2__landing_page__c               AS bizible_landing_page,\n      bizible2__landing_page_raw__c           AS bizible_landing_page_raw,\n      bizible2__marketing_channel__c          AS bizible_marketing_channel,\n      bizible2__marketing_channel_path__c     AS bizible_marketing_channel_path,\n      bizible2__medium__c                     AS bizible_medium, \n      bizible2__referrer_page__c              AS bizible_referrer_page,  \n      bizible2__referrer_page_raw__c          AS bizible_referrer_page_raw,  \n      bizible2__sf_campaign__c                AS bizible_salesforce_campaign, \n      utm_budget__c                           AS utm_budget,\n      utm_offersubtype__c                     AS utm_offersubtype,\n      utm_offertype__c                        AS utm_offertype,\n      utm_targetregion__c                     AS utm_targetregion,\n      utm_targetsubregion__c                  AS utm_targetsubregion,\n      utm_targetterritory__c                  AS utm_targetterritory,\n      utm_usecase__c                          AS utm_usecase,\n      CASE \n        WHEN SPLIT_PART(SPLIT_PART(bizible_form_url_raw,'utm_content=',2),'&',1)IS null\n          THEN SPLIT_PART(SPLIT_PART(bizible_landing_page_raw,'utm_content=',2),'&',1)\n        ELSE SPLIT_PART(SPLIT_PART(bizible_form_url_raw,'utm_content=',2),'&',1) \n      END AS utm_content, \n\n      -- touchpoint revenue info\n      bizible2__revenue_custom_model__c       AS bizible_revenue_full_path,\n      bizible2__revenue_custom_model_2__c     AS bizible_revenue_custom_model,\n      bizible2__revenue_first_touch__c        AS bizible_revenue_first_touch,\n      bizible2__revenue_lead_conversion__c    AS bizible_revenue_lead_conversion,\n      bizible2__revenue_u_shaped__c           AS bizible_revenue_u_shaped,\n      bizible2__revenue_w_shaped__c           AS bizible_revenue_w_shaped,\n\n      isdeleted::BOOLEAN                      AS is_deleted,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n    \n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.sfdc_bizible_attribution_touchpoint_snapshots_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.607854Z", "completed_at": "2025-06-09T18:50:41.648929Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.712169Z", "completed_at": "2025-06-09T18:50:43.097786Z"}], "thread_id": "Thread-10", "execution_time": 1.6204030513763428, "adapter_response": {}, "message": "Database Error in model servicenow_prd_task_source (models/sources/servicenow_prd/servicenow_prd_task_source.sql)\n  000200: DataFusion error: Error during planning: table 'raw.servicenow_prd.task' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/servicenow_prd/servicenow_prd_task_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.servicenow_prd_task_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM RAW.servicenow_prd.task\n),\n\nrenamed AS (\n  SELECT\n    sys_id::VARCHAR                     AS sys_id,\n    contact_type::VARCHAR               AS contact_type,\n    service_offering_value::VARCHAR     AS service_offering_value,\n    group_list::VARCHAR                 AS group_list,\n    closed_by_value::VARCHAR            AS closed_by_value,\n    work_end::TIMESTAMP                 AS work_end,\n    due_date::TIMESTAMP                 AS due_date,\n    u_computer_serial_number_value::VARCHAR AS u_computer_serial_number_value,\n    work_start::TIMESTAMP               AS work_start,\n    correlation_display::VARCHAR        AS correlation_display,\n    sys_created_on::TIMESTAMP           AS sys_created_on,\n    state::NUMBER                       AS state,\n    approval_set::TIMESTAMP             AS approval_set,\n    active::BOOLEAN                     AS active,\n    sys_created_by::VARCHAR             AS sys_created_by,\n    task_effective_number::VARCHAR      AS task_effective_number,\n    sys_class_name::VARCHAR             AS sys_class_name,\n    parent_value::VARCHAR               AS parent_value,\n    activity_due::TIMESTAMP             AS activity_due,\n    expected_start::TIMESTAMP           AS expected_start,\n    opened_at::TIMESTAMP                AS opened_at,\n    universal_request_value::VARCHAR    AS universal_request_value,\n    sys_mod_count::NUMBER               AS sys_mod_count,\n    opened_by_value::VARCHAR            AS opened_by_value,\n    upon_approval::VARCHAR              AS upon_approval,\n    made_sla::BOOLEAN                   AS made_sla,\n    priority::NUMBER                    AS priority,\n    closed_at::TIMESTAMP                AS closed_at,\n    sla_due::TIMESTAMP                  AS sla_due,\n    business_duration::TIMESTAMP        AS business_duration,\n    correlation_id::VARCHAR             AS correlation_id,\n    sys_updated_on::TIMESTAMP           AS sys_updated_on,\n    assigned_to_value::VARCHAR          AS assigned_to_value,\n    urgency::NUMBER                     AS urgency,\n    reassignment_count::NUMBER          AS reassignment_count,\n    contract_value::VARCHAR             AS contract_value,\n    assignment_group_value::VARCHAR     AS assignment_group_value,\n    number::VARCHAR                     AS number,\n    business_service_value::VARCHAR     AS business_service_value,\n    sys_domain_path::VARCHAR            AS sys_domain_path,\n    cmdb_ci_value::VARCHAR              AS cmdb_ci_value,\n    calendar_duration::TIMESTAMP        AS calendar_duration,\n    sys_updated_by::VARCHAR             AS sys_updated_by,\n    approval_history::VARCHAR           AS approval_history,\n    follow_up::TIMESTAMP                AS follow_up,\n    additional_assignee_list::VARCHAR   AS additional_assignee_list,\n    rejection_goto_value::VARCHAR       AS rejection_goto_value,\n    approval::VARCHAR                   AS approval,\n    _fivetran_synced::TIMESTAMP         AS _fivetran_synced,\n    _fivetran_deleted::BOOLEAN          AS _fivetran_deleted\n  FROM source\n)\n\nSELECT * FROM renamed", "relation_name": "EMBUCKET.servicenow_prd.servicenow_prd_task_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.067106Z", "completed_at": "2025-06-09T18:50:40.814349Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.849308Z", "completed_at": "2025-06-09T18:50:43.375514Z"}], "thread_id": "Thread-22", "execution_time": 3.392751932144165, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.prep_fct_mrr_snapshot_base", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.fct_mrr_snapshot\n    \n)\n\nSELECT *\nFROM base", "relation_name": "EMBUCKET.restricted_safe_common_prep.prep_fct_mrr_snapshot_base", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.060773Z", "completed_at": "2025-06-09T18:50:40.809222Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.841142Z", "completed_at": "2025-06-09T18:50:43.383995Z"}], "thread_id": "Thread-23", "execution_time": 3.4136531352996826, "adapter_response": {}, "message": "Database Error in model prep_environment (models/common_prep/prep_environment.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/common_prep/prep_environment.sql", "failures": null, "unique_id": "model.gitlab_snowflake.prep_environment", "compiled": true, "compiled_code": "WITH environment AS (\n\n\n    SELECT\n      1 AS dim_environment_id,\n      'Gitlab.com' AS environment\n\n    UNION\n\n    SELECT\n      2 AS dim_environment_id,\n      'License DB' AS environment\n\n    UNION\n\n    SELECT\n      3 AS dim_environment_id,\n      'Customers Portal' AS environment\n\n)\n\nSELECT\n      *,\n      '@jpeguero'::VARCHAR       AS created_by,\n      '@jpeguero'::VARCHAR       AS updated_by,\n      '2021-09-22'::DATE        AS model_created_date,\n      '2021-09-22'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM environment", "relation_name": "EMBUCKET.common_prep.prep_environment", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.211032Z", "completed_at": "2025-06-09T18:50:43.237523Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:43.255974Z", "completed_at": "2025-06-09T18:50:43.479597Z"}], "thread_id": "Thread-25", "execution_time": 0.31693005561828613, "adapter_response": {}, "message": "Database Error in model sfdc_lead_history_source (models/sources/sfdc/sfdc_lead_history_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'lower(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tlower(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_lead_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_lead_history_source", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.leadhistory\n\n), renamed AS (\n\n    SELECT\n      id                    AS lead_history_id,\n      leadid                AS lead_id,\n      LOWER(field)          AS lead_field,\n      newvalue__fl          AS new_value_float,\n      newvalue__de          AS new_value_decimal,\n      newvalue__st          AS new_value_string,\n      newvalue__bo          AS new_value_boolean,\n      oldvalue__fl          AS old_value_float,\n      oldvalue__de          AS old_value_decimal,\n      oldvalue__st          AS old_value_string,\n      oldvalue__bo          AS old_value_boolean,\n      --metadata\n      isdeleted             AS is_deleted,\n      createdbyid           AS created_by_id,\n      createddate           AS field_modified_at\n    FROM base\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_lead_history_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.093861Z", "completed_at": "2025-06-09T18:50:40.828632Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.875436Z", "completed_at": "2025-06-09T18:50:43.127797Z"}], "thread_id": "Thread-32", "execution_time": 3.097195863723755, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.projects_pl", "compiled": true, "compiled_code": "-- GCP project id to pl mapping\n\nSELECT * FROM EMBUCKET.seed_engineering.gcp_billing_project_pl_mapping\nUNPIVOT(allocation FOR type IN (free, internal, paid))", "relation_name": "EMBUCKET.workspace_engineering.projects_pl", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.597777Z", "completed_at": "2025-06-09T18:50:41.641753Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.699585Z", "completed_at": "2025-06-09T18:50:43.082784Z"}], "thread_id": "Thread-20", "execution_time": 1.5998759269714355, "adapter_response": {}, "message": "Database Error in model sfdc_bizible_touchpoint_source (models/sources/sfdc/sfdc_bizible_touchpoint_source.sql)\n  000200: DataFusion error: Schema error: No field named bizible_form_url_raw. Did you mean 'source.bizible2__form_url_raw__c'?.\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_bizible_touchpoint_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_bizible_touchpoint_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.salesforce_v2_stitch.bizible2__bizible_touchpoint__c\n\n\n), renamed AS (\n\n    SELECT\n      id                                      AS touchpoint_id,\n      bizible2__bizible_person__c             AS bizible_person_id,\n\n      -- sfdc object lookups\n      bizible2__sf_campaign__c                AS campaign_id,\n      bizible2__contact__c                    AS bizible_contact,\n      bizible2__account__c                    AS bizible_account,\n\n      -- attribution counts\n      bizible2__count_first_touch__c          AS bizible_count_first_touch,\n      bizible2__count_lead_creation_touch__c  AS bizible_count_lead_creation_touch,\n      bizible2__count_u_shaped__c             AS bizible_count_u_shaped,\n\n      -- touchpoint info\n      bizible2__touchpoint_date__c            AS bizible_touchpoint_date,\n      bizible2__touchpoint_position__c        AS bizible_touchpoint_position,\n      bizible2__touchpoint_source__c          AS bizible_touchpoint_source,\n      source_type__c                          AS bizible_touchpoint_source_type,\n      bizible2__touchpoint_type__c            AS bizible_touchpoint_type,\n      bizible2__ad_campaign_name__c           AS bizible_ad_campaign_name,\n      bizible2__ad_content__c                 AS bizible_ad_content,\n      bizible2__ad_group_name__c              AS bizible_ad_group_name,\n      bizible2__form_url__c                   AS bizible_form_url,\n      bizible2__form_url_raw__c               AS bizible_form_url_raw,\n      bizible2__landing_page__c               AS bizible_landing_page,\n      bizible2__landing_page_raw__c           AS bizible_landing_page_raw,\n      bizible2__marketing_channel__c          AS bizible_marketing_channel,\n      bizible2__marketing_channel_path__c     AS bizible_marketing_channel_path,\n      bizible2__medium__c                     AS bizible_medium,\n      bizible2__referrer_page__c              AS bizible_referrer_page,\n      bizible2__referrer_page_raw__c          AS bizible_referrer_page_raw,\n      bizible2__sf_campaign__c                AS bizible_salesforce_campaign,\n      NULL                                    AS utm_budget,\n      NULL                                    AS utm_offersubtype,\n      NULL                                    AS utm_offertype,\n      NULL                                    AS utm_targetregion,\n      NULL                                    AS utm_targetsubregion,\n      NULL                                    AS utm_targetterritory,\n      NULL                                    AS utm_usecase,\n      CASE\n        WHEN SPLIT_PART(SPLIT_PART(bizible_form_url_raw,'utm_content=',2),'&',1)IS null\n          THEN SPLIT_PART(SPLIT_PART(bizible_landing_page_raw,'utm_content=',2),'&',1)\n        ELSE SPLIT_PART(SPLIT_PART(bizible_form_url_raw,'utm_content=',2),'&',1)\n      END AS utm_content,\n\n      isdeleted                               AS is_deleted,\n      createddate                             AS bizible_created_date\n\n\n    FROM source\n)\n\nSELECT *\nFROM renamed\n-- exclude records containing strings which cannot be parsed from the bizible_touchpoint lineage https://gitlab.com/gitlab-data/analytics/-/issues/18230 https://gitlab.com/gitlab-data/analytics/-/merge_requests/8744#note_1544239076\nWHERE (bizible_form_url_raw LIKE 'http%' OR bizible_form_url_raw IS NULL)\n  AND (bizible_landing_page_raw LIKE 'http%' OR bizible_landing_page_raw IS NULL)", "relation_name": "EMBUCKET.sfdc.sfdc_bizible_touchpoint_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.817352Z", "completed_at": "2025-06-09T18:50:40.864456Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.913624Z", "completed_at": "2025-06-09T18:50:44.537713Z"}], "thread_id": "Thread-17", "execution_time": 4.497246980667114, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.rally_initial_export_optouts_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM\n    EMBUCKET.rally_initial_export.rally_initial_export_optouts\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.rally_initial_export.rally_initial_export_optouts_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.151201Z", "completed_at": "2025-06-09T18:50:43.169934Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:43.184490Z", "completed_at": "2025-06-09T18:50:44.600157Z"}], "thread_id": "Thread-1", "execution_time": 1.4685041904449463, "adapter_response": {}, "message": "Database Error in model sfdc_case_history_source (models/sources/sfdc/sfdc_case_history_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'lower(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tlower(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_case_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_case_history_source", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.casehistory\n\n), renamed AS (\n\n    SELECT\n      caseid::VARCHAR                AS case_id,\n      id::VARCHAR                    AS case_history_id,\n      createddate::DATE           AS field_modified_at,\n      LOWER(field)::VARCHAR          AS case_field,\n      LOWER(datatype)::VARCHAR       AS data_type,\n      newvalue::VARCHAR              AS new_value,\n      oldvalue::VARCHAR              AS old_value,\n      isdeleted::BOOLEAN             AS is_deleted,\n      createdbyid::VARCHAR           AS created_by_id\n    FROM base\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_case_history_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.820248Z", "completed_at": "2025-06-09T18:50:40.869943Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.917992Z", "completed_at": "2025-06-09T18:50:45.056788Z"}], "thread_id": "Thread-29", "execution_time": 5.016001224517822, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.rally_webhook_stitch_optouts_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT\n    email,\n    optedout  AS opted_out,\n    updatedat AS updated_at\n\n  FROM\n    EMBUCKET.rally_webhook_stitch.data\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.rally_initial_export.rally_webhook_stitch_optouts_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:40.825082Z", "completed_at": "2025-06-09T18:50:40.879505Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:40.925308Z", "completed_at": "2025-06-09T18:50:45.063876Z"}], "thread_id": "Thread-5", "execution_time": 5.008015871047974, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.prep_mart_arr_snapshot_base", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.snapshots.mart_arr_snapshot\n    \n)\n\nSELECT *\nFROM base", "relation_name": "EMBUCKET.restricted_safe_common_prep.prep_mart_arr_snapshot_base", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.139818Z", "completed_at": "2025-06-09T18:50:43.150876Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:43.162823Z", "completed_at": "2025-06-09T18:50:45.103855Z"}], "thread_id": "Thread-19", "execution_time": 2.0392587184906006, "adapter_response": {}, "message": "Database Error in model sfdc_campaign_source (models/sources/sfdc/sfdc_campaign_source.sql)\n  000200: DataFusion error: External error: Feature Arrow datatype Null is not supported. is not supported.\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_campaign_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_campaign_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.campaign\n\n\n\n), renamed AS(\n\n    SELECT\n        id                                                                  AS campaign_id,\n        name                                                                AS campaign_name,\n        isactive                                                            AS is_active,\n        startdate                                                           AS start_date,\n        enddate                                                             AS end_date,\n        status                                                              AS status,\n        IFF(type LIKE 'Field Event%', 'Field Event', type)                  AS type,\n\n        --keys\n        campaignmemberrecordtypeid                                          AS campaign_member_record_type_id,\n        ownerid                                                             AS campaign_owner_id,\n        parentid                                                            AS campaign_parent_id,\n\n        --info\n        description                                                         AS description,\n        region__c                                                           AS region,\n        sub_region__c                                                       AS sub_region,\n        budget_holder__c                                                    AS budget_holder,\n        will_there_be_mdf_funding__c                                        AS will_there_be_mdf_funding,\n        mdf_request__c                                                      AS mdf_request_id,\n        vartopiadrs__partner_account__c                                     AS campaign_partner_crm_id,\n\n        --projections\n        budgetedcost                                                        AS budgeted_cost,\n        expectedresponse                                                    AS expected_response,\n        expectedrevenue                                                     AS expected_revenue,\n        bizible2__bizible_attribution_synctype__c                           AS bizible_touchpoint_enabled_setting,\n        allocadia_id__c                                                     AS allocadia_id,\n        is_a_channel_partner_involved__c                                    AS is_a_channel_partner_involved,\n        is_an_alliance_partner_involved__c                                  AS is_an_alliance_partner_involved,\n        in_person_virtual__c                                                AS is_this_an_in_person_event,\n        alliance_partner_name__c                                            AS alliance_partner_name,\n        channel_partner_name__c                                             AS channel_partner_name,\n        sales_play__c                                                       AS sales_play,\n        gtm_motion__c                                                       AS gtm_motion,\n        total_planned_mql__c                                                AS total_planned_mqls,\n        registration_goal__c                                                AS registration_goal,\n        attendance_goal__c                                                  AS attendance_goal,\n\n        --planned results\n        planned_inquiry__c                                                  AS planned_inquiry,\n        planned_mql__c                                                      AS planned_mql,\n        planned_pipeline__c                                                 AS planned_pipeline,\n        planned_sao__c                                                      AS planned_sao,\n        planned_won__c                                                      AS planned_won,\n        total_planned_mql__c                                                AS total_planned_mql,\n        pipeline_roi__c                                                     AS planned_roi,\n        \n        --results\n        actualcost                                                          AS actual_cost,\n        amountallopportunities                                              AS amount_all_opportunities,\n        amountwonopportunities                                              AS amount_won_opportunities,\n        numberofcontacts                                                    AS count_contacts,\n        numberofconvertedleads                                              AS count_converted_leads,\n        numberofleads                                                       AS count_leads,\n        numberofopportunities                                               AS count_opportunities,\n        numberofresponses                                                   AS count_responses,\n        numberofwonopportunities                                            AS count_won_opportunities,\n        numbersent                                                          AS count_sent,\n        strat_contribution__c                                               AS strategic_marketing_contribution,\n        large_bucket__c                                                     AS large_bucket,\n        NULL                                                                AS reporting_type,\n\n        --metadata\n        createddate                                                         AS created_date,\n        createdbyid                                                         AS created_by_id,\n        lastmodifiedbyid                                                    AS last_modified_by_id,\n        lastmodifieddate                                                    AS last_modified_date,\n        lastactivitydate                                                    AS last_activity_date,\n        systemmodstamp,\n\n        isdeleted                                                           AS is_deleted\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_campaign_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.146860Z", "completed_at": "2025-06-09T18:50:44.204747Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.245033Z", "completed_at": "2025-06-09T18:50:45.095199Z"}], "thread_id": "Thread-30", "execution_time": 1.1127591133117676, "adapter_response": {}, "message": "Database Error in model sfdc_opportunity_product_source (models/sources/sfdc/sfdc_opportunity_product_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,340)..Location(1,352)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_opportunity_product_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_product_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.salesforce_v2_stitch.opportunitylineitem \n\n),\n\nrenamed AS (\n  \n  SELECT \n    -- keys\n    id::VARCHAR                            AS opportunity_product_id,\n    opportunityid::VARCHAR                 AS opportunity_id,\n    createdbyid::VARCHAR                   AS created_by_id,\n    quote__c::VARCHAR                      AS quote_id,\n\n    -- product and price fields\n    createddate::TIMESTAMP_TZ              AS created_date,\n    servicedate::TIMESTAMP_TZ              AS service_date,\n    name::VARCHAR                          AS opportunity_name,\n    description::VARCHAR                   AS description,\n    listprice::FLOAT                       AS list_price,\n    pricebookentryid::VARCHAR              AS price_book_entry_id,\n    product2id::VARCHAR                    AS product2_id,\n    productcode::VARCHAR                   AS product_code,\n    product_code_from_products__c::VARCHAR AS product_code_from_products,\n    product_name_from_products__c::VARCHAR AS product_name_from_products,\n    quantity::FLOAT                        AS quantity,\n    sortorder::NUMBER                      AS sort_order,\n    ticket_group_numeric__c::FLOAT         AS ticket_group,\n    totalprice::FLOAT                      AS total_price,\n    unitprice::FLOAT                       AS unit_price,\n    type__c::VARCHAR                       AS amendment_type,\n    uniqueidentifier__c::VARCHAR           AS unique_identifier,\n    annual_recurring_revenue__c::FLOAT     AS annual_recurring_revenue,\n    uom__c::VARCHAR                        AS unit_of_measure,\n    charge_type__c::VARCHAR                AS charge_type,\n    product_rate_plan_charge__c::VARCHAR   AS product_rate_plan_charge,\n    list_price__c::FLOAT                   AS list_price_custom, \n    cea_product_type__c::VARCHAR           AS cea_product_type,\n    discount__c::FLOAT                     AS discount,\n    effective_price__c::FLOAT              AS effective_price,\n    included_units__c::FLOAT               AS included_units, \n\n    -- ramp fields\n    isramp__c::BOOLEAN                     AS is_ramp,\n    rampintervalstartdate__c::TIMESTAMP_TZ AS ramp_interval_start_date,\n    rampintervalenddate__c::TIMESTAMP_TZ   AS ramp_interval_end_date,\n    next_interval__c::VARCHAR              AS next_interval,\n    quoterampintervalname__c::VARCHAR      AS quote_ramp_interval_name,\n\n    -- quote fields\n    quotemodel__c::VARCHAR                 AS quote_model,\n    quote_rate_plan_name__c::VARCHAR       AS quote_rate_plan_name,\n    quote_rate_plan_charge__c::VARCHAR     AS quote_rate_plan_charge,\n    quote_charge_summary__c::VARCHAR       AS quote_charge_summary,\n    quote_subscription_type__c::VARCHAR    AS quote_subscription_type,\n\n    -- delta fields\n    deltamrr__c::FLOAT                     AS delta_mrr,\n    delta_arr__c::FLOAT                    AS delta_arr,\n    deltamrrstartdate__c::TIMESTAMP_TZ     AS delta_mrr_start_date,\n    deltatcbstartdate__c::TIMESTAMP_TZ     AS delta_tcb_start_date,\n    deltamrrenddate__c::TIMESTAMP_TZ       AS delta_mrr_end_date,\n    deltatcbenddate__c::TIMESTAMP_TZ       AS delta_tcb_end_date,\n    delta_tcb__c::FLOAT                    AS delta_tcb,\n    delta_quantity__c::FLOAT               AS delta_quantity,\n\n    -- metadata\n    isdeleted::BOOLEAN                     AS is_deleted,\n    lastmodifiedbyid::VARCHAR              AS last_modified_by_id,\n    lastmodifieddate::TIMESTAMP_TZ         AS last_modified_date,\n    lastreferenceddate::TIMESTAMP_TZ       AS last_referenced_date,\n    lastvieweddate::TIMESTAMP_TZ           AS last_viewed_date,\n    _sdc_batched_at::TIMESTAMP_TZ          AS sdc_batched_at_date,\n    _sdc_extracted_at::TIMESTAMP_TZ        AS sdc_extracted_at_date,\n    _sdc_received_at::TIMESTAMP_TZ         AS sdc_received_at_date,\n    _sdc_sequence::NUMBER                  AS sdc_sequence,\n    _sdc_table_version::NUMBER             AS sdc_table_version,\n    systemmodstamp::TIMESTAMP_TZ           AS system_mod_stamp\n    \n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_opportunity_product_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.956421Z", "completed_at": "2025-06-09T18:50:43.971585Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:43.988531Z", "completed_at": "2025-06-09T18:50:45.446733Z"}], "thread_id": "Thread-31", "execution_time": 1.5043411254882812, "adapter_response": {}, "message": "Database Error in model sfdc_opportunity_field_history_source (models/sources/sfdc/sfdc_opportunity_field_history_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'lower(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tlower(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_opportunity_field_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_field_history_source", "compiled": true, "compiled_code": "\n\nWITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.opportunityfieldhistory\n\n), renamed AS (\n\n    SELECT\n      opportunityid         AS opportunity_id,\n      id                    AS field_history_id,\n      createddate           AS field_modified_at,\n      LOWER(field)          AS opportunity_field,\n      newvalue__fl          AS new_value_float,\n      newvalue              AS new_value_string,\n      newvalue__bo          AS new_value_boolean,\n      newvalue__de          AS new_value_decimal,\n      oldvalue__fl          AS old_value_float,\n      oldvalue              AS old_value_string,\n      oldvalue__bo          AS old_value_boolean,\n      oldvalue__de          AS old_value_decimal,\n      COALESCE(\n        newvalue__fl::VARCHAR,\n        newvalue::VARCHAR,\n        newvalue__bo::VARCHAR,\n        newvalue__de::VARCHAR\n      )                     AS new_value,\n      COALESCE(\n        oldvalue__fl::VARCHAR,\n        oldvalue::VARCHAR,\n        oldvalue__bo::VARCHAR,\n        oldvalue__de::VARCHAR\n      )                     AS old_value,\n      isdeleted             AS is_deleted,\n      createdbyid           AS created_by_id\n    FROM base\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_opportunity_field_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.179578Z", "completed_at": "2025-06-09T18:50:43.210715Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:43.226748Z", "completed_at": "2025-06-09T18:50:47.048914Z"}], "thread_id": "Thread-12", "execution_time": 3.8874361515045166, "adapter_response": {}, "message": "Database Error in model sfdc_impartner_mdf_funds_request_source (models/sources/sfdc/sfdc_impartner_mdf_funds_request_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_impartner_mdf_funds_request_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_impartner_mdf_funds_request_source", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.impartnermdf__fundsrequest__c\n), renamed AS (\n    SELECT\n      -- ids\n      id::VARCHAR                                        AS funds_request_id,\n      name::VARCHAR                                      AS funds_request_name,\n\n      -- info\n      impartnermdf__activitylocationcity__c::VARCHAR     AS activity_location_city,\n      impartnermdf__activitylocationcountry__c::VARCHAR  AS activity_location_country,\n      impartnermdf__activitylocationstateprovince__c::VARCHAR AS activity_location_state_province,\n      impartnermdf__activityname__c::VARCHAR             AS activity_name,\n      impartnermdf__approvalpo__c::VARCHAR               AS approval_po,\n      impartnermdf__approvedfundrequestamount__c::FLOAT  AS approved_fund_request_amount,\n      impartnermdf__budgetedcost__c::FLOAT               AS budgeted_cost,\n      impartnermdf__cancelmdfeventreason__c::VARCHAR     AS cancel_mdf_event_reason,\n      impartnermdf__cancelmdfevent__c::BOOLEAN           AS cancel_mdf_event,\n      impartnermdf__description__c::VARCHAR              AS description,\n      impartnermdf__enddate__c::TIMESTAMP                AS end_date,\n      impartnermdf__expectedresults__c::VARCHAR          AS expected_results,\n      impartnermdf__notifypartner__c::BOOLEAN            AS notify_partner,\n      impartnermdf__partneraccount__c::VARCHAR           AS partner_account,\n      impartnermdf__partnercontact__c::VARCHAR           AS partner_contact,\n      impartnermdf__partnerinvestment__c::FLOAT          AS partner_investment,\n      impartnermdf__requestedamount__c::FLOAT            AS requested_amount,\n      impartnermdf__resourcedetail__c::VARCHAR           AS resource_detail,\n      impartnermdf__segmenttargettype__c::VARCHAR        AS segment_target_type,\n      impartnermdf__startdate__c::TIMESTAMP              AS start_date,\n      impartnermdf__status__c::VARCHAR                   AS status,\n      impartnermdf__targetnumberofattendees__c::FLOAT    AS target_number_of_attendees,\n      impartnermdf__typeofmarketingactivity__c::VARCHAR  AS type_of_marketing_activity,\n      impartnermdf__typeofrequest__c::VARCHAR            AS type_of_request,\n      impartnermdf__verticalindustrytargettype__c::VARCHAR AS vertical_industry_target_type,\n      impartnermdf__willresourcesberequired__c::VARCHAR  AS will_resources_be_required,\n      mdf_notes__c::VARCHAR                              AS mdf_notes,\n      ownerid::VARCHAR                                   AS owner_id,\n\n      -- metadata\n      createdbyid::VARCHAR                               AS created_by_id,\n      createddate::TIMESTAMP                             AS created_date,\n      isdeleted::BOOLEAN                                 AS is_deleted,\n      lastmodifiedbyid::VARCHAR                          AS last_modified_by_id,\n      lastmodifieddate::TIMESTAMP                        AS last_modified_date,\n      _sdc_received_at::TIMESTAMP                        AS sfdc_received_at,\n      _sdc_extracted_at::TIMESTAMP                       AS sfdc_extracted_at,\n      _sdc_table_version::NUMBER                         AS sfdc_table_version,\n      _sdc_batched_at::TIMESTAMP                         AS sfdc_batched_at,\n      _sdc_sequence::NUMBER                             AS sfdc_sequence,\n      systemmodstamp::TIMESTAMP                          AS system_mod_stamp\n\n    FROM source\n)\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_impartner_mdf_funds_request_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.543936Z", "completed_at": "2025-06-09T18:50:41.624050Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.664885Z", "completed_at": "2025-06-09T18:50:47.070171Z"}], "thread_id": "Thread-7", "execution_time": 5.5433337688446045, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_account_share_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.salesforce_v2_stitch.accountshare\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    --keys\n    id                     AS account_share_id,\n    accountid              AS account_id,\n    userorgroupid          AS user_or_group_id,\n\n    --info \n    accountaccesslevel     AS account_access_level,\n    caseaccesslevel        AS case_access_level,\n    contactaccesslevel     AS contact_access_level,\n    opportunityaccesslevel AS opportunity_access_level,\n    isdeleted              AS is_deleted,\n    lastmodifiedbyid       AS last_modified_by_id,\n    lastmodifieddate       AS last_modified_date,\n    rowcause               AS row_cause,\n\n    --Stitch metadata\n    _sdc_batched_at        AS sdc_batched_at,\n    _sdc_extracted_at      AS sdc_extracted_at,\n    _sdc_received_at       AS sdc_received_at,\n    _sdc_sequence          AS sdc_sequence,\n    _sdc_table_version     AS sdc_table_version\n\n  FROM source\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_account_share_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.655539Z", "completed_at": "2025-06-09T18:50:41.723076Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.748169Z", "completed_at": "2025-06-09T18:50:47.123720Z"}], "thread_id": "Thread-6", "execution_time": 5.574918270111084, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_account_team_member_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.salesforce_v2_stitch.accountteammember\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    --keys\n    id                     AS account_team_member_id,\n    accountid              AS account_id,\n    userid                 AS user_id,\n\n    --info \n    accountaccesslevel     AS account_access_level,\n    caseaccesslevel        AS case_access_level,\n    contactaccesslevel     AS contact_access_level,\n    opportunityaccesslevel AS opportunity_access_level,\n    isdeleted              AS is_deleted\n\n  FROM source\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_account_team_member_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.585748Z", "completed_at": "2025-06-09T18:50:41.631196Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.673922Z", "completed_at": "2025-06-09T18:50:47.134632Z"}], "thread_id": "Thread-14", "execution_time": 5.549543857574463, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_campaign_member_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.campaignmember\n\n\n), renamed AS(\n\n    SELECT\n      id::varchar                      AS campaign_member_id,\n\n        --keys\n      campaignid::varchar              AS campaign_id,\n      leadorcontactid::varchar         AS lead_or_contact_id,\n\n        --info\n      type                             AS campaign_member_type,\n      hasresponded::boolean            AS campaign_member_has_responded,\n      firstrespondeddate::date         AS campaign_member_response_date,\n      mql_after_campaign__c::boolean   AS is_mql_after_campaign,\n      status::varchar                  AS campaign_member_status,\n\n        --utm data\n      utm_campaign__c                  AS utm_campaign,\n      utm_medium__c                    AS utm_medium,\n      utm_source__c                    AS utm_source,\n      last_form_submission_page__c     AS last_form_submission_page,\n\n        --metadata\n      createddate::date                AS campaign_member_created_date,\n      systemmodstamp,\n\n      isdeleted                        AS is_deleted\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_campaign_member_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.104031Z", "completed_at": "2025-06-09T18:50:44.161194Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.213135Z", "completed_at": "2025-06-09T18:50:47.136446Z"}], "thread_id": "Thread-8", "execution_time": 3.143153190612793, "adapter_response": {}, "message": "Database Error in model sfdc_opportunity_split_type_source (models/sources/sfdc/sfdc_opportunity_split_type_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_opportunity_split_type_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_split_type_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n      *\n    FROM EMBUCKET.salesforce_v2_stitch.opportunitysplittype\n\n), renamed AS (\n\n      SELECT\n        \n        id::VARCHAR                                                AS opportunity_split_type_id,\n        createdbyid::VARCHAR                                       AS created_by_id,\n        createddate::TIMESTAMP                                     AS created_date,\n        lastmodifiedbyid::VARCHAR                                  AS last_modified_by_id,\n        lastmodifieddate::TIMESTAMP                                AS last_modified_date,\n        developername::VARCHAR                                     AS developer_name,\n        description::VARCHAR                                       AS description,\n        language::VARCHAR                                          AS language,\n        masterlabel::VARCHAR                                       AS master_label,\n        splitdatastatus::VARCHAR                                   AS split_data_status,\n        splitentity::VARCHAR                                       AS split_entity,\n        splitfield::VARCHAR                                        AS split_field,\n        isactive::BOOLEAN                                          AS is_active,\n        istotalvalidated::BOOLEAN                                  AS is_total_validated,\n        isdeleted::BOOLEAN                                         AS is_deleted,\n        systemmodstamp::TIMESTAMP                                  AS system_mod_timestamp\n\n      FROM source\n  )\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.sfdc_opportunity_split_type_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:41.357418Z", "completed_at": "2025-06-09T18:50:41.400434Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:41.425297Z", "completed_at": "2025-06-09T18:50:47.124510Z"}], "thread_id": "Thread-28", "execution_time": 5.798716306686401, "adapter_response": {}, "message": "Database Error in model saas_usage_ping_namespace (models/sources/saas_usage_ping/saas_usage_ping_namespace.sql)\n  000200: DataFusion error: Error during planning: Internal error: Function 'dateadd' failed to match any signature, errors: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Int64), Int64)) but received NativeType::Float64, DataType: Float64.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker,Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Int64), Int64)) but received NativeType::Float64, DataType: Float64.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker,Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Int64), Int64)) but received NativeType::Float64, DataType: Float64.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'dateadd(Utf8, Float64, Utf8)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tdateadd(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Int64), Int64))), Coercion(TypeSignatureClass::Timestamp, implicit_coercion=ImplicitCoercion([Native(LogicalType(Native(String), String))], default_type=Timestamp(Nanosecond, None)))\n  \tdateadd(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Int64), Int64))), Coercion(TypeSignatureClass::Time))\n  \tdateadd(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Int64), Int64))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Date), Date))))\n  compiled code at target/run/gitlab_snowflake/models/sources/saas_usage_ping/saas_usage_ping_namespace.sql", "failures": null, "unique_id": "model.gitlab_snowflake.saas_usage_ping_namespace", "compiled": true, "compiled_code": "\n\nWITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.saas_usage_ping.gitlab_dotcom_namespace\n    \n    QUALIFY ROW_NUMBER() OVER (PARTITION BY namespace_ultimate_parent_id, ping_name, ping_date ORDER BY _uploaded_at DESC) = 1\n\n), renamed AS (\n\n    SELECT\n      md5(cast(coalesce(cast(namespace_ultimate_parent_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ping_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(ping_date as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))           AS saas_usage_ping_gitlab_dotcom_namespace_id,\n      namespace_ultimate_parent_id::INT                       AS namespace_ultimate_parent_id,\n      counter_value::INT                                      AS counter_value,\n      ping_name::VARCHAR                                      AS ping_name,\n      level::VARCHAR                                          AS ping_level,\n      query_ran::VARCHAR                                      AS query_ran,\n      error::VARCHAR                                          AS error,\n      ping_date::TIMESTAMP                                    AS ping_date,\n      dateadd('s', _uploaded_at, '1970-01-01')::TIMESTAMP     AS _uploaded_at\n    FROM base\n\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.saas_usage_ping.saas_usage_ping_namespace", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.197011Z", "completed_at": "2025-06-09T18:50:43.226363Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:43.239140Z", "completed_at": "2025-06-09T18:50:47.155973Z"}], "thread_id": "Thread-13", "execution_time": 4.017334938049316, "adapter_response": {}, "message": "Database Error in model sfdc_impartner_mdf_funds_claim_source (models/sources/sfdc/sfdc_impartner_mdf_funds_claim_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_impartner_mdf_funds_claim_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_impartner_mdf_funds_claim_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.impartnermdf__fundsclaim__c\n\n), renamed AS (\n    SELECT\n      -- ids\n      id::VARCHAR                                 AS funds_claim_id,\n      name::VARCHAR                               AS funds_claim_name,\n\n      -- info\n      impartnermdf__claimamount__c::FLOAT         AS claim_amount,\n      impartnermdf__fundsrequest__c::VARCHAR      AS funds_request,\n      impartnermdf__invoicenumber__c::VARCHAR     AS invoice_number,\n      impartnermdf__notifypartner__c::BOOLEAN     AS notify_partner,\n      impartnermdf__paiddate__c::TIMESTAMP        AS paid_date,\n      impartnermdf__partneraccount__c::VARCHAR    AS partner_account,\n      impartnermdf__partnercontact__c::VARCHAR    AS partner_contact,\n      impartnermdf__paymentamount__c::FLOAT       AS payment_amount,\n      impartnermdf__paymentmethod__c::VARCHAR     AS payment_method,\n      impartnermdf__performanceverified__c::BOOLEAN AS performance_verified,\n      impartnermdf__ponumber__c::VARCHAR           AS po_number,\n      impartnermdf__popreceived__c::BOOLEAN        AS po_received,\n      impartnermdf__rejectionreason__c::VARCHAR    AS rejection_reason,\n      impartnermdf__status__c::VARCHAR             AS status,\n\n      -- metadata\n      createdbyid::VARCHAR                         AS created_by_id,\n      createddate::TIMESTAMP                       AS created_date,\n      isdeleted::BOOLEAN                           AS is_deleted,\n      lastmodifiedbyid::VARCHAR                    AS last_modified_by_id,\n      lastmodifieddate::TIMESTAMP                  AS last_modified_date,\n      _sdc_received_at::TIMESTAMP                  AS sfdc_received_at,\n      _sdc_extracted_at::TIMESTAMP                 AS sfdc_extracted_at,\n      _sdc_table_version::NUMBER                   AS sfdc_table_version,\n      _sdc_batched_at::TIMESTAMP                   AS sfdc_batched_at,\n      _sdc_sequence::NUMBER                        AS sfdc_sequence,\n      systemmodstamp::TIMESTAMP                    AS system_mod_stamp\n\n    FROM source\n)\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_impartner_mdf_funds_claim_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.157045Z", "completed_at": "2025-06-09T18:50:43.178801Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:43.202017Z", "completed_at": "2025-06-09T18:50:47.354904Z"}], "thread_id": "Thread-15", "execution_time": 4.214540958404541, "adapter_response": {}, "message": "Database Error in model sfdc_case_source (models/sources/sfdc/sfdc_case_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_case_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_case_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.salesforce_v2_stitch.case\n\n),\n\nrenamed AS (\n  SELECT\n    id AS case_id,\n    account_owner__c AS account_owner,\n    accountid AS account_id,\n    businesshoursid AS business_hours_id,\n    casenumber AS case_number,\n    closeddate AS closed_date,\n    contactemail AS contact_email,\n    contactfax AS contact_fax,\n    contactid AS contact_id,\n    contactmobile AS contact_mobile,\n    contactphone AS contact_phone,\n    description,\n    from_chatter_feed_id__c AS from_chatter_feed_id,\n    isclosed AS is_closed,\n    isclosedoncreate AS is_closed_on_create,\n    isescalated AS is_escalated,\n    origin,\n    ownerid AS owner_id,\n    priority,\n    case_reason__c AS reason,\n    recordtypeid AS record_type_id,\n    resolution_action__c AS resolution_action,\n    sourceid AS source_id,\n    status,\n    subject,\n    suppliedcompany AS supplied_company,\n    suppliedemail AS supplied_email,\n    suppliedname AS supplied_name,\n    suppliedphone AS supplied_phone,\n    type AS case_type,\n    opportunity__c AS opportunity_id,\n    Close_Case_Spam__c AS spam_checkbox, \n    context__c AS context,\n    feedback__c AS feedback,\n    feedback_type__c AS feedback_type,\n    Date_Time_First_Responded__c AS first_responded_date,\n    Time_to_First_Response__c AS time_to_first_response, \n    Notes__c AS next_steps,\n    Next_Steps_Date__c AS next_steps_date,\n    dr_deal_id__c AS dr_deal_id,\n    primary_registration__c AS primary_deal_registration,\n    case_close_reason__c AS case_close_reason,\n    first_case_owner__c AS first_case_owner_name,\n    days_since_last_activity__c AS days_since_last_activity,\n    \n    -- metadata\n    createdbyid AS created_by_id,\n    createddate AS created_date,\n    isdeleted AS is_deleted,\n    lastmodifiedbyid AS last_modified_by_id,\n    lastmodifieddate AS last_modified_date,\n    systemmodstamp,\n    CONVERT_TIMEZONE(\n      'America/Los_Angeles', CURRENT_TIMESTAMP()\n    ) AS _last_dbt_run\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_case_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.019996Z", "completed_at": "2025-06-09T18:50:44.065407Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.121304Z", "completed_at": "2025-06-09T18:50:47.476591Z"}], "thread_id": "Thread-9", "execution_time": 3.512063980102539, "adapter_response": {}, "message": "Database Error in model sfdc_opportunity_product_snapshots_source (models/legacy/snapshots/restricted_safe/sfdc_opportunity_product_snapshots_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,517)..Location(1,529)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/restricted_safe/sfdc_opportunity_product_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_product_snapshots_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.snapshots.sfdc_opportunity_product_snapshots\n    QUALIFY ROW_NUMBER() OVER (\n    PARTITION BY\n        dbt_valid_from::DATE,\n        id\n    ORDER BY dbt_valid_from DESC\n    ) = 1 -- select most recent row in the event of duplicates\n\n),\n\nrenamed AS (\n  \n  SELECT \n    -- keys\n    id::VARCHAR                            AS opportunity_product_id,\n    opportunityid::VARCHAR                 AS opportunity_id,\n    createdbyid::VARCHAR                   AS created_by_id,\n    quote__c::VARCHAR                      AS quote_id,\n\n    -- product and price fields\n    createddate::TIMESTAMP_TZ              AS created_date,\n    servicedate::TIMESTAMP_TZ              AS service_date,\n    name::VARCHAR                          AS opportunity_name,\n    description::VARCHAR                   AS description,\n    listprice::FLOAT                       AS list_price,\n    pricebookentryid::VARCHAR              AS price_book_entry_id,\n    product2id::VARCHAR                    AS product2_id,\n    productcode::VARCHAR                   AS product_code,\n    product_code_from_products__c::VARCHAR AS product_code_from_products,\n    product_name_from_products__c::VARCHAR AS product_name_from_products,\n    quantity::FLOAT                        AS quantity,\n    sortorder::NUMBER                      AS sort_order,\n    ticket_group_numeric__c::FLOAT         AS ticket_group,\n    totalprice::FLOAT                      AS total_price,\n    unitprice::FLOAT                       AS unit_price,\n    type__c::VARCHAR                       AS amendment_type,\n    uniqueidentifier__c::VARCHAR           AS unique_identifier,\n    annual_recurring_revenue__c::FLOAT     AS annual_recurring_revenue,\n    uom__c::VARCHAR                        AS unit_of_measure,\n    charge_type__c::VARCHAR                AS charge_type,\n    product_rate_plan_charge__c::VARCHAR   AS product_rate_plan_charge,\n    list_price__c::FLOAT                   AS list_price_custom, \n    cea_product_type__c::VARCHAR           AS cea_product_type,\n    discount__c::FLOAT                     AS discount,\n    effective_price__c::FLOAT              AS effective_price,\n    included_units__c::FLOAT               AS included_units, \n\n    -- ramp fields\n    isramp__c::BOOLEAN                     AS is_ramp,\n    rampintervalstartdate__c::TIMESTAMP_TZ AS ramp_interval_start_date,\n    rampintervalenddate__c::TIMESTAMP_TZ   AS ramp_interval_end_date,\n    next_interval__c::VARCHAR              AS next_interval,\n    quoterampintervalname__c::VARCHAR      AS quote_ramp_interval_name,\n\n    -- quote fields\n    quotemodel__c::VARCHAR                 AS quote_model,\n    quote_rate_plan_name__c::VARCHAR       AS quote_rate_plan_name,\n    quote_rate_plan_charge__c::VARCHAR     AS quote_rate_plan_charge,\n    quote_charge_summary__c::VARCHAR       AS quote_charge_summary,\n    quote_subscription_type__c::VARCHAR    AS quote_subscription_type,\n\n    -- delta fields\n    deltamrr__c::FLOAT                     AS delta_mrr,\n    delta_arr__c::FLOAT                    AS delta_arr,\n    deltamrrstartdate__c::TIMESTAMP_TZ     AS delta_mrr_start_date,\n    deltatcbstartdate__c::TIMESTAMP_TZ     AS delta_tcb_start_date,\n    deltamrrenddate__c::TIMESTAMP_TZ       AS delta_mrr_end_date,\n    deltatcbenddate__c::TIMESTAMP_TZ       AS delta_tcb_end_date,\n    delta_tcb__c::FLOAT                    AS delta_tcb,\n    delta_quantity__c::FLOAT               AS delta_quantity,\n\n    -- metadata\n    isdeleted::BOOLEAN                     AS is_deleted,\n    lastmodifiedbyid::VARCHAR              AS last_modified_by_id,\n    lastmodifieddate::TIMESTAMP_TZ         AS last_modified_date,\n    lastreferenceddate::TIMESTAMP_TZ       AS last_referenced_date,\n    lastvieweddate::TIMESTAMP_TZ           AS last_viewed_date,\n    systemmodstamp::TIMESTAMP_TZ           AS system_mod_stamp,\n    dbt_scd_id::VARCHAR                    AS dbt_scd_id,\n    dbt_updated_at::TIMESTAMP_TZ           AS dbt_updated_at,\n    dbt_valid_from::TIMESTAMP_TZ           AS dbt_valid_from,\n    dbt_valid_to::TIMESTAMP_TZ             AS dbt_valid_to\n    \n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.restricted_safe_legacy.sfdc_opportunity_product_snapshots_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:45.200174Z", "completed_at": "2025-06-09T18:50:45.206478Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:45.207858Z", "completed_at": "2025-06-09T18:50:47.146073Z"}], "thread_id": "Thread-30", "execution_time": 1.9811062812805176, "adapter_response": {}, "message": "Database Error in model sfdc_zoom_webinar_attendee_source (models/sources/sfdc/sfdc_zoom_webinar_attendee_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,240)..Location(1,252)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_zoom_webinar_attendee_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_zoom_webinar_attendee_source", "compiled": true, "compiled_code": "\n\nWITH base AS (\n\n  SELECT *\n  FROM EMBUCKET.salesforce_v2_stitch.zoom_app__zoom_webinar_attendee__c\n),\n\nrenamed AS (\n  SELECT\n    createdbyid::TEXT                          AS created_by_id,\n    createddate::TIMESTAMP_TZ                  AS created_date,\n    id::TEXT                                   AS id,\n    isdeleted::BOOLEAN                         AS is_deleted,\n    lastmodifiedbyid::TEXT                     AS last_modified_by_id,\n    lastmodifieddate::TIMESTAMP_TZ             AS last_modified_date,\n    name::TEXT                                 AS name,\n    ownerid::TEXT                              AS owner_id,\n    systemmodstamp::TIMESTAMP_TZ               AS system_mod_stamp,\n    zoom_app__duration_hh_mi_ss__c::TEXT       AS zoom_app_duration_hh_mi_ss,\n    zoom_app__duration__c::FLOAT               AS zoom_app_duration,\n    zoom_app__join_time__c::TIMESTAMP_TZ       AS zoom_app_join_time,\n    zoom_app__leave_time__c::TIMESTAMP_TZ      AS zoom_app_leave_time,\n    zoom_app__name__c::TEXT                    AS zoom_app_name,\n    zoom_app__user_email__c::TEXT              AS zoom_app_user_email,\n    zoom_app__user_id__c::TEXT                 AS zoom_app_user_id,\n    zoom_app__uuid__c::TEXT                    AS zoom_app_uuid,\n    zoom_app__zoom_webinar_panelist__c::TEXT   AS zoom_app_zoom_webinar_panelist,\n    zoom_app__zoom_webinar_registrant__c::TEXT AS zoom_app_zoom_webinar_registrant,\n    zoom_app__zoom_webinar__c::TEXT            AS zoom_app_zoom_webinar,\n    _sdc_batched_at::TIMESTAMP_TZ              AS sdc_batched_at,\n    _sdc_extracted_at::TIMESTAMP_TZ            AS _sdc_extracted_at,\n    _sdc_received_at::TIMESTAMP_TZ             AS _sdc_received_at,\n    _sdc_sequence::NUMBER                      AS _sdc_sequence,\n    _sdc_table_version::NUMBER                 AS _sdc_table_version\n\n  FROM base\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_zoom_webinar_attendee_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.207701Z", "completed_at": "2025-06-09T18:50:43.232655Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:43.248070Z", "completed_at": "2025-06-09T18:50:48.782559Z"}], "thread_id": "Thread-16", "execution_time": 5.627341985702515, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_executive_business_review_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.executive_business_review__c\n\n\n\n), renamed AS (\n\n    SELECT\n         id                            AS ebr_id,\n         name                          AS ebr_name,\n         ebr_date__c :: date           AS ebr_date,\n        --keys\n         ebr_account__c                AS account_id,\n         ownerid                       AS owner_id,\n        --info\n         ebr_quarter__c                AS ebr_quarter,\n         ebr_number__c                 AS ebr_number,\n         ebr_outcome__c                AS ebr_outcome,\n         ebr_summary__c                AS ebr_summary,\n         ebr_status__c                 AS ebr_status,\n         ebr_notes__c                  AS ebr_notes,\n         first_date_success_updated__c AS first_date_success_updated,\n         ebr_action_items_takeaways__c AS ebr_action_items_takeaways,\n         ebr_success__c                AS ebr_success,\n        --metadata\n         lAStmodifiedbyid              AS last_modified_by_id,\n         createdbyid                   AS created_by_id,\n         isdeleted                     AS is_deleted\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_executive_business_review_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.175259Z", "completed_at": "2025-06-09T18:50:43.207276Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:43.222806Z", "completed_at": "2025-06-09T18:50:48.783680Z"}], "thread_id": "Thread-27", "execution_time": 5.633463144302368, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_customer_subscription_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.customer_subscription__c\n\n), renamed AS (\n\n    SELECT\n      account__c                                AS account_id,\n      activated_users__c                        AS activated_user_count,\n      admin_phoenix_status__c                   AS admin_phoenix_status,  \n      bpo_renewal_status__c                     AS bpo_renewal_status,\n      closed_lost_renewal__c                    AS closed_lost_renewal_id,\n      createdbyid                               AS created_by_id,\n      createddate                               AS created_date,\n      current_renewal_created_by__c             AS current_renewal_created_by,\n      current_subscription_carr__c              AS current_subscription_carr,\n      current_subscription_status__c            AS current_subscription_status,\n      current_term_end_date__c                  AS current_term_end_date,\n      current_term_start_date__c                AS current_term_start_date,\n      current_zuora_subscription__c             AS current_zuora_subscription,\n      current_zuora_sub_id__c                   AS current_zuora_subscription_id,\n      customer_subscription_count__c            AS customer_subscription_count,\n      entitled_seats__c                         AS entitled_seats,\n      estimated_overage_amount__c               AS estimated_overage_amount,\n      hosting_type__c                           AS hosting_type,\n      id                                        AS customer_subscription_id,\n      isdeleted                                 AS is_deleted,\n      lastmodifiedbyid                          AS last_modified_by_id,\n      lastmodifieddate                          AS last_modified_date,\n      license_usage_report_date__c              AS license_usage_report_date,\n      linkage_problem__c                        AS is_linkage_problem,\n      name                                      AS name,\n      ownerid                                   AS owner_id,\n      plan_name__c                              AS plan_name,\n      renewal_finder_skip__c                    AS is_renewal_finder_skip,\n      renewal_finder_story__c                   AS renewal_finder_story,\n      renewal_opportunity_trigger__c            AS is_renewal_opportunity_trigger,\n      seat_price__c                             AS seat_price,\n      subscription_train_car__c                 AS is_subscription_train_car,\n      subscription_type__c                      AS subscription_type,\n      systemmodstamp                            AS system_mod_stamp,\n      x14_days_past_end_date__c                 AS is_x14_days_past_end_date,\n      zuora_original_subscription_id__c         AS zuora_original_subscription_id,\n      zuora_subscription_id_history__c          AS zuora_subscription_id_history,\n      zuora_sub_quote_type__c                   AS zuora_sub_quote_type,\n      _sdc_batched_at                           AS _sdc_batched_at,\n      _sdc_extracted_at                         AS _sdc_extracted_at,\n      _sdc_received_at                          AS _sdc_received_at,\n      _sdc_sequence                             AS _sdc_sequence,\n      _sdc_table_version                        AS _sdc_table_version,\n      current_renewal_arr_basis__c              AS current_renewal_arr_basis,\n      current_open_renewal_id__c                AS current_open_renewal_id,\n      stamped_arr_basis__c                      AS stamped_arr_basis,\n      sub_to_basis_status__c                    AS sub_to_basis_status,\n      suppress_update__c                        AS is_suppress_update,\n      fy22_entering_arr__c                      AS fy22_entering_arr,\n      fy22_entering_plan__c                     AS fy22_entering_plan,\n      current_renewal_facts__c                  AS current_renewal_facts,\n      open_renewal_created_by__c                AS open_renewal_created_by,\n      temp_webstore_renewal_issue_status__c     AS temp_webstore_renewal_issue_status,\n      renewal_status__c                         AS renewal_status,\n      current_open_renewal_close_date__c        AS current_open_renewal_close_date,\n      current_open_renewal_start_date__c        AS current_open_renewal_start_date,\n      churn_status__c                           AS churn_status_,\n      churn_opp_basis__c                        AS churn_opp_basis,\n      pause_auto_renewal__c                     AS is_pause_auto_renewal,    \n      super_sonics_toggle_result__c             AS super_sonics_toggle_result,\n      pause_seat_reconciliation__c              AS is_pause_seat_reconciliation,\n      subscription_reviewed__c                  AS subscription_reviewed,\n      annualized_seat_price__c                  AS annualized_seat_price,\n      product_tier_name_short__c                AS product_tier_name_short,\n      billable_users__c                         AS billable_users,\n      gs_time_to_first_10__c                    AS gs_time_to_first_10,\n      gs_time_to_first_80__c                    AS gs_time_to_first_80,\n      gs_time_to_first_ci__c                    AS gs_time_to_first_ci,\n      gs_time_to_first_scm__c                   AS gs_time_to_first_scm,\n      gs_time_to_first_dsc__c                   AS gs_time_to_first_dsc,\n      gs_time_to_first_50__c                    AS gs_time_to_first_50,\n      current_zuora_sub_version__c              AS current_zuora_sub_version,\n      current_renewal_net_arr__c                AS current_renewal_net_arr,\n      admin_double_linkage__c                   AS admin_double_linkage,\n      next_chained_subscription__c              AS next_chained_subscription,\n      estimated_underutilized_amount__c         AS estimated_underutilized_amount,\n      utilization__c                            AS utilization,\n      underutilized_seats__c                    AS underutilized_seats\n    \n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_customer_subscription_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.095083Z", "completed_at": "2025-06-09T18:50:44.156054Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.208487Z", "completed_at": "2025-06-09T18:50:48.841049Z"}], "thread_id": "Thread-24", "execution_time": 4.823376178741455, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_stage_source", "compiled": true, "compiled_code": "\n\nWITH source AS ( \n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.opportunitystage\n\n), renamed AS (\n\n    SELECT\n      id                   AS sfdc_id,\n      masterlabel          AS primary_label,\n      defaultprobability   AS default_probability,\n      forecastcategoryname AS forecast_category_name,\n      isactive             AS is_active,\n      isclosed             AS is_closed,\n      iswon                AS is_won\n    FROM source\n\n)    \n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_opportunity_stage_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:47.186397Z", "completed_at": "2025-06-09T18:50:47.192002Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:47.202493Z", "completed_at": "2025-06-09T18:50:48.861462Z"}], "thread_id": "Thread-6", "execution_time": 1.712007761001587, "adapter_response": {}, "message": "Database Error in model sfdc_zqu_product_rate_plan_source (models/sources/sfdc/sfdc_zqu_product_rate_plan_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,1800)..Location(1,1812)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_zqu_product_rate_plan_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_zqu_product_rate_plan_source", "compiled": true, "compiled_code": "\n\nwith source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.zqu__productrateplan__c\n\n), renamed AS (\n\n    SELECT\n\n      -- ids\n      id::VARCHAR                                  AS zqu_product_rate_plan_id,\n      zqu__product__c::VARCHAR                     AS zqu_product_id,\n      zqu__zproduct__c::VARCHAR                    AS zqu_zproduct_id,\n      zqu__zuoraid__c::VARCHAR                     AS zqu_zuora_id,\n\n      -- info\n      name                                         AS zqu_product_rate_plan_name,\n      zqu__productrateplanfullname__c::VARCHAR     AS zqu_product_rate_plan_full_name, \n      product_category__c::VARCHAR                 AS product_category,\n      product_ranking__c:: FLOAT                   AS product_ranking,\n      prpcategory__c::VARCHAR                      AS product_rate_plan_category,\n      zqu__description__c::VARCHAR                 AS zqu_product_rate_plan_description,\n      rate_plan_family__c::VARCHAR                 AS rate_plan_family, \n      rate_plan_type__c::VARCHAR                   AS rate_plan_type,                   \n      deal_desk_viewable__c::BOOLEAN               AS deal_desk_viewable,\n      guidedselling__c::VARCHAR                    AS guided_selling,\n      is_true_up__c::BOOLEAN                       AS is_true_up,\n      lastreferenceddate ::VARCHAR                 AS last_referenced_date,\n      lastvieweddate::VARCHAR                      AS last_viewed_date,\n      license_type__c ::VARCHAR                    AS license_type,\n      mavenlink_project_template_name__c::VARCHAR  AS mavenlink_project_template_name,\n      show_in_new_business__c::BOOLEAN             AS show_in_new_business,\n      show_in_renewal__c::BOOLEAN                  AS show_in_renewal,\n      zqu__activecurrencies__c::VARCHAR            AS zqu_active_currencies,\n      zqu__default__c::BOOLEAN                     AS zqu_default,\n      zqu__deleted__c::BOOLEAN                     AS zqu_deleted,\n      zqu__effectiveenddatetext__c::VARCHAR        AS zqu_effective_end_date_text,\n      zqu__effectiveenddate__c::VARCHAR            AS zqu_effective_end_date,\n      zqu__effectivestartdatetext__c::VARCHAR      AS zqu_effective_start_date_text,\n      zqu__effectivestartdate__c::VARCHAR          AS zqu_effective_start_date,\n      zqu__entityid__c::VARCHAR                    AS zqu_entity_id,\n      zqu__syncstatus__c ::VARCHAR                 AS zqu_syncstatus,\n      \n\n      -- metadata\n      createdbyid::VARCHAR                    AS created_by_id,\n      createddate::TIMESTAMP_TZ               AS created_date,\n      isdeleted::BOOLEAN                      AS is_deleted,\n      lastmodifiedbyid::VARCHAR               AS last_modified_by_id,\n      lastmodifieddate::TIMESTAMP_TZ          AS last_modified_date,\n      _sdc_received_at::TIMESTAMP_TZ          AS sdc_received_at,\n      _sdc_extracted_at::TIMESTAMP_TZ         AS sdc_extracted_at,\n      _sdc_table_version::NUMBER              AS sdc_table_version,\n      _sdc_batched_at::TIMESTAMP_TZ           AS sdc_batched_at,\n      _sdc_sequence::NUMBER                   AS sdc_sequence,\n      systemmodstamp::TIMESTAMP_TZ            AS system_mod_stamp\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_zqu_product_rate_plan_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:47.175353Z", "completed_at": "2025-06-09T18:50:47.184867Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:47.193676Z", "completed_at": "2025-06-09T18:50:48.878321Z"}], "thread_id": "Thread-7", "execution_time": 1.7612688541412354, "adapter_response": {}, "message": "Database Error in model sfdc_zoom_webinar_source (models/sources/sfdc/sfdc_zoom_webinar_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,222)..Location(1,234)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_zoom_webinar_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_zoom_webinar_source", "compiled": true, "compiled_code": "\n\nWITH base AS (\n\n  SELECT *\n  FROM EMBUCKET.salesforce_v2_stitch.zoom_app__zoom_webinar__c\n\n),\n\nrenamed AS (\n\n  SELECT\n    createdbyid::TEXT                                         AS created_by_id,\n    createddate::TIMESTAMP_TZ                                 AS created_date,\n    id::TEXT                                                  AS id,\n    isdeleted::BOOLEAN                                        AS is_deleted,\n    lastmodifiedbyid::TEXT                                    AS last_modified_by_id,\n    lastmodifieddate::TIMESTAMP_TZ                            AS last_modified_date,\n    name::TEXT                                                AS name,\n    ownerid::TEXT                                             AS owner_id,\n    systemmodstamp::TIMESTAMP_TZ                              AS system_mod_stamp,\n    zoom_app__actual_end_time__c::TIMESTAMP_TZ                AS zoom_app_actual_end_time,\n    zoom_app__actual_start_time__c::TIMESTAMP_TZ              AS zoom_app_actual_start_time,\n    zoom_app__add_registrants_as_campaign_members__c::BOOLEAN AS zoom_app_add_registrants_as_campaign_members,\n    zoom_app__agenda__c::TEXT                                 AS zoom_app_agenda,\n    zoom_app__create_campaign_for_each_webinar__c::BOOLEAN    AS zoom_app_create_campaign_for_each_webinar,\n    zoom_app__create_new_lead__c::BOOLEAN                     AS zoom_app_create_new_lead,\n    zoom_app__creation_status__c::TEXT                        AS zoom_app_creation_status,\n    zoom_app__duration__c::FLOAT                              AS zoom_app_duration,\n    zoom_app__end_time__c::TIMESTAMP_TZ                       AS zoom_app_end_time,\n    zoom_app__join_url__c::TEXT                               AS zoom_app_join_url,\n    zoom_app__number_of_participants__c::FLOAT                AS zoom_app_number_of_participants,\n    zoom_app__password__c::TEXT                               AS zoom_app_password,\n    zoom_app__register_url__c::TEXT                           AS zoom_app_register_url,\n    zoom_app__setting_allow_multiple_devices__c::BOOLEAN      AS zoom_app_setting_allow_multiple_devices,\n    zoom_app__setting_approval_type__c::TEXT                  AS zoom_app_setting_approval_type,\n    zoom_app__setting_close_registration__c::BOOLEAN          AS zoom_app_setting_close_registration,\n    zoom_app__setting_host_video_on__c::BOOLEAN               AS zoom_app_setting_host_video_on,\n    zoom_app__setting_panelists_video_on__c::BOOLEAN          AS zoom_app_setting_panelists_video_on,\n    zoom_app__setting_practice_session__c::BOOLEAN            AS zoom_app_setting_practice_session,\n    zoom_app__start_time__c::TIMESTAMP_TZ                     AS zoom_app_start_time,\n    zoom_app__start_url__c::TEXT                              AS zoom_app_start_url,\n    zoom_app__status__c::TEXT                                 AS zoom_app_status,\n    zoom_app__topic__c::TEXT                                  AS zoom_app_topic,\n    zoom_app__uuid_unique__c::TEXT                            AS zoom_app_uuid_unique,\n    zoom_app__uuid__c::TEXT                                   AS zoom_app_uuid,\n    zoom_app__webinar_id__c::TEXT                             AS zoom_app_webinar_id,\n    _sdc_batched_at::TIMESTAMP_TZ                             AS sdc_batched_at,\n    _sdc_extracted_at::TIMESTAMP_TZ                           AS sdc_extracted_at,\n    _sdc_received_at::TIMESTAMP_TZ                            AS sdc_received_at,\n    _sdc_sequence::NUMBER                                     AS sdc_sequence,\n    _sdc_table_version::NUMBER                                AS sdc_table_version,\n    lastvieweddate::TIMESTAMP_TZ                              AS last_viewed_date,\n    lastreferenceddate::TIMESTAMP_TZ                          AS last_referenced_date\n  FROM base\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_zoom_webinar_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:47.231097Z", "completed_at": "2025-06-09T18:50:47.251248Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:47.252588Z", "completed_at": "2025-06-09T18:50:48.874128Z"}], "thread_id": "Thread-8", "execution_time": 1.6949758529663086, "adapter_response": {}, "message": "Database Error in model sfdc_zqu_quote_history_source (models/sources/sfdc/sfdc_zqu_quote_history_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,746)..Location(1,758)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_zqu_quote_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_zqu_quote_history_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.zqu__quote__history\n\n), renamed AS (\n\n  SELECT\n    createdbyid::VARCHAR                                   AS created_by_id,\n    createddate::TIMESTAMP                                 AS created_date,\n    datatype::VARCHAR                                      AS data_type,\n    field::VARCHAR                                         AS changed_field,\n    id::VARCHAR                                            AS quote_change_id,\n    parentid::VARCHAR                                      AS zqu_quote_id,\n    oldvalue__bo::BOOLEAN                                  AS old_value_bo,\n    oldvalue__de::DECIMAL                                  AS old_value_de,\n    oldvalue__fl::FLOAT                                    AS old_value_fl,\n    oldvalue__st::VARCHAR                                  AS old_value_st,\n    newvalue__bo::BOOLEAN                                  AS new_value_bo,\n    newvalue__de::DECIMAL                                  AS new_value_de,\n    newvalue__fl::FLOAT                                    AS new_value_fl,\n    newvalue__st::VARCHAR                                  AS new_value_st,\n    isdeleted::BOOLEAN                                     AS is_deleted,\n    _sdc_extracted_at::TIMESTAMP_TZ                        AS sdc_extracted_at,\n    _sdc_received_at::TIMESTAMP_TZ                         AS sdc_received_at,\n    _sdc_batched_at::TIMESTAMP_TZ                          AS sdc_batched_at,\n    _sdc_sequence::NUMBER                                  AS sdc_sequence,\n    _sdc_table_version::NUMBER                             AS sdc_table_version\n  FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_zqu_quote_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:45.457882Z", "completed_at": "2025-06-09T18:50:45.462612Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:45.462892Z", "completed_at": "2025-06-09T18:50:48.909146Z"}], "thread_id": "Thread-31", "execution_time": 3.4630069732666016, "adapter_response": {}, "message": "Database Error in model sfdc_zoom_webinar_history_source (models/sources/sfdc/sfdc_zoom_webinar_history_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,238)..Location(1,250)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_zoom_webinar_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_zoom_webinar_history_source", "compiled": true, "compiled_code": "\nWITH base AS (\n\n  SELECT *\n  FROM EMBUCKET.salesforce_v2_stitch.zoom_app__zoom_webinar_history__c\n\n),\n\nrenamed AS (\n\n  SELECT\n    createdbyid::TEXT                          AS created_by_id,\n    createddate::TIMESTAMP_TZ                  AS created_date,\n    id::TEXT                                   AS id,\n    isdeleted::BOOLEAN                         AS is_deleted,\n    lastmodifiedbyid::TEXT                     AS last_modified_by_id,\n    lastmodifieddate::TIMESTAMP_TZ             AS last_modified_date,\n    name::TEXT                                 AS name,\n    ownerid::TEXT                              AS owner_id,\n    systemmodstamp::TIMESTAMP_TZ               AS system_mod_stamp,\n    zoom_app__contact__c::TEXT                 AS zoom_app_contact,\n    zoom_app__is_attendeed__c::BOOLEAN         AS zoom_app_is_attendeed,\n    zoom_app__lead__c::TEXT                    AS zoom_app_lead,\n    zoom_app__webinar_topic__c::TEXT           AS zoom_app_webinar_topic,\n    zoom_app__zoom_webinar_attendee__c::TEXT   AS zoom_app_zoom_webinar_attendee,\n    zoom_app__zoom_webinar_panelist__c::TEXT   AS zoom_app_zoom_webinar_panelist,\n    zoom_app__zoom_webinar_registrant__c::TEXT AS zoom_app_zoom_webinar_registrant,\n    zoom_app__zoom_webinar__c::TEXT            AS zoom_app_zoom_webinar,\n    _sdc_batched_at::TIMESTAMP_TZ              AS _sdc_batched_at,\n    _sdc_extracted_at::TIMESTAMP_TZ            AS _sdc_extracted_at,\n    _sdc_received_at::TIMESTAMP_TZ             AS _sdc_received_at,\n    _sdc_sequence::NUMBER                      AS _sdc_sequence,\n    _sdc_table_version::NUMBER                 AS _sdc_table_version,\n    lastreferenceddate::TIMESTAMP_TZ           AS last_referenced_date,\n    lastvieweddate::TIMESTAMP_TZ               AS last_viewed_date\n  FROM base\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_zoom_webinar_history_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.189250Z", "completed_at": "2025-06-09T18:50:43.215571Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:43.233176Z", "completed_at": "2025-06-09T18:50:48.986022Z"}], "thread_id": "Thread-21", "execution_time": 5.829665184020996, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_group_member_source", "compiled": true, "compiled_code": "WITH source AS (\n    \n    SELECT * \n    FROM EMBUCKET.salesforce_v2_stitch.groupmember\n\n), renamed AS (\n\n       SELECT\n      \n         --keys\n         id AS group_member_id,\n         groupid AS group_id,\n         userorgroupid AS user_or_group_id,\n\n         --Stitch metadata\n         systemmodstamp AS system_mod_stamp,\n         _sdc_batched_at AS sdc_batched_at,\n         _sdc_extracted_at AS sdc_extracted_at,\n         _sdc_received_at AS sdc_received_at,\n         _sdc_sequence AS sdc_sequence,\n         _sdc_table_version AS sdc_table_version\n      \n       FROM source\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_group_member_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.977762Z", "completed_at": "2025-06-09T18:50:44.016727Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.049113Z", "completed_at": "2025-06-09T18:50:48.988714Z"}], "thread_id": "Thread-3", "execution_time": 5.035920858383179, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_contact_role_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.opportunitycontactrole\n\n), renamed AS (\n\n    SELECT\n\n      -- keys\n\n      id               AS opportunity_contact_role_id,\n      contactid        AS contact_id,\n      opportunityid    AS opportunity_id,\n      createdbyid      AS created_by_id,\n      lastmodifiedbyid AS last_modified_by_id, \n\n      -- info\n      role             AS contact_role,\n      isprimary        AS is_primary_contact,\n      createddate      AS created_date,\n      lastmodifieddate AS last_modified_date\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_opportunity_contact_role_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:47.058071Z", "completed_at": "2025-06-09T18:50:47.061366Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:47.061630Z", "completed_at": "2025-06-09T18:50:49.023365Z"}], "thread_id": "Thread-12", "execution_time": 2.0123140811920166, "adapter_response": {}, "message": "Database Error in model sfdc_zoom_webinar_registrant_source (models/sources/sfdc/sfdc_zoom_webinar_registrant_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,244)..Location(1,256)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_zoom_webinar_registrant_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_zoom_webinar_registrant_source", "compiled": true, "compiled_code": "\n\nWITH base AS (\n\n  SELECT *\n  FROM EMBUCKET.salesforce_v2_stitch.zoom_app__zoom_webinar_registrant__c\n),\n\nrenamed AS (\n\n  SELECT\n    createdbyid::TEXT                AS created_by_id,\n    createddate::TIMESTAMP_TZ        AS created_date,\n    id::TEXT                         AS id,\n    isdeleted::BOOLEAN               AS is_deleted,\n    lastmodifiedbyid::TEXT           AS last_modified_by_id,\n    lastmodifieddate::TIMESTAMP_TZ   AS last_modified_date,\n    name::TEXT                       AS name,\n    ownerid::TEXT                    AS owner_id,\n    systemmodstamp::TIMESTAMP_TZ     AS system_mod_stamp,\n    zoom_app__email__c::TEXT         AS zoom_app_email,\n    zoom_app__external_key__c::TEXT  AS zoom_app_external_key,\n    zoom_app__first_name__c::TEXT    AS zoom_app_first_name,\n    zoom_app__job_title__c::TEXT     AS zoom_app_job_title,\n    zoom_app__join_url1__c::TEXT     AS zoom_app_join_url1,\n    zoom_app__last_name__c::TEXT     AS zoom_app_last_name,\n    zoom_app__org__c::TEXT           AS zoom_app_org,\n    zoom_app__status__c::TEXT        AS zoom_app_status,\n    zoom_app__zoom_webinar__c::TEXT  AS zoom_app_zoom_webinar,\n    _sdc_batched_at::TIMESTAMP_TZ    AS _sdc_batched_at,\n    _sdc_extracted_at::TIMESTAMP_TZ  AS _sdc_extracted_at,\n    _sdc_received_at::TIMESTAMP_TZ   AS _sdc_received_at,\n    _sdc_sequence::NUMBER            AS _sdc_sequence,\n    _sdc_table_version::NUMBER       AS _sdc_table_version,\n    lastreferenceddate::TIMESTAMP_TZ AS last_referenced_date,\n    lastvieweddate::TIMESTAMP_TZ     AS last_viewed_date\n  FROM base\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_zoom_webinar_registrant_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.156767Z", "completed_at": "2025-06-09T18:50:44.216717Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.260281Z", "completed_at": "2025-06-09T18:50:49.008498Z"}], "thread_id": "Thread-26", "execution_time": 5.070379972457886, "adapter_response": {}, "message": "Database Error in model sfdc_opportunity_team_member_source (models/sources/sfdc/sfdc_opportunity_team_member_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_opportunity_team_member_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_team_member_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n      *\n    FROM EMBUCKET.salesforce_v2_stitch.opportunityteammember\n\n), renamed AS (\n\n      SELECT\n        id::VARCHAR                                                     AS opportunity_team_member_id,\n        createdbyid::VARCHAR                                            AS created_by_id,\n        createddate::TIMESTAMP                                          AS created_date,\n        employee_number__c::VARCHAR                                     AS employee_number,\n        isdeleted::BOOLEAN                                              AS is_deleted,\n        lastmodifiedbyid::VARCHAR                                       AS last_modified_by_id,\n        lastmodifieddate::TIMESTAMP                                     AS last_modified_date,\n        name::VARCHAR                                                   AS name,\n        opportunityaccesslevel::VARCHAR                                 AS opportunity_access_level,\n        opportunityid::VARCHAR                                          AS opportunity_id,\n        photourl::VARCHAR                                               AS photo_url,\n        title::VARCHAR                                                  AS title,\n        teammemberrole::VARCHAR                                         AS team_member_role,\n        userid::VARCHAR                                                 AS user_id,\n        systemmodstamp::TIMESTAMP                                       AS system_mod_timestamp\n      FROM source\n  )\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.sfdc_opportunity_team_member_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:48.026711Z", "completed_at": "2025-06-09T18:50:48.059406Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:48.066422Z", "completed_at": "2025-06-09T18:50:49.009966Z"}], "thread_id": "Thread-9", "execution_time": 1.05548095703125, "adapter_response": {}, "message": "Database Error in model sfdc_zqu_zproduct_source (models/sources/sfdc/sfdc_zqu_zproduct_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,1044)..Location(1,1056)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_zqu_zproduct_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_zqu_zproduct_source", "compiled": true, "compiled_code": "\n\nwith source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.zqu__zproduct__c\n\n), renamed AS (\n\n    SELECT\n\n      -- ids\n      id::VARCHAR                                  AS zqu_zproduct_id,\n      zqu__product__c::VARCHAR                     AS zqu_product_id,\n      zqu__sku__c::VARCHAR                         AS zqu_sku,\n      zqu__zuoraid__c::VARCHAR                     AS zqu_zuora_id,\n\n      -- info\n      name                                         AS zqu_zproduct_name,\n      zqu__category__c                             AS zqu_zproduct_category,\n      zqu__description__c::VARCHAR                 AS zqu_zproduct_description,\n      zqu__active__c::BOOLEAN                      AS zqu_active,\n      zqu__allow_feature_changes__c::BOOLEAN       AS zqu_allow_feature_changes,\n      lastreferenceddate ::VARCHAR                 AS last_referenced_date,\n      lastvieweddate::VARCHAR                      AS last_viewed_date,\n      ownerid ::VARCHAR                            AS owner_id,   \n      zqu__deleted__c::BOOLEAN                     AS zqu_deleted,\n      zqu__effectiveenddatetext__c::VARCHAR        AS zqu_effective_end_date_text,\n      zqu__effectiveenddate__c::VARCHAR            AS zqu_effective_end_date,\n      zqu__effectivestartdatetext__c::VARCHAR      AS zqu_effective_start_date_text,\n      zqu__effectivestartdate__c::VARCHAR          AS zqu_effective_start_date,\n      \n\n      -- metadata\n      createdbyid::VARCHAR                    AS created_by_id,\n      createddate::TIMESTAMP_TZ               AS created_date,\n      isdeleted::BOOLEAN                      AS is_deleted,\n      lastmodifiedbyid::VARCHAR               AS last_modified_by_id,\n      lastmodifieddate::TIMESTAMP_TZ          AS last_modified_date,\n      _sdc_received_at::TIMESTAMP_TZ          AS sdc_received_at,\n      _sdc_extracted_at::TIMESTAMP_TZ         AS sdc_extracted_at,\n      _sdc_table_version::NUMBER              AS sdc_table_version,\n      _sdc_batched_at::TIMESTAMP_TZ           AS sdc_batched_at,\n      _sdc_sequence::NUMBER                   AS sdc_sequence,\n      systemmodstamp::TIMESTAMP_TZ            AS system_mod_stamp\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_zqu_zproduct_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:47.212585Z", "completed_at": "2025-06-09T18:50:47.226956Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:47.235039Z", "completed_at": "2025-06-09T18:50:49.009189Z"}], "thread_id": "Thread-14", "execution_time": 1.8767170906066895, "adapter_response": {}, "message": "Database Error in model sfdc_zqu_quote_amendment_source (models/sources/sfdc/sfdc_zqu_quote_amendment_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,1236)..Location(1,1248)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_zqu_quote_amendment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_zqu_quote_amendment_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.zqu__quoteamendment__c\n\n), renamed AS (\n\n    SELECT\n      id::VARCHAR                             AS zqu_quote_amendment_id,\n\n      charge_summary_sub_total__c::FLOAT      AS charge_summary_sub_total,\n      license_amount__c::FLOAT                AS license_amount,\n      NAME::VARCHAR                           AS zqu_quote_amendment_name,\n      professional_services_amount__c::FLOAT  AS professional_services_amount,\n      true_up_amount__c::FLOAT                AS true_up_amount,\n      zqu__autorenew__c::VARCHAR              AS zqu__auto_renew,\n      zqu__cancellationpolicy__c::VARCHAR     AS zqu__cancellation_policy,\n      zqu__deltamrr__c::FLOAT                 AS zqu__delta_mrr,\n      zqu__deltatcv__c::FLOAT                 AS zqu__delta_tcv,\n      zqu__initialtermperiodtype__c::VARCHAR  AS zqu__initial_term_period_type,\n      zqu__initialterm__c::FLOAT              AS zqu__initial_term,\n      zqu__quoteamendmentzuoraid__c::VARCHAR  AS zqu__quote_amendment_zuora_id,\n      zqu__renewaltermperiodtype__c::VARCHAR  AS zqu__renewal_term_period_type,\n      zqu__renewalterm__c::FLOAT              AS zqu__renewal_term,\n      zqu__status__c::VARCHAR                 AS zqu__status,\n      zqu__totalamount__c::FLOAT              AS zqu__total_amount,\n      zqu__quote__c::VARCHAR                  AS zqu__quote,\n      zqu__type__c::VARCHAR                   AS zqu__type,\n      zqu__description__c::VARCHAR            AS zqu__description,\n      zqu__termstartdate__c::TIMESTAMP_TZ     AS zqu__term_start_date,\n\n\n      --metadata\n      createdbyid::VARCHAR                    AS created_by_id,\n      createddate::TIMESTAMP_TZ               AS created_date,\n      isdeleted::BOOLEAN                      AS is_deleted,\n      lastmodifiedbyid::VARCHAR               AS last_modified_by_id,\n      lastmodifieddate::TIMESTAMP_TZ          AS last_modified_date,\n      _sdc_received_at::TIMESTAMP_TZ          AS sdc_received_at,\n      _sdc_extracted_at::TIMESTAMP_TZ         AS sdc_extracted_at,\n      _sdc_table_version::NUMBER              AS sdc_table_version,\n      _sdc_batched_at::TIMESTAMP_TZ           AS sdc_batched_at,\n      _sdc_sequence::NUMBER                   AS sdc_sequence,\n      systemmodstamp::TIMESTAMP_TZ            AS system_mod_stamp\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_zqu_quote_amendment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.982859Z", "completed_at": "2025-06-09T18:50:44.019698Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.058425Z", "completed_at": "2025-06-09T18:50:49.024937Z"}], "thread_id": "Thread-11", "execution_time": 5.088283061981201, "adapter_response": {}, "message": "Database Error in model sfdc_opportunity_split_source (models/sources/sfdc/sfdc_opportunity_split_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_opportunity_split_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_split_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT\n      *\n    FROM EMBUCKET.salesforce_v2_stitch.opportunitysplit\n\n), renamed AS (\n\n      SELECT\n        id::VARCHAR                                                AS opportunity_split_id,\n        opportunityid::VARCHAR                                     AS opportunity_id,\n        createdbyid::VARCHAR                                       AS created_by_id,\n        createddate::TIMESTAMP                                     AS created_date,\n        lastmodifiedbyid::VARCHAR                                  AS last_modified_by_id,\n        lastmodifieddate::TIMESTAMP                                AS last_modified_date,\n        employee_number__c::VARCHAR                                AS employee_number,\n        isdeleted::BOOLEAN                                         AS is_deleted,\n        opp_owner_different__c::BOOLEAN                            AS is_opportunity_owner_different,\n        split::NUMBER                                              AS split,\n        split_id__c::VARCHAR                                       AS split_id,\n        split_owner_role__c::VARCHAR                               AS split_owner_role,\n        splitamount::NUMBER                                        AS split_amount,\n        splitnote::VARCHAR                                         AS split_note,\n        splitownerid::VARCHAR                                      AS split_owner_id,\n        splitpercentage::NUMBER                                    AS split_percentage,\n        splittypeid::VARCHAR                                       AS split_type_id,\n        team__c::VARCHAR                                           AS team,\n        user_role__c::VARCHAR                                      AS user_role,\n        systemmodstamp::TIMESTAMP                                  AS system_mod_timestamp\n      FROM source\n  )\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.sfdc_opportunity_split_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.540258Z", "completed_at": "2025-06-09T18:50:44.546791Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.547760Z", "completed_at": "2025-06-09T18:50:49.010551Z"}], "thread_id": "Thread-17", "execution_time": 4.55007791519165, "adapter_response": {}, "message": "Database Error in model sfdc_task_source (models/sources/sfdc/sfdc_task_source.sql)\n  000200: DataFusion error: type_coercion\n  caused by\n  Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_task_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_task_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.task\n\n), renamed AS(\n\n    SELECT\n      id                                        AS task_id, \n\n      --keys\n      accountid                                 AS account_id,\n      ownerid                                   AS owner_id,\n      assigned_employee_number__c               AS assigned_employee_number,\n      whoid                                     AS lead_or_contact_id,\n      whatid                                    AS account_or_opportunity_id,\n      recordtypeid                              AS record_type_id,\n      related_to_account_name__c                AS related_to_account_name,\n      related_to_lead__c                        AS related_lead_id,\n      related_to_contact__c                     AS related_contact_id,\n      related_to_opportunity__c                 AS related_opportunity_id,\n      related_to_account__c                     AS related_account_id,\n      related_to_id__c                          AS related_to_id,\n\n      -- Task infomation\n      comments__c                               AS comments,\n      description                               AS full_comments,\n      subject                                   AS task_subject,\n      CASE \n    WHEN contains(subject, 'Microsite Program') \n      THEN 'Microsite Program'\n    WHEN contains(subject, 'Free Trial Program')\n      THEN 'Free Trial Program'\n    WHEN trim(subject) = 'GitLab Dedicated Landing Pages'\n      THEN 'GitLab Dedicated Landing Pages'\n    WHEN trim(subject) = 'Partner Concierge Program'\n      THEN 'Partner Concierge Program'\n    ELSE NULL\n  END \n                                                AS partner_marketing_task_subject,\n      activitydate::DATE                        AS task_date,\n      createddate::TIMESTAMP                    AS task_created_at,\n      createdbyid                               AS task_created_by_id,\n      status                                    AS task_status,\n      tasksubtype                               AS task_subtype,\n      type                                      AS task_type,\n      priority                                  AS task_priority,\n      close_task__c                             AS close_task,\n      completeddatetime::TIMESTAMP              AS task_completed_at,\n      isclosed                                  AS is_closed,\n      isdeleted                                 AS is_deleted,\n      isarchived                                AS is_archived,\n      ishighpriority                            AS is_high_priority,\n      persona_functions__c                      AS persona_functions,\n      persona_levels__c                         AS persona_levels,\n      outreach_meeting_type__c                  AS outreach_meeting_type,\n      customer_interaction_sentiment__c         AS customer_interaction_sentiment,\n      assigned_to_role__c                       AS task_owner_role,\n      dascoopcomposer__is_created_by_groove__c  AS is_created_by_groove,\n\n      -- Activity infromation\n      activity_disposition__c                   AS activity_disposition,\n      activity_source__c                        AS activity_source,\n      csm_activity_type__c                      AS csm_activity_type,\n      sa_activity_type__c                       AS sa_activity_type,\n      gs_activity_type__c                       AS gs_activity_type,\n      gs_sentiment__c                           AS gs_sentiment,\n      gs_meeting_type__c                        AS gs_meeting_type,\n      gs_exec_sponsor_present__c                AS is_gs_exec_sponsor_present,\n      meeting_cancelled__c                      AS is_meeting_cancelled,\n      products_positioned__c                    AS products_positioned,\n\n      -- Call information\n      calltype                                  AS call_type,\n      call_purpose__c                           AS call_purpose,\n      calldisposition                           AS call_disposition,\n      calldurationinseconds                     AS call_duration_in_seconds,\n      call_recording__c                         AS call_recording,\n      is_answered__c                            AS is_answered,\n      is_correct_contact__c                     AS is_correct_contact,\n\n      -- Reminder information\n      isreminderset                             AS is_reminder_set,\n      reminderdatetime::TIMESTAMP               AS reminder_at,\n\n      -- Recurrence information\n      isrecurrence                              AS is_recurrence,\n      recurrenceinterval                        AS task_recurrence_interval,\n      recurrenceinstance                        AS task_recurrence_instance,\n      recurrencetype                            AS task_recurrence_type,\n      recurrenceactivityid                      AS task_recurrence_activity_id,\n      recurrenceenddateonly::DATE               AS task_recurrence_end_date,\n      recurrencedayofweekmask                   AS task_recurrence_day_of_week,\n      recurrencetimezonesidkey                  AS task_recurrence_timezone,\n      recurrencestartdateonly::DATE             AS task_recurrence_start_date,\n      recurrencedayofmonth                      AS task_recurrence_day_of_month,\n      recurrencemonthofyear                     AS task_recurrence_month,\n\n      -- Sequence information\n      name_of_active_sequence__c                AS active_sequence_name,\n      sequence_step_number__c                   AS sequence_step_number,\n\n      -- Docs/Video Conferencing\n      google_doc_link__c                        AS google_doc_link,\n      zoom_app__ics_sequence__c                 AS zoom_app_ics_sequence,\n      zoom_app__use_personal_zoom_meeting_id__c AS zoom_app_use_personal_zoom_meeting_id,\n      zoom_app__join_before_host__c             AS zoom_app_join_before_host,\n      zoom_app__make_it_zoom_meeting__c         AS zoom_app_make_it_zoom_meeting,\n      affectlayer__chorus_call_id__c            AS chorus_call_id,\n\n      -- Counts\n      whatcount                                 AS account_or_opportunity_count,\n      whocount                                  AS lead_or_contact_count,\n\n      -- metadata\n      lastmodifiedbyid                          AS last_modified_id,\n      lastmodifieddate::TIMESTAMP               AS last_modified_at,\n      systemmodstamp::TIMESTAMP                 AS system_modified_at\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_task_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.009170Z", "completed_at": "2025-06-09T18:50:44.048220Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.088695Z", "completed_at": "2025-06-09T18:50:49.300293Z"}], "thread_id": "Thread-23", "execution_time": 5.323968887329102, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_proof_of_concept_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.proof_of_concept__c\n\n), renamed AS (\n\n    SELECT\n    -- keys\n      id                                        AS pov_id,\n      account__c                                AS account_id,\n      opportunity__c                            AS opportunity_id,\n      poc_owner__c                              AS pov_owner_id,\n      solutions_architect__c                    AS solutions_architect_id,\n      technical_account_manager__c              AS technical_account_manager_id,    \n\n    -- dates\n      poc_start_date__c                         AS pov_start_date,\n      poc_close_date__c                         AS pov_close_date,\n\n    -- info\n      name                                      AS pov_name,\n      decline_reason__c                         AS reason_for_decline,\n      general_notes__c                          AS general_notes,\n      poc_length__c                             AS pov_length,\n      poc_milestone_in_collaboration_project__c AS link_to_gitlab_milestone,\n      poc_type__c                               AS pov_type,\n      result__c                                 AS pov_result,\n      status__c                                 AS pov_status,\n      success_criteria__c                       AS success_criteria,\n      unsuccessful_reason__c                    AS unsuccessful_reason,\n      sa_asm_leader_approved__c                 AS is_sa_asm_leader_approved,\n\n    -- metadata\n      createdbyid                               AS created_by_id,\n      createddate                               AS created_date,\n      lastmodifiedbyid                          AS last_modified_by_id,\n      lastmodifieddate                          AS last_modified_date,\n      isdeleted::BOOLEAN                        AS is_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.sfdc_proof_of_concept_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.037040Z", "completed_at": "2025-06-09T18:50:44.073315Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.137428Z", "completed_at": "2025-06-09T18:50:49.310653Z"}], "thread_id": "Thread-25", "execution_time": 5.3451879024505615, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_quote_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.zqu__quote__c\n\n), renamed AS (\n\n    SELECT\n      -- keys\n      id                                AS quote_id,\n      account_id__c                     AS account_id,\n      opportunity_id__c                 AS opportunity_id,\n      ownerid                           AS owner_id,\n      zqu__zuoraaccountid__c            AS zuora_account_id,\n      zqu__zuorasubscriptionid__c       AS zuora_subscription_id,\n      zqu__BillToContact__c             AS bill_to_contact,\n      zqu__SoldToContact__c             AS sold_to_contact,\n\n      -- info\n      zqu__startdate__c                 AS contract_effective_date,\n      createddate                       AS created_date,\n      zqu__primary__c                   AS is_primary_quote,\n      lastmodifieddate                  AS last_modified_date,\n      name                              AS name,\n      quote_tcv__c                      AS quote_tcv,    \n      zqu__status__c                    AS status,\n      zqu__subscriptiontermstartdate__c AS term_start_date,\n      zqu__subscriptiontermenddate__c   AS term_end_date,\n      systemmodstamp,\n      isdeleted                         AS is_deleted\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_quote_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.125263Z", "completed_at": "2025-06-09T18:50:44.177809Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.223855Z", "completed_at": "2025-06-09T18:50:49.308278Z"}], "thread_id": "Thread-10", "execution_time": 5.308840990066528, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_permission_set_assignment_source", "compiled": true, "compiled_code": "WITH source AS (\n    \n    SELECT * \n    FROM EMBUCKET.salesforce_v2_stitch.permissionsetassignment\n\n), renamed AS (\n\n       SELECT\n      \n         --keys\n         id AS permission_set_assignment_id,\n\n         --info\n         assigneeid AS assignee_id,\n         permissionsetgroupid AS permission_set_group_id,\n         permissionsetid AS permission_set_id,\n         isactive AS is_active,\n\n         --Stitch metadata\n         systemmodstamp AS system_mod_stamp,\n         _sdc_batched_at AS sdc_batched_at,\n         _sdc_extracted_at AS sdc_extracted_at,\n         _sdc_received_at AS sdc_received_at,\n         _sdc_sequence AS sdc_sequence,\n         _sdc_table_version AS sdc_table_version\n      \n       FROM source\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_permission_set_assignment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:48.926310Z", "completed_at": "2025-06-09T18:50:48.989407Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.003126Z", "completed_at": "2025-06-09T18:50:49.486592Z"}], "thread_id": "Thread-24", "execution_time": 0.5728960037231445, "adapter_response": {}, "message": "Database Error in model sheetload_case_creation_data_source (models/sources/sheetload/sheetload_case_creation_data_source.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'try_to_number'.\n  Did you mean 'try_to_time'?\n  compiled code at target/run/gitlab_snowflake/models/sources/sheetload/sheetload_case_creation_data_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_case_creation_data_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.sheetload.case_creation_data\n\n),\n\nrenamed AS (\n\n  SELECT\n    TRY_TO_NUMBER(case_trigger_id)                   AS case_trigger_id,\n    case_trigger ::VARCHAR                           AS case_trigger,\n    owner_id::VARCHAR                                AS owner_id,\n    status::VARCHAR                                  AS status,\n    case_origin::VARCHAR                             AS case_origin,\n    type::VARCHAR                                    AS type,\n    case_subject::VARCHAR                            AS case_subject,\n    case_reason::VARCHAR                             AS case_reason,\n    record_type_id::VARCHAR                          AS record_type_id,\n    priority::VARCHAR                                AS priority,\n    live::VARCHAR                                    AS live,\n    case_cta::VARCHAR                                AS case_cta,\n    case_context::VARCHAR                            AS case_context\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_case_creation_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.608958Z", "completed_at": "2025-06-09T18:50:44.612331Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.612622Z", "completed_at": "2025-06-09T18:50:49.800045Z"}], "thread_id": "Thread-1", "execution_time": 5.191895961761475, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_traction_history_log_source", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.tracrtc__history_log__c\n\n), renamed AS (\n\n    SELECT\n        id                                            AS traction_history_log_id,\n\n    -- keys\n        createdbyid                                   AS traction_history_log_created_by_id,\n        lastmodifiedbyid                              AS traction_history_log_last_modified_by_id,\n        ownerid                                       AS traction_history_log_owner_id,\n        tracrtc__object_id__c                         AS traction_history_log_object_id,\n        tracrtc__flow_id__c                           AS traction_history_log_flow_id,\n        tracrtc__execution_id__c                      AS traction_history_log_execution_id,\n        tracrtc__lead__c                              AS traction_history_log_lead_id,\n        tracrtc__contact__c                           AS traction_history_log_contact_id,\n        tracrtc__case__c                              AS traction_history_log_case_id,\n        tracrtc__account__c                           AS traction_history_log_account_id,\n        tracrtc__opportunity__c                       AS traction_history_log_opportunity_id,\n\n    -- date/time\n        createddate                                   AS traction_history_log_created_datetime,\n        lastmodifieddate                              AS traction_history_log_last_modified_datetime,\n        systemmodstamp                                AS traction_history_log_system_modified_datetime,\n        tracrtc__log_date__c                          AS traction_history_log_log_datetime,\n        tracrtc__log_sort__c                          AS traction_history_log_sort_datetime,\n        tracrtc__history_index__c                     AS traction_history_log_index_datetime,\n\n    -- log details\n        name                                          AS traction_history_log_name,\n        tracrtc__record_type_name__c                  AS traction_history_log_record_type_name,\n        tracrtc__log_number__c                        AS traction_history_log_number,\n        tracrtc__case_evaluated__c                    AS traction_history_log_evaluated_cases,\n        tracrtc__flow_name__c                         AS traction_history_log_flow_name,\n        tracrtc__flow_step__c                         AS traction_history_log_flow_step,\n        tracrtc__flow_step_evaluated_as__c            AS is_traction_history_log_flow_step_evaluated,\n        tracrtc__flow_step_snapshot__c                AS traction_history_log_flow_step_snapshot_array,\n        tracrtc__realtime_clean_error_message__c      AS traction_history_log_error_message,\n        tracrtc__realtime_clean_processed__c          AS is_processed_traction_history_log,\n\n    -- modifications\n        tracrtc__modified_fields__c                   AS traction_history_log_modified_fields_array,\n        tracrtc__evaluated_fields__c                  AS traction_history_log_evaluated_fields_array,\n        tracrtc__previous_field_value__c              AS traction_history_log_previous_field_value,\n\n    -- other\n        isdeleted                                     AS is_deleted\n    FROM base\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_traction_history_log_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.027005Z", "completed_at": "2025-06-09T18:50:44.032058Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.065948Z", "completed_at": "2025-06-09T18:50:51.160242Z"}], "thread_id": "Thread-20", "execution_time": 7.134779691696167, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_statement_of_work_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.statement_of_work__c\n\n), renamed AS (\n\n    SELECT\n    -- keys\n      id                                 AS ps_engagement_id,\n      opportunity__c                     AS opportunity_id,\n      owner__c                           AS owner_id,\n\n    -- dates\n      completed_date__c                  AS completed_date,\n      kick_off_date__c                   AS kick_off_date,\n      go_live_date__c                    AS go_live_date,\n\n    -- info\n      name                               AS ps_engagement_name,\n      percentcomplete__c                 AS percent_complete,\n      signed_acceptance_from_customer__c AS signed_acceptance_from_customer,\n      status__c                          AS status,\n\n    -- metadata\n      createdbyid                        AS created_by_id,\n      lastmodifiedbyid                   AS last_modified_by_id,\n      createddate                        AS created_date,\n      lastmodifieddate                   AS last_modified_date,\n      isdeleted                          AS is_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_statement_of_work_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:48.003323Z", "completed_at": "2025-06-09T18:50:48.014045Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:48.019170Z", "completed_at": "2025-06-09T18:50:51.156203Z"}], "thread_id": "Thread-15", "execution_time": 3.183532953262329, "adapter_response": {}, "message": "Database Error in model sfdc_zqu_quote_source (models/sources/sfdc/sfdc_zqu_quote_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,1681)..Location(1,1693)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_zqu_quote_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_zqu_quote_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.zqu__quote__c\n\n), renamed AS (\n\n    SELECT\n      id::VARCHAR                                            AS zqu_quote_id,\n      quote_id_18__c::VARCHAR                                AS quote_id_18,\n      quote_id__c::VARCHAR                                   AS quote_id,\n      account_id__c::VARCHAR                                 AS account_id,\n      opportunity_id__c::VARCHAR                             AS opportunity_id,\n\n      invoice_number__c::VARCHAR                             AS invoice_number,\n      admin_primary_backfill__c::BOOLEAN                     AS admin_primary_backfill,\n      approval_stage_fmt__c::VARCHAR                         AS approval_stage_fmt,\n      approval_stage__c::VARCHAR                             AS approval_stage,\n      asm__c::VARCHAR                                        AS asm,\n      bill_to_address_1__c::VARCHAR                          AS bill_to_address_1,\n      bill_to_address_2__c::VARCHAR                          AS bill_to_address_2,\n      bill_to_contact_updated__c::BOOLEAN                    AS bill_to_contact_updated,\n      bill_to_country__c::VARCHAR                            AS bill_to_country,\n      bill_to_email_address__c::VARCHAR                      AS bill_to_email_address,\n      bill_to_phone__c::VARCHAR                              AS bill_to_phone,\n      calculated_discount__c::FLOAT                          AS calculated_discount,\n      charge_summary_sub_total__c::FLOAT                     AS charge_summary_sub_total,\n      click_through_eula_contract_language__c::VARCHAR       AS click_through_eula_contract_language,\n      delta_arr__c::FLOAT                                    AS delta_arr,\n      distributor__c::VARCHAR                                AS distributor,\n      gitlab_privacy_url__c::VARCHAR                         AS gitlab_privacy_url,\n      has_githost_cb__c::BOOLEAN                             AS has_githost_cb,\n      has_invoice_owner__c::FLOAT                            AS has_invoice_owner,\n      invoice_paid__c::BOOLEAN                               AS invoice_paid,\n      key_assumptions__c::VARCHAR                            AS key_assumptions,\n      mailing_street__c::VARCHAR                             AS mailing_street,\n      name::VARCHAR                                          AS zqu_quote_name,\n      nrv_roll_up__c::FLOAT                                  AS nrv_roll_up,\n      opportunity_amount__c::FLOAT                           AS opportunity_amount,\n      opportunity_stage__c::VARCHAR                          AS opportunity_stage,\n      quote_amendment_last_modified_date__c::TIMESTAMP_TZ    AS quote_amendment_last_modified_date,\n      quote_opportunity_amount_match__c::VARCHAR             AS quote_opportunity_amount_match,\n      quote_rateplan_last_updated_time__c::TIMESTAMP_TZ      AS quote_rateplan_last_updated_time,\n      ra_use_primary_quote__c::BOOLEAN                       AS ra_use_primary_quote,\n      required_approvals_from_vp_of_sales_rd__c::VARCHAR     AS required_approvals_from_vp_of_sales_rd,\n      resellerbilltostateprovince__c::VARCHAR                AS reseller_bill_to_state_province,\n      bill_to_country_code__c::VARCHAR                       AS bill_to_country_code,\n      bill_to_postal_code__c::VARCHAR                        AS bill_to_postal_code,\n      clickthrougheularequired__c::VARCHAR                   AS click_through_eula_required,\n      createdbyfirstname__c::VARCHAR                         AS created_by_first_name,\n      invoice_owner_account_type__c::VARCHAR                 AS invoice_owner_account_type,\n      invoice_owner_vat_id__c::VARCHAR                       AS invoice_owner_vat_id,\n      invoice_paid_date__c::TIMESTAMP_TZ                     AS invoice_paid_date,\n      max_premium_discount_2__c::FLOAT                       AS max_premium_discount_2,\n      mrr_rollup__c::FLOAT                                   AS mrr_rollup,\n      partner_registered__c::VARCHAR                         AS partner_registered,\n      professional_services_amount__c::FLOAT                 AS professional_services_amount,\n      bill_to_city__c::VARCHAR                               AS bill_to_city,\n      bill_to_contact_info_updated__c::VARCHAR               AS bill_to_contact_info_updated,\n      bill_to_initial_source__c::VARCHAR                     AS bill_to_initial_source,\n      bill_to_street__c::VARCHAR                             AS bill_to_street,\n      count_of_rate_plans__c::FLOAT                          AS count_of_rate_plans,\n      createddate::TIMESTAMP_TZ                              AS created_date,\n      entity_bank_information__c::VARCHAR                    AS entity_bank_information,\n      invoiceownerpaymentterms__c::FLOAT                     AS invoice_owner_payment_terms,\n      license_amount_v2__c::FLOAT                            AS license_amount_v2,\n      partner_assisted__c::VARCHAR                           AS partner_assisted,\n      previous_renewal_term__c::FLOAT                        AS previous_renewal_term,\n      quote_end_date__c::TIMESTAMP_TZ                        AS quote_end_date,\n      quote_entity_beneficiary_information__c::VARCHAR       AS quote_entity_beneficiary_information,\n      quote_entity_legal_name__c::VARCHAR                    AS quote_entity_legal_name,\n      resellerbilltocity__c::VARCHAR                         AS reseller_bill_to_city,\n      bill_to_name__c::VARCHAR                               AS bill_to_name,\n      bill_to_state__c::VARCHAR                              AS bill_to_state,\n      change_sold_to_contact__c::VARCHAR                     AS change_sold_to_contact,\n      createdbyemailaddress__c::VARCHAR                      AS created_by_email_address,\n      entity_contact_information__c::VARCHAR                 AS entity_contact_information,\n      has_githost__c::FLOAT                                  AS has_githost,\n      invoice_amount__c::FLOAT                               AS invoice_amount,\n      new_sub_on_addon_renewal_approved__c::BOOLEAN          AS new_sub_on_addon_renewal_approved,\n      non_standard_contract_terms__c::VARCHAR                AS non_standard_contract_terms,\n      ownerid::VARCHAR                                       AS owner_id,\n      partner_fulfillment__c::VARCHAR                        AS partner_fulfillment,\n      po_required__c::BOOLEAN                                AS po_required,\n      professional_services_description__c::VARCHAR          AS professional_services_description,\n      proserv_exception_approval_notes__c::VARCHAR           AS professional_services_exception_approval_notes,\n      pub_sec_owner__c::VARCHAR                              AS pub_sec_owner,\n      quote_amendment_count__c::FLOAT                        AS quote_amendment_count,\n      quote_entity_contact_information__c::VARCHAR           AS quote_entity_contact_information,\n      rate_plans__c::VARCHAR                                 AS rate_plans,\n      rd__c::VARCHAR                                         AS rd,\n      recordtypeid::VARCHAR                                  AS record_type_id,\n      required_approvals_from_asm__c::VARCHAR                AS required_approvals_from_asm,\n      invoice_owner_country__c::VARCHAR                      AS invoice_owner_country,\n      purchase_order__c::VARCHAR                             AS purchase_order,\n      required_approvals_from_ceo__c::VARCHAR                AS required_approvals_from_ceo,\n      entity_beneficiary_information__c::VARCHAR             AS entity_beneficiary_information,\n      highest_quote_rate_plan__c::VARCHAR                    AS highest_quote_rate_plan,\n      quote_entity_override__c::BOOLEAN                      AS quote_entity_override,\n      renewal_mrr__c::FLOAT                                  AS renewal_mrr,\n      quote_tcv__c::FLOAT                                    AS quote_tcv,\n      required_approvals_from_cfo__c::VARCHAR                AS required_approvals_from_cfo,\n      required_approvals_from_cs__c::VARCHAR                 AS required_approvals_from_cs,\n      required_approvals_from_legal__c::VARCHAR              AS required_approvals_from_legal,\n      required_approvals_from_vp_of_channel__c::VARCHAR      AS required_approvals_from_vp_of_channel,\n      required_approvals_from_enterprise_vp__c::VARCHAR      AS required_approvals_from_enterprise_vp,\n      requires_deal_desk_review__c::BOOLEAN                  AS requires_deal_desk_review,\n      resellerbilltocountry__c::VARCHAR                      AS reseller_bill_to_country,\n      resellerbilltopostalcode__c::VARCHAR                   AS reseller_bill_to_postal_code,\n      resellerbilltostreet__c::VARCHAR                       AS reseller_bill_to_street,\n      click_through_eula_test__c::VARCHAR                    AS click_through_eula_test,\n      gitlab_terms_url__c::VARCHAR                           AS gitlab_terms_url,\n      invoice_owner_account_id__c::VARCHAR                   AS invoice_owner_account_id,\n      project_scope__c::VARCHAR                              AS project_scope,\n      quote_entity_bank_information__c::VARCHAR              AS quote_entity_bank_information,\n      quote_entity_check_remittance__c::VARCHAR              AS quote_entity_check_remittance,\n      quote_entity__c::VARCHAR                               AS quote_entity,\n      required_approvals_from_cro__c::VARCHAR                AS required_approvals_from_cro,\n      resellerbilltoemail__c::VARCHAR                        AS reseller_bill_to_email,\n      resellerbilltofirstname__c::VARCHAR                    AS reseller_bill_to_first_name,\n      resellerbilltolastname__c::VARCHAR                     AS reseller_bill_to_last_name,\n      resellerbilltophone__c::VARCHAR                        AS reseller_bill_to_phone,\n      reseller_bill_to__c::VARCHAR                           AS reseller_bill_to,\n      license_amount__c::FLOAT                               AS license_amount,\n      required_approvals_from_rd__c::VARCHAR                 AS required_approvals_from_rd,\n      reseller_account_name__c::VARCHAR                      AS reseller_account_name,\n      reseller_po_status__c::VARCHAR                         AS reseller_po_status,\n      saas_addendum_existing_agreement_lang__c::VARCHAR      AS saas_addendum_existing_agreement_lang,\n      send_githost_email_to_support__c::BOOLEAN              AS send_githost_email_to_support,\n      sold_to_address_2__c::VARCHAR                          AS sold_to_address_2,\n      sold_to_city__c::VARCHAR                               AS sold_to_city,\n      sold_to_contact_updated__c::BOOLEAN                    AS sold_to_contact_updated,\n      sold_to_country_code__c::VARCHAR                       AS sold_to_country_code,\n      sold_to_country__c::VARCHAR                            AS sold_to_country,\n      sold_to_email_address__c::VARCHAR                      AS sold_to_email_address,\n      sold_to_email__c::VARCHAR                              AS sold_to_email,\n      sold_to_name__c::VARCHAR                               AS sold_to_name,\n      sold_to_phone__c::VARCHAR                              AS sold_to_phone,\n      sold_to_state__c::VARCHAR                              AS sold_to_state,\n      start_date_vs_close_date__c::FLOAT                     AS start_date_vs_close_date,\n      submitter_comments__c::VARCHAR                         AS submitter_comments,\n      subscription_agreement_effective_date_ca__c::VARCHAR   AS subscription_agreement_effective_date_ca,\n      subscription_agreement_effective_date__c::TIMESTAMP_TZ AS subscription_agreement_effective_date,\n      tax_exempt_checkbox__c::BOOLEAN                        AS tax_exempt_checkbox,\n      tcv_including_discount__c::FLOAT                       AS tcv_including_discount,\n      total_partner_discount__c::FLOAT                       AS total_partner_discount,\n      trigger_workflow__c::BOOLEAN                           AS trigger_workflow,\n      true_up_amount__c::FLOAT                               AS true_up_amount,\n      vat_tax_id__c::VARCHAR                                 AS vat_tax_id,\n      vp_of_sales__c::VARCHAR                                AS vp_of_sales,\n      wip_arr_iacv_delta__c::FLOAT                           AS wip_arr_iacv_delta,\n      x_trigger_quote_approval_check__c::BOOLEAN             AS x_trigger_quote_approval_check,\n      reseller_type__c::VARCHAR                              AS reseller_type,\n      sold_to_address_1__c::VARCHAR                          AS sold_to_address_1,\n      sold_to_contact_is_null__c::BOOLEAN                    AS sold_to_contact_is_null,\n      sold_to_initial_source__c::VARCHAR                     AS sold_to_initial_source,\n      sold_to_postal_code__c::VARCHAR                        AS sold_to_postal_code,\n      subscription_agreement_id__c::VARCHAR                  AS subscription_agreement_id,\n      systemmodstamp::TIMESTAMP_TZ                           AS system_mod_stamp,\n      task_schedule__c::VARCHAR                              AS task_schedule,\n      watch_quote__c::BOOLEAN                                AS watch_quote,\n      sold_to_contact_info_updated__c::VARCHAR               AS sold_to_contact_info_updated,\n      subscription_agreement_amendments__c::VARCHAR          AS subscription_agreement_amendments,\n      zqu__account__c::VARCHAR                               AS zqu__account,\n      zqu__applycreditbalance__c::BOOLEAN                    AS zqu__apply_credit_balance,\n      zqu__billingbatch__c::VARCHAR                          AS zqu__billing_batch,\n      zqu__billingmethod__c::VARCHAR                         AS zqu__billing_method,\n      zqu__billtocontact__c::VARCHAR                         AS zqu__bill_to_contact,\n      zqu__cancellationdate__c::TIMESTAMP_TZ                 AS zqu_cancellation_date,\n      zqu__cancellationeffectivedate__c::VARCHAR             AS zqu__cancellation_effective_date,\n      zqu__certificate_id__c::VARCHAR                        AS zqu__certificate_id,\n      zqu__certificate_type__c::VARCHAR                      AS zqu__certificate_type,\n      zqu__company_code__c::VARCHAR                          AS zqu__company_code,\n      zqu__currency__c::VARCHAR                              AS zqu__currency,\n      zqu__deltatcv__c::FLOAT                                AS zqu__delta_tcv,\n      zqu__electronicpaymentmethodid__c::VARCHAR             AS zqu__electronic_payment_method_id,\n      zqu__existingproductsstored__c::BOOLEAN                AS zqu__existing_products_stored,\n      zqu__existsubscriptionid__c::VARCHAR                   AS zqu__exist_subscription_id,\n      zqu__generateinvoice__c::BOOLEAN                       AS zqu__generate_invoice,\n      zqu__hidden_subscription_name__c::VARCHAR              AS zqu__hidden_subscription_name,\n      zqu__initialterm__c::FLOAT                             AS zqu__initial_term,\n      zqu__invoiceownerid__c::VARCHAR                        AS zqu__invoice_owner_id,\n      zqu__invoiceownername__c::VARCHAR                      AS zqu__invoice_owner_name,\n      zqu__amendment_name__c::VARCHAR                        AS zqu__amendment_name,\n      zqu__approvalstatus__c::VARCHAR                        AS zqu__approval_status,\n      zqu__calculate_quote_metrics_through__c::VARCHAR       AS zqu__calculate_quote_metrics_through,\n      zqu__communicationprofile__c::VARCHAR                  AS zqu__communication_profile,\n      zqu__description__c::VARCHAR                           AS zqu__description,\n      zqu__invoiceprocessingoption__c::VARCHAR               AS zqu__invoice_processing_option,\n      zqu__invoiceseparately__c::BOOLEAN                     AS zqu__invoice_separately,\n      zqu__is_charge_expired__c::BOOLEAN                     AS zqu__is_charge_expired,\n      zqu__is_parent_quote__c::BOOLEAN                       AS zqu__is_parent_quote,\n      zqu__mrr__c::FLOAT                                     AS zqu__mrr,\n      zqu__number__c::VARCHAR                                AS zqu__number,\n      zqu__paymentgateway__c::VARCHAR                        AS zqu__payment_gateway,\n      zqu__paymentmethod__c::VARCHAR                         AS zqu__payment_method,\n      zqu__paymentterm__c::VARCHAR                           AS zqu__payment_term,\n      zqu__previewed_delta_tcv__c::FLOAT                     AS zqu__previewed_delta_tcv,\n      zqu__previewed_mrr__c::FLOAT                           AS zqu__previewed_mrr,\n      zqu__previewed_subtotal__c::FLOAT                      AS zqu__previewed_subtotal,\n      zqu__primary__c::BOOLEAN                               AS zqu__primary,\n      zqu__processpayment__c::BOOLEAN                        AS zqu__process_payment,\n      zqu__quotebusinesstype__c::VARCHAR                     AS zqu__quote_business_type,\n      zqu__quotetemplate__c::VARCHAR                         AS zqu__quote_template,\n      zqu__recordreadonly__c::BOOLEAN                        AS zqu__record_read_only,\n      zqu__renewaltermperiodtype__c::VARCHAR                 AS zqu__renewal_term_period_type,\n      zqu__soldtocontact__c::VARCHAR                         AS zqu__sold_to_contact,\n      zqu__status__c::VARCHAR                                AS zqu__status,\n      zqu__subscriptiontermenddate__c::TIMESTAMP_TZ          AS zqu__subscription_term_end_date,\n      zqu__subscriptiontermstartdate__c::TIMESTAMP_TZ        AS zqu__subscription_term_start_date,\n      zqu__subscriptiontype__c::VARCHAR                      AS zqu__subscriptiontype,\n      zqu__subscription_name__c::VARCHAR                     AS zqu__subscription_name,\n      zqu__subscription_term_type__c::VARCHAR                AS zqu__subscription_term_type,\n      zqu__taxexempteffectivedate__c::TIMESTAMP_TZ           AS zqu__tax_exempt_effective_date,\n      zqu__taxexemptexpirationdate__c::TIMESTAMP_TZ          AS zqu__tax_exempt_expiration_date,\n      zqu__terms__c::VARCHAR                                 AS zqu__terms,\n      zqu__zuoraentityid__c::VARCHAR                         AS zqu__zuora_entity_id,\n      zqu__zuora_account_number__c::VARCHAR                  AS zqu__zuora_account_number,\n      zqu__autorenew__c::BOOLEAN                             AS zqu__auto_renew,\n      zqu__deltamrr__c::FLOAT                                AS zqu__delta_mrr,\n      zqu__initialtermperiodtype__c::VARCHAR                 AS zqu__initial_term_period_type,\n      zqu__invoicetemplate__c::VARCHAR                       AS zqu__invoice_template,\n      zqu__issuing_jurisdiction__c::VARCHAR                  AS zqu__issuing_jurisdiction,\n      zqu__opportunity__c::VARCHAR                           AS zqu__opportunity,\n      zqu__previewed_delta_mrr__c::FLOAT                     AS zqu__previewed_delta_mrr,\n      zqu__previewed_discount__c::FLOAT                      AS zqu__previewed_discount,\n      zqu__previewed_tax__c::FLOAT                           AS zqu__previewed_tax,\n      zqu__previewed_tcv__c::FLOAT                           AS zqu__previewed_tcv,\n      zqu__previewed_total__c::FLOAT                         AS zqu__previewed_total,\n      zqu__renewalsetting__c::VARCHAR                        AS zqu__renewal_setting,\n      zqu__renewalterm__c::FLOAT                             AS zqu__renewal_term,\n      zqu__startdate__c::TIMESTAMP_TZ                        AS zqu__start_date,\n      zqu__subscriptionversion__c::FLOAT                     AS zqu__subscription_version,\n      zqu__tax_exempt_description__c::VARCHAR                AS zqu__tax_exempt_description,\n      zqu__tax_exempt__c::VARCHAR                            AS zqu__tax_exempt,\n      zqu__tcv__c::FLOAT                                     AS zqu__tcv,\n      zqu__termstartdate__c::TIMESTAMP_TZ                    AS zqu__term_start_date,\n      zqu__total__c::FLOAT                                   AS zqu__total,\n      zqu__validuntil__c::TIMESTAMP_TZ                       AS zqu__valid_until,\n      zqu__vat_id__c::VARCHAR                                AS zqu__vat_id,\n      zqu__zuorasubscriptionid__c::VARCHAR                   AS zqu__zuora_subscription_id,\n      zqu__billcycleday__c::VARCHAR                          AS zqu__bill_cycle_day,\n      zqu__billingcycleday__c::VARCHAR                       AS zqu__billing_cycle_day,\n      zqu__zuoraaccountid__c::VARCHAR                        AS zqu__zuora_account_id,\n\n      --metadata\n      createdbyid::VARCHAR                                   AS created_by_id,\n      createdbylastname__c::VARCHAR                          AS created_by_lastname,\n      createdbyphone__c::VARCHAR                             AS created_by_phone,\n      lastmodifiedbyid::VARCHAR                              AS last_modified_by_id,\n      lastactivitydate::TIMESTAMP_TZ                         AS last_activity_date,\n      lastmodifieddate::TIMESTAMP_TZ                         AS last_modified_date,\n      NULL                           AS last_viewed_date,\n      NULL                       AS last_referenced_date,\n      isdeleted::BOOLEAN                                     AS is_deleted,\n      _sdc_extracted_at::TIMESTAMP_TZ                        AS sdc_extracted_at,\n      _sdc_received_at::TIMESTAMP_TZ                         AS sdc_received_at,\n      _sdc_batched_at::TIMESTAMP_TZ                          AS sdc_batched_at,\n      _sdc_sequence::NUMBER                                  AS sdc_sequence,\n      _sdc_table_version::NUMBER                             AS sdc_table_version\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_zqu_quote_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:45.179968Z", "completed_at": "2025-06-09T18:50:45.190404Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:45.192297Z", "completed_at": "2025-06-09T18:50:51.229059Z"}], "thread_id": "Thread-19", "execution_time": 6.055520057678223, "adapter_response": {}, "message": "Database Error in model sfdc_vartopia_drs_registration_source (models/sources/sfdc/sfdc_vartopia_drs_registration_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/sfdc/sfdc_vartopia_drs_registration_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_vartopia_drs_registration_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.vartopiadrs__registration__c\n\n), renamed AS (\n    SELECT\n      ID::VARCHAR                                  AS registration_id,\n      VartopiaDRS__Vendor_Deal_ID__c::VARCHAR      AS deal_id,\n      VartopiaDRS__Opportunity__c::VARCHAR         AS linked_opportunity_id,\n      Name::VARCHAR                                AS registration_name,\n      VARTOPIADRS__DEAL_NAME__C::VARCHAR           AS deal_registration_name,\n      CAM_Approval_Status__c::VARCHAR              AS partner_manager_approval_status,\n      CAM_Denial_Reason__c::VARCHAR                   AS partner_manager_denial_reason,\n      VartopiaDRS__Approved_Date__c::VARCHAR       AS deal_registration_approval_date,\n      VartopiaDRS__Picklist_1__c::VARCHAR          AS deal_registration_type,\n      VartopiaDRS__MDF_Campaign__c::VARCHAR        AS gitlab_marketing_campaign,\n      VartopiaDRS__Campaign_1__c::VARCHAR          AS distributor_marketing_campaign,\n      VARTOPIADRS__DISTRIBUTOR_ACCOUNT__C::VARCHAR AS distributor_account_id,\n      VARTOPIADRS__SUBMITTER_TYPE__C::VARCHAR      AS deal_submitter_type,\n\n      -- metadata\n      createdbyid::VARCHAR                         AS created_by_id,\n      createddate::TIMESTAMP                       AS created_date,\n      isdeleted::BOOLEAN                           AS is_deleted,\n      lastmodifiedbyid::VARCHAR                    AS last_modified_by_id,\n      lastmodifieddate::TIMESTAMP                  AS last_modified_date,\n      systemmodstamp::TIMESTAMP                    AS system_mod_stamp\n\n    FROM source\n)\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_vartopia_drs_registration_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.078174Z", "completed_at": "2025-06-09T18:50:44.154043Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.200150Z", "completed_at": "2025-06-09T18:50:52.319782Z"}], "thread_id": "Thread-32", "execution_time": 8.307027816772461, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_record_type_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.recordtype\n\n\n), renamed AS (\n\n    SELECT\n         id                AS record_type_id,\n         developername     AS record_type_name,\n        --keys\n         businessprocessid AS business_process_id,\n        --info\n         name              AS record_type_label,\n         description       AS record_type_description,\n         sobjecttype       AS record_type_modifying_object_type\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_record_type_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.802522Z", "completed_at": "2025-06-09T18:50:49.806491Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.806795Z", "completed_at": "2025-06-09T18:50:52.883920Z"}], "thread_id": "Thread-1", "execution_time": 3.0868921279907227, "adapter_response": {}, "message": "Database Error in model sheetload_engineering_speciality_prior_to_capture_source (models/sources/sheetload/sheetload_engineering_speciality_prior_to_capture_source.sql)\n  000200: DataFusion error: Schema error: No field named \"EMPLOYEE_ID\". Valid fields are source.employee_id, source.full_name, source.reports_to, source.division, source.department, source.jobtitle_speciality, source.effective_date, source.end_date, source._updated_at.\n  compiled code at target/run/gitlab_snowflake/models/sources/sheetload/sheetload_engineering_speciality_prior_to_capture_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_engineering_speciality_prior_to_capture_source", "compiled": true, "compiled_code": "WITH source AS (\n    \n    SELECT * \n    FROM EMBUCKET.sheetload.engineering_speciality_prior_to_capture\n\n), renamed AS (\n\n    SELECT\n      \"EMPLOYEE_ID\"                         AS employee_id,\n      \"FULL_NAME\"                           AS full_name,\n      \"REPORTS_TO\"                          AS reports_to,\n      \"DIVISION\"                            AS division,\n      \"DEPARTMENT\"                          AS department,\n      \"JOBTITLE_SPECIALITY\"                 AS speciality,\n      \"EFFECTIVE_DATE\"::TIMESTAMP::DATE     AS start_date,\n      \"END_DATE\"::TIMESTAMP::DATE           AS end_date\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_engineering_speciality_prior_to_capture_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:43.996319Z", "completed_at": "2025-06-09T18:50:44.065073Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.116703Z", "completed_at": "2025-06-09T18:50:52.897107Z"}], "thread_id": "Thread-4", "execution_time": 8.935431003570557, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_history_source", "compiled": true, "compiled_code": "\n\nWITH source AS ( \n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.opportunityhistory\n\n), renamed AS (\n    SELECT\n      opportunityid         AS opportunity_id,\n      id                    AS opportunity_history_id,\n\n      createddate           AS field_modified_at,\n      createdbyid           AS created_by_id,\n      createddate           AS created_date,\n      closedate             AS close_date,\n      forecastcategory      AS forecast_category,\n      probability           AS probability,\n\n      isdeleted             AS is_deleted,\n      amount                AS amount,\n\n      expectedrevenue       AS expected_revenue,\n      stagename             AS stage_name,\n      systemmodstamp        AS systemmodstamp\n    FROM source\n\n)    \n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_opportunity_history_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.000902Z", "completed_at": "2025-06-09T18:50:44.043242Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.074059Z", "completed_at": "2025-06-09T18:50:53.555814Z"}], "thread_id": "Thread-22", "execution_time": 9.580243110656738, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_profile_source", "compiled": true, "compiled_code": "WITH source AS (\n    \n    SELECT * \n    FROM EMBUCKET.salesforce_v2_stitch.profile\n\n), renamed AS (\n\n       SELECT\n\n         --keys\n          id\tAS\tprofile_id,\n      \n         --info \n          description AS\tprofile_description,\n          userlicenseid AS user_license_id,\n          usertype AS\tuser_type,\n          name AS\tprofile_name,\n          createdbyid\tAS\tcreated_by_id,\n          createddate\tAS\tcreated_date,\n\n          --Indicator columns\n          isssoenabled AS\tis_sso_enabled,\n          permissionsaccesscmc\tAS\tis_permissions_access_cmc,\n          permissionsaccesscontentbuilder\tAS\tis_permissions_access_content_builder,\n          permissionsaccountswitcheruser\tAS\tis_permissions_account_switcher_user,\n          permissionsactivatecontract\tAS\tis_permissions_activate_contract,\n          permissionsactivateorder\tAS\tis_permissions_activate_order,\n          permissionsactivitiesaccess\tAS\tis_permissions_activities_access,\n          permissionsadddirectmessagemembers\tAS\tis_permissions_add_direct_message_members,\n          permissionsaicreateinsightobjects\tAS\tis_permissions_ai_create_insight_objects,\n          permissionsaiviewinsightobjects\tAS\tis_permissions_ai_view_insight_objects,\n          permissionsalloweribasicaccess\tAS\tis_permissions_allower_ibasic_access,\n          permissionsallowobjectdetection\tAS\tis_permissions_allow_object_detection,\n          permissionsallowobjectdetectiontraining\tAS\tis_permissions_allow_object_detection_training,\n          permissionsallowuniversalsearch\tAS\tis_permissions_allow_universal_search,\n          permissionsallowvieweditconvertedleads\tAS\tis_permissions_allow_viewed_it_converted_leads,\n          permissionsallowviewknowledge\tAS\tis_permissions_allow_view_knowledge,\n          permissionsapexrestservices\tAS\tis_permissions_apex_rest_services,\n          permissionsapienabled\tAS\tis_permissions_api_enabled,\n          permissionsapiuseronly\tAS\tis_permissions_api_user_only,\n          permissionsassignpermissionsets\tAS\tis_permissions_assign_permission_sets,\n          permissionsassigntopics\tAS\tis_permissions_assign_topics,\n          permissionsauthorapex\tAS\tis_permissions_author_apex,\n          permissionsautomateddataentry\tAS\tis_permissions_automated_data_entry,\n          permissionsautomaticactivitycapture\tAS\tis_permissions_automatic_activity_capture,\n          permissionsb2bmarketinganalyticsuser\tAS\tis_permissions_b2b_marketing_analytics_user,\n          permissionsbotmanagebots\tAS\tis_permissions_bot_manage_bots,\n          permissionsbotmanagebotstrainingdata\tAS\tis_permissions_bot_manage_bots_training_data,\n          permissionsbulkapiharddelete\tAS\tis_permissions_bulk_api_hard_delete,\n          permissionsbulkmacrosallowed\tAS\tis_permissions_bulk_macros_allowed,\n          permissionscallcoachinguser\tAS\tis_permissions_call_coaching_user,\n          permissionscampaigninfluence2\tAS\tis_permissions_campaign_influence2,\n          permissionscanaccessce\tAS\tis_permissions_can_access_ce,\n          permissionscanapprovefeedpost\tAS\tis_permissions_can_approve_feed_post,\n          permissionscaneditprompts\tAS\tis_permissions_can_edit_prompts,\n          permissionscaninsertfeedsystemfields\tAS\tis_permissions_can_insert_feed_system_fields,\n          permissionscanrunanalysis\tAS\tis_permissions_can_run_analysis,\n          permissionscanusenewdashboardbuilder\tAS\tis_permissions_can_use_new_dashboard_builder,\n          permissionscanverifycomment\tAS\tis_permissions_can_verify_comment,\n          permissionschangedashboardcolors\tAS\tis_permissions_change_dashboard_colors,\n          permissionschattercomposeuicodesnippet\tAS\tis_permissions_chatter_compose_ui_code_snippet,\n          permissionschattereditownpost\tAS\tis_permissions_chatter_edit_own_post,\n          permissionschattereditownrecordpost\tAS\tis_permissions_chatter_edit_own_record_post,\n          permissionschatterfilelink\tAS\tis_permissions_chatter_file_link,\n          permissionschatterinternaluser\tAS\tis_permissions_chatter_internal_user,\n          permissionschatterinviteexternalusers\tAS\tis_permissions_chatter_invite_external_users,\n          permissionschatterowngroups\tAS\tis_permissions_chatter_own_groups,\n          permissionscloseconversations\tAS\tis_permissions_close_conversations,\n          permissionsconfigcustomrecs\tAS\tis_permissions_config_custom_recs,\n          permissionsconnectorgtoenvironmenthub\tAS\tis_permissions_connect_org_to_environment_hub,\n          permissionsconsentapiupdate\tAS\tis_permissions_consent_api_update,\n          permissionscontentadministrator\tAS\tis_permissions_content_administrator,\n          permissionscontenthubuser\tAS\tis_permissions_content_hub_user,\n          permissionscontentworkspaces\tAS\tis_permissions_content_workspaces,\n          permissionsconvertleads\tAS\tis_permissions_convert_leads,\n          permissionscreateauditfields\tAS\tis_permissions_create_audit_fields,\n          permissionscreatecustomizedashboards\tAS\tis_permissions_create_customize_dashboards,\n          permissionscreatecustomizefilters\tAS\tis_permissions_create_customize_filters,\n          permissionscreatecustomizereports\tAS\tis_permissions_create_customize_reports,\n          permissionscreatedashboardfolders\tAS\tis_permissions_create_dashboard_folders,\n          permissionscreateltngtempfolder\tAS\tis_permissions_create_ltng_temp_folder,\n          permissionscreateltngtempinpub\tAS\tis_permissions_create_ltng_temp_in_pub,\n          permissionscreatemultiforce\tAS\tis_permissions_create_multiforce,\n          permissionscreatereportfolders\tAS\tis_permissions_create_report_folders,\n          permissionscreatereportinlightning\tAS\tis_permissions_create_reportin_lightning,\n          permissionscreatetopics\tAS\tis_permissions_create_topics,\n          permissionscreateworkbadgedefinition\tAS\tis_permissions_create_workbadge_definition,\n          permissionscreateworkspaces\tAS\tis_permissions_create_workspaces,\n          permissionscustomizeapplication\tAS\tis_permissions_customize_application,\n          permissionscustommobileappsaccess\tAS\tis_permissions_custom_mobile_apps_access,\n          permissionsdataexport\tAS\tis_permissions_data_export,\n          permissionsdebugapex\tAS\tis_permissions_debug_apex,\n          permissionsdelegatedportaluseradmin\tAS\tis_permissions_delegated_portal_user_admin,\n          permissionsdelegatedtwofactor\tAS\tis_permissions_delegated_two_factor,\n          permissionsdeleteactivatedcontract\tAS\tis_permissions_delete_activated_contract,\n          permissionsdeletetopics\tAS\tis_permissions_delete_topics,\n          permissionsdistributefromperswksp\tAS\tis_permissions_distribute_from_perswksp,\n          permissionseditactivatedorders\tAS\tis_permissions_edit_activated_orders,\n          permissionseditbillinginfo\tAS\tis_permissions_edit_billing_info,\n          permissionseditbrandtemplates\tAS\tis_permissions_edit_brand_templates,\n          permissionseditcasecomments\tAS\tis_permissions_edit_case_comments,\n          permissionseditevent\tAS\tis_permissions_edit_event,\n          permissionsedithtmltemplates\tAS\tis_permissions_edit_html_templates,\n          permissionseditknowledge\tAS\tis_permissions_edit_knowledge,\n          permissionseditmydashboards\tAS\tis_permissions_edit_my_dashboards,\n          permissionseditmyreports\tAS\tis_permissions_edit_my_reports,\n          permissionseditopplineitemunitprice\tAS\tis_permissions_edit_opp_lineitem_unit_price,\n          permissionseditpublicdocuments\tAS\tis_permissions_edit_public_documents,\n          permissionseditpublicfilters\tAS\tis_permissions_edit_public_filters,\n          permissionseditpublictemplates\tAS\tis_permissions_edit_public_templates,\n          permissionseditreadonlyfields\tAS\tis_permissions_edit_read_only_fields,\n          permissionsedittask\tAS\tis_permissions_edit_task,\n          permissionsedittopics\tAS\tis_permissions_edit_topics,\n          permissionsemailadministration\tAS\tis_permissions_email_administration,\n          permissionsemailmass\tAS\tis_permissions_email_mass,\n          permissionsemailsingle\tAS\tis_permissions_email_single,\n          permissionsemailtemplatemanagement\tAS\tis_permissions_email_template_management,\n          permissionsemployeeexperience\tAS\tis_permissions_employee_experience,\n          permissionsenablecommunityapplauncher\tAS\tis_permissions_enable_community_app_launcher,\n          permissionsenablenotifications\tAS\tis_permissions_enable_notifications,\n          permissionsexportreport\tAS\tis_permissions_export_report,\n          permissionsfeedpinning\tAS\tis_permissions_feed_pinning,\n          permissionsflowuflrequired\tAS\tis_permissions_flow_ufl_required,\n          permissionsforcetwofactor\tAS\tis_permissions_force_two_factor,\n          permissionsfsccomprehensiveuseraccess\tAS\tis_permissions_fsc_comprehensive_user_access,\n          permissionsgiverecognitionbadge\tAS\tis_permissions_give_recognition_badge,\n          permissionsgovernnetworks\tAS\tis_permissions_govern_networks,\n          permissionshasunlimitederbscoringrequests\tAS\tis_permissions_has_unlimited_erb_scoring_requests,\n          permissionshasunlimitednbaexecutions\tAS\tis_permissions_has_unlimited_nba_executions,\n          permissionsheadlesscmsaccess\tAS\tis_permissions_headless_cms_access,\n          permissionshidereadbylist\tAS\tis_permissions_hide_read_by_list,\n          permissionsidentityconnect\tAS\tis_permissions_identity_connect,\n          permissionsidentityenabled\tAS\tis_permissions_identity_enabled,\n          permissionsimportcustomobjects\tAS\tis_permissions_import_custom_objects,\n          permissionsimportleads\tAS\tis_permissions_import_leads,\n          permissionsimportpersonal\tAS\tis_permissions_import_personal,\n          permissionsinboundmigrationtoolsuser\tAS\tis_permissions_inbound_migration_tools_user,\n          permissionsinstallmultiforce\tAS\tis_permissions_install_multiforce,\n          permissionsisotopeaccess\tAS\tis_permissions_isotope_access,\n          permissionsisotopectocuser\tAS\tis_permissions_isotope_ctoc_user,\n          permissionsisotopelex\tAS\tis_permissions_isotopelex,\n          permissionsisssoenabled\tAS\tis_permissions_is_sso_enabled,\n          permissionsleadscoreresultpublisher\tAS\tis_permissions_lead_score_result_publisher,\n          permissionsleadscoreuser\tAS\tis_permissions_lead_score_user,\n          permissionslearningmanager\tAS\tis_permissions_learning_manager,\n          permissionslightningconsoleallowedforuser\tAS\tis_permissions_lightning_console_allowed_for_user,\n          permissionslightningexperienceuser\tAS\tis_permissions_lightning_experience_user,\n          permissionslistemailsend\tAS\tis_permissions_list_email_send,\n          permissionslmendmessagingsessionuserperm\tAS\tis_permissions_lmend_messaging_session_user_perm,\n          permissionslmoutboundmessaginguserperm\tAS\tis_permissions_lmout_bound_messaging_user_perm,\n          permissionsltngpromoreserved01userperm\tAS\tis_permissions_ltng_promo_reserved_01_user_perm,\n          permissionsmanageanalyticsnapshots\tAS\tis_permissions_manage_analytic_snapshots,\n          permissionsmanageauthproviders\tAS\tis_permissions_manage_auth_providers,\n          permissionsmanagebusinesshourholidays\tAS\tis_permissions_manage_business_hour_holidays,\n          permissionsmanagec360aconnections\tAS\tis_permissions_manage_c360_aconnections,\n          permissionsmanagecallcenters\tAS\tis_permissions_manage_call_centers,\n          permissionsmanagecases\tAS\tis_permissions_manage_cases,\n          permissionsmanagecategories\tAS\tis_permissions_manage_categories,\n          permissionsmanagecertificates\tAS\tis_permissions_manage_certificates,\n          permissionsmanagechattermessages\tAS\tis_permissions_manage_chatter_messages,\n          permissionsmanagecms\tAS\tis_permissions_manage_cms,\n          permissionsmanagecontentpermissions\tAS\tis_permissions_manage_content_permissions,\n          permissionsmanagecontentproperties\tAS\tis_permissions_manage_content_properties,\n          permissionsmanagecontenttypes\tAS\tis_permissions_manage_content_types,\n          permissionsmanagecustompermissions\tAS\tis_permissions_manage_custom_permissions,\n          permissionsmanagecustomreporttypes\tAS\tis_permissions_manage_custom_report_types,\n          permissionsmanagedashbdsinpubfolders\tAS\tis_permissions_manage_dashbds_in_pub_folders,\n          permissionsmanagedatacategories\tAS\tis_permissions_manage_data_categories,\n          permissionsmanagedataintegrations\tAS\tis_permissions_manage_data_integrations,\n          permissionsmanagedynamicdashboards\tAS\tis_permissions_manage_dynamic_dashboards,\n          permissionsmanageemailclientconfig\tAS\tis_permissions_manage_email_client_config,\n          permissionsmanageencryptionkeys\tAS\tis_permissions_manage_encryption_keys,\n          permissionsmanageexchangeconfig\tAS\tis_permissions_manage_exchange_config,\n          permissionsmanageexternalconnections\tAS\tis_permissions_manage_external_connections,\n          permissionsmanagehealthcheck\tAS\tis_permissions_manage_health_check,\n          permissionsmanagehubconnections\tAS\tis_permissions_manage_hub_connections,\n          permissionsmanageinteraction\tAS\tis_permissions_manage_interaction,\n          permissionsmanageinternalusers\tAS\tis_permissions_manage_internal_users,\n          permissionsmanageipaddresses\tAS\tis_permissions_manage_ip_addresses,\n          permissionsmanageknowledge\tAS\tis_permissions_manage_knowledge,\n          permissionsmanageknowledgeimportexport\tAS\tis_permissions_manage_knowledge_import_export,\n          permissionsmanageleads\tAS\tis_permissions_manage_leads,\n          permissionsmanagelearningreporting\tAS\tis_permissions_manage_learning_reporting,\n          permissionsmanageloginaccesspolicies\tAS\tis_permissions_manage_log_inaccess_policies,\n          permissionsmanagemobile\tAS\tis_permissions_manage_mobile,\n          permissionsmanagenetworks\tAS\tis_permissions_manage_networks,\n          permissionsmanagepartners\tAS\tis_permissions_manage_partners,\n          permissionsmanagepasswordpolicies\tAS\tis_permissions_manage_password_policies,\n          permissionsmanageprofilespermissionsets\tAS\tis_permissions_manage_profiles_permission_sets,\n          permissionsmanagepropositions\tAS\tis_permissions_manage_propositions,\n          permissionsmanagepvtrptsanddashbds\tAS\tis_permissions_manage_pvt_rpts_and_dashbds,\n          permissionsmanagequotas\tAS\tpermissions_manage_quotas,\n          permissionsmanagerecommendationstrategies\tAS\tis_permissions_manage_recommendation_strategies,\n          permissionsmanagereleaseupdates\tAS\tis_permissions_manage_release_updates,\n          permissionsmanageremoteaccess\tAS\tis_permissions_manage_remote_access,\n          permissionsmanagereportsinpubfolders\tAS\tis_permissions_manage_reports_in_pub_folders,\n          permissionsmanageroles\tAS\tis_permissions_manage_roles,\n          permissionsmanagesandboxes\tAS\tis_permissions_manage_sandboxes,\n          permissionsmanagesearchpromotionrules\tAS\tis_permissions_manage_search_promotion_rules,\n          permissionsmanagesessionpermissionsets\tAS\tis_permissions_manage_session_permission_sets,\n          permissionsmanagesharing\tAS\tis_permissions_manage_sharing,\n          permissionsmanagesolutions\tAS\tis_permissions_manage_solutions,\n          permissionsmanagesubscriptions\tAS\tis_permissions_manage_subscriptions,\n          permissionsmanagesurveys\tAS\tis_permissions_manage_surveys,\n          permissionsmanagesynonyms\tAS\tis_permissions_manage_synonyms,\n          permissionsmanageterritories\tAS\tis_permissions_manage_territories,\n          permissionsmanagetrustmeasures\tAS\tis_permissions_manage_trust_measures,\n          permissionsmanagetwofactor\tAS\tis_permissions_manage_two_factor,\n          permissionsmanageunlistedgroups\tAS\tis_permissions_manage_unlisted_groups,\n          permissionsmanageusers\tAS\tis_permissions_manage_users,\n          permissionsmassinlineedit\tAS\tis_permissions_mass_inline_edit,\n          permissionsmergetopics\tAS\tis_permissions_merge_topics,\n          permissionsmoderatechatter\tAS\tis_permissions_moderate_chatter,\n          permissionsmoderatenetworkfeeds\tAS\tis_permissions_moderate_network_feeds,\n          permissionsmoderatenetworkfiles\tAS\tis_permissions_moderate_network_files,\n          permissionsmoderatenetworkmessages\tAS\tis_permissions_moderate_network_messages,\n          permissionsmoderatenetworkusers\tAS\tis_permissions_moderate_network_users,\n          permissionsmodifyalldata\tAS\tis_permissions_modify_all_data,\n          permissionsmodifydataclassification\tAS\tis_permissions_modify_data_classification,\n          permissionsmodifymetadata\tAS\tis_permissions_modify_metadata,\n          permissionsnativewebviewscrolling\tAS\tis_permissions_native_webview_scrolling,\n          permissionsnewreportbuilder\tAS\tis_permissions_new_report_builder,\n          permissionsopportunityscoreuser\tAS\tis_permissions_opportunity_score_user,\n          permissionsoutboundmigrationtoolsuser\tAS\tis_permissions_outbound_migration_tools_user,\n          permissionsoverrideforecasts\tAS\tis_permissions_override_forecasts,\n          permissionspackaging2\tAS\tis_permissions_packaging2,\n          permissionspackaging2delete\tAS\tis_permissions_packaging2_delete,\n          permissionspasswordneverexpires\tAS\tis_permissions_password_never_expires,\n          permissionspreventclassicexperience\tAS\tis_permissions_prevent_classic_experience,\n          permissionsprivacydataaccess\tAS\tis_permissions_privacy_data_access,\n          permissionspublishmultiforce\tAS\tis_permissions_publish_multiforce,\n          permissionsqueryallfiles\tAS\tis_permissions_query_all_files,\n          permissionsquipmetricsaccess\tAS\tis_permissions_quip_metrics_access,\n          permissionsquipuserengagementmetrics\tAS\tis_permissions_quip_user_engagement_metrics,\n          permissionsrecordvisibilityapi\tAS\tis_permissions_record_visibility_api,\n          permissionsremovedirectmessagemembers\tAS\tis_permissions_remove_direct_message_members,\n          permissionsresetpasswords\tAS\tis_permissions_reset_passwords,\n          permissionsrunflow\tAS\tis_permissions_run_flow,\n          permissionsrunreports\tAS\tis_permissions_run_reports,\n          permissionssalesconsole\tAS\tis_permissions_sales_console,\n          permissionssalesforceiqinbox\tAS\tis_permissions_salesforce_iq_inbox,\n          permissionssalesforceiqinternal\tAS\tis_permissions_salesforce_iq_internal,\n          permissionssalesforcemeetingsuserperm\tAS\tis_permissions_salesforce_meetings_user_perm,\n          permissionssandboxtestingincommunityapp\tAS\tis_permissions_sandbox_testing_incommunity_app,\n          permissionssceviewalldata\tAS\tis_permissions_sce_view_all_data,\n          permissionsschedulejob\tAS\tis_permissions_schedule_job,\n          permissionsschedulereports\tAS\tis_permissions_schedule_reports,\n          permissionsselectfilesfromsalesforce\tAS\tis_permissions_select_files_from_salesforce,\n          permissionssendannouncementemails\tAS\tis_permissions_send_announcement_emails,\n          permissionssendcustomnotifications\tAS\tis_permissions_send_custom_notifications,\n          permissionssendsitrequests\tAS\tis_permissions_send_sit_requests,\n          permissionssharefileswithnetworks\tAS\tis_permissions_share_files_with_networks,\n          permissionsshareinternalarticles\tAS\tis_permissions_share_internal_articles,\n          permissionsshowcompanynameasuserbadge\tAS\tis_permissions_show_company_name_as_user_badge,\n          permissionsskipidentityconfirmation\tAS\tis_permissions_skip_identity_confirmation,\n          permissionssolutionimport\tAS\tis_permissions_solution_import,\n          permissionsstdautomaticactivitycapture\tAS\tis_permissions_std_automatic_activity_capture,\n          permissionssubmitmacrosallowed\tAS\tis_permissions_submit_macros_allowed,\n          permissionssubscribedashboardrolesgrps\tAS\tis_permissions_subscribe_dashboard_roles_grps,\n          permissionssubscribedashboardtootherusers\tAS\tis_permissions_subscribe_dashboard_toother_users,\n          permissionssubscribereportrolesgrps\tAS\tis_permissions_subscribe_report_roles_grps,\n          permissionssubscribereportsrunasuser\tAS\tis_permissions_subscribe_reports_run_as_user,\n          permissionssubscribereporttootherusers\tAS\tis_permissions_subscribe_report_to_other_users,\n          permissionssubscribetolightningdashboards\tAS\tis_permissions_subscribe_to_lightning_dashboards,\n          permissionssubscribetolightningreports\tAS\tis_permissions_subscribe_to_lightning_reports,\n          permissionstracexdsqueries\tAS\tis_permissions_trace_xds_queries,\n          permissionstransactionalemailsend\tAS\tis_permissions_transactional_email_send,\n          permissionstransferanycase\tAS\tis_permissions_transfer_any_case,\n          permissionstransferanyentity\tAS\tis_permissions_transfer_any_entity,\n          permissionstransferanylead\tAS\tis_permissions_transfer_any_lead,\n          permissionstwofactorapi\tAS\tis_permissions_two_factor_api,\n          permissionsupdatewithinactiveowner\tAS\tis_permissions_update_with_inactive_owner,\n          permissionsuseassistantdialog\tAS\tis_permissions_use_assistant_dialog,\n          permissionsusemysearch\tAS\tis_permissions_use_my_search,\n          permissionsusequerysuggestions\tAS\tis_permissions_use_query_suggestions,\n          permissionsuseteamreassignwizards\tAS\tis_permissions_use_team_reassign_wizards,\n          permissionsuseweblink\tAS\tis_permissions_use_weblink,\n          permissionsvideoconferencezoomuser\tAS\tis_permissions_video_conference_zoom_user,\n          permissionsviewallactivities\tAS\tis_permissions_view_all_activities,\n          permissionsviewallcustomsettings\tAS\tis_permissions_view_all_custom_settings,\n          permissionsviewalldata\tAS\tis_permissions_view_all_data,\n          permissionsviewallforecasts\tAS\tis_permissions_view_all_forecasts,\n          permissionsviewallforeignkeynames\tAS\tis_permissions_view_all_foreign_key_names,\n          permissionsviewallprofiles\tAS\tis_permissions_view_all_profiles,\n          permissionsviewallusers\tAS\tis_permissions_view_all_users,\n          permissionsviewanomalyevents\tAS\tis_permissions_view_anomaly_events,\n          permissionsviewcaseinteraction\tAS\tis_permissions_view_case_interaction,\n          permissionsviewcontent\tAS\tis_permissions_view_content,\n          permissionsviewcustomersentiment\tAS\tis_permissions_view_customer_sentiment,\n          permissionsviewdataassessment\tAS\tis_permissions_view_data_assessment,\n          permissionsviewdatacategories\tAS\tis_permissions_view_data_categories,\n          permissionsviewdataleakageevents\tAS\tis_permissions_view_data_leakage_events,\n          permissionsviewencrypteddata\tAS\tis_permissions_view_encrypted_data,\n          permissionsvieweventlogfiles\tAS\tis_permissions_view_event_log_files,\n          permissionsviewforecastingpredictive\tAS\tis_permissions_view_forecasting_predictive,\n          permissionsviewglobalheader\tAS\tis_permissions_view_global_header,\n          permissionsviewhealthcheck\tAS\tis_permissions_view_health_check,\n          permissionsviewhelplink\tAS\tis_permissions_view_help_link,\n          permissionsviewmyteamsdashboards\tAS\tis_permissions_view_my_teams_dashboards,\n          permissionsviewonlyembeddedappuser\tAS\tis_permissions_view_only_embedded_appuser,\n          permissionsviewplatformevents\tAS\tis_permissions_view_platform_events,\n          permissionsviewprivatestaticresources\tAS\tis_permissions_view_private_static_resources,\n          permissionsviewpublicdashboards\tAS\tis_permissions_view_public_dashboards,\n          permissionsviewpublicreports\tAS\tis_permissions_view_public_reports,\n          permissionsviewrestrictionandscopingrules\tAS\tis_permissions_view_restriction_and_scoping_rules,\n          permissionsviewroles\tAS\tis_permissions_view_roles,\n          permissionsviewsetup\tAS\tis_permissions_view_setup,\n          permissionsviewtrustmeasures\tAS\tis_permissions_view_trust_measures,\n          permissionsviewuserpii\tAS\tis_permissions_view_user_pii,\n          lastmodifiedbyid\tAS\tlast_modified_by_id,\n          lastmodifieddate\tAS\tlast_modified_date,\n          lastreferenceddate\tAS\tlast_referenced_date,\n          lastvieweddate\tAS\tlast_viewed_date,\n\n         --Stitch metadata\n         systemmodstamp AS system_mod_stamp,\n         _sdc_batched_at AS sdc_batched_at,\n         _sdc_extracted_at AS sdc_extracted_at,\n         _sdc_received_at AS sdc_received_at,\n         _sdc_sequence AS sdc_sequence,\n         _sdc_table_version AS sdc_table_version\n      \n       FROM source\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_profile_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:47.227256Z", "completed_at": "2025-06-09T18:50:47.241880Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:47.246151Z", "completed_at": "2025-06-09T18:50:53.558570Z"}], "thread_id": "Thread-28", "execution_time": 6.350553750991821, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_zqu_quote_rate_plan_charge_source", "compiled": true, "compiled_code": "\n\nwith source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.zqu__quoterateplancharge__c\n\n), renamed AS (\n\n    SELECT\n\n      -- ids\n      id                                           AS zqu_quote_rate_plan_charge_id,\n      name                                         AS zqu_quote_rate_plan_charge_name,\n      zqu__description__c                          AS zqu_quote_rate_plan_charge_description,\n\n      -- info\n      discount_on_quote_formula__c                 AS discount_on_quote_formula,\n      discount_text__c                             AS discount_text,\n      effective_annual_price__c                    AS effective_annual_price,\n      list_annual_price__c                         AS list_annual_price,\n      quote__c                                     AS zqu_quote_id,\n      discount_on_quote_safe_for_quote__c          AS discount_on_quote_safe_for_quote,\n      list_price_safe_for_quote__c                 AS list_price_safe_for_quote,\n      one__c                                       AS one,\n      mavenlink_project_template_id__c             AS mavenlink_project_template_id,\n      undiscounted_tcv__c                          AS undiscounted_tcv,\n      zqu__apply_discount_to_one_time_charges__c   AS zqu_apply_discount_to_one_time_charges,\n      zqu__apply_discount_to_recurring_charges__c  AS zqu__apply_discount_to_recurring_charges,\n      zqu__apply_discount_to_usage_charges__c      AS apply_discount_to_usage_charges,\n      zqu__billcycleday__c                         AS zqu_bill_cycle_day,\n      zqu__billcycletype__c                        AS zqu_bill_cycle_type,\n      zqu__billingdiscount__c                      AS zqu_billing_discount,\n      zqu__billingsubtotal__c                      AS zqu_billing_sub_total,\n      zqu__billingtax__c                           AS zqu_billing_tax,\n      zqu__billingtotal__c                         AS zqu_billing_total,\n      zqu__chargetype__c                           AS zqu_charge_type,\n      zqu__currency__c                             AS zqu_currency,\n      zqu__discount_level__c                       AS zqu_discount_level,\n      zqu__discount__c                             AS zqu_discount,\n      zqu__effectiveprice__c                       AS zqu_effective_price,\n      zqu__enddatecondition__c                     AS zqu_end_date_condition,\n      zqu__feetype__c                              AS zqu_fee_type,\n      zqu__islastsegment__c                        AS zqu_is_last_segment,\n      zqu__listpricebase__c                        AS zqu_list_price_base,\n      zqu__listprice__c                            AS zqu_list_price,\n      zqu__listtotal__c                            AS zqu_list_total,\n      zqu__model__c                                AS zqu_model,\n      zqu__mrr__c                                  AS zqu_mrr,\n      zqu__period__c                               AS zqu_period,\n      zqu__previewedmrr__c                         AS zqu_previewed_mrr,\n      zqu__previewedtcv__c                         AS zqu_previewed_tcv,\n      zqu__productname__c                          AS zqu_product_name,\n      zqu__productrateplancharge__c                AS zqu_product_rate_plan_charge_id,\n      zqu__productrateplanchargezuoraid__c         AS zqu_product_rate_plan_charge_zuora_id,\n      zqu__quantity__c                             AS zqu_quantity,\n      zqu__quoterateplan__c                        AS zqu_quote_rate_plan_id,\n      zqu__rateplanname__c                         AS zqu_rate_plan_name,\n      zqu__specificbillingperiod__c                AS zqu_specific_billing_period,\n      zqu__subscriptionrateplanchargezuoraid__c    AS zqu_subscription_rate_plan_charge_zuora_id,\n      zqu__tcv__c                                  AS zqu_tcv,\n      zqu__total__c                                AS zqu_total,\n      zqu__uom__c                                  AS zqu_uom,\n      zqu__upto_how_many_periods_type__c           AS zqu_up_to_how_many_periods_type,\n      zqu__upto_how_many_periods__c                AS zqu_up_to_how_many_periods,\n\n      -- metadata\n      createdbyid                                  AS created_by_id,\n      createddate                                  AS created_date,\n      isdeleted                                    AS is_deleted,\n      lastmodifiedbyid                             AS last_modified_by_id,\n      lastmodifieddate                             AS last_modified_date,\n      _sdc_received_at                             AS sfdc_received_at,\n      _sdc_extracted_at                            AS sfdc_extracted_at,\n      _sdc_table_version                           AS sfdc_table_version,\n      _sdc_batched_at                              AS sfdc_batched_at,\n      _sdc_sequence                                AS sfdc_sequence,\n      systemmodstamp                               AS system_mod_stamp\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_zqu_quote_rate_plan_charge_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.334025Z", "completed_at": "2025-06-09T18:50:49.351513Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.352145Z", "completed_at": "2025-06-09T18:50:53.561999Z"}], "thread_id": "Thread-10", "execution_time": 4.229072093963623, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_devrel_influenced_campaigns_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.sheetload.devrel_influenced_campaigns\n), renamed AS (\n  SELECT \n    campaign_name::VARCHAR  as campaign_name,\n    campaign_type::VARCHAR  as campaign_type,\n    description::VARCHAR    as description,\n    influence_type::VARCHAR as influence_type,\n    url::VARCHAR  as url,\n    dri::VARCHAR  as dri\n\n  FROM source\n)\nSELECT *\nFROM renamed\nWHERE campaign_name IS NOT NULL", "relation_name": "EMBUCKET.sheetload.sheetload_devrel_influenced_campaigns_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:45.099115Z", "completed_at": "2025-06-09T18:50:45.120593Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:45.121485Z", "completed_at": "2025-06-09T18:50:53.565241Z"}], "thread_id": "Thread-5", "execution_time": 8.466792821884155, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_user_territory_association_source", "compiled": true, "compiled_code": "WITH source AS (\n    \n    SELECT * \n    FROM EMBUCKET.salesforce_v2_stitch.userterritory2association\n\n), renamed AS (\n\n       SELECT\n      \n         --keys\n         id AS user_territory_association_id,\n\n         --info\n         roleinterritory2 as role_in_territory,\n         territory2id AS territory_id,\n         userid AS user_id,\n         isactive AS is_active,\n\n         --Stitch metadata\n         systemmodstamp AS system_mod_stamp,\n         _sdc_batched_at AS sdc_batched_at,\n         _sdc_extracted_at AS sdc_extracted_at,\n         _sdc_received_at AS sdc_received_at,\n         _sdc_sequence AS sdc_sequence,\n         _sdc_table_version AS sdc_table_version\n      \n       FROM source\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_user_territory_association_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.082723Z", "completed_at": "2025-06-09T18:50:44.151633Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.194468Z", "completed_at": "2025-06-09T18:50:52.937901Z"}], "thread_id": "Thread-18", "execution_time": 8.928301095962524, "adapter_response": {}, "message": "Database Error in model sfdc_opportunity_snapshots_source (models/legacy/snapshots/restricted_safe/sfdc_opportunity_snapshots_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL TIMESTAMP_NTZ precision None\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/restricted_safe/sfdc_opportunity_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_snapshots_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.snapshots.sfdc_opportunity_snapshots\n  QUALIFY ROW_NUMBER() OVER (\n    PARTITION BY\n      dbt_valid_from::DATE,\n      id\n    ORDER BY dbt_valid_from DESC\n  ) = 1\n\n),\n\nrenamed AS (\n  SELECT\n    -- keys\n    accountid::VARCHAR                                        AS account_id,\n    id::VARCHAR                                               AS opportunity_id,\n    name::VARCHAR                                             AS opportunity_name,\n    ownerid::VARCHAR                                          AS owner_id,\n\n    -- logistical information\n    isclosed::BOOLEAN                                         AS is_closed,\n    iswon::BOOLEAN                                            AS is_won,\n    valid_deal_count__c::FLOAT                                AS valid_deal_count,\n    closedate::TIMESTAMP_NTZ                                  AS close_date,\n    createddate::TIMESTAMP_NTZ                                AS created_date,\n    deployment_preference__c::VARCHAR                         AS deployment_preference,\n    sql_source__c::VARCHAR                                    AS generated_source,\n    leadsource::VARCHAR                                       AS lead_source,\n    merged_opportunity__c::VARCHAR                            AS merged_opportunity_id,\n    duplicate_opportunity__c::VARCHAR                         AS duplicate_opportunity_id,\n    contract_reset_opportunity__c::VARCHAR                    AS contract_reset_opportunity_id,\n    account_owner__c::VARCHAR                                 AS account_owner,\n    opportunity_owner__c::VARCHAR                             AS opportunity_owner,\n    manager_current__c::VARCHAR                               AS opportunity_owner_manager,\n    sales_market__c::VARCHAR                                  AS opportunity_owner_department,\n    sdr_lu__c::VARCHAR                                        AS crm_sales_dev_rep_id,\n    business_development_representative__c::VARCHAR           AS crm_business_dev_rep_id,\n    bdr_lu__c::VARCHAR                                        AS crm_business_dev_rep_id_lookup,\n    bdr_sdr__c::VARCHAR                                       AS opportunity_development_representative,\n    sales_accepted_date__c::TIMESTAMP_NTZ                     AS sales_accepted_date,\n    engagement_type__c::VARCHAR                               AS sales_path,\n    sales_qualified_date__c::TIMESTAMP_NTZ                    AS sales_qualified_date,\n    iqm_submitted_by_role__c::VARCHAR                         AS iqm_submitted_by_role,\n    type::VARCHAR                                             AS subscription_type,\n    stagename::VARCHAR                                        AS stage_name,\n\n    -- opportunity information\n    acv_2__c::FLOAT                                           AS acv,\n    amount::FLOAT                                             AS amount,\n    competitors__c::VARCHAR                                   AS competitors,\n    critical_deal_flag__c::VARCHAR                            AS critical_deal_flag,\n    forecastcategoryname::VARCHAR                             AS forecast_category_name,\n    incremental_acv_2__c::FLOAT                               AS forecasted_iacv,\n    iacv_created_date__c::TIMESTAMP_NTZ                       AS iacv_created_date,\n    incremental_acv__c::FLOAT                                 AS incremental_acv,\n    invoice_number__c::VARCHAR                                AS invoice_number,\n    is_refund_opportunity__c::FLOAT                           AS is_refund,\n    is_downgrade_opportunity__c::FLOAT                        AS is_downgrade,\n    swing_deal__c::BOOLEAN                                    AS is_swing_deal,\n    is_edu_oss_opportunity__c::FLOAT                          AS is_edu_oss,\n    is_ps_opportunity__c::FLOAT                               AS is_ps_opp,\n    net_iacv__c::FLOAT                                        AS net_incremental_acv,\n    campaignid::VARCHAR                                       AS primary_campaign_source_id,\n    probability::FLOAT                                        AS probability,\n    professional_services_value__c::FLOAT                     AS professional_services_value,\n    edu_services_value__c::FLOAT                              AS edu_services_value,\n    investment_services_value__c::FLOAT                       AS investment_services_value,\n    push_counter__c::FLOAT                                    AS pushed_count,\n    reason_for_lost__c::VARCHAR                               AS reason_for_loss,\n    reason_for_lost_details__c::VARCHAR                       AS reason_for_loss_details,\n    refund_iacv__c::FLOAT                                     AS refund_iacv,\n    downgrade_iacv__c::FLOAT                                  AS downgrade_iacv,\n    renewal_acv__c::FLOAT                                     AS renewal_acv,\n    renewal_amount__c::FLOAT                                  AS renewal_amount,\n    sdr_pipeline_contribution__c::FLOAT                       AS sdr_pipeline_contribution,\n    solutions_to_be_replaced__c::VARCHAR                      AS solutions_to_be_replaced,\n    x3_technical_evaluation_date__c::TIMESTAMP_NTZ            AS technical_evaluation_date,\n    amount::FLOAT                                             AS total_contract_value,\n    recurring_amount__c::FLOAT                                AS recurring_amount,\n    true_up_amount__c::FLOAT                                  AS true_up_amount,\n    proserv_amount__c::FLOAT                                  AS proserv_amount,\n    other_non_recurring_amount__c::FLOAT                      AS other_non_recurring_amount,\n    upside_swing_deal_iacv__c::FLOAT                          AS upside_swing_deal_iacv,\n    web_portal_purchase__c::BOOLEAN                           AS is_web_portal_purchase,\n    opportunity_term_new__c::FLOAT                            AS opportunity_term,\n    pio__c::BOOLEAN                                           AS partner_initiated_opportunity,\n    user_segment_o__c::VARCHAR                                AS user_segment,\n    start_date__c::DATE                                       AS subscription_start_date,\n    end_date__c::DATE                                         AS subscription_end_date,\n    subscription_renewal_date__c::DATE                        AS subscription_renewal_date,\n    true_up_value__c::FLOAT                                   AS true_up_value,\n    order_type_live__c::VARCHAR                               AS order_type_current,\n    order_type_test__c::VARCHAR                               AS order_type_stamped,\n    arr_net__c::FLOAT                                         AS net_arr,\n    arr_basis__c::FLOAT                                       AS arr_basis,\n    arr__c::FLOAT                                             AS arr,\n    stage_3_net_arr__c::FLOAT                                 AS xdr_net_arr_stage_3,\n    stage_1_xdr_net_arr__c::FLOAT                             AS xdr_net_arr_stage_1,\n    stage_1_net_arr__c::FLOAT                                 AS net_arr_stage_1,\n    enterprise_agile_planning_net_arr__c::FLOAT               AS enterprise_agile_planning_net_arr,\n    duo_net_arr__c::FLOAT                                     AS duo_net_arr,\n    days_in_sao__c::FLOAT                                     AS days_in_sao,\n    new_logo_count__c::FLOAT                                  AS new_logo_count,\n    stamped_user_geo__c::VARCHAR                              AS user_geo_stamped,\n    stamped_user_region__c::VARCHAR                           AS user_region_stamped,\n    stamped_user_area__c::VARCHAR                             AS user_area_stamped,\n    stamped_opp_owner_user_role_type__c::VARCHAR              AS crm_opp_owner_user_role_type_stamped,\n    stamped_opp_owner_user_business_unit__c::VARCHAR          AS user_business_unit_stamped,\n    stamped_opportunity_owner__c::VARCHAR                     AS crm_opp_owner_stamped_name,\n    stamped_account_owner__c::VARCHAR                         AS crm_account_owner_stamped_name,\n    sao_user_segment__c::VARCHAR                              AS sao_crm_opp_owner_sales_segment_stamped,\n    sao_opp_owner_segment_geo_region_area__c::VARCHAR         AS sao_crm_opp_owner_sales_segment_geo_region_area_stamped,\n    sao_user_geo__c::VARCHAR                                  AS sao_crm_opp_owner_geo_stamped,\n    sao_user_region__c::VARCHAR                               AS sao_crm_opp_owner_region_stamped,\n    sao_user_area__c::VARCHAR                                 AS sao_crm_opp_owner_area_stamped,\n    opportunity_category__c::VARCHAR                          AS opportunity_category,\n    opportunity_health__c::VARCHAR                            AS opportunity_health,\n    number_of_sa_activity_tasks__c::VARCHAR                   AS number_of_sa_activity_tasks,\n    risk_type__c::VARCHAR                                     AS risk_type,\n    risk_reasons__c::VARCHAR                                  AS risk_reasons,\n    tam_notes__c::VARCHAR                                     AS tam_notes,\n    solution_architect__c::VARCHAR                            AS primary_solution_architect,\n    product_details__c::VARCHAR                               AS product_details,\n    product_category__c::VARCHAR                              AS product_category,\n    products_purchased__c::VARCHAR                            AS products_purchased,\n    payment_schedule__c::VARCHAR                              AS payment_schedule,\n    comp_new_logo_override__c::VARCHAR                        AS comp_new_logo_override,\n    is_pipeline_created_eligible_flag__c::BOOLEAN             AS is_pipeline_created_eligible,\n    next_steps__c::VARCHAR                                    AS next_steps,\n    auto_renewal_status__c::VARCHAR                           AS auto_renewal_status,\n    qsr_notes__c::VARCHAR                                     AS qsr_notes,\n    qsr_status__c::VARCHAR                                    AS qsr_status,\n    manager_forecast_confidence__c::FLOAT                     AS manager_confidence,\n    renewal_risk_forecast__c::VARCHAR                         AS renewal_risk_category,\n    renewal_swing_arr__c::FLOAT                               AS renewal_swing_arr,\n    isr__c::VARCHAR                                           AS renewal_manager,\n    renewal_forecast_category__c::VARCHAR                     AS renewal_forecast_health,\n    startup_type__c::VARCHAR                                  AS startup_type,\n    sales_segmentation_employees_o__c::VARCHAR                AS sales_segmentation_employees,\n    ultimate_parent_sales_segment_emp_o__c::VARCHAR           AS ultimate_parent_sales_segment_emp,\n    deal_path__c::VARCHAR                                     AS deal_path,\n\n    -- dates in stage fields\n    days_in_0_pending_acceptance__c::FLOAT                    AS days_in_0_pending_acceptance,\n    days_in_1_discovery__c::FLOAT                             AS days_in_1_discovery,\n    days_in_2_scoping__c::FLOAT                               AS days_in_2_scoping,\n    days_in_3_technical_evaluation__c::FLOAT                  AS days_in_3_technical_evaluation,\n    days_in_4_proposal__c::FLOAT                              AS days_in_4_proposal,\n    days_in_5_negotiating__c::FLOAT                           AS days_in_5_negotiating,\n    x0_pending_acceptance_date__c::TIMESTAMP_NTZ              AS stage_0_pending_acceptance_date,\n    x1_discovery_date__c::TIMESTAMP_NTZ                       AS stage_1_discovery_date,\n    x2_scoping_date__c::TIMESTAMP_NTZ                         AS stage_2_scoping_date,\n    x3_technical_evaluation_date__c::TIMESTAMP_NTZ            AS stage_3_technical_evaluation_date,\n    x4_proposal_date__c::TIMESTAMP_NTZ                        AS stage_4_proposal_date,\n    x5_negotiating_date__c::TIMESTAMP_NTZ                     AS stage_5_negotiating_date,\n    x6_awaiting_signature_date__c::TIMESTAMP_NTZ              AS stage_6_awaiting_signature_date,\n    x6_closed_won_date__c::TIMESTAMP_NTZ                      AS stage_6_closed_won_date,\n    x7_closed_lost_date__c::TIMESTAMP_NTZ                     AS stage_6_closed_lost_date,\n\n    -- channel reporting\n    -- original issue: https://gitlab.com/gitlab-data/analytics/-/issues/6072\n    dr_partner_deal_type__c::VARCHAR                          AS dr_partner_deal_type,\n    dr_partner_engagement__c::VARCHAR                         AS dr_partner_engagement,\n    vartopiadrs__dr_deal_reg_id__c::VARCHAR                   AS dr_deal_id,\n    vartopiadrs__primary_registration__c::VARCHAR             AS dr_primary_registration,\n    impartnerprm__partneraccount__c::VARCHAR                  AS partner_account,\n    vartopiadrs__dr_status1__c::VARCHAR                       AS dr_status,\n    distributor__c::VARCHAR                                   AS distributor,\n    influence_partner__c::VARCHAR                             AS influence_partner,\n    focus_partner__c::BOOLEAN                                 AS is_focus_partner,\n    fulfillment_partner__c::VARCHAR                           AS fulfillment_partner,\n    platform_partner__c::VARCHAR                              AS platform_partner,\n    partner_track__c::VARCHAR                                 AS partner_track,\n    resale_partner_track__c::VARCHAR                          AS resale_partner_track,\n    public_sector_opp__c::BOOLEAN                             AS is_public_sector_opp,\n    registration_from_portal__c::BOOLEAN                      AS is_registration_from_portal,\n    calculated_discount__c::FLOAT                             AS calculated_discount,\n    partner_discount__c::FLOAT                                AS partner_discount,\n    partner_discount_calc__c::FLOAT                           AS partner_discount_calc,\n    partner_margin__c::FLOAT                                  AS partner_margin_percentage,\n    comp_channel_neutral__c::FLOAT                            AS comp_channel_neutral,\n    aggregate_partner__c::VARCHAR                             AS aggregate_partner,\n\n    -- command plan fields\n    fm_champion__c::VARCHAR                                   AS cp_champion,\n    fm_close_plan__c::VARCHAR                                 AS cp_close_plan,\n    fm_decision_criteria__c::VARCHAR                          AS cp_decision_criteria,\n    fm_decision_process__c::VARCHAR                           AS cp_decision_process,\n    fm_economic_buyer__c::VARCHAR                             AS cp_economic_buyer,\n    fm_help__c::VARCHAR                                       AS cp_help,\n    fm_identify_pain__c::VARCHAR                              AS cp_identify_pain,\n    fm_metrics__c::VARCHAR                                    AS cp_metrics,\n    fm_partner__c::VARCHAR                                    AS cp_partner,\n    fm_paper_process__c::VARCHAR                              AS cp_paper_process,\n    fm_review_notes__c::VARCHAR                               AS cp_review_notes,\n    fm_risks__c::VARCHAR                                      AS cp_risks,\n    fm_use_cases__c::VARCHAR                                  AS cp_use_cases,\n    fm_value_driver__c::VARCHAR                               AS cp_value_driver,\n    fm_why_do_anything_at_all__c::VARCHAR                     AS cp_why_do_anything_at_all,\n    fm_why_gitlab__c::VARCHAR                                 AS cp_why_gitlab,\n    fm_why_now__c::VARCHAR                                    AS cp_why_now,\n    fm_score__c::FLOAT                                        AS cp_score,\n\n    -- original issue: https://gitlab.com/gitlab-data/analytics/-/issues/6577\n    sa_validated_tech_evaluation_close_statu__c::VARCHAR      AS sa_tech_evaluation_close_status,\n    sa_validated_tech_evaluation_end_date__c::TIMESTAMP_NTZ   AS sa_tech_evaluation_end_date,\n    sa_validated_tech_evaluation_start_date__c::TIMESTAMP_NTZ AS sa_tech_evaluation_start_date,\n\n    -- flag to identify eligible booking deals, excluding jihu - issue: https://gitlab.com/gitlab-com/sales-team/field-operations/systems/-/issues/1805\n    fp_a_master_bookings_flag__c::BOOLEAN                     AS fpa_master_bookings_flag,\n    downgrade_reason__c::VARCHAR                              AS downgrade_reason,\n    ssp_id__c::VARCHAR                                        AS ssp_id,\n    gaclientid__c::VARCHAR                                    AS ga_client_id,\n\n    -- vsa data - issue: https://gitlab.com/gitlab-com/sales-team/field-operations/customer-success-operations/-/issues/2399\n    vsa_readout__c::VARCHAR                                   AS vsa_readout,\n    vsa_start_date_net_arr__c::FLOAT                          AS vsa_start_date_net_arr,\n    vsa_start_date__c::TIMESTAMP_NTZ                          AS vsa_start_date,\n    vsa_url__c::VARCHAR                                       AS vsa_url,\n    vsa_status__c::VARCHAR                                    AS vsa_status,\n    vsa_end_date__c::TIMESTAMP_NTZ                            AS vsa_end_date,\n\n    -- original issue: https://gitlab.com/gitlab-com/sales-team/field-operations/customer-success-operations/-/issues/2464\n    downgrade_details__c::VARCHAR                             AS downgrade_details,\n    won_arr_basis_for_clari__c::FLOAT                         AS won_arr_basis_for_clari,\n    arr_basis_for_clari__c::FLOAT                             AS arr_basis_for_clari,\n    forecasted_churn_for_clari__c::FLOAT                      AS forecasted_churn_for_clari,\n    override_arr_basis_clari__c::FLOAT                        AS override_arr_basis_clari,\n\n    -- ps fields - issue: https://gitlab.com/gitlab-com/sales-team/field-operations/customer-success-operations/-/issues/2723\n    intended_product_tier__c::VARCHAR                         AS intended_product_tier,\n    parent_opportunity__c::VARCHAR                            AS parent_opportunity_id,\n\n    -- ptc fields - issue: https://gitlab.com/gitlab-data/analytics/-/issues/19440\n    ptc_predicted_arr__c::FLOAT                               AS ptc_predicted_arr,\n    ptc_predicted_renewal_risk_category__c::VARCHAR           AS ptc_predicted_renewal_risk_category,\n\n    -- metadata\n    isdeleted::BOOLEAN                                        AS is_deleted,\n    lastactivitydate::TIMESTAMP_NTZ                           AS last_activity_date,\n    sales_last_activity_date__c::TIMESTAMP_NTZ                AS sales_last_activity_date,\n    recordtypeid::VARCHAR                                     AS record_type_id,\n    dbt_scd_id::VARCHAR                                       AS dbt_scd_id,\n    dbt_updated_at::TIMESTAMP_NTZ                             AS dbt_updated_at,\n    dbt_valid_from::TIMESTAMP_NTZ                             AS dbt_valid_from,\n    dbt_valid_to::TIMESTAMP_NTZ                               AS dbt_valid_to,\n    _sdc_received_at::TIMESTAMP_NTZ                           AS sdc_received_at,\n    _sdc_sequence::NUMBER                                     AS sdc_sequence,\n    _sdc_batched_at::TIMESTAMP_NTZ                            AS sdc_batched_at,\n    _sdc_extracted_at::TIMESTAMP_NTZ                          AS sdc_extracted_at\n  FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.restricted_safe_legacy.sfdc_opportunity_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:44.130692Z", "completed_at": "2025-06-09T18:50:44.164742Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:44.217345Z", "completed_at": "2025-06-09T18:50:53.571636Z"}], "thread_id": "Thread-2", "execution_time": 9.535919189453125, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_share_source", "compiled": true, "compiled_code": "WITH source AS (\n    \n    SELECT * \n    FROM EMBUCKET.salesforce_v2_stitch.opportunityshare\n\n), renamed AS (\n\n       SELECT\n\n         --keys\n          id\tAS\topportunity_share_id,\n          opportunityid AS opportunity_id,\n          userorgroupid AS user_or_group_id,\n      \n         --info \n         opportunityaccesslevel AS opportunity_access_level,\n         lastmodifiedbyid AS last_modified_by_id,\n         lastmodifieddate AS last_modified_date,\n         rowcause AS row_cause,\n         isdeleted AS is_deleted,\n\n         --Stitch metadata\n         _sdc_batched_at AS sdc_batched_at,\n         _sdc_extracted_at AS sdc_extracted_at,\n         _sdc_received_at AS sdc_received_at,\n         _sdc_sequence AS sdc_sequence,\n         _sdc_table_version AS sdc_table_version\n      \n       FROM source\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_opportunity_share_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:45.090453Z", "completed_at": "2025-06-09T18:50:45.132169Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:45.139091Z", "completed_at": "2025-06-09T18:50:53.575018Z"}], "thread_id": "Thread-29", "execution_time": 8.514496088027954, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_user_roles_source", "compiled": true, "compiled_code": "with base as (\n\n    SELECT * \n    FROM EMBUCKET.salesforce_v2_stitch.userrole\n\n)\n\nSELECT *\nFROM base", "relation_name": "EMBUCKET.sfdc.sfdc_user_roles_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:48.789410Z", "completed_at": "2025-06-09T18:50:48.796803Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:48.797748Z", "completed_at": "2025-06-09T18:50:53.569133Z"}], "thread_id": "Thread-27", "execution_time": 4.780889987945557, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_books_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT \n      'bookID' AS bookid,\n      title,\n      authors,\n      average_rating,\n      isbn,\n      isbn13, \n      language_code,\n      num_pages,\n      ratings_count,\n      text_reviews_count,\n      publication_date,\n      publisher\n  FROM EMBUCKET.sheetload.books\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_books_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.175257Z", "completed_at": "2025-06-09T18:50:49.222944Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.241895Z", "completed_at": "2025-06-09T18:50:53.567023Z"}], "thread_id": "Thread-9", "execution_time": 4.440269231796265, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_cert_product_geo_viewer_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.cert_product_geo_viewer\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_cert_product_geo_viewer_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.322874Z", "completed_at": "2025-06-09T18:50:49.337310Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.338377Z", "completed_at": "2025-06-09T18:50:53.896023Z"}], "thread_id": "Thread-23", "execution_time": 4.575408935546875, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_deleted_mrs_source", "compiled": true, "compiled_code": "WITH source AS (\n\n\tSELECT *\n\tFROM EMBUCKET.sheetload.deleted_mrs\n\n), renamed AS (\n\n    SELECT \n      deleted_merge_request_id::INTEGER AS deleted_merge_request_id\n    FROM source\n\n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_deleted_mrs_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:47.995366Z", "completed_at": "2025-06-09T18:50:48.013377Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:48.014929Z", "completed_at": "2025-06-09T18:50:53.904062Z"}], "thread_id": "Thread-13", "execution_time": 5.91216778755188, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_zqu_quote_rate_plan_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.salesforce_v2_stitch.zqu__quoterateplan__c\n\n), renamed AS (\n\n    SELECT\n\n      -- ids\n      id                                        AS zqu_quote_rate_plan_id,\n      zqu__quoterateplanzuoraid__c              AS zqu_quote_rate_plan_zuora_id,\n      name                                      AS zqu_quote_rate_plan_name,\n\n      -- info\n      one__c                                    AS one,\n      admin_subtotal_test__c                    AS admin_subtotal_test,\n      admin_subtotal_summary__c                 AS admin_subtotal_summary,\n      charge_summary_sub_total__c               AS charge_summary_sub_total,\n      license_amount__c                         AS license_amount,\n      professional_services_amount__c           AS professional_services_amount,\n      true_up_amount__c                         AS true_up_amount,\n      ticket_group_numeric__c                   AS ticket_group_numeric,\n      zqu__quote__c                             AS zqu_quote_id,\n      zqu__quoteamendment__c                    AS zqu_quote_amendment_id,\n      zqu__amendmenttype__c                     AS zqu_quote_amendment_type,\n      zqu__productrateplan__c                   AS zqu_product_rate_plan_id,\n      zqu__productrateplanzuoraid__c            AS zqu_product_rate_plan_zuora_id,\n      zqu__quoteproductname__c                  AS zqu_quote_product_name,\n      zqu__subscriptionrateplanzuoraid__c       AS zqu_subscription_rate_plan_zuora_id,\n      rate_plan_charge_last_modified_time__c    AS rate_plan_charge_last_modified_time,\n      zqu__time_product_added__c                AS zqu_time_product_added,\n\n      -- metadata\n      createdbyid                               AS created_by_id,\n      createddate                               AS created_date,\n      isdeleted                                 AS is_deleted,\n      lastmodifiedbyid                          AS last_modified_by_id,\n      lastmodifieddate                          AS last_modified_date,\n      _sdc_received_at                          AS sfdc_received_at,\n      _sdc_extracted_at                         AS sfdc_extracted_at,\n      _sdc_table_version                        AS sfdc_table_version,\n      _sdc_batched_at                           AS sfdc_batched_at,\n      _sdc_sequence                             AS sfdc_sequence,\n      systemmodstamp                            AS system_mod_stamp\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sfdc.sfdc_zqu_quote_rate_plan_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.189645Z", "completed_at": "2025-06-09T18:50:49.217634Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.235155Z", "completed_at": "2025-06-09T18:50:53.906678Z"}], "thread_id": "Thread-12", "execution_time": 4.762118101119995, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_cert_product_geo_dashboard_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.cert_product_geo_dashboard\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_cert_product_geo_dashboard_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.066907Z", "completed_at": "2025-06-09T18:50:49.088229Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.102687Z", "completed_at": "2025-06-09T18:50:53.905280Z"}], "thread_id": "Thread-7", "execution_time": 4.910768032073975, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_cert_customer_segmentation_sql_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.cert_customer_segmentation_sql\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_cert_customer_segmentation_sql_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.219072Z", "completed_at": "2025-06-09T18:50:49.260834Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.271936Z", "completed_at": "2025-06-09T18:50:53.907761Z"}], "thread_id": "Thread-11", "execution_time": 4.7532758712768555, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_cert_sales_funnel_dashboard_user_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.cert_sales_funnel_dashboard_user\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_cert_sales_funnel_dashboard_user_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:48.047964Z", "completed_at": "2025-06-09T18:50:48.056311Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:48.060137Z", "completed_at": "2025-06-09T18:50:54.053106Z"}], "thread_id": "Thread-30", "execution_time": 6.038811206817627, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_abm_key_account_list_source", "compiled": true, "compiled_code": "WITH source AS (\n\n        SELECT * \n        FROM EMBUCKET.sheetload.abm_key_account_list\n\n        )\n        SELECT * \n        FROM source", "relation_name": "EMBUCKET.sheetload.sheetload_abm_key_account_list_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.196330Z", "completed_at": "2025-06-09T18:50:49.228296Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.247507Z", "completed_at": "2025-06-09T18:50:54.048821Z"}], "thread_id": "Thread-14", "execution_time": 4.895318031311035, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_cert_sales_funnel_dashboard_developer_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.cert_sales_funnel_dashboard_developer\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_cert_sales_funnel_dashboard_developer_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.163037Z", "completed_at": "2025-06-09T18:50:49.187857Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.203281Z", "completed_at": "2025-06-09T18:50:54.050024Z"}], "thread_id": "Thread-3", "execution_time": 4.938881874084473, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_cert_product_adoption_dashboard_user_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.cert_product_adoption_dashboard_user\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_cert_product_adoption_dashboard_user_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.063127Z", "completed_at": "2025-06-09T18:50:49.081686Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.094895Z", "completed_at": "2025-06-09T18:50:54.051806Z"}], "thread_id": "Thread-8", "execution_time": 4.989313840866089, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_cert_customer_segmentation_viewer_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.cert_customer_segmentation_viewer\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_cert_customer_segmentation_viewer_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.114200Z", "completed_at": "2025-06-09T18:50:49.127881Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.148050Z", "completed_at": "2025-06-09T18:50:54.055151Z"}], "thread_id": "Thread-31", "execution_time": 4.971179962158203, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_cert_pricing_customer_discount_dashboard_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.cert_pricing_customer_discount_dashboard\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_cert_pricing_customer_discount_dashboard_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:48.792457Z", "completed_at": "2025-06-09T18:50:48.804298Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:48.809604Z", "completed_at": "2025-06-09T18:50:54.664855Z"}], "thread_id": "Thread-16", "execution_time": 5.876415967941284, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_bizible_to_pathfactory_mapping_source", "compiled": true, "compiled_code": "WITH source AS (\n\n        SELECT * \n        FROM EMBUCKET.sheetload.bizible_to_pathfactory_mapping\n\n        )\n        SELECT * \n        FROM source", "relation_name": "EMBUCKET.sheetload.sheetload_bizible_to_pathfactory_mapping_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:48.997179Z", "completed_at": "2025-06-09T18:50:49.062257Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.073592Z", "completed_at": "2025-06-09T18:50:54.728102Z"}], "thread_id": "Thread-6", "execution_time": 5.74598503112793, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_cert_customer_segmentation_dashboard_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.cert_customer_segmentation_dashboard\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_cert_customer_segmentation_dashboard_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.170716Z", "completed_at": "2025-06-09T18:50:49.199641Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.223380Z", "completed_at": "2025-06-09T18:50:55.324924Z"}], "thread_id": "Thread-26", "execution_time": 6.200163125991821, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_cert_product_geo_sql_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.cert_product_geo_sql\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_cert_product_geo_sql_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:54.100311Z", "completed_at": "2025-06-09T18:50:54.119007Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:54.125819Z", "completed_at": "2025-06-09T18:50:56.827661Z"}], "thread_id": "Thread-30", "execution_time": 2.7445807456970215, "adapter_response": {}, "message": "Database Error in model sheetload_people_budget_source (models/sources/sheetload/sheetload_people_budget_source.sql)\n  000200: DataFusion error: Schema error: No field named \"DIVISION\". Valid fields are source.division, source.fiscal_year, source.quarter, source.budget, source.excess_from_previous_quarter, source.annual_comp_review, source._updated_at.\n  compiled code at target/run/gitlab_snowflake/models/sources/sheetload/sheetload_people_budget_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_people_budget_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT * \n    FROM EMBUCKET.sheetload.people_budget\n    \n), renamed AS (\n\n    SELECT\n      \"DIVISION\"::VARCHAR                                  AS division,\n      \"FISCAL_YEAR\"::NUMBER                                AS fiscal_year,\n      \"QUARTER\"::NUMBER                                    AS fiscal_quarter,\n      \"BUDGET\"::NUMBER                                     AS budget,\n      \"EXCESS_FROM_PREVIOUS_QUARTER\"::NUMBER               AS excess_from_previous_quarter,\n      \"ANNUAL_COMP_REVIEW\"::NUMBER                         AS annual_comp_review\n    FROM source\n \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_people_budget_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:53.896682Z", "completed_at": "2025-06-09T18:50:53.927347Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:53.942811Z", "completed_at": "2025-06-09T18:50:56.848982Z"}], "thread_id": "Thread-9", "execution_time": 2.997797966003418, "adapter_response": {}, "message": "Database Error in model sheetload_maxmind_ip_ranges_source (models/sources/sheetload/sheetload_maxmind_ip_ranges_source.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'parse_ip'.\n  Did you mean 'parse_json'?\n  compiled code at target/run/gitlab_snowflake/models/sources/sheetload/sheetload_maxmind_ip_ranges_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_maxmind_ip_ranges_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.maxmind_ranges\n\n), parsed AS (\n\n    SELECT\n      network_start_ip::VARCHAR                                   AS ip_range_first_ip,\n      network_last_ip::VARCHAR                                    AS ip_range_last_ip,\n      PARSE_IP(null, 'inet')['ip_fields'][0]::NUMBER AS ip_range_first_ip_numeric,\n      PARSE_IP(null, 'inet')['ip_fields'][0]::NUMBER  AS ip_range_last_ip_numeric,\n      geoname_id::NUMBER                                          AS geoname_id,\n      registered_country_geoname_id::NUMBER                       AS registered_country_geoname_id,\n      represented_country_geoname_id::NUMBER                      AS represented_country_geoname_id,\n      null::BOOLEAN                                 AS is_anonymous_proxy,\n      null::BOOLEAN                              AS is_satellite_provider   \n    FROM source\n\n)\n\nSELECT *\nFROM parsed", "relation_name": "EMBUCKET.sheetload.sheetload_maxmind_ip_ranges_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:52.322119Z", "completed_at": "2025-06-09T18:50:52.326316Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:52.327165Z", "completed_at": "2025-06-09T18:50:57.626353Z"}], "thread_id": "Thread-32", "execution_time": 5.304823160171509, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_ga360_custom_dimensions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n        SELECT \n            dimension_name::VARCHAR AS dimension_name,\n            dimension_index::NUMBER AS dimension_index,\n            dimension_scope::VARCHAR AS dimension_scope\n        FROM EMBUCKET.sheetload.ga360_customdimensions\n\n)\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_ga360_custom_dimensions_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.183935Z", "completed_at": "2025-06-09T18:50:49.202291Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.228771Z", "completed_at": "2025-06-09T18:50:57.641987Z"}], "thread_id": "Thread-17", "execution_time": 8.507254123687744, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_ci_runner_machine_type_mapping_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.sheetload.ci_runner_machine_type_mapping\n\n)\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_ci_runner_machine_type_mapping_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.493651Z", "completed_at": "2025-06-09T18:50:49.498093Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.498991Z", "completed_at": "2025-06-09T18:50:57.656673Z"}], "thread_id": "Thread-24", "execution_time": 8.164173126220703, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_engineering_infra_prod_console_access_source", "compiled": true, "compiled_code": "WITH source AS (\n    \n    SELECT * \n    FROM EMBUCKET.sheetload.engineering_infra_prod_console_access\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_engineering_infra_prod_console_access_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:51.239089Z", "completed_at": "2025-06-09T18:50:51.244334Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:51.244920Z", "completed_at": "2025-06-09T18:50:57.914399Z"}], "thread_id": "Thread-19", "execution_time": 6.677510976791382, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_fy25_yearlies_target_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.fy25_yearlies_target\n\n), renamed AS (\n\n    SELECT\n      yearly_name::VARCHAR                     AS yearly_name,\n      yearly_dri::VARCHAR                      AS yearly_dri,\n      yearly_description::VARCHAR              AS yearly_description,\n      true::BOOLEAN                         AS is_mnpi,\n      FY25_Q4::FLOAT                           AS FY25_Q4,\n      FY25_Q3::FLOAT                           AS FY25_Q3,\n      FY25_Q2::FLOAT                           AS FY25_Q2,\n      FY25_Q1::FLOAT                           AS FY25_Q1\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_fy25_yearlies_target_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:53.786647Z", "completed_at": "2025-06-09T18:50:53.798923Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:53.799223Z", "completed_at": "2025-06-09T18:50:58.366031Z"}], "thread_id": "Thread-10", "execution_time": 4.5823891162872314, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_license_md5_to_subscription_mapping_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.license_md5_to_subscription_mapping\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_license_md5_to_subscription_mapping_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.327096Z", "completed_at": "2025-06-09T18:50:49.344800Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.345142Z", "completed_at": "2025-06-09T18:50:58.354023Z"}], "thread_id": "Thread-25", "execution_time": 9.03294324874878, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_devrel_blog_posts_views_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.sheetload.devrel_blog_posts_views\n), renamed AS (\n  SELECT \n    publication_date::VARCHAR            as publication_date,\n    gitlab_publication_quarter::VARCHAR  as gitlab_publication_quarter,\n    blog_title::VARCHAR                  as blog_title,\n    url::VARCHAR     as url,\n    author::VARCHAR  as author,\n    team::VARCHAR    as team\n\n  FROM source\n)\nSELECT *\nFROM renamed\nWHERE url IS NOT NULL", "relation_name": "EMBUCKET.sheetload.sheetload_devrel_blog_posts_views_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:51.170909Z", "completed_at": "2025-06-09T18:50:51.182270Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:51.186306Z", "completed_at": "2025-06-09T18:50:58.364698Z"}], "thread_id": "Thread-20", "execution_time": 7.201628923416138, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_fmm_kpi_targets_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.fmm_kpi_targets\n\n), renamed as (\n\n    SELECT\n      field_segment::VARCHAR                     AS field_segment,\n      region::VARCHAR                            AS region,\n      kpi::VARCHAR                               AS kpi,\n      goal::NUMBER                               AS goal\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_fmm_kpi_targets_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:53.872712Z", "completed_at": "2025-06-09T18:50:53.894269Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:53.910476Z", "completed_at": "2025-06-09T18:50:58.369740Z"}], "thread_id": "Thread-27", "execution_time": 4.507667303085327, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_maxmind_countries_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.maxmind_countries\n\n), parsed AS (\n\n    SELECT\n      geoname_id::NUMBER            AS geoname_id,\n      locale_code::VARCHAR          AS locale_code,\n      continent_code::VARCHAR       AS continent_code,\n      continent_name::VARCHAR       AS continent_name,\n      country_iso_code::VARCHAR     AS country_iso_code,\n      country_name::VARCHAR         AS country_name,\n      is_in_european_union::BOOLEAN AS is_in_european_union\n    FROM source\n\n)\n\nSELECT *\nFROM parsed", "relation_name": "EMBUCKET.sheetload.sheetload_maxmind_countries_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:53.808014Z", "completed_at": "2025-06-09T18:50:53.828027Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:53.844700Z", "completed_at": "2025-06-09T18:50:58.375042Z"}], "thread_id": "Thread-18", "execution_time": 4.595034122467041, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_map_ramp_deals_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.sheetload.map_ramp_deals\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_map_ramp_deals_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:51.193644Z", "completed_at": "2025-06-09T18:50:51.199311Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:51.199642Z", "completed_at": "2025-06-09T18:50:58.382458Z"}], "thread_id": "Thread-15", "execution_time": 7.200723171234131, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_fy25_account_geo_map", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT \n\n    account_id::VARCHAR AS account_id,\n    fy25_business_unit::VARCHAR AS fy25_business_unit,\n    fy25_geo::VARCHAR AS fy25_geo,\n    fy25_segment::VARCHAR AS fy25_segment,\n    fy25_region::VARCHAR AS fy25_region,\n    fy25_area::VARCHAR AS fy25_area\n\n  FROM EMBUCKET.sheetload.fy25_account_geo_map\n\n        )\nSELECT * \nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_fy25_account_geo_map", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:54.121943Z", "completed_at": "2025-06-09T18:50:54.147700Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:54.161215Z", "completed_at": "2025-06-09T18:50:58.392353Z"}], "thread_id": "Thread-31", "execution_time": 4.296968936920166, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_sales_analytics_tableau_rls_users_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sales_analytics_tableau_rls_users\n\n), renamed AS (\n\n    SELECT\n      email::VARCHAR                              AS email,\n      username::VARCHAR                           AS username,\n      role::VARCHAR                               AS role\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_sales_analytics_tableau_rls_users_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:52.899482Z", "completed_at": "2025-06-09T18:50:52.902400Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:52.902664Z", "completed_at": "2025-06-09T18:50:58.379991Z"}], "thread_id": "Thread-4", "execution_time": 5.481107950210571, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_gitlab_data_driven_attribution_weights_source", "compiled": true, "compiled_code": "WITH source AS (\n\n        SELECT\n                channel::TEXT AS channel,\n                offer_type::TEXT AS offer_type,\n                weight::FLOAT AS weight\n        FROM EMBUCKET.sheetload.gitlab_data_driven_attribution_weights\n\n        )\n        SELECT * \n        FROM source", "relation_name": "EMBUCKET.sheetload.sheetload_gitlab_data_driven_attribution_weights_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:53.757556Z", "completed_at": "2025-06-09T18:50:53.815869Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:53.828369Z", "completed_at": "2025-06-09T18:50:58.399721Z"}], "thread_id": "Thread-22", "execution_time": 4.642834186553955, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_hostnames_to_domains_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT * \n    FROM EMBUCKET.sheetload.hostnames_to_domains\n\n)\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_hostnames_to_domains_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:54.096781Z", "completed_at": "2025-06-09T18:50:54.118203Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:54.142851Z", "completed_at": "2025-06-09T18:50:58.390160Z"}], "thread_id": "Thread-8", "execution_time": 4.295822858810425, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_sales_analytics_tableau_rls_roles_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sales_analytics_tableau_rls_roles\n\n), renamed AS (\n\n    SELECT\n      role::VARCHAR                              AS role,\n      key_segment_geo::VARCHAR                  AS key_segment_geo\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_sales_analytics_tableau_rls_roles_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:54.669383Z", "completed_at": "2025-06-09T18:50:54.674531Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:54.674943Z", "completed_at": "2025-06-09T18:50:58.402863Z"}], "thread_id": "Thread-16", "execution_time": 3.7344648838043213, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_sales_dev_role_hierarchy_source", "compiled": true, "compiled_code": "WITH source AS (\n\n        SELECT * \n        FROM EMBUCKET.sheetload.sales_dev_role_hierarchy\n\n        )\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_sales_dev_role_hierarchy_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:52.891250Z", "completed_at": "2025-06-09T18:50:52.912152Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:52.913446Z", "completed_at": "2025-06-09T18:50:58.385539Z"}], "thread_id": "Thread-1", "execution_time": 5.494927883148193, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_gitlab_contributing_organizations_source", "compiled": true, "compiled_code": "WITH source AS (\n    \n    SELECT * \n    FROM EMBUCKET.sheetload.gitlab_contributing_organizations\n\n), renamed AS (\n\n    SELECT\n      contributor_organization::VARCHAR      AS contributor_organization,\n      contributor_usernames::VARCHAR         AS contributor_usernames,\n      sfdc_account_id::VARCHAR               AS sfdc_account_id\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_gitlab_contributing_organizations_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:53.993862Z", "completed_at": "2025-06-09T18:50:54.009950Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:54.019390Z", "completed_at": "2025-06-09T18:50:58.381327Z"}], "thread_id": "Thread-13", "execution_time": 4.404254913330078, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_net_arr_net_iacv_conversion_factors_agg_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.net_arr_net_iacv_conversion_factors_agg\n\n), renamed AS (\n\n    SELECT\n      order_type_stamped::VARCHAR            AS order_type_stamped,\n      user_segment::VARCHAR                  AS user_segment,\n      net_iacv::NUMBER                       AS net_iacv,\n      net_arr::NUMBER                        AS net_arr,\n      ratio_net_iacv_to_net_arr::NUMBER      AS ratio_net_iacv_to_net_arr\n    FROM source \n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_net_arr_net_iacv_conversion_factors_agg_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:53.883975Z", "completed_at": "2025-06-09T18:50:53.916589Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:53.931555Z", "completed_at": "2025-06-09T18:50:58.401701Z"}], "thread_id": "Thread-29", "execution_time": 4.550461053848267, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_marketo_lead_scores_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.marketo_lead_scores\n\n), renamed AS (\n\n    SELECT\n        activity_type::VARCHAR AS activity_type,\n        scored_action::VARCHAR AS scored_action,\n        current_score::INT     AS current_score,\n        previous_score::INT    AS previous_score,\n        test_score::INT        AS test_score\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_marketo_lead_scores_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:49.137259Z", "completed_at": "2025-06-09T18:50:49.188732Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:49.210235Z", "completed_at": "2025-06-09T18:50:58.394388Z"}], "thread_id": "Thread-21", "execution_time": 9.283581972122192, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_cert_pricing_customer_discount_viewer_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.cert_pricing_customer_discount_viewer\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_cert_pricing_customer_discount_viewer_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:53.817432Z", "completed_at": "2025-06-09T18:50:53.835358Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:53.835663Z", "completed_at": "2025-06-09T18:50:58.572540Z"}], "thread_id": "Thread-28", "execution_time": 4.8173041343688965, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_job_roles_prior_to_2020_02_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT * \n    FROM EMBUCKET.sheetload.job_roles_prior_to_2020_02\n    \n), final AS (\n\n    SELECT \n      job_title,\n      job_role\n    FROM source\n      \n) \n\nSELECT * \nFROM final", "relation_name": "EMBUCKET.sheetload.sheetload_job_roles_prior_to_2020_02_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:53.877158Z", "completed_at": "2025-06-09T18:50:53.900795Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:53.919008Z", "completed_at": "2025-06-09T18:50:58.573752Z"}], "thread_id": "Thread-2", "execution_time": 4.746397972106934, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_mapping_sdr_sfdc_bamboohr_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.mapping_sdr_sfdc_bamboohr\n\n), renamed as (\n\n    SELECT\n      user_id::VARCHAR                      AS user_id,\n      first_name::VARCHAR                   AS first_name,\n      last_name::VARCHAR                    AS last_name,\n      username::VARCHAR                     AS username,\n      active::NUMBER                        AS active,\n      profile::VARCHAR                      AS profile,\n      eeid::NUMBER                          AS eeid,\n      sdr_segment::VARCHAR                  AS sdr_segment,\n      sdr_region::VARCHAR                   AS sdr_region,\n      sdr_order_type::VARCHAR               AS sdr_order_type\n      \n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_mapping_sdr_sfdc_bamboohr_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:57.663491Z", "completed_at": "2025-06-09T18:50:57.667032Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:57.667445Z", "completed_at": "2025-06-09T18:50:58.679656Z"}], "thread_id": "Thread-24", "execution_time": 1.0218586921691895, "adapter_response": {}, "message": "Database Error in model sheetload_toy_marketing_handbook_source (models/sources/sheetload/sheetload_toy_marketing_handbook_source.sql)\n  000200: DataFusion error: Schema error: No field named \"DEFAULT\". Valid fields are embucket.sheetload.toy_marketing_handbook.age, embucket.sheetload.toy_marketing_handbook.job, embucket.sheetload.toy_marketing_handbook.marital, embucket.sheetload.toy_marketing_handbook.education, embucket.sheetload.toy_marketing_handbook.default, embucket.sheetload.toy_marketing_handbook.balance, embucket.sheetload.toy_marketing_handbook.housing, embucket.sheetload.toy_marketing_handbook.loan, embucket.sheetload.toy_marketing_handbook.contact, embucket.sheetload.toy_marketing_handbook.day, embucket.sheetload.toy_marketing_handbook.month, embucket.sheetload.toy_marketing_handbook.duration, embucket.sheetload.toy_marketing_handbook.num_contacts_during_campaign, embucket.sheetload.toy_marketing_handbook.prev_campaign_passed_days, embucket.sheetload.toy_marketing_handbook.prev_contacts, embucket.sheetload.toy_marketing_handbook.prev_outcome, embucket.sheetload.toy_marketing_handbook.outcome, embucket.sheetload.toy_marketing_handbook._updated_at.\n  compiled code at target/run/gitlab_snowflake/models/sources/sheetload/sheetload_toy_marketing_handbook_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_toy_marketing_handbook_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT\n    age::int AS age,\n    job,\n    marital,\n    education,\n    \"DEFAULT\" AS is_default,\n    balance::int AS balance,\n    housing,\n    loan,\n    contact,\n    day::int AS day,\n    month,\n    duration::int AS duration,\n    num_contacts_during_campaign::int AS num_contacts_during_campaign,\n    prev_campaign_passed_days::int AS prev_campaign_passed_days,\n    prev_contacts::int AS prev_contacts,\n    prev_outcome,\n    outcome\n  FROM EMBUCKET.sheetload.toy_marketing_handbook\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_toy_marketing_handbook_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:53.792409Z", "completed_at": "2025-06-09T18:50:53.824616Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:53.852580Z", "completed_at": "2025-06-09T18:50:58.396034Z"}], "thread_id": "Thread-5", "execution_time": 4.60444712638855, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_location_factor_targets_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.location_factor_targets\n\n), renamed AS (\n\n    SELECT \n      department::VARCHAR AS department,\n      target::FLOAT       AS location_factor_target\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_location_factor_targets_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:53.988585Z", "completed_at": "2025-06-09T18:50:54.009517Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:54.013812Z", "completed_at": "2025-06-09T18:50:58.670365Z"}], "thread_id": "Thread-23", "execution_time": 4.695151090621948, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_multiple_delivery_types_per_month_charge_ids_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.multiple_delivery_types_per_month_charge_ids\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_multiple_delivery_types_per_month_charge_ids_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:53.999357Z", "completed_at": "2025-06-09T18:50:54.010336Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:54.025820Z", "completed_at": "2025-06-09T18:51:00.418755Z"}], "thread_id": "Thread-7", "execution_time": 6.446171760559082, "adapter_response": {}, "message": "Database Error in model sheetload_pagerslack_stats_source (models/sources/sheetload/sheetload_pagerslack_stats_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/sheetload/sheetload_pagerslack_stats_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_pagerslack_stats_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.pagerslack_stats\n\n),renamed AS (\n\n    SELECT\n        attempts::NUMBER                AS attempts,\n        true::BOOLEAN         AS weekend_pinged,\n        true::BOOLEAN            AS unavailable,\n        incident_url::VARCHAR           AS incident_url,\n        reported_by::VARCHAR            AS reported_by,\n        reported_at::TIMESTAMP          AS reported_at,\n        time_to_response::FLOAT         AS time_to_response,\n        time_at_response::TIMESTAMP     AS time_at_response\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_pagerslack_stats_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:54.109467Z", "completed_at": "2025-06-09T18:50:54.120004Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:54.131963Z", "completed_at": "2025-06-09T18:51:00.475636Z"}], "thread_id": "Thread-14", "execution_time": 6.384379148483276, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_percent_over_comp_band_historical_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.percent_over_comp_band_historical\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_percent_over_comp_band_historical_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:54.010610Z", "completed_at": "2025-06-09T18:50:54.032297Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:54.043332Z", "completed_at": "2025-06-09T18:51:00.477936Z"}], "thread_id": "Thread-12", "execution_time": 6.490674018859863, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_net_arr_net_iacv_conversion_factors_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.net_arr_net_iacv_conversion_factors\n\n), renamed AS (\n\n    SELECT \n      opportunity_id::VARCHAR                AS opportunity_id,\n      order_type_stamped::VARCHAR            AS order_type_stamped,\n      user_segment::VARCHAR                  AS user_segment,\n      net_iacv::NUMBER                       AS net_iacv,\n      net_arr::NUMBER                        AS net_arr,\n      ratio_net_iacv_to_net_arr::NUMBER      AS ratio_net_iacv_to_net_arr\n    FROM source \n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_net_arr_net_iacv_conversion_factors_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:54.004747Z", "completed_at": "2025-06-09T18:50:54.025247Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:54.036472Z", "completed_at": "2025-06-09T18:51:00.484709Z"}], "thread_id": "Thread-11", "execution_time": 6.502629041671753, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_partner_discount_summary_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.partner_discount_summary\n\n), renamed AS (\n\n    SELECT\n      fy::VARCHAR                     AS fiscal_year_name_fy,\n      opportunity_id::VARCHAR         AS dim_crm_opportunity_id,\n      close_date::VARCHAR             AS close_date,\n      lessor_of_discounts::FLOAT      AS discount_percent,\n      partner_type::VARCHAR           AS partner_type\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_partner_discount_summary_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.205579Z", "completed_at": "2025-06-09T18:50:59.227111Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.227450Z", "completed_at": "2025-06-09T18:51:00.470070Z"}], "thread_id": "Thread-18", "execution_time": 1.2893290519714355, "adapter_response": {}, "message": "Database Error in model snowflake_databases_source (models/sources/snowflake/snowflake_databases_source.sql)\n  000200: DataFusion error: Error during planning: table 'snowflake.account_usage.databases' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/snowflake/snowflake_databases_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.snowflake_databases_source", "compiled": true, "compiled_code": "SELECT *\nFROM snowflake.account_usage.databases", "relation_name": "EMBUCKET.snowflake.snowflake_databases_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.176685Z", "completed_at": "2025-06-09T18:50:59.193324Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.258114Z", "completed_at": "2025-06-09T18:51:00.495806Z"}], "thread_id": "Thread-20", "execution_time": 1.3364708423614502, "adapter_response": {}, "message": "Database Error in model snowflake_automatic_clustering_history_source (models/sources/snowflake/snowflake_automatic_clustering_history_source.sql)\n  000200: DataFusion error: Error during planning: table 'snowflake.account_usage.automatic_clustering_history' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/snowflake/snowflake_automatic_clustering_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.snowflake_automatic_clustering_history_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM snowflake.account_usage.automatic_clustering_history\n\n),\n\nrenamed AS (\nSELECT\n    start_time::TIMESTAMP         AS clustering_start_at,\n    end_time::TIMESTAMP           AS clustering_end_at,\n    credits_used::NUMBER          AS credits_used,\n    num_bytes_reclustered::NUMBER AS bytes_reclustered,\n    num_rows_reclustered::NUMBER  AS rows_reclustered,\n    table_id::NUMBER              AS table_id,\n    table_name::VARCHAR           AS table_name,\n    schema_id::NUMBER             AS schema_id,\n    schema_name::VARCHAR          AS schema_name,\n    database_id::NUMBER           AS database_id,\n    database_name::VARCHAR        AS database_name,\n    instance_id::NUMBER           AS instance_id,\n    LOWER(database_name || '.' || schema_name || '.' || table_name) AS full_table_name\nFROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.snowflake.snowflake_automatic_clustering_history_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:58.411557Z", "completed_at": "2025-06-09T18:50:58.422317Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:58.424682Z", "completed_at": "2025-06-09T18:51:00.582443Z"}], "thread_id": "Thread-25", "execution_time": 2.1775851249694824, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_zero_dollar_subscription_to_paid_subscription_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.zero_dollar_subscription_to_paid_subscription\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_zero_dollar_subscription_to_paid_subscription_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:58.408328Z", "completed_at": "2025-06-09T18:50:58.416308Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:58.416952Z", "completed_at": "2025-06-09T18:51:00.583615Z"}], "thread_id": "Thread-10", "execution_time": 2.1799638271331787, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_youtube_views_gitlab_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.sheetload.youtube_views_gitlab\n), renamed AS (\n  SELECT \n    video_id::VARCHAR       AS video_id,\n    team::VARCHAR           AS team,\n    account::VARCHAR        AS VARCHAR,\n    playlist::VARCHAR       AS playlist,\n    url::VARCHAR            as url,\n    video_title::VARCHAR    as video_title,\n    publication_date::VARCHAR            as publication_date,\n    gitlab_publication_quarter::VARCHAR  as gitlab_publication_quarter,\n    include_in_looker_report::VARCHAR    as include_in_looker_report\n  FROM source\n)\nSELECT *\nFROM renamed\nWHERE video_id IS NOT NULL", "relation_name": "EMBUCKET.sheetload.sheetload_youtube_views_gitlab_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:56.872794Z", "completed_at": "2025-06-09T18:50:56.876925Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:56.877225Z", "completed_at": "2025-06-09T18:51:00.668939Z"}], "thread_id": "Thread-9", "execution_time": 3.7994940280914307, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_sisense_users_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sisense_users\n\n), renamed as (\n\n    SELECT\n      id::VARCHAR                            AS id,\n      first_name::VARCHAR                    AS first_name,\n      last_name::VARCHAR                     AS last_name,\n      email_address::VARCHAR                 AS email_address\n      \n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_sisense_users_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:57.918518Z", "completed_at": "2025-06-09T18:50:57.921700Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:57.922692Z", "completed_at": "2025-06-09T18:51:00.769173Z"}], "thread_id": "Thread-19", "execution_time": 2.852421283721924, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_xactly_credit_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.sheetload.xactly_credit_sheetload\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_xactly_credit_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:55.327937Z", "completed_at": "2025-06-09T18:50:55.332121Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:55.332546Z", "completed_at": "2025-06-09T18:51:01.168653Z"}], "thread_id": "Thread-26", "execution_time": 5.841922044754028, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_sdr_bdr_metric_targets_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT * \n    FROM EMBUCKET.sheetload.sdr_bdr_metric_targets\n\n)\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_sdr_bdr_metric_targets_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:57.644357Z", "completed_at": "2025-06-09T18:50:57.648267Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:57.648547Z", "completed_at": "2025-06-09T18:51:01.269482Z"}], "thread_id": "Thread-17", "execution_time": 3.625732183456421, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_team_health_data_source", "compiled": true, "compiled_code": "WITH source AS (\n\n        SELECT * \n        FROM EMBUCKET.sheetload.team_health_data\n\n        )\n        SELECT * \n        FROM source", "relation_name": "EMBUCKET.sheetload.sheetload_team_health_data_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:56.838163Z", "completed_at": "2025-06-09T18:50:56.849356Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:56.849693Z", "completed_at": "2025-06-09T18:51:01.673590Z"}], "thread_id": "Thread-30", "execution_time": 4.841383218765259, "adapter_response": {}, "message": "Database Error in model sheetload_sisense_user_roles_source (models/sources/sheetload/sheetload_sisense_user_roles_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/sheetload/sheetload_sisense_user_roles_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_sisense_user_roles_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sisense_user_roles\n\n), renamed as (\n\n    SELECT\n      id::VARCHAR                               AS id,\n      updated_at::TIMESTAMP                     AS updated_at,\n      role_id::VARCHAR                          AS role_id,\n      user_id::VARCHAR                          AS user_id,\n      space_id::VARCHAR                         AS space_id\n      \n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sheetload.sheetload_sisense_user_roles_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:54.113983Z", "completed_at": "2025-06-09T18:50:54.125333Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:54.137764Z", "completed_at": "2025-06-09T18:51:02.051222Z"}], "thread_id": "Thread-3", "execution_time": 7.9576380252838135, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_product_maturity_historical_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.product_maturity_historical\n\n)\n\nSELECT * \nFROM source", "relation_name": "EMBUCKET.sheetload.sheetload_product_maturity_historical_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.276131Z", "completed_at": "2025-06-09T18:50:59.301291Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.332516Z", "completed_at": "2025-06-09T18:51:02.134270Z"}], "thread_id": "Thread-31", "execution_time": 2.898545742034912, "adapter_response": {}, "message": "Database Error in model snowflake_query_history_source (models/sources/snowflake/snowflake_query_history_source.sql)\n  000200: DataFusion error: Error during planning: table 'snowflake.account_usage.query_history' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/snowflake/snowflake_query_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.snowflake_query_history_source", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n\n  SELECT *\n  FROM snowflake.account_usage.query_history\n  \n\n),\n\nrenamed AS (\n\n  SELECT\n    query_id::VARCHAR AS query_id,\n    query_text::VARCHAR AS query_text,\n    database_id::NUMBER AS database_id,\n    database_name::VARCHAR AS database_name,\n    schema_id::NUMBER AS schema_id,\n    schema_name::VARCHAR AS schema_name,\n    query_type::VARCHAR AS query_type,\n    session_id::NUMBER AS session_id,\n    user_name::VARCHAR AS user_name,\n    role_name::VARCHAR AS role_name,\n    warehouse_id::NUMBER AS warehouse_id,\n    warehouse_name::VARCHAR AS warehouse_name,\n    warehouse_size::VARCHAR AS warehouse_size,  -- noqa: L029\n    warehouse_type::VARCHAR AS warehouse_type,\n    cluster_number::VARCHAR AS cluster_number,\n    query_tag::VARCHAR AS query_tag,\n    execution_status::VARCHAR AS execution_status,\n    error_code::VARCHAR AS error_code,\n    error_message::VARCHAR AS error_message,\n    start_time::TIMESTAMP AS query_start_at,\n    end_time::TIMESTAMP AS query_end_at,\n    total_elapsed_time::NUMBER AS total_elapsed_time,\n    bytes_scanned::NUMBER AS bytes_scanned,\n    percentage_scanned_from_cache::NUMBER AS percentage_scanned_from_cache,\n    bytes_written::NUMBER AS bytes_written,\n    bytes_written_to_result::NUMBER AS bytes_written_to_result,\n    bytes_read_from_result::NUMBER AS bytes_read_from_result,\n    rows_produced::NUMBER AS rows_produced,\n    rows_inserted::NUMBER AS rows_inserted,\n    rows_updated::NUMBER AS rows_updated,\n    rows_deleted::NUMBER AS rows_deleted,\n    rows_unloaded::NUMBER AS rows_unloaded,\n    bytes_deleted::NUMBER AS bytes_deleted,\n    partitions_scanned::NUMBER AS partitions_scanned,\n    partitions_total::NUMBER AS partitions_total,\n    bytes_spilled_to_local_storage::NUMBER AS bytes_spilled_to_local_storage,\n    bytes_spilled_to_remote_storage::NUMBER AS bytes_spilled_to_remote_storage,\n    bytes_sent_over_the_network::NUMBER AS bytes_sent_over_the_network,\n    compilation_time::NUMBER AS compilation_time,\n    execution_time::NUMBER AS execution_time,\n    queued_provisioning_time::NUMBER AS queued_provisioning_time,\n    queued_repair_time::NUMBER AS queued_repair_time,\n    queued_overload_time::NUMBER AS queued_overload_time,\n    transaction_blocked_time::NUMBER AS transaction_blocked_time,\n    outbound_data_transfer_cloud::VARCHAR AS outbound_data_transfer_cloud,\n    outbound_data_transfer_region::VARCHAR AS outbound_data_transfer_region,\n    outbound_data_transfer_bytes::NUMBER AS outbound_data_transfer_bytes,\n    inbound_data_transfer_cloud::VARCHAR AS inbound_data_transfer_cloud,\n    inbound_data_transfer_region::VARCHAR AS inbound_data_transfer_region,\n    inbound_data_transfer_bytes::NUMBER AS inbound_data_transfer_bytes,\n    list_external_files_time::NUMBER AS list_external_files_time,\n    credits_used_cloud_services::NUMBER AS credits_used_cloud_services,\n    release_version::VARCHAR AS release_version,\n    external_function_total_invocations::NUMBER AS external_function_total_invocations,\n    external_function_total_sent_rows::NUMBER AS external_function_total_sent_rows,\n    external_function_total_received_rows::NUMBER AS external_function_total_received_rows,\n    external_function_total_sent_bytes::NUMBER AS external_function_total_sent_bytes,\n    external_function_total_received_bytes::NUMBER AS external_function_total_received_bytes,\n    query_load_percent::NUMBER AS query_load_percent,\n    is_client_generated_statement::BOOLEAN AS is_client_generated_statement,\n    query_acceleration_bytes_scanned::NUMBER AS query_acceleration_bytes_scanned,\n    query_acceleration_partitions_scanned::NUMBER AS query_acceleration_partitions_scanned,\n    query_acceleration_upper_limit_scale_factor::NUMBER\n    AS query_acceleration_upper_limit_scale_factor\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.snowflake.snowflake_query_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:00.772041Z", "completed_at": "2025-06-09T18:51:00.776003Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:00.776277Z", "completed_at": "2025-06-09T18:51:02.088001Z"}], "thread_id": "Thread-19", "execution_time": 1.3682959079742432, "adapter_response": {}, "message": "Database Error in model workday_absence_source (models/sources/workday/workday_absence_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,831)..Location(1,838)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,839)..Location(1,844)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,848)..Location(1,858)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"time_off_details_group\", quote_style: None, span: Span(Location(1,859)..Location(1,881)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,887)..Location(1,888)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/workday_absence_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.workday_absence_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.workday.time_off\n  WHERE NOT _fivetran_deleted\n\n),\n\nabsence AS (\n\n  SELECT\n    employee_id,\n    worker_workday_id,\n    d.value['Absence_Workday_ID']::VARCHAR      AS absence_workday_id,\n    d.value['Time_Off_Date']::DATE              AS time_off_date,\n    d.value['Time_Off_Type']::VARCHAR           AS time_off_type,\n    d.value['Reason']::VARCHAR                  AS time_off_reason,\n    d.value['Hours_Taken']::NUMERIC             AS hours_taken,\n    d.value['Scheduled_Work_Hours']::NUMERIC    AS scheduled_work_hours,\n    d.value['FTE']::FLOAT                       AS fte_percent,\n    d.value['Date_and_Time_Approved']::DATETIME AS datetime_approved,\n    d.value['Country']::VARCHAR                 AS country,\n    _fivetran_synced,\n    _fivetran_deleted\n  FROM source\n  INNER JOIN LATERAL FLATTEN(INPUT => PARSE_JSON(time_off_details_group)) AS d\n\n)\n\nSELECT *\nFROM absence\nWHERE hours_taken > 0            --0 for cancelled requests\n  AND scheduled_work_hours > 0   --0 for team members who terminated prior to time off date", "relation_name": "EMBUCKET.workday.workday_absence_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:57.628790Z", "completed_at": "2025-06-09T18:50:57.633109Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:57.633448Z", "completed_at": "2025-06-09T18:51:01.570647Z"}], "thread_id": "Thread-32", "execution_time": 3.9424800872802734, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_ta_team_assignment_source", "compiled": true, "compiled_code": "WITH source AS (\n\n        SELECT * \n        FROM EMBUCKET.sheetload.ta_team_assignment\n\n        )\n        SELECT * \n        FROM source", "relation_name": "EMBUCKET.sheetload.sheetload_ta_team_assignment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:01.171389Z", "completed_at": "2025-06-09T18:51:01.175065Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:01.175470Z", "completed_at": "2025-06-09T18:51:02.162409Z"}], "thread_id": "Thread-26", "execution_time": 1.0300538539886475, "adapter_response": {}, "message": "Database Error in model workday_cost_centers_snapshots_source (models/sources/workday/workday_cost_centers_snapshots_source.sql)\n  000200: DataFusion error: Error during planning: Cannot infer common argument type for comparison operation Boolean = Int64\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/workday_cost_centers_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.workday_cost_centers_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.snapshots.cost_centers_snapshots\n\n),\n\nfinal AS (\n\n  SELECT\n    report_effective_date::DATE                  AS report_effective_date,\n    dept_workday_id::VARCHAR                     AS dept_workday_id,\n    department_name::VARCHAR                     AS department_name,\n    division::VARCHAR                            AS division,\n    division_workday_id::VARCHAR                 AS division_workday_id,\n    cost_center_workday_id::VARCHAR              AS cost_center_workday_id,\n    cost_center::VARCHAR                         AS cost_center,\n    dept_inactive::BOOLEAN                       AS dept_inactive,\n    IFF(dept_inactive::BOOLEAN = 0, TRUE, FALSE) AS is_dept_active,\n    dbt_valid_from::TIMESTAMP                    AS valid_from,\n    dbt_valid_to::TIMESTAMP                      AS valid_to\n  FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.workday.workday_cost_centers_snapshots_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.481730Z", "completed_at": "2025-06-09T18:51:02.176653Z"}], "thread_id": "Thread-29", "execution_time": 2.8168020248413086, "adapter_response": {}, "message": "Compilation Error in model snowplow_gitlab_good_events_source (models/sources/snowplow/snowplow_gitlab_good_events_source.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by model snowplow_gitlab_good_events_source (models/sources/snowplow/snowplow_gitlab_good_events_source.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.snowplow_gitlab_good_events_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.snowplow.snowplow_gitlab_good_events_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.453378Z", "completed_at": "2025-06-09T18:50:59.508639Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.519674Z", "completed_at": "2025-06-09T18:51:02.150836Z"}], "thread_id": "Thread-21", "execution_time": 2.839561939239502, "adapter_response": {}, "message": "Database Error in model staffing_history_approved_source (models/sources/workday/staffing_history_approved_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,3670)..Location(1,3677)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,3678)..Location(1,3683)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,3687)..Location(1,3697)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"staffing_history_approved\", quote_style: None, span: Span(Location(1,3698)..Location(1,3723)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,3729)..Location(1,3730)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/staffing_history_approved_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.staffing_history_approved_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.workday.staffing_history_approved\n  WHERE NOT _fivetran_deleted\n\n),\n\nrenamed AS (\n\n  SELECT\n    source.employee_id::NUMBER                                          AS employee_id,\n    d.value['WORKDAY_ID']::VARCHAR                                      AS workday_id,\n    d.value['BUSINESS_PROCESS_TYPE']::VARCHAR                           AS business_process_type,\n    d.value['BUSINESS_PROCESS_CATEGORY']::VARCHAR                       AS business_process_category,\n    d.value['BUSINESS_PROCESS_REASON']::VARCHAR                         AS business_process_reason,\n    d.value['HIRE_DATE']::DATE                                          AS hire_date,\n    d.value['TERMINATION_DATE']::DATE                                   AS termination_date,\n    d.value['COUNTRY_CURRENT']::VARCHAR                                 AS country_past,\n    d.value['COUNTRY_PROPOSED']::VARCHAR                                AS country_current,\n    d.value['REGION_CURRENT']::VARCHAR                                  AS region_past,\n    d.value['REGION_PROPOSED']::VARCHAR                                 AS region_current,\n    d.value['DEPARTMENT_ID_CURRENT']::VARCHAR                           AS department_workday_id_past,\n    d.value['DEPARTMENT_ID_PROPOSED']::VARCHAR                          AS department_workday_id_current,\n    d.value['DEPARTMENT_CURRENT']::VARCHAR                              AS department_past,\n    d.value['DEPARTMENT_PROPOSED']::VARCHAR                             AS department_current,\n    d.value['EMPL_TYPE_CURRENT']::VARCHAR                               AS employee_type_past,\n    d.value['EMPL_TYPE_PROPOSED']::VARCHAR                              AS employee_type_current,\n    d.value['ENTITY_CURRENT']::VARCHAR                                  AS entity_past,\n    d.value['ENTITY_PROPOSED']::VARCHAR                                 AS entity_current,\n    d.value['JOB_CODE_CURRENT']::VARCHAR                                AS job_code_past,\n    d.value['JOB_CODE_PROPOSED']::VARCHAR                               AS job_code_current,\n    d.value['JOB_SPECIALTY_MULTI_CURRENT']::VARCHAR                     AS job_specialty_multi_past,\n    d.value['JOB_SPECIALTY_MULTI_PROPOSED']::VARCHAR                    AS job_specialty_multi_current,\n    d.value['JOB_SPECIALTY_SINGLE_CURRENT']::VARCHAR                    AS job_specialty_single_past,\n    d.value['JOB_SPECIALTY_SINGLE_PROPOSED']::VARCHAR                   AS job_specialty_single_current,\n    d.value['LOCALITY_CURRENT']::VARCHAR                                AS locality_past,\n    d.value['LOCALITY_PROPOSED']::VARCHAR                               AS locality_current,\n    d.value['MANAGER_CURRENT']::VARCHAR                                 AS manager_past,\n    d.value['MANAGER_PROPOSED']::VARCHAR                                AS manager_current,\n    d.value['SUPORG_CURRENT']::VARCHAR                                  AS suporg_past,\n    d.value['SUPORG_PROPOSED']::VARCHAR                                 AS suporg_current,\n    d.value['TEAM_ID_CURRENT']::VARCHAR                                 AS team_id_past,\n    d.value['TEAM_ID_PROPOSED']::VARCHAR                                AS team_id_current,\n    d.value['TEAM_WORKDAY_ID_CURRENT']::VARCHAR                         AS team_workday_id_past,\n    d.value['TEAM_WORKDAY_ID_PROPOSED']::VARCHAR                        AS team_workday_id_current,\n    d.value['JOB_WORKDAY_ID_CURRENT']::VARCHAR                          AS job_workday_id_past,\n    d.value['JOB_WORKDAY_ID_PROPOSED']::VARCHAR                         AS job_workday_id_current,\n    d.value['JOB_TITLE_CURRENT']::VARCHAR                               AS job_title_past,\n    d.value['JOB_TITLE_PROPOSED']::VARCHAR                              AS job_title_current,\n    d.value['JOB_TITLE_PROPOSED_IS_JOB_PROFILE_PROPOSED']::BOOLEAN      AS does_job_title_current_match_profile,\n    d.value['BUSINESS_TITLE_CURRENT']::VARCHAR                          AS business_title_past,\n    d.value['BUSINESS_TITLE_PROPOSED']::VARCHAR                         AS business_title_current,\n    d.value['BUSINESS_TITLE_PROPOSED_IS_JOB_PROFILE_PROPOSED']::BOOLEAN AS does_business_title_current_match_profile,\n    d.value['DATE_TIME_INITIATED']::TIMESTAMP                           AS date_time_initiated,\n    d.value['EFFECTIVE_DATE']::DATE                                     AS effective_date,\n    IFF(business_process_type IN (\n\t\t  'Change Organization Assignments for Worker',\n      'Move Worker (By Organization)'\n\t\t),0,1)                                                              AS process_rank\n  FROM source\n  INNER JOIN LATERAL FLATTEN(INPUT => PARSE_JSON(staffing_history_approved)) AS d\n\n), \n\nfinal AS (\n\nSELECT * EXCLUDE(process_rank)\nFROM renamed\nWHERE effective_date <= CURRENT_DATE()\nQUALIFY ROW_NUMBER() OVER(PARTITION BY employee_id, effective_date, date_time_initiated ORDER BY process_rank DESC) = 1\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.workday.staffing_history_approved_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.379671Z", "completed_at": "2025-06-09T18:51:01.971714Z"}], "thread_id": "Thread-13", "execution_time": 2.644413948059082, "adapter_response": {}, "message": "Compilation Error in model snowplow_gitlab_good_events_sample_source (models/sources/snowplow/snowplow_gitlab_good_events_sample_source.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by model snowplow_gitlab_good_events_sample_source (models/sources/snowplow/snowplow_gitlab_good_events_sample_source.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.snowplow_gitlab_good_events_sample_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.snowplow.snowplow_gitlab_good_events_sample_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:00.516903Z", "completed_at": "2025-06-09T18:51:00.538090Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:00.541771Z", "completed_at": "2025-06-09T18:51:02.133722Z"}], "thread_id": "Thread-12", "execution_time": 1.6601178646087646, "adapter_response": {}, "message": "Database Error in model usage_ping_metrics_source (models/sources/gitlab_data_yaml/usage_ping_metrics_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,294)..Location(1,301)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,302)..Location(1,307)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,311)..Location(1,321)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,322)..Location(1,330)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,333)..Location(1,338)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,342)..Location(1,346)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,351)..Location(1,352)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/usage_ping_metrics_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.usage_ping_metrics_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_data_yaml.usage_ping_metrics\n\n), intermediate AS (\n\n    SELECT\n      d.value                                 AS data_by_row,\n      uploaded_at,\n      date_trunc('day', uploaded_at)::date    AS snapshot_date\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n     SELECT \n      data_by_row['key_path']::TEXT                                                                     AS metrics_path,\n      data_by_row['data_source']::TEXT                                                                  AS data_source,\n      data_by_row['data_category']::TEXT                                                                AS data_category,\n      data_by_row['description']::TEXT                                                                  AS description,\n      data_by_row['instrumentation_class']::TEXT                                                        AS instrumentation_class,\n      data_by_row['product_group']::TEXT                                                                AS product_group,\n      data_by_row['milestone']::TEXT                                                                    AS milestone,\n      data_by_row['skip_validation']::TEXT                                                              AS skip_validation,\n      data_by_row['status']::TEXT                                                                       AS metrics_status,\n      data_by_row['tiers']                                                                              AS tier,\n      data_by_row['time_frame']::TEXT                                                                   AS time_frame,\n      data_by_row['value_type']::TEXT                                                                   AS value_type,\n      data_by_row['performance_indicator_type']                                                         AS performance_indicator_type,\n      ARRAY_CONTAINS( 'gmau'::VARIANT , data_by_row['performance_indicator_type'])                      AS is_gmau,\n      ARRAY_CONTAINS( 'smau'::VARIANT , data_by_row['performance_indicator_type'])                      AS is_smau,\n      ARRAY_CONTAINS( 'paid_gmau'::VARIANT , data_by_row['performance_indicator_type'])                 AS is_paid_gmau,\n      ARRAY_CONTAINS( 'umau'::VARIANT , data_by_row['performance_indicator_type'])                      AS is_umau,\n      ARRAY_CONTAINS( 'customer_health_score'::VARIANT , data_by_row['performance_indicator_type'])     AS is_health_score_metric,\n      ARRAY_CONTAINS( 'lighthouse'::VARIANT , data_by_row['performance_indicator_type'])                AS is_lighthouse_metric,\n      ARRAY_CONTAINS( 'leading_indicator'::VARIANT , data_by_row['performance_indicator_type'])         AS is_leading_indicator_metric,\n      snapshot_date,\n      uploaded_at,\n      data_by_row\n    FROM intermediate\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_data_yaml.usage_ping_metrics_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:00.529402Z", "completed_at": "2025-06-09T18:51:00.539897Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:00.553508Z", "completed_at": "2025-06-09T18:51:02.160968Z"}], "thread_id": "Thread-14", "execution_time": 1.6885020732879639, "adapter_response": {}, "message": "Database Error in model test_stats_e2e_source (models/sources/e2e_metrics/test_stats_e2e_source.sql)\n  000200: DataFusion error: Schema error: No field named test_stats_id. Valid fields are source.payload, source.uploaded_at.\n  compiled code at target/run/gitlab_snowflake/models/sources/e2e_metrics/test_stats_e2e_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.test_stats_e2e_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT\n    PARSE_JSON(payload) AS payload,\n    uploaded_at\n  FROM EMBUCKET.e2e_metrics.all_test_stats\n\n),\n\nfinal AS (\n\n  SELECT\n    payload:fields.api_fabrication::NUMBER    AS api_fabrication,\n    payload:fields.failure_exception::VARCHAR AS failure_exception,\n    payload:fields.failure_issue::VARCHAR     AS failure_issue,\n    payload:fields.id::VARCHAR                AS test_stats_id,\n    payload:fields.job_id::VARCHAR            AS job_id,\n    payload:fields.import_time::VARCHAR       AS import_time,\n    payload:fields.job_url::VARCHAR           AS job_url,\n    payload:fields.pipeline_id::VARCHAR       AS pipeline_id,\n    payload:fields.pipeline_url::VARCHAR      AS pipeline_url,\n    payload:fields.run_time::NUMBER           AS run_time,\n    payload:fields.total_fabrication::NUMBER  AS total_fabrication,\n    payload:fields.ui_fabrication::NUMBER     AS ui_fabrication,\n    payload:name::VARCHAR                     AS name,\n    payload:time::TIMESTAMP                   AS time,\n    payload:tags.blocking::BOOLEAN            AS is_blocking,\n    payload:tags.file_path::VARCHAR           AS tags_file_path,\n    payload:tags.import_repo::VARCHAR         AS tags_import_repo,\n    payload:tags.import_type::VARCHAR         AS tags_import_type,\n    payload:tags.merge_request::BOOLEAN       AS is_merge_request,\n    payload:tags.job_name::VARCHAR            AS tags_job_name,\n    payload:tags.name::VARCHAR                AS tags_tags_name,\n    payload:tags.product_group::VARCHAR       AS tags_product_group,\n    payload:tags.quarantined::BOOLEAN         AS is_quarantined,\n    payload:tags.run_type::VARCHAR            AS tags_run_type,\n    payload:tags.smoke::BOOLEAN               AS is_smoke,\n    payload:tags.stage::VARCHAR               AS tags_stage,\n    payload:tags.status::VARCHAR              AS tags_status,\n    payload:tags.testcase::VARCHAR            AS tags_testcase,\n    uploaded_at                               AS uploaded_at,\n    md5(cast(coalesce(cast(TEST_STATS_ID as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_TESTCASE as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_FILE_PATH as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(NAME as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_PRODUCT_GROUP as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_STAGE as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(JOB_ID as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_JOB_NAME as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(JOB_URL as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(PIPELINE_ID as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(PIPELINE_URL as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(IS_MERGE_REQUEST as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(IS_SMOKE as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(IS_QUARANTINED as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(RUN_TIME as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_RUN_TYPE as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TAGS_STATUS as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(UI_FABRICATION as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(API_FABRICATION as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(TOTAL_FABRICATION as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(UPLOADED_AT as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS combined_composite_keys\n  FROM source\n)\n\nSELECT *\nFROM final\nQUALIFY ROW_NUMBER() OVER (PARTITION BY combined_composite_keys ORDER BY uploaded_at DESC) = 1", "relation_name": "EMBUCKET.e2e_metrics.test_stats_e2e_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:00.434672Z", "completed_at": "2025-06-09T18:51:00.438357Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:00.438625Z", "completed_at": "2025-06-09T18:51:02.169486Z"}], "thread_id": "Thread-7", "execution_time": 1.7689008712768555, "adapter_response": {}, "message": "Database Error in model team_yaml_source (models/sources/gitlab_data_yaml/team_yaml_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,383)..Location(1,390)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,391)..Location(1,396)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,400)..Location(1,410)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"jsontext\", quote_style: None, span: Span(Location(1,411)..Location(1,419)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,422)..Location(1,427)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,431)..Location(1,435)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"d\", quote_style: None, span: Span(Location(1,440)..Location(1,441)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_data_yaml/team_yaml_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.team_yaml_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *,\n        RANK() OVER (PARTITION BY DATE_TRUNC('day', uploaded_at) ORDER BY uploaded_at DESC) AS rank\n    FROM EMBUCKET.gitlab_data_yaml.team\n    ORDER BY uploaded_at DESC\n\n), intermediate AS (\n\n    SELECT d.value                          AS data_by_row,\n    date_trunc('day', uploaded_at)::DATE    AS snapshot_date,\n    rank\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(jsontext), OUTER => TRUE) d\n\n), renamed AS (\n\n    SELECT\n      data_by_row['departments']::ARRAY     AS departments,\n      data_by_row['gitlab']::VARCHAR        AS gitlab_username,\n      data_by_row['name']::VARCHAR          AS name,\n      data_by_row['projects']::VARCHAR      AS projects,\n      data_by_row['slug']::VARCHAR          AS yaml_slug,\n      data_by_row['type']::VARCHAR          AS type,\n      snapshot_date,\n      rank\n    FROM intermediate\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_data_yaml.team_yaml_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:54.732713Z", "completed_at": "2025-06-09T18:50:54.737283Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:54.737600Z", "completed_at": "2025-06-09T18:51:03.741791Z"}], "thread_id": "Thread-6", "execution_time": 9.010349988937378, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_sales_dev_targets_fy25_sources", "compiled": true, "compiled_code": "WITH source AS (\n\n        SELECT * \n        FROM EMBUCKET.sheetload.sales_dev_targets_fy25\n\n        )\n        SELECT * \n        FROM source", "relation_name": "EMBUCKET.sheetload.sheetload_sales_dev_targets_fy25_sources", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:00.671543Z", "completed_at": "2025-06-09T18:51:00.674778Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:00.675061Z", "completed_at": "2025-06-09T18:51:03.779858Z"}], "thread_id": "Thread-9", "execution_time": 3.1153807640075684, "adapter_response": {}, "message": "Database Error in model version_versions_source (models/sources/version/version_versions_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/version/version_versions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.version_versions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.version_db.versions\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY version ORDER BY updated_at DESC) = 1\n\n\n), renamed AS (\n\n    SELECT\n      id::NUMBER            AS id,\n      version::VARCHAR      AS version,\n      vulnerable::VARCHAR   AS is_vulnerable,\n      created_at::TIMESTAMP AS created_at,\n      updated_at::TIMESTAMP AS updated_at\n    FROM source  \n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.version_db.version_versions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.389153Z", "completed_at": "2025-06-09T18:50:59.430748Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.460104Z", "completed_at": "2025-06-09T18:51:03.773999Z"}], "thread_id": "Thread-28", "execution_time": 4.439826011657715, "adapter_response": {}, "message": "Database Error in model tableau_fivetran_data_source_source (models/sources/tableau_fivetran/tableau_fivetran_data_source_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/tableau_fivetran/tableau_fivetran_data_source_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.tableau_fivetran_data_source_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tableau_fivetran.data_source\n\n), renamed AS (\n\n    SELECT\n        id::VARCHAR                        AS data_source_id,\n        owner_id::VARCHAR                  AS owner_id,\n        project_id::VARCHAR                AS project_id,\n        has_extract::BOOLEAN               AS has_extract,\n        is_certified::BOOLEAN              AS is_certified,\n        created_at::TIMESTAMP              AS created_at,\n        description::VARCHAR               AS data_source_description,\n        use_remote_query_agent::BOOLEAN    AS use_remote_query,\n        updated_at::TIMESTAMP              AS data_source_updated_at,\n        name::VARCHAR                      AS data_source_name,\n        content_url::VARCHAR               AS data_source_content_url,\n        webpage_url::VARCHAR               AS webpage_url\n\n    FROM source\n    WHERE NOT _fivetran_deleted\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.tableau_fivetran.tableau_fivetran_data_source_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.350651Z", "completed_at": "2025-06-09T18:50:59.388246Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.416147Z", "completed_at": "2025-06-09T18:51:03.869036Z"}], "thread_id": "Thread-8", "execution_time": 4.57266902923584, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.snowplow_fishtown_bad_events_source", "compiled": true, "compiled_code": "WITH source as (\n\n    SELECT *\n    FROM EMBUCKET.snowplow.bad_events\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.snowplow.snowplow_fishtown_bad_events_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.302247Z", "completed_at": "2025-06-09T18:50:59.341588Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.373243Z", "completed_at": "2025-06-09T18:51:03.870860Z"}], "thread_id": "Thread-27", "execution_time": 4.659392833709717, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.snowflake_contract_rates_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.seed_data.snowflake_contract_rates\n\n), \n\nrenamed AS (\n\n  SELECT\n    effective_date::DATE                    AS contract_rate_effective_date,\n    rate::FLOAT                            AS contract_rate\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.snowflake.snowflake_contract_rates_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.321276Z", "completed_at": "2025-06-09T18:50:59.364301Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.398914Z", "completed_at": "2025-06-09T18:51:03.872184Z"}], "thread_id": "Thread-15", "execution_time": 4.621776819229126, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.snowflake_non_team_member_user_type_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.seed_data.snowflake_non_team_member_user_types\n\n),\n\nrenamed AS (\n\n  SELECT\n    user_type::VARCHAR  AS user_type,\n    user_name::VARCHAR  AS user_name,\n    division::VARCHAR   AS division,\n    department::VARCHAR AS department\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.snowflake.snowflake_non_team_member_user_type_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.410626Z", "completed_at": "2025-06-09T18:50:59.444497Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.477405Z", "completed_at": "2025-06-09T18:51:03.883304Z"}], "thread_id": "Thread-24", "execution_time": 4.558553218841553, "adapter_response": {}, "message": "Database Error in model tableau_fivetran_project_source (models/sources/tableau_fivetran/tableau_fivetran_project_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/tableau_fivetran/tableau_fivetran_project_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.tableau_fivetran_project_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tableau_fivetran.project\n\n), renamed AS (\n\n    SELECT\n        id::VARCHAR                                       AS project_id,\n        controlling_permissions_project_id::VARCHAR       AS controlling_permissions_project_id,\n        owner_id::VARCHAR                                 AS owner_id,\n        parent_project_id::VARCHAR                        AS parent_project_id,\n        created_at::TIMESTAMP                             AS created_at,\n        description::VARCHAR                              AS project_description,\n        content_permission::VARCHAR                       AS content_permission,\n        updated_at::TIMESTAMP                             AS updated_at,\n        name::VARCHAR                                     AS project_name\n\n    FROM source\n    WHERE NOT _fivetran_deleted\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.tableau_fivetran.tableau_fivetran_project_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.314840Z", "completed_at": "2025-06-09T18:50:59.359845Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.425727Z", "completed_at": "2025-06-09T18:51:04.069249Z"}], "thread_id": "Thread-16", "execution_time": 4.771282196044922, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.snowplow_fishtown_good_events_sample_source", "compiled": true, "compiled_code": "WITH source as (\n\n    SELECT *\n    FROM EMBUCKET.snowplow.fishtown_events_sample\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.snowplow.snowplow_fishtown_good_events_sample_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:01.272284Z", "completed_at": "2025-06-09T18:51:01.276317Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:01.276597Z", "completed_at": "2025-06-09T18:51:04.673031Z"}], "thread_id": "Thread-17", "execution_time": 3.4063589572906494, "adapter_response": {}, "message": "Database Error in model workday_directory_source (models/sources/workday/workday_directory_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/workday_directory_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.workday_directory_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM \"EMBUCKET\".snapshots.workday_employee_directory_snapshots\n  \n),\n\nrenamed AS (\n\n  SELECT\n    employee_id::NUMBER AS employee_id,\n    work_email::VARCHAR AS work_email,\n    full_name::VARCHAR AS full_name,\n    job_title::VARCHAR AS job_title,\n    supervisor::VARCHAR AS supervisor,\n    _fivetran_synced::TIMESTAMP AS uploaded_at,\n    dbt_valid_from::TIMESTAMP AS valid_from,\n    dbt_valid_to::TIMESTAMP AS valid_to,\n    IFF(dbt_valid_to IS NULL,TRUE,FALSE) AS is_current\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.workday.workday_directory_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.293130Z", "completed_at": "2025-06-09T18:50:59.311690Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.345598Z", "completed_at": "2025-06-09T18:51:05.357835Z"}], "thread_id": "Thread-22", "execution_time": 6.072389841079712, "adapter_response": {}, "message": "Database Error in model snowflake_warehouse_metering_history_source (models/sources/snowflake/snowflake_warehouse_metering_history_source.sql)\n  000200: DataFusion error: Error during planning: table 'snowflake.account_usage.warehouse_metering_history' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/snowflake/snowflake_warehouse_metering_history_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.snowflake_warehouse_metering_history_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM snowflake.account_usage.warehouse_metering_history\n\n),\n\nrenamed AS (\n\n  SELECT\n    start_time::TIMESTAMP                     AS warehouse_metering_start_at,\n    end_time::TIMESTAMP                       AS warehouse_metering_end_at,\n    warehouse_id::INT                         AS warehouse_id,\n    warehouse_name::VARCHAR                   AS warehouse_name,\n    credits_used::NUMBER(38,9)                AS credits_used_total,\n    credits_used_compute::NUMBER(38,9)        AS credits_used_compute,\n    credits_used_cloud_services::NUMBER(38,9) AS credits_used_cloud_services\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.snowflake.snowflake_warehouse_metering_history_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:02.367802Z", "completed_at": "2025-06-09T18:51:02.386482Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:02.463623Z", "completed_at": "2025-06-09T18:51:11.079566Z"}], "thread_id": "Thread-31", "execution_time": 8.719810009002686, "adapter_response": {}, "message": "Database Error in model workday_hcm_job_family_source (models/sources/workday/workday_hcm_job_family_source.sql)\n  000200: DataFusion error: Error during planning: Cannot infer common argument type for comparison operation Boolean = Int64\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/workday_hcm_job_family_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.workday_hcm_job_family_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".workday_hcm.job_family\n  WHERE NOT _fivetran_deleted\n\n),\n\nfinal AS (\n\n  SELECT\n    id::VARCHAR                             AS id,\n    summary::VARCHAR                        AS summary,\n    IFF(inactive::BOOLEAN = 0, TRUE, FALSE) AS is_job_family_active,\n    effective_date::DATE                    AS effective_date,\n    job_family_code::VARCHAR                AS job_family_code\n  FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.workday.workday_hcm_job_family_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:02.511286Z", "completed_at": "2025-06-09T18:51:02.534841Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:02.551584Z", "completed_at": "2025-06-09T18:51:11.173375Z"}], "thread_id": "Thread-26", "execution_time": 8.68714714050293, "adapter_response": {}, "message": "Database Error in model workday_hcm_organization_source (models/sources/workday/workday_hcm_organization_source.sql)\n  000200: DataFusion error: Error during planning: Cannot infer common argument type for comparison operation Boolean = Int64\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/workday_hcm_organization_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.workday_hcm_organization_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".workday_hcm.organization\n  WHERE NOT _fivetran_deleted\n\n),\n\nfinal AS (\n\n  SELECT\n    id::VARCHAR                                   AS id,\n    organization_code::VARCHAR                    AS organization_code,\n    name::VARCHAR                                 AS name,\n    description::VARCHAR                          AS description,\n    include_manager_in_name::BOOLEAN              AS include_manager_in_name,\n    include_organization_code_in_name::BOOLEAN    AS include_organization_code_in_name,\n    type::VARCHAR                                 AS type,\n    sub_type::VARCHAR                             AS sub_type,\n    availability_date::TIMESTAMP                  AS availability_date,\n    last_updated_date_time::TIMESTAMP             AS last_updated_date_time,\n    IFF(inactive::BOOLEAN = 0, TRUE, FALSE)       AS is_active,\n    inactive_date::DATE                           AS inactive_date,\n    manager_id::VARCHAR                           AS manager_id,\n    organization_owner_id::VARCHAR                AS organization_owner_id,\n    visibility::VARCHAR                           AS visibility,\n    external_url::VARCHAR                         AS external_url,\n    top_level_organization_id::VARCHAR            AS top_level_organization_id,\n    superior_organization_id::VARCHAR             AS superior_organization_id,\n    staffing_model::VARCHAR                       AS staffing_model,\n    location::VARCHAR                             AS location,\n    available_for_hire::BOOLEAN                   AS available_for_hire,\n    hiring_freeze::BOOLEAN                        AS hiring_freeze,\n    supervisory_position_availability_date::DATE  AS supervisory_position_availability_date,\n    supervisory_position_earliest_hire_date::DATE AS supervisory_position_earliest_hire_date,\n    supervisory_position_worker_type::VARCHAR     AS supervisory_position_worker_type,\n    supervisory_position_time_type::VARCHAR       AS supervisory_position_time_type,\n    code::VARCHAR                                 AS code,\n    _fivetran_deleted::BOOLEAN                    AS _fivetran_deleted,\n    _fivetran_synced::TIMESTAMP                   AS _fivetran_synced\n  FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.workday.workday_hcm_organization_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:02.518009Z", "completed_at": "2025-06-09T18:51:02.543896Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:02.564328Z", "completed_at": "2025-06-09T18:51:11.277261Z"}], "thread_id": "Thread-19", "execution_time": 8.800702095031738, "adapter_response": {}, "message": "Database Error in model workday_hcm_job_profile_source (models/sources/workday/workday_hcm_job_profile_source.sql)\n  000200: DataFusion error: Error during planning: Cannot infer common argument type for comparison operation Boolean = Int64\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/workday_hcm_job_profile_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.workday_hcm_job_profile_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".workday_hcm.job_profile\n  WHERE NOT _fivetran_deleted\n\n),\n\nfinal AS (\n\n  SELECT\n    id::VARCHAR                             AS job_profile_id,\n    compensation_grade_id::VARCHAR          AS compensation_grade_id,\n    job_category_id::VARCHAR                AS job_category_id,\n    IFF(inactive::BOOLEAN = 0, TRUE, FALSE) AS is_job_profile_active,\n    inactive::BOOLEAN                       AS is_inactive,\n    management_level::VARCHAR               AS management_level,\n    level::VARCHAR                          AS level,\n    title::VARCHAR                          AS title,\n    job_profile_code::VARCHAR               AS job_profile_code,\n    current_date                            AS effective_date\n    \n  FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.workday.workday_hcm_job_profile_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.285139Z", "completed_at": "2025-06-09T18:50:59.300911Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.326416Z", "completed_at": "2025-06-09T18:51:11.369347Z"}], "thread_id": "Thread-4", "execution_time": 12.089964866638184, "adapter_response": {}, "message": "Database Error in model snowflake_tables_source (models/sources/snowflake/snowflake_tables_source.sql)\n  000200: DataFusion error: Error during planning: table 'snowflake.account_usage.tables' not found\n  compiled code at target/run/gitlab_snowflake/models/sources/snowflake/snowflake_tables_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.snowflake_tables_source", "compiled": true, "compiled_code": "SELECT *\nFROM snowflake.account_usage.tables", "relation_name": "EMBUCKET.snowflake.snowflake_tables_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.407392Z", "completed_at": "2025-06-09T18:50:59.442836Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.471600Z", "completed_at": "2025-06-09T18:51:11.386500Z"}], "thread_id": "Thread-1", "execution_time": 12.046924114227295, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.snowplow_gitlab_bad_events_source", "compiled": true, "compiled_code": "WITH source as (\n\n    SELECT *\n    FROM EMBUCKET.snowplow.gitlab_bad_events\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.snowplow.snowplow_gitlab_bad_events_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.394652Z", "completed_at": "2025-06-09T18:50:59.432497Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.465230Z", "completed_at": "2025-06-09T18:51:11.411312Z"}], "thread_id": "Thread-2", "execution_time": 12.094940185546875, "adapter_response": {}, "message": "Database Error in model tableau_fivetran_extract_refresh_task_source (models/sources/tableau_fivetran/tableau_fivetran_extract_refresh_task_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/tableau_fivetran/tableau_fivetran_extract_refresh_task_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.tableau_fivetran_extract_refresh_task_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tableau_fivetran.extract_refresh_task\n\n), renamed AS (\n\n    SELECT\n        id::VARCHAR                                           AS schedule_id,\n        schedule_frequency_details_interval_weekday::VARIANT  AS schedule_frequency_details_interval_weekday,\n        datasource_id::VARCHAR                                AS datasource_id,\n        workbook_id::VARCHAR                                  AS workbook_id,\n        schedule_next_run_at::TIMESTAMP                       AS schedule_next_run_at,\n        schedule_frequency::VARCHAR                           AS schedule_frequency,\n        priority::NUMBER                                      AS priority,\n        type::VARCHAR                                         AS schedule_type,\n        schedule_frequency_details_start::VARCHAR             AS schedule_frequency_details_start,\n        consecutive_failed_count::NUMBER                      AS consecutive_failed_count\n\n    FROM source\n    WHERE NOT _fivetran_deleted\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.tableau_fivetran.tableau_fivetran_extract_refresh_task_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.356480Z", "completed_at": "2025-06-09T18:50:59.406991Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.436624Z", "completed_at": "2025-06-09T18:51:11.441790Z"}], "thread_id": "Thread-5", "execution_time": 12.156095027923584, "adapter_response": {}, "message": "Database Error in model tableau_fivetran_workbook_source (models/sources/tableau_fivetran/tableau_fivetran_workbook_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/tableau_fivetran/tableau_fivetran_workbook_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.tableau_fivetran_workbook_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM EMBUCKET.tableau_fivetran.workbook\n),\n\nrenamed AS (\n  SELECT\n    id::VARCHAR                             AS workbook_id,\n    owner_id::VARCHAR                       AS owner_id,\n    project_id::VARCHAR                     AS project_id,\n    show_tab::BOOLEAN                       AS show_tab,\n    created_at::TIMESTAMP                   AS created_at,\n    webpage_url::VARCHAR                    AS webpage_url,\n    description::VARCHAR                    AS workbook_description,\n    location_id::VARCHAR                    AS location_id,\n    location_type::VARCHAR                  AS location_type,\n    location_name::VARCHAR                  AS project_name,\n    updated_at::TIMESTAMP                   AS updated_at,\n    size::NUMBER                            AS workbook_size,\n    default_view_id::VARCHAR                AS default_view_id,\n    name::VARCHAR                           AS workbook_name,\n    content_url::VARCHAR                    AS workbook_content_url\n  \n  FROM source\n  WHERE NOT _fivetran_deleted\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.tableau_fivetran.tableau_fivetran_workbook_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:02.505822Z", "completed_at": "2025-06-09T18:51:02.537036Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:02.560501Z", "completed_at": "2025-06-09T18:51:13.218091Z"}], "thread_id": "Thread-32", "execution_time": 10.77580213546753, "adapter_response": {}, "message": "Database Error in model workday_hcm_organization_hierarchy_detail_source (models/sources/workday/workday_hcm_organization_hierarchy_detail_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/workday_hcm_organization_hierarchy_detail_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.workday_hcm_organization_hierarchy_detail_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".workday_hcm.organization_hierarchy_detail\n  WHERE NOT _fivetran_deleted\n\n),\n\nfinal AS (\n\n  SELECT\n    organization_id::VARCHAR        AS organization_id,\n    type::VARCHAR                   AS type,\n    linked_organization_id::VARCHAR AS linked_organization_id,\n    _fivetran_deleted::BOOLEAN      AS _fivetran_deleted,\n    _fivetran_synced::TIMESTAMP     AS _fivetran_synced\n  FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.workday.workday_hcm_organization_hierarchy_detail_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:02.483336Z", "completed_at": "2025-06-09T18:51:02.503650Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:02.522845Z", "completed_at": "2025-06-09T18:51:13.224530Z"}], "thread_id": "Thread-30", "execution_time": 10.844249963760376, "adapter_response": {}, "message": "Database Error in model workday_employee_mapping_source (models/sources/workday/workday_employee_mapping_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/workday_employee_mapping_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.workday_employee_mapping_source", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM \"EMBUCKET\".snapshots.workday_employee_mapping_snapshots\n  \n),\n\nrenamed AS (\n\n  SELECT\n    employee_id::NUMBER AS employee_id,\n    employment_history_status::VARCHAR AS employment_history_status,\n    employee_status_date::DATE AS employee_status_date,\n    cost_center::VARCHAR AS cost_center,\n    last_name::VARCHAR AS last_name,\n    first_name::VARCHAR AS first_name,\n    region::VARCHAR AS region,\n    hire_date::DATE AS hire_date,\n    country::VARCHAR AS country,\n    greenhouse_candidate_id::NUMBER AS greenhouse_candidate_id,\n    gender::VARCHAR AS gender,\n    job_role::VARCHAR AS job_role,\n    gender_dropdown::VARCHAR AS gender_dropdown,\n    date_of_birth::DATE AS date_of_birth,\n    job_grade::NUMBER AS job_grade,\n    pay_frequency::FLOAT AS pay_frequency,\n    age::NUMBER AS age,\n    jobtitle_speciality_single_select::VARCHAR AS jobtitle_speciality_single_select,\n    ethnicity::VARCHAR AS ethnicity,\n    jobtitle_speciality_multi_select::VARCHAR AS jobtitle_speciality_multi_select,\n    gitlab_username::VARCHAR AS gitlab_username,\n    sales_geo_differential::VARCHAR AS sales_geo_differential,\n    locality::VARCHAR AS locality,\n    termination_date::DATE AS termination_date,\n    nationality::VARCHAR AS nationality,\n    _fivetran_synced::TIMESTAMP AS uploaded_at,\n    dbt_valid_from::TIMESTAMP AS valid_from,\n    dbt_valid_to::TIMESTAMP AS valid_to,\n    IFF(dbt_valid_to IS NULL,TRUE,FALSE) AS is_current\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.workday.workday_employee_mapping_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:02.494170Z", "completed_at": "2025-06-09T18:51:02.535345Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:02.556021Z", "completed_at": "2025-06-09T18:51:13.269327Z"}], "thread_id": "Thread-3", "execution_time": 10.87453007698059, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.workday_hcm_job_family_job_profile_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".workday_hcm.job_family_job_profile\n  WHERE NOT _fivetran_deleted\n\n),\n\nfinal AS (\n\n  SELECT\n    job_profile_id::VARCHAR AS job_profile_id,\n    job_family_id::VARCHAR  AS job_family_id\n  FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.workday.workday_hcm_job_family_job_profile_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:02.537377Z", "completed_at": "2025-06-09T18:51:02.570247Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:02.598013Z", "completed_at": "2025-06-09T18:51:13.235403Z"}], "thread_id": "Thread-13", "execution_time": 10.745596885681152, "adapter_response": {}, "message": "Database Error in model workday_supervisory_organizations_source (models/sources/workday/workday_supervisory_organizations_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/workday/workday_supervisory_organizations_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.workday_supervisory_organizations_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".snapshots.workday_supervisory_org_snapshots\n\n), renamed AS (\n\n  SELECT\n    team_id::VARCHAR                  AS team_id,\n    team_hierarchy_level::NUMBER      AS team_hierarchy_level,\n    team_members_count::NUMBER        AS team_members_count,\n    team_manager_inherited::BOOLEAN   AS is_team_manager_inherited,\n    team_inactivated::BOOLEAN          AS is_team_inactivated,\n    team_manager_name::VARCHAR        AS team_manager_name,\n    team_name::VARCHAR                AS team_name,\n    team_manager_name_id::NUMBER      AS team_manager_name_id,\n    team_superior_team_id::VARCHAR    AS team_superior_team_id,\n    team_inactivated_date::TIMESTAMP  AS team_inactivated_date,\n    _fivetran_deleted::BOOLEAN        AS is_deleted,\n    _fivetran_synced::TIMESTAMP       AS uploaded_at,\n    dbt_valid_from::TIMESTAMP         AS valid_from,\n    dbt_valid_to::TIMESTAMP           AS valid_to\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.workday.workday_supervisory_organizations_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:02.529131Z", "completed_at": "2025-06-09T18:51:02.551291Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:02.572640Z", "completed_at": "2025-06-09T18:51:13.273136Z"}], "thread_id": "Thread-14", "execution_time": 10.756444931030273, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_attainment_measure_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_attainment_measure\n\n), renamed AS (\n\n    SELECT\n\n      attainment_measure_id::VARCHAR                AS attainment_measure_id,\n      created_by_id::FLOAT                          AS created_by_id,\n      created_date::VARCHAR                         AS created_date,\n      description::VARCHAR                          AS description,\n      effective_end_period_id::FLOAT                AS effective_end_period_id,\n      effective_start_period_id::FLOAT              AS effective_start_period_id,\n      history_uuid::VARCHAR                         AS history_uuid,\n      is_active::VARCHAR                            AS is_active,\n      master_attainment_measure_id::VARCHAR         AS master_attainment_measure_id,\n      modified_by_id::FLOAT                         AS modified_by_id,\n      modified_date::VARCHAR                        AS modified_date,\n      name::VARCHAR                                 AS name,\n      period_type::VARCHAR                          AS period_type\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_attainment_measure_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:03.806625Z", "completed_at": "2025-06-09T18:51:03.829510Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:03.830088Z", "completed_at": "2025-06-09T18:51:13.368323Z"}], "thread_id": "Thread-28", "execution_time": 9.564388751983643, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_credit_adjustment_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_credit_adjustment\n\n), renamed AS (\n\n    SELECT\n\n      amount::FLOAT                         AS amount,\n      amount_unit_type_id::FLOAT            AS amount_unit_type_id,\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      credit_adjustment_id::FLOAT           AS credit_adjustment_id,\n      credit_id::FLOAT                      AS credit_id,\n      is_active::VARCHAR                    AS is_active,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      period_id::FLOAT                      AS period_id,\n      reason_id::FLOAT                      AS reason_id\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_credit_adjustment_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:03.895120Z", "completed_at": "2025-06-09T18:51:03.902895Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:03.904044Z", "completed_at": "2025-06-09T18:51:13.477527Z"}], "thread_id": "Thread-27", "execution_time": 9.593347072601318, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_credit_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_credit\n\n), renamed AS (\n\n    SELECT\n\n      amount::FLOAT                                 AS amount,\n      amount_display_symbol::VARCHAR                AS amount_display_symbol,\n      amount_unit_type_id::FLOAT                    AS amount_unit_type_id,\n      batch_number::FLOAT                           AS batch_number,\n      business_group_id::FLOAT                      AS business_group_id,\n      created_by_id::FLOAT                          AS created_by_id,\n      created_by_name::VARCHAR                      AS created_by_name,\n      created_date::VARCHAR                         AS created_date,\n      credit_id::FLOAT                              AS credit_id,\n      credit_type_id::FLOAT                         AS credit_type_id,\n      credit_type_name::VARCHAR                     AS credit_type_name,\n      customer_id::FLOAT                            AS customer_id,\n      customer_name::VARCHAR                        AS customer_name,\n      eff_participant_id::FLOAT                     AS eff_participant_id,\n      eff_position_id::FLOAT                        AS eff_position_id,\n      estimated_rel_date::VARCHAR                   AS estimated_rel_date,\n      ever_on_hold::VARCHAR                         AS ever_on_hold,\n      geography_id::FLOAT                           AS geography_id,\n      geography_name::VARCHAR                       AS geography_name,\n      incentive_date::VARCHAR                       AS incentive_date,\n      is_active::VARCHAR                            AS is_active,\n      is_held::VARCHAR                              AS is_held,\n      is_processed::VARCHAR                         AS is_processed,\n      is_rollable::VARCHAR                          AS is_rollable,\n      item_code::VARCHAR                            AS item_code,\n      mgr_eff_part_id::FLOAT                        AS mgr_eff_part_id,\n      mgr_eff_pos_id::FLOAT                         AS mgr_eff_pos_id,\n      mgr_master_pos_id::FLOAT                      AS mgr_master_pos_id,\n      modified_by_id::FLOAT                         AS modified_by_id,\n      modified_by_name::VARCHAR                     AS modified_by_name,\n      modified_date::VARCHAR                        AS modified_date,\n      name::VARCHAR                                 AS name,\n      order_code::VARCHAR                           AS order_code,\n      order_item_id::FLOAT                          AS order_item_id,\n      participant_id::FLOAT                         AS participant_id,\n      participant_name::VARCHAR                     AS participant_name,\n      period_id::FLOAT                              AS period_id,\n      period_name::VARCHAR                          AS period_name,\n      plan_id::FLOAT                                AS plan_id,\n      plan_name::VARCHAR                            AS plan_name,\n      position_id::FLOAT                            AS position_id,\n      position_name::VARCHAR                        AS position_name,\n      product_id::FLOAT                             AS product_id,\n      product_name::VARCHAR                         AS product_name,\n      reason_code_id::FLOAT                         AS reason_code_id,\n      reason_code_name::VARCHAR                     AS reason_code_name,\n      release_date::VARCHAR                         AS release_date,\n      release_group_id::FLOAT                       AS release_group_id,\n      rollable_on_reporting::VARCHAR                AS rollable_on_reporting,\n      rule_id::FLOAT                                AS rule_id,\n      rule_name::VARCHAR                            AS rule_name,\n      run_id::FLOAT                                 AS run_id,\n      source_credit_id::FLOAT                       AS source_credit_id,\n      source_position_id::FLOAT                     AS source_position_id,\n      src_pos_relation_type_id::FLOAT               AS src_pos_relation_type_id,\n      sub_batch_number::FLOAT                       AS sub_batch_number,\n      sub_part_key::VARCHAR                         AS sub_part_key,\n      trans_id::FLOAT                               AS trans_id\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_credit_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:02.584335Z", "completed_at": "2025-06-09T18:51:02.609690Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:02.619105Z", "completed_at": "2025-06-09T18:51:13.769011Z"}], "thread_id": "Thread-7", "execution_time": 11.232700824737549, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_commission_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_commission\n\n), renamed AS (\n\n    SELECT\n\n      commission_id::FLOAT                          AS commission_id,\n      version::FLOAT                                AS version,\n      name::VARCHAR                                 AS name,\n      is_active::VARCHAR                            AS is_active,\n      amount::FLOAT                                  AS amount,\n      amount_unit_type_id::FLOAT                     AS amount_unit_type_id,\n      amount_display_symbol::VARCHAR                 AS amount_display_symbol,\n      period_id::VARCHAR                             AS period_id,\n      period_name::VARCHAR                           AS period_name,\n      participant_id::FLOAT                          AS participant_id,\n      participant_name::VARCHAR                      AS participant_name,\n      position_id::FLOAT                             AS position_id,\n      position_name::VARCHAR                         AS position_name,\n      credit_id::FLOAT                               AS credit_id,\n      credit_name::VARCHAR                           AS credit_name,\n      order_item_id::FLOAT                           AS order_item_id,\n      item_code::VARCHAR                             AS item_code,\n      order_code::VARCHAR                            AS order_code,\n      rule_id::FLOAT                                 AS rule_id,\n      rule_name::VARCHAR                             AS rule_name,\n      is_held::VARCHAR                               AS is_held,\n      release_date::VARCHAR                          AS release_date,\n      rate_amount::FLOAT                             AS rate_amount,\n      rate_amount_unit_type_id::FLOAT                AS rate_amount_unit_type_id,\n      rate_amount_display_symbol::VARCHAR            AS rate_amount_display_symbol,\n      earning_group_id::FLOAT                        AS earning_group_id,\n      earning_group_name::VARCHAR                    AS earning_group_name,\n      reason_code_id::FLOAT                          AS reason_code_id,\n      reason_code_name::VARCHAR                      AS reason_code_name,\n      rate_table_id::FLOAT                           AS rate_table_id,\n      rate_table_name::VARCHAR                       AS rate_table_name,\n      quota_id::FLOAT                                AS quota_id,\n      quota_name::VARCHAR                            AS quota_name,\n      quota_period_type_id::FLOAT                    AS quota_period_type_id,\n      quota_period_type_name::VARCHAR                AS quota_period_type_name,\n      measure_value::FLOAT                           AS measure_value,\n      measure_value_unit_type_id::FLOAT              AS measure_value_unit_type_id,\n      attainment_value::FLOAT                        AS attainment_value,\n      attainment_value_unit_type_id::FLOAT           AS attainment_value_unit_type_id,\n      entry_number::FLOAT                            AS entry_number,\n      is_processed::VARCHAR                          AS is_processed,\n      credit_unit_type_id::FLOAT                     AS credit_unit_type_id,\n      credit_amount::FLOAT                           AS credit_amount,\n      is_credit_apply::VARCHAR                       AS is_credit_apply,\n      payment_fx::VARCHAR                            AS payment_fx,\n      trans_id::FLOAT                                AS trans_id,\n      product_id::FLOAT                              AS product_id,\n      product_name::VARCHAR                          AS product_name,\n      customer_id::FLOAT                             AS customer_id,\n      customer_name::VARCHAR                         AS customer_name,\n      geography_id::FLOAT                            AS geography_id,\n      geography_name::VARCHAR                        AS geography_name,\n      ever_on_hold::VARCHAR                          AS ever_on_hold,\n      release_group_id::FLOAT                        AS release_group_id,\n      estimated_rel_date::VARCHAR                    AS estimated_rel_date,\n      business_group_id::FLOAT                       AS business_group_id,\n      source::VARCHAR                                AS source,\n      released_amount::FLOAT                         AS released_amount,\n      held_amount::FLOAT                             AS held_amount,\n      run_id::FLOAT                                  AS run_id,\n      incentive_date::VARCHAR                        AS incentive_date,\n      eff_participant_id::FLOAT                      AS eff_participant_id,\n      eff_position_id::FLOAT                         AS eff_position_id,\n      plan_id::FLOAT                                 AS plan_id,\n      plan_name::VARCHAR                             AS plan_name,\n      credit_type_id::FLOAT                          AS credit_type_id,\n      roll_measure_value::FLOAT                      AS roll_measure_value,\n      roll_attainment_value::FLOAT                   AS roll_attainment_value,\n      credit_applied::FLOAT                          AS credit_applied,\n      rate_table_tier::FLOAT                         AS rate_table_tier,\n      created_date::VARCHAR                          AS created_date,\n      created_by_id::FLOAT                           AS created_by_id,\n      created_by_name::VARCHAR                       AS created_by_name,\n      modified_date::VARCHAR                         AS modified_date,\n      modified_by_id::FLOAT                          AS modified_by_id,\n      modified_by_name::VARCHAR                      AS modified_by_name,\n      pending_commission_amount::FLOAT               AS pending_commission_amount,\n      calculated_rate::FLOAT                         AS calculated_rate,\n      rolling_incentive_attainment::FLOAT            AS rolling_incentive_attainment,\n      incentive_attainment::FLOAT                    AS incentive_attainment,\n      pt_achieved_percentage::FLOAT                  AS pt_achieved_percentage,\n      applied_credit_amount::FLOAT                   AS applied_credit_amount,\n      ever_on_pending::VARCHAR                       AS ever_on_pending,\n      is_pending::VARCHAR                            AS is_pending,\n      attainment_measure_hash::VARCHAR               AS attainment_measure_hash,\n      paycurve_version_id::VARCHAR                   AS paycurve_version_id,\n      paycurve_name::VARCHAR                         AS paycurve_name,\n      rate_type::FLOAT                               AS rate_type\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_commission_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:02.544892Z", "completed_at": "2025-06-09T18:51:02.569294Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:02.592067Z", "completed_at": "2025-06-09T18:51:13.271400Z"}], "thread_id": "Thread-12", "execution_time": 10.783354997634888, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_attainment_measure_criteria_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_attainment_measure_criteria\n\n), renamed AS (\n\n    SELECT\n\n      attainment_measure_criteria_id::VARCHAR               AS attainment_measure_criteria_id,\n      attainment_measure_id::VARCHAR                        AS attainment_measure_id,\n      created_by_id::FLOAT                                  AS created_by_id,\n      created_date::VARCHAR                                 AS created_date,\n      criteria_id::FLOAT                                    AS criteria_id,\n      history_uuid::VARCHAR                                 AS history_uuid,\n      is_active::VARCHAR                                    AS is_active,\n      modified_by_id::FLOAT                                 AS modified_by_id,\n      modified_date::VARCHAR                                AS modified_date,\n      name::VARCHAR                                         AS name,\n      type::VARCHAR                                         AS type\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_attainment_measure_criteria_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:04.073005Z", "completed_at": "2025-06-09T18:51:04.076290Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:04.076562Z", "completed_at": "2025-06-09T18:51:14.668928Z"}], "thread_id": "Thread-16", "execution_time": 10.59778618812561, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_participant_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_xactly.xc_participant\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    participant_id::FLOAT AS participant_id,\n    version::FLOAT AS version,\n    name::VARCHAR AS name,\n    descr::VARCHAR AS descr,\n    region::VARCHAR AS region,\n    participant_type::VARCHAR AS participant_type,\n    prefix::VARCHAR AS prefix,\n    first_name::VARCHAR AS first_name,\n    middle_name::VARCHAR AS middle_name,\n    last_name::VARCHAR AS last_name,\n    employee_id::VARCHAR AS employee_id,\n    salary::FLOAT AS salary,\n    salary_unit_type_id::FLOAT AS salary_unit_type_id,\n    hire_date::VARCHAR AS hire_date,\n    termination_date::VARCHAR AS termination_date,\n    personal_target::FLOAT AS personal_target,\n    pr_target_unit_type_id::FLOAT AS pr_target_unit_type_id,\n    native_cur_unit_type_id::FLOAT AS native_cur_unit_type_id,\n    is_active::VARCHAR AS is_active,\n    user_id::FLOAT AS user_id,\n    created_date::VARCHAR AS created_date,\n    created_by_id::FLOAT AS created_by_id,\n    created_by_name::VARCHAR AS created_by_name,\n    modified_date::VARCHAR AS modified_date,\n    modified_by_id::FLOAT AS modified_by_id,\n    modified_by_name::VARCHAR AS modified_by_name,\n    entity::VARCHAR AS entity,\n    adp__file__number::VARCHAR AS adp_file_number,\n    sa__team::VARCHAR AS sa_team,\n    position__category::VARCHAR AS position_category,\n    account__owner__team::VARCHAR AS account_owner_team,\n    ramping::VARCHAR AS ramping,\n    segment::VARCHAR AS segment,\n    department::VARCHAR AS department,\n    bhr_eeid::VARCHAR AS bhr_eeid,\n    bhr__title::VARCHAR AS bhr_title,\n    bhr__emp_id::VARCHAR AS bhr_empid,\n    effective__date::VARCHAR AS effective_date,\n    annualized__variable::FLOAT AS annualized_variable,\n    personal__target__local::FLOAT AS personal_target_local,\n    salary__local::FLOAT AS salary_local,\n    annualized__variable__local::FLOAT AS annualized_variable_local,\n    semi__annual__variable__usd::FLOAT AS semi_annual_variable_usd,\n    start__date_in__role::VARCHAR AS start_date_in_role,\n    annualized__variable__unit_type_id::FLOAT AS annualized_variable_unittypeid,\n    personal__target__local__unit_type_id::FLOAT AS personal_target_local_unittypeid,\n    salary__local__unit_type_id::FLOAT AS salary_local_unittypeid,\n    annualized__variable__local__unit_type_id::FLOAT AS annualized_variable_local_unittypeid,\n    semi__annual__variable__usd__unit_type_id::FLOAT AS semi_annual_variable_usd_unittypeid,\n    payment_cur_unit_type_id::FLOAT AS payment_cur_unit_type_id,\n    source_id::FLOAT AS source_id,\n    emp_status_id::FLOAT AS emp_status_id,\n    effective_start_date::VARCHAR AS effective_start_date,\n    effective_end_date::VARCHAR AS effective_end_date,\n    is_master::VARCHAR AS is_master,\n    semi__annual__variable__local::FLOAT AS semi_annual_variable_local,\n    quarterly__variable__usd::FLOAT AS quarterly_variable_usd,\n    quarterly__variable__local::FLOAT AS quarterly_variable_local,\n    monthly__variable__local::FLOAT AS monthly_variable_local,\n    monthly__variable__usd::FLOAT AS monthly_variable_usd,\n    semi__annual__variable__local__unit_type_id::FLOAT AS semi_annual_variable_local_unittypeid,\n    quarterly__variable__usd__unit_type_id::FLOAT AS quarterly_variable_usd_unittypeid,\n    quarterly__variable__local__unit_type_id::FLOAT AS quarterly_variable_local_unittypeid,\n    monthly__variable__local__unit_type_id::FLOAT AS monthly_variable_local_unittypeid,\n    monthly__variable__usd__unit_type_id::FLOAT AS monthly_variable_usd_unittypeid,\n    business_group_id::FLOAT AS business_group_id,\n    obj_bonus_target::FLOAT AS obj_bonus_target,\n    obj_bonus_target_unittype_id::FLOAT AS obj_bonus_target_unittype_id,\n    obj_payment_cap_percent::FLOAT AS obj_payment_cap_percent,\n    is_obj_active::VARCHAR AS is_obj_active,\n    prorated_salary::FLOAT AS prorated_salary,\n    prorated_personal_target::FLOAT AS prorated_personal_target,\n    version_reason_id::FLOAT AS version_reason_id,\n    version_sub_reason_id::FLOAT AS version_sub_reason_id\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_participant_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:05.366866Z", "completed_at": "2025-06-09T18:51:05.370095Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:05.370376Z", "completed_at": "2025-06-09T18:51:14.672673Z"}], "thread_id": "Thread-22", "execution_time": 9.306660175323486, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_period_type_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_xactly.xc_period_type\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    period_type_id::FLOAT AS period_type_id,\n    version::FLOAT AS version,\n    name::VARCHAR AS name,\n    is_active::VARCHAR AS is_active,\n    created_date::VARCHAR AS created_date,\n    created_by_id::FLOAT AS created_by_id,\n    created_by_name::VARCHAR AS created_by_name,\n    modified_date::VARCHAR AS modified_date,\n    modified_by_id::FLOAT AS modified_by_id,\n    modified_by_name::VARCHAR AS modified_by_name\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_period_type_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:03.745217Z", "completed_at": "2025-06-09T18:51:03.748948Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:03.749227Z", "completed_at": "2025-06-09T18:51:14.769518Z"}], "thread_id": "Thread-6", "execution_time": 11.024951696395874, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_comp_order_item_detail_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_xactly.xc_comp_order_item_detail\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    comp_order_item_detail_id::FLOAT AS comp_order_item_detail_id,\n    comp_order_item_id::FLOAT AS comp_order_item_id,\n    order_code::VARCHAR AS order_code,\n    item_code::VARCHAR AS item_code,\n    coi_order_code::VARCHAR AS coi_order_code,\n    coi_item_code::VARCHAR AS coi_item_code,\n    version::FLOAT AS \"version\",\n    is_active::VARCHAR AS is_active,\n    amount::FLOAT AS amount,\n    amount_unit_type_id::FLOAT AS amount_unit_type_id,\n    incentive_date::VARCHAR AS incentive_date,\n    period_id::FLOAT AS period_id,\n    order_date::VARCHAR AS order_date,\n    source_id::FLOAT AS source_id,\n    order_type_id::FLOAT AS order_type_id,\n    discount::FLOAT AS discount,\n    quantity::FLOAT AS quantity,\n    product_id::FLOAT AS product_id,\n    product_name::VARCHAR AS product_name,\n    customer_id::FLOAT AS customer_id,\n    geography_id::FLOAT AS geography_id,\n    upload_id::FLOAT AS upload_id,\n    batch_id::FLOAT AS batch_id,\n    batch_name::VARCHAR AS batch_name,\n    related_order_code::VARCHAR AS related_order_codes,\n    related_item_code::VARCHAR AS related_item_code,\n    related_item_id::FLOAT AS related_item_id,\n    descr::VARCHAR AS descr,\n    status_date::VARCHAR AS status_date,\n    invoice__date::VARCHAR AS invoice_date,\n    subscription__start__date::VARCHAR AS subscription_start_date,\n    subscription__end__date::VARCHAR AS subscription_end_date,\n    activity__date::VARCHAR AS activity_date,\n    stage::VARCHAR AS \"stage\",\n    opportunity__name::VARCHAR AS opportunity_name,\n    invoice__entity::VARCHAR AS invoice_entity,\n    invoice__number::VARCHAR AS invoice_number,\n    prevent__rolling::VARCHAR AS prevent_rolling,\n    partner__deal__type::VARCHAR AS partner_deal_type,\n    partner__engagement::VARCHAR AS partner_engagement,\n    account__territory::VARCHAR AS account_territory,\n    product__category::VARCHAR AS product_category,\n    sdr__assigned__role::VARCHAR AS sdr_assigned_role,\n    initial__source::VARCHAR AS initial_source,\n    order__subtype::VARCHAR AS order_subtype,\n    region::VARCHAR AS region,\n    user__segment::VARCHAR AS user_segment,\n    account__owner__team::VARCHAR AS account_owner_team,\n    sa__team::VARCHAR AS sa_team,\n    initiative::VARCHAR AS initiative,\n    outreach__meeting__type::VARCHAR AS outreach_meeting_type,\n    event__disposition::VARCHAR AS event_disposition,\n    subject::VARCHAR AS subject,\n    iqm__submitted_by__role::VARCHAR AS iqm_submitted_by_role,\n    created__by__team::VARCHAR AS created_by_team,\n    new__logo__target__account::VARCHAR AS new_logo_target_account,\n    deal__path::VARCHAR AS deal_path,\n    dr__partner::VARCHAR AS dr_partner,\n    bhr_eeid::VARCHAR AS bhr_eeid,\n    sqs::VARCHAR AS sqs,\n    resale__partner::VARCHAR AS resale_partner,\n    type::VARCHAR AS \"type\",\n    type__name::VARCHAR AS type_name,\n    is__sao::VARCHAR AS is_sao,\n    web__portal__purchase::VARCHAR AS web_portal_purchase,\n    stamped__opp__owner__user__region::VARCHAR AS stamped_opp_owner_user_region,\n    opportunity__category::VARCHAR AS opportunity_category,\n    split__partner__type::VARCHAR AS split_partner_type,\n    partner__sourced__employee__id::VARCHAR AS partner_sourced_employee_id,\n    partner__co_sell__employee__id::VARCHAR AS partner_cosell_employee_id,\n    invoice__amount::FLOAT AS invoice_amount,\n    channel__neutral__amount::FLOAT AS channel_neutral_amount,\n    arr__net__amount::FLOAT AS arr_net_amount,\n    arr__growth__amount::FLOAT AS arr_growth_amount,\n    true__up__amount::FLOAT AS true_up_amount,\n    arr__gross__amount::FLOAT AS arr_gross_amount,\n    pio__amount::FLOAT AS pio_amount,\n    arr_y2_plus__amount::FLOAT AS arr_y2plus_amount,\n    professional__services__amount::FLOAT AS professional_services_amount,\n    opportunity__term::FLOAT AS opportunity_term,\n    partner__discount::FLOAT AS partner_discount,\n    calculated__discount::FLOAT AS calculated_discount,\n    channel__neutral__y2_plus__amount::FLOAT AS channel_neutral_y2plus_amount,\n    recurring__amount::FLOAT AS recurring_amount,\n    non__recurring__amount::FLOAT AS non_recurring_amount,\n    commission__adj::FLOAT AS commission_adj,\n    stub__iacv::FLOAT AS stub_iacv,\n    guarantee__adj::FLOAT AS guarantee_adj,\n    arr__basis::FLOAT AS arr_basis,\n    won__arr__basis::FLOAT AS won_arr_basis,\n    lam__dev__count::FLOAT AS lam_dev_count,\n    arr__basis__clari::FLOAT AS arr_basis_clari,\n    channel__split__percentage::FLOAT AS channel_split_percentage,\n    invoice__amount__unit_type_id::FLOAT AS invoice_amount_unittypeid,\n    channel__neutral__amount__unit_type_id::FLOAT AS channel_neutral_amount_unittypeid,\n    arr__net__amount__unit_type_id::FLOAT AS arr_net_amount_unittypeid,\n    arr__growth__amount__unit_type_id::FLOAT AS arr_growth_amount_unittypeid,\n    true__up__amount__unit_type_id::FLOAT AS true_up_amount_unittypeid,\n    arr__gross__amount__unit_type_id::FLOAT AS arr_gross_amount_unittypeid,\n    pio__amount__unit_type_id::FLOAT AS pio_amount_unittypeid,\n    arr_y2_plus__amount__unit_type_id::FLOAT AS arr_y2plus_amount_unittypeid,\n    professional__services__amount__unit_type_id::FLOAT AS professional_services_amount_unittypeid,\n    opportunity__term__unit_type_id::FLOAT AS opportunity_term_unittypeid,\n    partner__discount__unit_type_id::FLOAT AS partner_discount_unittypeid,\n    calculated__discount__unit_type_id::FLOAT AS calculated_discount_unittypeid,\n    channel__neutral__y2_plus__amount__unit_type_id::FLOAT AS channel_neutral_y2plus_amount_unittypeid,\n    recurring__amount__unit_type_id::FLOAT AS recurring_amount_unittypeid,\n    non__recurring__amount__unit_type_id::FLOAT AS non_recurring_amount_unittypeid,\n    commission__adj__unit_type_id::FLOAT AS commission_adj_unittypeid,\n    stub__iacv__unit_type_id::FLOAT AS stub_iacv_unittypeid,\n    guarantee__adj__unit_type_id::FLOAT AS guarantee_adj_unittypeid,\n    arr__basis__unit_type_id::FLOAT AS arr_basis_unittypeid,\n    won__arr__basis__unit_type_id::FLOAT AS won_arr_basis_unittypeid,\n    lam__dev__count__unit_type_id::FLOAT AS lam_dev_count_unittypeid,\n    arr__basis__clari__unit_type_id::FLOAT AS arr_basis_clari_unittypeid,\n    channel__split__percentage__unit_type_id::FLOAT AS channel_split_percentage_unittypeid,\n    modified_date::VARCHAR AS modified_date\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_comp_order_item_detail_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:50:59.432916Z", "completed_at": "2025-06-09T18:50:59.477110Z"}, {"name": "execute", "started_at": "2025-06-09T18:50:59.498570Z", "completed_at": "2025-06-09T18:51:17.865036Z"}], "thread_id": "Thread-23", "execution_time": 18.499368906021118, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.team_yaml_historical_counts", "compiled": true, "compiled_code": "-- This file is loaded through dbt seed, your local runs will break unless you run dbt seed first.\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.seed_engineering.historical_counts_maintainers_engineers\n)\n\nSELECT * FROM source", "relation_name": "EMBUCKET.legacy.team_yaml_historical_counts", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:11.181617Z", "completed_at": "2025-06-09T18:51:11.185028Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:11.185382Z", "completed_at": "2025-06-09T18:51:19.671203Z"}], "thread_id": "Thread-26", "execution_time": 8.490295648574829, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_plan_assignment_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_xactly.xc_plan_assignment\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    plan_assignment_id::FLOAT AS plan_assignment_id,\n    version::FLOAT AS version,\n    assignment_id::FLOAT AS assignment_id,\n    assignment_type::FLOAT AS assignment_type,\n    assignment_name::VARCHAR AS assignment_name,\n    is_active::VARCHAR AS is_active,\n    created_date::VARCHAR AS created_date,\n    created_by_id::FLOAT AS created_by_id,\n    created_by_name::VARCHAR AS created_by_name,\n    modified_date::VARCHAR AS modified_date,\n    modified_by_id::FLOAT AS modified_by_id,\n    modified_by_name::VARCHAR AS modified_by_name,\n    plan_id::FLOAT AS plan_id,\n    active_start_date::VARCHAR AS active_start_date,\n    active_end_date::VARCHAR AS active_end_date\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_plan_assignment_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:11.286523Z", "completed_at": "2025-06-09T18:51:11.289826Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:11.290111Z", "completed_at": "2025-06-09T18:51:19.670048Z"}], "thread_id": "Thread-19", "execution_time": 8.384294033050537, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_plan_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_xactly.xc_plan\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    plan_id::FLOAT AS plan_id,\n    version::FLOAT AS version,\n    name::VARCHAR AS name,\n    description::VARCHAR AS description,\n    is_active::VARCHAR AS is_active,\n    created_date::VARCHAR AS created_date,\n    created_by_id::FLOAT AS created_by_id,\n    created_by_name::VARCHAR AS created_by_name,\n    modified_date::VARCHAR AS modified_date,\n    modified_by_id::FLOAT AS modified_by_id,\n    modified_by_name::VARCHAR AS modified_by_name,\n    period_id::FLOAT AS period_id\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_plan_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:11.389474Z", "completed_at": "2025-06-09T18:51:11.392939Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:11.393269Z", "completed_at": "2025-06-09T18:51:27.169534Z"}], "thread_id": "Thread-1", "execution_time": 15.78073501586914, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_hierarchy_hist_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_pos_hierarchy_hist\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      from_pos_id::FLOAT                    AS from_pos_id,\n      from_pos_name::VARCHAR                AS from_pos_name,\n      is_active::VARCHAR                    AS is_active,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      object_id::FLOAT                      AS object_id,\n      pos_hierarchy_id::FLOAT               AS pos_hierarchy_id,\n      pos_hierarchy_type_id::FLOAT          AS pos_hierarchy_type_id,\n      to_pos_id::FLOAT                      AS to_pos_id,\n      to_pos_name::VARCHAR                  AS to_pos_name\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_pos_hierarchy_hist_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:11.376788Z", "completed_at": "2025-06-09T18:51:11.379947Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:11.380223Z", "completed_at": "2025-06-09T18:51:27.170653Z"}], "thread_id": "Thread-4", "execution_time": 15.794478178024292, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_planrules_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_xactly.xc_planrules\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    planrules_id::FLOAT AS planrules_id,\n    version::FLOAT AS version,\n    is_active::VARCHAR AS is_active,\n    created_date::VARCHAR AS created_date,\n    created_by_id::FLOAT AS created_by_id,\n    created_by_name::VARCHAR AS created_by_name,\n    modified_date::VARCHAR AS modified_date,\n    modified_by_id::FLOAT AS modified_by_id,\n    modified_by_name::VARCHAR AS modified_by_name,\n    plan_id::FLOAT AS plan_id,\n    rule_id::FLOAT as rule_id\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_planrules_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:02.410983Z", "completed_at": "2025-06-09T18:51:02.433999Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:02.434498Z", "completed_at": "2025-06-09T18:51:27.262468Z"}], "thread_id": "Thread-29", "execution_time": 24.852100133895874, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.workday_hcm_person_name_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".workday_hcm.person_name\n  WHERE NOT _fivetran_deleted\n\n),\n\nfinal AS (\n\n  SELECT\n    personal_info_system_id::VARCHAR     AS personal_info_system_id,\n    type::VARCHAR                        AS type,\n    index::VARCHAR                       AS index,\n    first_name::VARCHAR                  AS first_name,\n    last_name::VARCHAR                   AS last_name\n  FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.workday.workday_hcm_person_name_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:02.418122Z", "completed_at": "2025-06-09T18:51:02.449681Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:02.450095Z", "completed_at": "2025-06-09T18:51:27.264496Z"}], "thread_id": "Thread-21", "execution_time": 24.847039937973022, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.workday_hcm_worker_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM \"EMBUCKET\".workday_hcm.worker\n  WHERE NOT _fivetran_deleted\n\n),\n\nfinal AS (\n\n  SELECT\n    id::VARCHAR                             AS id,\n    user_id::VARCHAR                        AS employee_id,\n    compensation_grade_id::VARCHAR          AS compensation_grade_id,\n    compensation_grade_profile_id::VARCHAR  AS compensation_grade_profile_id\n  FROM source\n\n)\n\nSELECT *\nFROM final", "relation_name": "EMBUCKET.workday.workday_hcm_worker_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:03.800439Z", "completed_at": "2025-06-09T18:51:03.811324Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:03.812224Z", "completed_at": "2025-06-09T18:51:27.269363Z"}], "thread_id": "Thread-9", "execution_time": 23.47217607498169, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_comp_order_item_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_xactly.xc_comp_order_item\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    comp_order_item_id::FLOAT AS comp_order_item_id,\n    version::FLOAT AS version,\n    is_active::VARCHAR AS is_active,\n    item_code::VARCHAR AS item_code,\n    line_number::FLOAT AS line_number,\n    amount::FLOAT AS amount,\n    amount_unit_type_id::FLOAT AS amount_unit_type_id,\n    amount_pct::FLOAT AS amount_pct,\n    incentive_date::VARCHAR AS incentive_date,\n    period_id::FLOAT AS period_id,\n    order_date::VARCHAR AS order_date,\n    source_id::FLOAT AS source_id,\n    order_type_id::FLOAT AS order_type_id,\n    is_processed::VARCHAR AS is_processed,\n    discount::FLOAT AS discount,\n    quantity::FLOAT AS quantity,\n    product_id::FLOAT AS product_id,\n    product_name::VARCHAR AS product_name,\n    customer_id::FLOAT AS customer_id,\n    customer_name::VARCHAR AS customer_name,\n    geography_id::FLOAT AS geography_id,\n    geography_name::VARCHAR AS geography_name,\n    upload_id::FLOAT AS upload_id,\n    batch_number::FLOAT AS batch_number,\n    batch_id::FLOAT AS batch_id,\n    batch_name::VARCHAR AS batch_name,\n    related_order_code::VARCHAR AS related_order_codes,\n    related_item_code::VARCHAR AS related_item_code,\n    related_item_id::FLOAT AS related_item_id,\n    order_code::VARCHAR AS order_code,\n    descr::VARCHAR AS descr,\n    item_status::VARCHAR AS item_status,\n    status_date::VARCHAR AS status_date,\n    splt_amt_pct_total::FLOAT AS splt_amt_pct_total,\n    invoice__date::VARCHAR AS invoice_date,\n    subscription__start__date::VARCHAR AS subscription_start_date,\n    subscription__end__date::VARCHAR AS subscription_end_date,\n    stage::VARCHAR AS stage,\n    opportunity__name::VARCHAR AS opportunity_name,\n    invoice__entity::VARCHAR AS invoice_entity,\n    invoice__number::VARCHAR AS invoice_number,\n    prevent__rolling::VARCHAR AS prevent_rolling,\n    partner__deal__type::VARCHAR AS partner_deal_type,\n    partner__engagement::VARCHAR AS partner_engagement,\n    account__territory::VARCHAR AS account_territory,\n    product__category::VARCHAR AS product_category,\n    sdr__assigned__role::VARCHAR AS sdr_assigned_role,\n    initial__source::VARCHAR AS initial_source,\n    order__subtype::VARCHAR AS order_subtype,\n    region::VARCHAR AS region,\n    user__segment::VARCHAR AS user_segment,\n    account__owner__team::VARCHAR AS account_owner_team,\n    sa__team::VARCHAR AS sa_team,\n    initiative::VARCHAR AS initiative,\n    outreach__meeting__type::VARCHAR AS outreach_meeting_type,\n    event__disposition::VARCHAR AS event_disposition,\n    subject::VARCHAR AS subject,\n    iqm__submitted_by__role::VARCHAR AS iqm_submitted_by_role,\n    created__by__team::VARCHAR AS created_by_team,\n    new__logo__target__account::VARCHAR AS new_logo_target_account,\n    deal__path::VARCHAR AS deal_path,\n    dr__partner::VARCHAR AS dr_partner,\n    bhr_eeid::VARCHAR AS bhr_eeid,\n    sqs::VARCHAR AS sqs,\n    resale__partner::VARCHAR AS resale_partner,\n    type::VARCHAR AS type,\n    type__name::VARCHAR AS type_name,\n    is__sao::VARCHAR AS is_sao,\n    web__portal__purchase::VARCHAR AS web_portal_purchase,\n    stamped__opp__owner__user__region::VARCHAR AS stamped_opp_owner_user_region,\n    opportunity__category::VARCHAR AS opportunity_category,\n    split__partner__type::VARCHAR AS split_partner_type,\n    partner__sourced__employee__id::VARCHAR AS partner_sourced_employee_id,\n    partner__co_sell__employee__id::VARCHAR AS partner_cosell_employee_id,\n    invoice__amount::FLOAT AS invoice_amount,\n    channel__neutral__amount::FLOAT AS channel_neutral_amount,\n    arr__net__amount::FLOAT AS arr_net_amount,\n    arr__growth__amount::FLOAT AS arr_growth_amount,\n    true__up__amount::FLOAT AS true_up_amount,\n    arr__gross__amount::FLOAT AS arr_gross_amount,\n    pio__amount::FLOAT AS pio_amount,\n    arr_y2_plus__amount::FLOAT AS arr_y2plus_amount,\n    professional__services__amount::FLOAT AS professional_services_amount,\n    opportunity__term::FLOAT AS opportunity_term,\n    partner__discount::FLOAT AS partner_discount,\n    calculated__discount::FLOAT AS calculated_discount,\n    channel__neutral__y2_plus__amount::FLOAT AS channel_neutral_y2plus_amount,\n    recurring__amount::FLOAT AS recurring_amount,\n    non__recurring__amount::FLOAT AS non_recurring_amount,\n    commission__adj::FLOAT AS commission_adj,\n    stub__iacv::FLOAT AS stub_iacv,\n    guarantee__adj::FLOAT AS guarantee_adj,\n    arr__basis::FLOAT AS arr_basis,\n    won__arr__basis::FLOAT AS won_arr_basis,\n    lam__dev__count::FLOAT AS lam_dev_count,\n    arr__basis__clari::FLOAT AS arr_basis_clari,\n    channel__split__percentage::FLOAT AS channel_split_percentage,\n    invoice__amount__unit_type_id::FLOAT AS invoice_amount_unittypeid,\n    channel__neutral__amount__unit_type_id::FLOAT AS channel_neutral_amount_unittypeid,\n    arr__net__amount__unit_type_id::FLOAT AS arr_net_amount_unittypeid,\n    arr__growth__amount__unit_type_id::FLOAT AS arr_growth_amount_unittypeid,\n    true__up__amount__unit_type_id::FLOAT AS true_up_amount_unittypeid,\n    arr__gross__amount__unit_type_id::FLOAT AS arr_gross_amount_unittypeid,\n    pio__amount__unit_type_id::FLOAT AS pio_amount_unittypeid,\n    arr_y2_plus__amount__unit_type_id::FLOAT AS arr_y2plus_amount_unittypeid,\n    professional__services__amount__unit_type_id::FLOAT AS professional_services_amount_unittypeid,\n    opportunity__term__unit_type_id::FLOAT AS opportunity_term_unittypeid,\n    partner__discount__unit_type_id::FLOAT AS partner_discount_unittypeid,\n    calculated__discount__unit_type_id::FLOAT AS calculated_discount_unittypeid,\n    channel__neutral__y2_plus__amount__unit_type_id::FLOAT AS channel_neutral_y2plus_amount_unittypeid,\n    recurring__amount__unit_type_id::FLOAT AS recurring_amount_unittypeid,\n    non__recurring__amount__unit_type_id::FLOAT AS non_recurring_amount_unittypeid,\n    commission__adj__unit_type_id::FLOAT AS commission_adj_unittypeid,\n    stub__iacv__unit_type_id::FLOAT AS stub_iacv_unittypeid,\n    guarantee__adj__unit_type_id::FLOAT AS guarantee_adj_unittypeid,\n    arr__basis__unit_type_id::FLOAT AS arr_basis_unittypeid,\n    won__arr__basis__unit_type_id::FLOAT AS won_arr_basis_unittypeid,\n    lam__dev__count__unit_type_id::FLOAT AS lam_dev_count_unittypeid,\n    arr__basis__clari__unit_type_id::FLOAT AS arr_basis_clari_unittypeid,\n    channel__split__percentage__unit_type_id::FLOAT AS channel_split_percentage_unittypeid,\n    created_date::VARCHAR AS created_date,\n    created_by_id::FLOAT AS created_by_id,\n    created_by_name::VARCHAR AS created_by_name,\n    modified_date::VARCHAR AS modified_date,\n    modified_by_id::FLOAT AS modified_by_id,\n    modified_by_name::VARCHAR AS modified_by_name\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_comp_order_item_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:03.890930Z", "completed_at": "2025-06-09T18:51:03.903256Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:03.908751Z", "completed_at": "2025-06-09T18:51:27.271757Z"}], "thread_id": "Thread-8", "execution_time": 23.388336181640625, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_credit_held_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_credit_held\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      credit_held_id::FLOAT                 AS credit_held_id,\n      credit_id::FLOAT                      AS credit_id,\n      held_date::VARCHAR                    AS held_date,\n      is_active::VARCHAR                    AS is_active,\n      is_held::VARCHAR                      AS is_held,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      release_group_id::FLOAT               AS release_group_id,\n      run_id::FLOAT                         AS run_id,\n      trans_id::FLOAT                       AS trans_id\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_credit_held_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:03.899576Z", "completed_at": "2025-06-09T18:51:03.914863Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:03.915915Z", "completed_at": "2025-06-09T18:51:27.273284Z"}], "thread_id": "Thread-15", "execution_time": 23.387995958328247, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_credit_totals_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_credit_totals\n\n), renamed AS (\n\n    SELECT\n\n      amount::FLOAT                     AS amount,\n      created_by_id::FLOAT              AS created_by_id,\n      created_by_name::VARCHAR          AS created_by_name,\n      created_date::VARCHAR             AS created_date,\n      credit_totals_id::FLOAT           AS credit_totals_id,\n      is_active::VARCHAR                AS is_active,\n      modified_by_id::FLOAT             AS modified_by_id,\n      modified_by_name::VARCHAR         AS modified_by_name,\n      modified_date::VARCHAR            AS modified_date,\n      participant_id::FLOAT             AS participant_id,\n      participant_name::VARCHAR         AS participant_name,\n      period_id::FLOAT                  AS period_id,\n      position_id::FLOAT                AS position_id,\n      position_name::VARCHAR            AS position_name,\n      unittype_id::FLOAT                AS unittype_id\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_credit_totals_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:11.478049Z", "completed_at": "2025-06-09T18:51:11.487122Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:11.488254Z", "completed_at": "2025-06-09T18:51:27.274613Z"}], "thread_id": "Thread-5", "execution_time": 15.800799131393433, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_hierarchy_type_hist_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_pos_hierarchy_type_hist\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                          AS created_by_id,\n      created_by_name::VARCHAR                      AS created_by_name,\n      created_date::VARCHAR                         AS created_date,\n      descr::VARCHAR                                AS descr,\n      effective_end_date::VARCHAR                   AS effective_end_date,\n      effective_start_date::VARCHAR                 AS effective_start_date,\n      is_active::VARCHAR                            AS is_active,\n      is_master::VARCHAR                            AS is_master,\n      modified_by_id::FLOAT                         AS modified_by_id,\n      modified_by_name::VARCHAR                     AS modified_by_name,\n      modified_date::VARCHAR                        AS modified_date,\n      object_id::FLOAT                              AS object_id,\n      pos_hierarchy_type_disp_name::VARCHAR         AS pos_hierarchy_type_disp_name,\n      pos_hierarchy_type_id::FLOAT                  AS pos_hierarchy_type_id,\n      pos_hierarchy_type_name::VARCHAR              AS pos_hierarchy_type_name\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_pos_hierarchy_type_hist_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:14.109325Z", "completed_at": "2025-06-09T18:51:14.128214Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:14.144908Z", "completed_at": "2025-06-09T18:51:27.277181Z"}], "thread_id": "Thread-12", "execution_time": 13.200677156448364, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_title_assignment_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_pos_title_assignment\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      is_active::VARCHAR                    AS is_active,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      pos_title_assignment_id::FLOAT        AS pos_title_assignment_id,\n      position_id::FLOAT                    AS position_id,\n      position_name::VARCHAR                AS position_name,\n      title_id::FLOAT                       AS title_id,\n      title_name::VARCHAR AS title_name\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_pos_title_assignment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:00.590478Z", "completed_at": "2025-06-09T18:51:00.613164Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:00.626080Z", "completed_at": "2025-06-09T18:51:27.275769Z"}], "thread_id": "Thread-20", "execution_time": 26.719820022583008, "adapter_response": {}, "message": "Database Error in model version_raw_usage_data_source (models/sources/version/version_raw_usage_data_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/version/version_raw_usage_data_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.version_raw_usage_data_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.version_db.raw_usage_data\n    \n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1\n\n), renamed AS (\n\n    SELECT\n      id::VARCHAR             AS raw_usage_data_id,\n      PARSE_JSON(payload)     AS raw_usage_data_payload,\n      created_at::TIMESTAMP   AS created_at,\n      recorded_at::TIMESTAMP  AS recorded_at,\n      _uploaded_at::TIMESTAMP AS uploaded_at\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.version_db.version_raw_usage_data_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:14.679121Z", "completed_at": "2025-06-09T18:51:14.687337Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:14.687647Z", "completed_at": "2025-06-09T18:51:27.469684Z"}], "thread_id": "Thread-22", "execution_time": 12.791379928588867, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_position_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_position\n\n), renamed AS (\n\n    SELECT\n\n      business_group_id::FLOAT              AS business_group_id,\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      credit_end_date::VARCHAR              AS credit_end_date,\n      credit_start_date::VARCHAR            AS credit_start_date,\n      descr::VARCHAR                        AS descr,\n      effective_end_date::VARCHAR           AS effective_end_date,\n      effective_start_date::VARCHAR         AS effective_start_date,\n      incent_end_date::VARCHAR              AS incent_end_date,\n      incent_st_date::VARCHAR               AS incent_st_date,\n      is_active::VARCHAR                    AS is_active,\n      is_master::VARCHAR                    AS is_master,\n      master_position_id::FLOAT             AS master_position_id,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      name::VARCHAR                         AS name,\n      parent_position_id::FLOAT             AS parent_position_id,\n      parent_record_id::FLOAT               AS parent_record_id,\n      participant_id::FLOAT                 AS participant_id,\n      pos_group_id::FLOAT                   AS pos_group_id,\n      position_id::FLOAT                    AS position_id,\n      title_id::FLOAT                       AS title_id\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_position_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:11.423723Z", "completed_at": "2025-06-09T18:51:11.441099Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:11.448586Z", "completed_at": "2025-06-09T18:51:27.537490Z"}], "thread_id": "Thread-2", "execution_time": 16.114494800567627, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_hierarchy_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_pos_hierarchy\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      from_pos_id::FLOAT                    AS from_pos_id,\n      from_pos_name::VARCHAR                AS from_pos_name,\n      is_active::VARCHAR                    AS is_active,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      pos_hierarchy_id::FLOAT               AS pos_hierarchy_id,\n      pos_hierarchy_type_id::FLOAT          AS pos_hierarchy_type_id,\n      to_pos_id::FLOAT                      AS to_pos_id,\n      to_pos_name::VARCHAR                  AS to_pos_name,\n      version::FLOAT                        AS version\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_pos_hierarchy_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:14.080933Z", "completed_at": "2025-06-09T18:51:14.118193Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:14.120219Z", "completed_at": "2025-06-09T18:51:27.569183Z"}], "thread_id": "Thread-3", "execution_time": 13.500833988189697, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_part_assignment_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_pos_part_assignment\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      is_active::VARCHAR                    AS is_active,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      participant_id::FLOAT                 AS participant_id,\n      participant_name::VARCHAR             AS participant_name,\n      pos_part_assignment_id::FLOAT         AS pos_part_assignment_id,\n      position_id::FLOAT                    AS position_id,\n      position_name::VARCHAR                AS position_name\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_pos_part_assignment_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:17.867973Z", "completed_at": "2025-06-09T18:51:17.872811Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:17.873095Z", "completed_at": "2025-06-09T18:51:28.969920Z"}], "thread_id": "Thread-23", "execution_time": 11.102619171142578, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_quota_assignment_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_quota_assignment\n\n), renamed AS (\n\n    SELECT\n\n      amount::FLOAT                         AS amount,\n      amount_unit_type_id::FLOAT            AS amount_unit_type_id,\n      assignment_id::FLOAT                  AS assignment_id,\n      assignment_name::VARCHAR              AS assignment_name,\n      assignment_type::FLOAT                AS assignment_type,\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      description::VARCHAR                  AS description,\n      effective_end_period_id::FLOAT        AS effective_end_period_id,\n      effective_start_period_id::FLOAT      AS effective_start_period_id,\n      is_active::VARCHAR                    AS is_active,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      period_id::FLOAT                      AS period_id,\n      qta_asgnmt_id::VARCHAR                AS qta_asgnmt_id,\n      quota_assignment_id::FLOAT            AS quota_assignment_id,\n      quota_id::FLOAT                       AS quota_id,\n      version::VARCHAR                      AS version\n      \n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_quota_assignment_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:03.929758Z", "completed_at": "2025-06-09T18:51:03.934515Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:03.935036Z", "completed_at": "2025-06-09T18:51:40.490017Z"}], "thread_id": "Thread-24", "execution_time": 36.56229829788208, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_credit_type_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_credit_type\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      credit_type_id::FLOAT                 AS credit_type_id,\n      descr::VARCHAR                        AS descr,\n      is_active::VARCHAR                    AS is_active,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      name::VARCHAR                         AS name\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_credit_type_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:04.680705Z", "completed_at": "2025-06-09T18:51:04.683745Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:04.683998Z", "completed_at": "2025-06-09T18:51:40.497757Z"}], "thread_id": "Thread-17", "execution_time": 35.81786489486694, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_period_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_xactly.xc_period\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    period_id::FLOAT AS period_id,\n    version::FLOAT AS version,\n    name::VARCHAR AS name,\n    start_date::VARCHAR AS start_date,\n    end_date::VARCHAR AS end_date,\n    is_active::VARCHAR AS is_active,\n    is_open::VARCHAR AS is_open,\n    parent_period_id::FLOAT AS parent_period_id,\n    period_type_id_fk::FLOAT AS period_type_id_fk,\n    calendar_id::FLOAT AS calendar_id,\n    order_number::FLOAT AS order_number,\n    created_date::VARCHAR AS created_date,\n    created_by_id::FLOAT AS created_by_id,\n    created_by_name::VARCHAR AS created_by_name,\n    modified_date::VARCHAR AS modified_date,\n    modified_by_id::FLOAT AS modified_by_id,\n    modified_by_name::VARCHAR AS modified_by_name,\n    is_published::VARCHAR AS is_published,\n    is_visible::VARCHAR AS is_visible,\n    is_etl_excluded::VARCHAR AS is_etl_excluded,\n    is_hidden::VARCHAR AS is_hidden,\n    is_calc_period::VARCHAR AS is_calc_period\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_period_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.179189Z", "completed_at": "2025-06-09T18:51:27.183883Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.188721Z", "completed_at": "2025-06-09T18:51:42.371249Z"}], "thread_id": "Thread-4", "execution_time": 15.196094274520874, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_quota_totals_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_quota_totals\n\n), renamed AS (\n\n    SELECT\n\n      amount::FLOAT                         AS amount,\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      is_active::VARCHAR                    AS is_active,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      name::VARCHAR                         AS name,\n      participant_id::FLOAT                 AS participant_id,\n      participant_name::VARCHAR             AS participant_name,\n      period_id::FLOAT                      AS period_id,\n      position_id::FLOAT                    AS position_id,\n      position_name::VARCHAR                AS position_name,\n      quota_totals_id::FLOAT                AS quota_totals_id,\n      unittype_id::FLOAT                    AS unittype_id\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_quota_totals_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.175992Z", "completed_at": "2025-06-09T18:51:27.183562Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.184176Z", "completed_at": "2025-06-09T18:51:42.370069Z"}], "thread_id": "Thread-1", "execution_time": 15.195272207260132, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_quota_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_quota\n\n), renamed AS (\n\n    SELECT\n\n      classification_name::VARCHAR                  AS classification_name,\n      classification_type::FLOAT                    AS classification_type,\n      created_by_id::FLOAT                          AS created_by_id,\n      created_by_name::VARCHAR                      AS created_by_name,\n      created_date::VARCHAR                         AS created_date,\n      description::VARCHAR                          AS description,\n      is_active::VARCHAR                            AS is_active,\n      modified_by_id::FLOAT                         AS modified_by_id,\n      modified_by_name::VARCHAR                     AS modified_by_name,\n      modified_date::VARCHAR                        AS modified_date,\n      name::VARCHAR                                 AS name,\n      quota_id::FLOAT                               AS quota_id,\n      quota_interval_id::FLOAT                      AS quota_interval_id,\n      quota_interval_name::VARCHAR                  AS quota_interval_name,\n      quota_period_id::FLOAT                        AS quota_period_id,\n      quota_period_name::VARCHAR                    AS quota_period_name,\n      quota_value::FLOAT                            AS quota_value,\n      quota_value_unit_type_id::FLOAT               AS quota_value_unit_type_id,\n      quota_value_unit_type_name::VARCHAR           AS quota_value_unit_type_name,\n      source_id::FLOAT                              AS source_id\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_quota_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.315969Z", "completed_at": "2025-06-09T18:51:27.348364Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.354555Z", "completed_at": "2025-06-09T18:51:45.074111Z"}], "thread_id": "Thread-8", "execution_time": 17.77915596961975, "adapter_response": {}, "message": "Database Error in model zendesk_group_memberships_source (models/sources/zendesk/zendesk_group_memberships_source.sql)\n  000200: DataFusion error: Schema error: No field named \"DEFAULT\". Valid fields are source.created_at, source.default, source.group_id, source.id, source.updated_at, source.url, source.user_id, source.__loaded_at, source._sdc_batched_at, source._sdc_deleted_at, source._sdc_extracted_at.\n  compiled code at target/run/gitlab_snowflake/models/sources/zendesk/zendesk_group_memberships_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_group_memberships_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_zendesk.group_memberships\n\n),\n\nrenamed AS (\n\n    SELECT\n\n        --ids\n        id                                                  AS group_membership_id,\n        group_id                                            AS group_id,\n        user_id                                             AS user_id,\n\n        --field\n        \"DEFAULT\"                                           AS is_default_group_membership,\n        url                                                 AS group_membership_url,\n\n        --dates\n        created_at,\n        updated_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zendesk.zendesk_group_memberships_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.301788Z", "completed_at": "2025-06-09T18:51:27.319082Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.337164Z", "completed_at": "2025-06-09T18:51:46.770655Z"}], "thread_id": "Thread-29", "execution_time": 19.47589111328125, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_role_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_role\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      descr::VARCHAR                        AS descr,\n      is_active::VARCHAR                    AS is_active,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      name::VARCHAR                         AS name,\n      role_id::FLOAT                        AS role_id,\n      role_type::VARCHAR                    AS role_type\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_role_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.322170Z", "completed_at": "2025-06-09T18:51:27.348747Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.359925Z", "completed_at": "2025-06-09T18:51:46.771768Z"}], "thread_id": "Thread-5", "execution_time": 19.470385789871216, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_satisfaction_ratings_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_zendesk.satisfaction_ratings\n\n),\n\nrenamed AS (\n\n    SELECT\n\n        --ids\n        id                                                  AS satisfaction_rating_id,\n        assignee_id                                         AS assignee_id,\n        group_id                                            AS group_id,\n        reason_id                                           AS reason_id,\n        requester_id                                        AS requester_id,\n        ticket_id                                           AS ticket_id,\n\n        --field\n        comment                                             AS comment,\n        reason                                              AS reason,\n        score,\n        url                                                 AS satisfaction_rating_url,\n\n\n        --dates\n        created_at,\n        updated_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zendesk.zendesk_satisfaction_ratings_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.305130Z", "completed_at": "2025-06-09T18:51:27.315533Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.331870Z", "completed_at": "2025-06-09T18:51:46.772937Z"}], "thread_id": "Thread-21", "execution_time": 19.47734522819519, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_rule_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_xactly.xc_rule\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    rule_id::FLOAT AS rule_id,\n    version::FLOAT AS version,\n    name::VARCHAR as name,\n    description::VARCHAR as description,\n    rule_type::FLOAT as rule_type,\n    active_start_date::VARCHAR as active_start_date,\n    active_end_date::VARCHAR as active_end_date,\n    is_active::VARCHAR AS is_active,\n    input_type::FLOAT as input_type,\n    pos_relation_id::FLOAT as pos_relation_id,\n    pos_relation_name::VARCHAR as pos_relation_name,\n    bonus_type::FLOAT as bonus_type,\n    period_type_name::VARCHAR as period_type_name,\n    created_date::VARCHAR AS created_date,\n    created_by_id::FLOAT AS created_by_id,\n    created_by_name::VARCHAR AS created_by_name,\n    modified_date::VARCHAR AS modified_date,\n    modified_by_id::FLOAT AS modified_by_id,\n    modified_by_name::VARCHAR AS modified_by_name,\n    rollable_on_reporting::VARCHAR as rollable_on_reporting,\n    hold_type::FLOAT as hold_type,\n    primary_rule_id::FLOAT as primary_rule_id,\n    rate_type::FLOAT as rate_type,\n    attainment_measure_id::VARCHAR as attainment_measure_id,\n    effective_start_date::VARCHAR as effective_start_date,\n    effective_end_date::VARCHAR as effective_end_date,\n    version_notes::VARCHAR as version_notes,\n    is_master::VARCHAR as is_master,\n    multiplier::VARCHAR as multiplier\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_rule_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.319388Z", "completed_at": "2025-06-09T18:51:27.349154Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.367304Z", "completed_at": "2025-06-09T18:51:46.868897Z"}], "thread_id": "Thread-15", "execution_time": 19.567847967147827, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_macros_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_zendesk.macros\n\n),\n\nrenamed AS (\n\n    SELECT\n\n        --ids\n        id                                                  AS macro_id,\n\n        --field\n        active                                              AS is_active,\n        url                                                 AS macro_url,\n        description                                         AS macro_description,\n        position                                            AS macro_position,\n        title                                               AS macro_title,\n\n        --dates\n        created_at,\n        updated_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zendesk.zendesk_macros_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.311563Z", "completed_at": "2025-06-09T18:51:27.336834Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.349463Z", "completed_at": "2025-06-09T18:51:46.968708Z"}], "thread_id": "Thread-9", "execution_time": 19.66945481300354, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_user_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_xactly.xc_user\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    user_id::FLOAT AS user_id,\n    version::FLOAT AS version,\n    email::VARCHAR AS email,\n    name::VARCHAR AS name,\n    passwd_chg_dt::VARCHAR AS passwd_chg_dt,\n    passwd_exp_dt::VARCHAR AS passwd_exp_dt,\n    ip_addresses::VARCHAR AS ip_addresses,\n    is_active::VARCHAR AS is_active,\n    is_passwd_reset::VARCHAR AS is_passwd_reset,\n    business_group_id::FLOAT AS business_group_id,\n    created_date::VARCHAR AS created_date,\n    created_by_id::FLOAT AS created_by_id,\n    created_by_name::VARCHAR AS created_by_name,\n    modified_date::VARCHAR AS modified_date,\n    modified_by_id::FLOAT AS modified_by_id,\n    modified_by_name::VARCHAR AS modified_by_name,\n    locale::VARCHAR AS locale,\n    enabled::VARCHAR AS enabled,\n    accepted_contract::VARCHAR AS accepted_contract,\n    source_id::FLOAT AS source_id,\n    primary_role_type::VARCHAR AS primary_role_type,\n    activated_date::VARCHAR AS activated_date,\n    is_internal_user::VARCHAR AS is_internal_user,\n    user_uuid::VARCHAR AS user_uuid\n\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_user_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:11.091983Z", "completed_at": "2025-06-09T18:51:11.095305Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:11.095642Z", "completed_at": "2025-06-09T18:51:48.565214Z"}], "thread_id": "Thread-31", "execution_time": 37.47393608093262, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_plan_approval_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.tap_xactly.xc_plan_approval\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    plan_approval_id::FLOAT AS planrules_id,\n    version::FLOAT AS version,\n    is_active::VARCHAR AS is_active,\n    status::VARCHAR as status,\n    person_id::FLOAT as person_id,\n    manager_id::FLOAT as manager_id,\n    plan_id::FLOAT as plan_id,\n    plan_name::VARCHAR as plan_name,\n    route_date::VARCHAR as route_date,\n    per_acpt_date::VARCHAR as per_acpt_date,\n    mgr_acpt_date::VARCHAR as mgr_acpt_date,\n    created_date::VARCHAR AS created_date,\n    created_by_id::FLOAT AS created_by_id,\n    created_by_name::VARCHAR AS created_by_name,\n    modified_date::VARCHAR AS modified_date,\n    modified_by_id::FLOAT AS modified_by_id,\n    modified_by_name::VARCHAR AS modified_by_name,\n    doc_type::FLOAT as doc_type,\n    business_group_id::FLOAT as business_group_id,\n    person_name::VARCHAR as person_name,\n    manager_name::VARCHAR as manager_name,\n    effective_plan_date::VARCHAR as effective_plan_date,\n    route_id::FLOAT as route_id,\n    doc_template_id::FLOAT as doc_template_id\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_plan_approval_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:14.092029Z", "completed_at": "2025-06-09T18:51:14.118804Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:14.124728Z", "completed_at": "2025-06-09T18:51:48.597844Z"}], "thread_id": "Thread-28", "execution_time": 34.528456926345825, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_relations_hist_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_pos_relations_hist\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      from_pos_id::FLOAT                    AS from_pos_id,\n      from_pos_name::VARCHAR                AS from_pos_name,\n      id::FLOAT                             AS id,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      object_id::FLOAT                      AS object_id,\n      pos_rel_type_id::FLOAT                AS pos_rel_type_id,\n      to_pos_id::FLOAT                      AS to_pos_id,\n      to_pos_name::VARCHAR                  AS to_pos_name\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_pos_relations_hist_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:13.252679Z", "completed_at": "2025-06-09T18:51:13.256491Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:13.256783Z", "completed_at": "2025-06-09T18:51:48.663050Z"}], "thread_id": "Thread-32", "execution_time": 35.41839623451233, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_hierarchy_type_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_pos_hierarchy_type\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                      AS created_by_id,\n      created_by_name::VARCHAR                  AS created_by_name,\n      created_date::VARCHAR                     AS created_date,\n      descr::VARCHAR                            AS descr,\n      effective_end_date::VARCHAR               AS effective_end_date,\n      effective_start_date::VARCHAR             AS effective_start_date,\n      is_active::VARCHAR                        AS is_active,\n      is_master::VARCHAR                        AS is_master,\n      modified_by_id::FLOAT                     AS modified_by_id,\n      modified_by_name::VARCHAR                 AS modified_by_name,\n      modified_date::VARCHAR                    AS modified_date,\n      pos_hierarchy_type_disp_name::VARCHAR     AS pos_hierarchy_type_disp_name,\n      pos_hierarchy_type_id::FLOAT              AS pos_hierarchy_type_id,\n      pos_hierarchy_type_name::VARCHAR          AS pos_hierarchy_type_name\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_pos_hierarchy_type_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:14.100590Z", "completed_at": "2025-06-09T18:51:14.119425Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:14.132030Z", "completed_at": "2025-06-09T18:51:48.634234Z"}], "thread_id": "Thread-27", "execution_time": 34.56417465209961, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_relations_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_pos_relations\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      from_pos_id::FLOAT                    AS from_pos_id,\n      from_pos_name::VARCHAR                AS from_pos_name,\n      id::FLOAT                             AS id,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      pos_rel_type_id::FLOAT                AS pos_rel_type_id,\n      to_pos_id::FLOAT                      AS to_pos_id,\n      to_pos_name::VARCHAR                  AS to_pos_name\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_pos_relations_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:14.673954Z", "completed_at": "2025-06-09T18:51:14.681966Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:14.682329Z", "completed_at": "2025-06-09T18:51:48.629998Z"}], "thread_id": "Thread-16", "execution_time": 33.95858120918274, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_position_hist_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_position_hist\n\n), renamed AS (\n\n    SELECT\n\n      business_group_id::FLOAT                  AS business_group_id,\n      created_by_id::FLOAT                      AS created_by_id,\n      created_by_name::VARCHAR                  AS created_by_name,\n      created_date::VARCHAR                     AS created_date,\n      credit_end_date::VARCHAR                  AS credit_end_date,\n      credit_start_date::VARCHAR                AS credit_start_date,\n      descr::VARCHAR                            AS descr,\n      effective_end_date::VARCHAR               AS effective_end_date,\n      effective_start_date::VARCHAR             AS effective_start_date,\n      incent_end_date::VARCHAR                  AS incent_end_date,\n      incent_st_date::VARCHAR                   AS incent_st_date,\n      is_active::VARCHAR                        AS is_active,\n      is_master::VARCHAR                        AS is_master,\n      master_position_id::FLOAT                 AS master_position_id,\n      modified_by_id::FLOAT                     AS modified_by_id,\n      modified_by_name::VARCHAR                 AS modified_by_name,\n      modified_date::VARCHAR                    AS modified_date,\n      name::VARCHAR                             AS name,\n      object_id::FLOAT                          AS object_id,\n      parent_position_id::FLOAT                 AS parent_position_id,\n      parent_record_id::FLOAT                   AS parent_record_id,\n      participant_id::FLOAT                     AS participant_id,\n      pos_group_id::FLOAT                       AS pos_group_id,\n      position_id::FLOAT                        AS position_id,\n      title_id::FLOAT                           AS title_id\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_position_hist_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:14.088509Z", "completed_at": "2025-06-09T18:51:14.119710Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:14.137267Z", "completed_at": "2025-06-09T18:51:48.632578Z"}], "thread_id": "Thread-14", "execution_time": 34.56347393989563, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_rel_type_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_pos_rel_type\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      descr::VARCHAR                        AS descr,\n      effective_end_date::VARCHAR           AS effective_end_date,\n      effective_start_date::VARCHAR         AS effective_start_date,\n      is_active::VARCHAR                    AS is_active,\n      is_master::VARCHAR                    AS is_master,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      name::VARCHAR                         AS name,\n      pos_rel_type_id::FLOAT                AS pos_rel_type_id\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_pos_rel_type_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:14.085124Z", "completed_at": "2025-06-09T18:51:14.119178Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:14.128494Z", "completed_at": "2025-06-09T18:51:48.636924Z"}], "thread_id": "Thread-13", "execution_time": 34.5681312084198, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_rel_type_hist_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_pos_rel_type_hist\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                      AS created_by_id,\n      created_by_name::VARCHAR                  AS created_by_name,\n      created_date::VARCHAR                     AS created_date,\n      descr::VARCHAR                            AS descr,\n      effective_end_date::VARCHAR               AS effective_end_date,\n      effective_start_date::VARCHAR             AS effective_start_date,\n      is_active::VARCHAR                        AS is_active,\n      is_master::VARCHAR                        AS is_master,\n      modified_by_id::FLOAT                     AS modified_by_id,\n      modified_by_name::VARCHAR                 AS modified_by_name,\n      modified_date::VARCHAR                    AS modified_date,\n      name::VARCHAR                             AS name,\n      object_id::FLOAT                          AS object_id,\n      pos_rel_type_id::FLOAT                    AS pos_rel_type_id\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_pos_rel_type_hist_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.572384Z", "completed_at": "2025-06-09T18:51:27.575816Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.576123Z", "completed_at": "2025-06-09T18:51:48.648106Z"}], "thread_id": "Thread-3", "execution_time": 21.21497106552124, "adapter_response": {}, "message": "Database Error in model zendesk_ticket_forms_source (models/sources/zendesk/zendesk_ticket_forms_source.sql)\n  000200: DataFusion error: Schema error: No field named \"DEFAULT\". Valid fields are source._sdc_batched_at, source._sdc_deleted_at, source._sdc_extracted_at, source.active, source.created_at, source.default, source.display_name, source.end_user_visible, source.id, source.in_all_brands, source.name, source.position, source.raw_display_name, source.raw_name, source.restricted_brand_ids, source.ticket_field_ids, source.updated_at, source.url.\n  compiled code at target/run/gitlab_snowflake/models/sources/zendesk/zendesk_ticket_forms_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_ticket_forms_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_zendesk.ticket_forms\n    \n), flattened AS (\n\n    SELECT\n\n      id::NUMBER                                AS ticket_form_id,\n      active::BOOLEAN                           AS is_form_active,\n      \"DEFAULT\"::BOOLEAN                        AS is_default,\n      display_name::VARCHAR                     AS display_name,\n      end_user_visible::BOOLEAN                 AS is_end_user_visible,\n      in_all_brands::BOOLEAN                    AS is_in_all_brands,\n      name::VARCHAR                             AS name,\n      position::NUMBER                          AS position,\n      raw_display_name::VARCHAR                 AS raw_display_name,\n      raw_name::VARCHAR                         AS raw_name,\n      restricted_brand_ids::VARCHAR             AS restricted_brand_ids,\n      ticket_field_ids::VARCHAR                 AS ticket_field_ids,\n      updated_at::TIMESTAMP                     AS updated_at,\n      created_at::TIMESTAMP                     AS created_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM flattened", "relation_name": "EMBUCKET.zendesk.zendesk_ticket_forms_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:14.070622Z", "completed_at": "2025-06-09T18:51:14.080039Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:14.112171Z", "completed_at": "2025-06-09T18:51:48.627187Z"}], "thread_id": "Thread-30", "execution_time": 34.56567096710205, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_part_assignment_hist_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_pos_part_assignment_hist\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      is_active::VARCHAR                    AS is_active,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      object_id::FLOAT                      AS object_id,\n      participant_id::FLOAT                 AS participant_id,\n      participant_name::VARCHAR             AS participant_name,\n      pos_part_assignment_id::FLOAT         AS pos_part_assignment_id,\n      position_id::FLOAT                    AS position_id,\n      position_name::VARCHAR                AS position_name\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_pos_part_assignment_hist_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:14.772055Z", "completed_at": "2025-06-09T18:51:14.775431Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:14.775697Z", "completed_at": "2025-06-09T18:51:48.643481Z"}], "thread_id": "Thread-6", "execution_time": 33.872100830078125, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_quota_assignment_hist_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_quota_assignment_hist\n\n), renamed AS (\n\n    SELECT\n\n      amount::FLOAT                         AS amount,\n      amount_unit_type_id::FLOAT            AS amount_unit_type_id,\n      assignment_id::FLOAT                  AS assignment_id,\n      assignment_name::VARCHAR              AS assignment_name,\n      assignment_type::FLOAT                AS assignment_type,\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      description::VARCHAR                  AS description,\n      effective_end_period_id::FLOAT        AS effective_end_period_id,\n      effective_start_period_id::FLOAT      AS effective_start_period_id,\n      is_active::VARCHAR                    AS is_active,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      object_id::FLOAT                      AS object_id,\n      period_id::FLOAT                      AS period_id,\n      quota_assignment_id::FLOAT            AS quota_assignment_id,\n      quota_id::FLOAT                       AS quota_id\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_quota_assignment_hist_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:19.679565Z", "completed_at": "2025-06-09T18:51:19.688163Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:19.688632Z", "completed_at": "2025-06-09T18:51:48.765689Z"}], "thread_id": "Thread-19", "execution_time": 29.086856842041016, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_quota_relationship_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_quota_relationship\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT              AS created_by_id,\n      created_date::VARCHAR             AS created_date,\n      description::VARCHAR              AS description,\n      is_active::VARCHAR                AS is_active,\n      label::VARCHAR                    AS label,\n      modified_by_id::FLOAT             AS modified_by_id,\n      modified_date::VARCHAR            AS modified_date,\n      name::VARCHAR                     AS name,\n      quota_relationship_id::VARCHAR    AS quota_relationship_id\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_quota_relationship_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:00.547790Z", "completed_at": "2025-06-09T18:51:00.564512Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:00.574761Z", "completed_at": "2025-06-09T18:51:48.856182Z"}], "thread_id": "Thread-18", "execution_time": 48.41769218444824, "adapter_response": {}, "message": "Database Error in model version_hosts_source (models/sources/version/version_hosts_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/version/version_hosts_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.version_hosts_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.version_db.hosts\n    \n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n), renamed AS (\n\n    SELECT\n      id::NUMBER                AS host_id,\n      url::VARCHAR              AS host_url,\n      created_at::TIMESTAMP     AS created_at,\n      updated_at::TIMESTAMP     AS updated_at,\n      true::BOOLEAN             AS has_star,\n      fortune_rank::NUMBER      AS fortune_rank\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.version_db.version_hosts_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.472526Z", "completed_at": "2025-06-09T18:51:27.476233Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.476637Z", "completed_at": "2025-06-09T18:51:48.585866Z"}], "thread_id": "Thread-22", "execution_time": 21.158997058868408, "adapter_response": {}, "message": "Database Error in model zendesk_ticket_comments_source (models/sources/zendesk/zendesk_ticket_comments_source.sql)\n  000200: DataFusion error: Schema error: No field named \"TYPE\". Valid fields are source._sdc_batched_at, source._sdc_deleted_at, source._sdc_extracted_at, source.attachments, source.audit_id, source.author_id, source.body, source.created_at, source.html_body, source.id, source.metadata, source.plain_body, source.public, source.ticket_id, source.type, source.via.\n  compiled code at target/run/gitlab_snowflake/models/sources/zendesk/zendesk_ticket_comments_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_ticket_comments_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_zendesk.ticket_comments\n\n),\n\nrenamed AS (\n\n    SELECT\n\n        --ids\n        audit_id,\n        author_id,\n        id                                                  AS ticket_comment_id,\n        ticket_id,\n\n        --field\n        body                                                AS comment_body,\n        html_body                                           AS comment_html_body,\n        plain_body                                          AS comment_plain_body,\n        public                                              AS is_public,\n        \"TYPE\"                                              AS comment_type,\n\n        --dates\n        created_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.sensitive.zendesk_ticket_comments_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:46.783902Z", "completed_at": "2025-06-09T18:51:46.795452Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:46.795874Z", "completed_at": "2025-06-09T18:51:48.812908Z"}], "thread_id": "Thread-5", "execution_time": 2.089831829071045, "adapter_response": {}, "message": "Database Error in model zuora_central_sandbox_accounting_period_source (models/sources/zuora_central_sandbox/zuora_central_sandbox_accounting_period_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,263)..Location(1,275)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_central_sandbox/zuora_central_sandbox_accounting_period_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_central_sandbox_accounting_period_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_central_sandbox_fivetran.accounting_period\n\n), renamed AS (\n\n    SELECT\n      --Primary Keys\n     id::VARCHAR                       AS accounting_period_id,\n\n      --Info\n      end_date::TIMESTAMP_TZ           AS end_date,\n      fiscal_year::NUMBER              AS fiscal_year,\n      name::VARCHAR                    AS accounting_period_name,\n      start_date::TIMESTAMP_TZ         AS accounting_period_start_date,\n      status::VARCHAR                  AS accounting_period_status,\n      updated_by_id::VARCHAR           AS updated_by_id,\n      updated_date::TIMESTAMP_TZ       AS updated_date\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_central_sandbox.zuora_central_sandbox_accounting_period_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:00.618286Z", "completed_at": "2025-06-09T18:51:00.632661Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:00.633031Z", "completed_at": "2025-06-09T18:51:48.877791Z"}], "thread_id": "Thread-25", "execution_time": 48.36371088027954, "adapter_response": {}, "message": "Database Error in model version_usage_ping_errors_source (models/sources/version/version_usage_ping_errors_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/version/version_usage_ping_errors_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.version_usage_ping_errors_source", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.version_db.usage_ping_errors\n  \n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY created_at DESC) = 1\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER AS id,\n    version_id::NUMBER AS version_id,\n    host_id::NUMBER AS host_id,\n    uuid::VARCHAR AS uuid,\n    elapsed::FLOAT AS elapsed,\n    message::VARCHAR AS message,\n    created_at::TIMESTAMP AS created_at\n  FROM source\n\n)\n\nSELECT *\nFROM renamed\nORDER BY created_at", "relation_name": "EMBUCKET.version_db.version_usage_ping_errors_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:14.106330Z", "completed_at": "2025-06-09T18:51:14.124390Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:14.140987Z", "completed_at": "2025-06-09T18:51:48.796676Z"}], "thread_id": "Thread-7", "execution_time": 34.720542907714844, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_title_assignment_hist_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_pos_title_assignment_hist\n\n), renamed AS (\n\n    SELECT\n\n      created_by_id::FLOAT                  AS created_by_id,\n      created_by_name::VARCHAR              AS created_by_name,\n      created_date::VARCHAR                 AS created_date,\n      is_active::VARCHAR                    AS is_active,\n      modified_by_id::FLOAT                 AS modified_by_id,\n      modified_by_name::VARCHAR             AS modified_by_name,\n      modified_date::VARCHAR                AS modified_date,\n      object_id::FLOAT                      AS object_id,\n      pos_title_assignment_id::FLOAT        AS pos_title_assignment_id,\n      position_id::FLOAT                    AS position_id,\n      position_name::VARCHAR                AS position_name,\n      title_id::FLOAT                       AS title_id,\n      title_name::VARCHAR                   AS title_name\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_pos_title_assignment_hist_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:45.083324Z", "completed_at": "2025-06-09T18:51:45.086921Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:45.087213Z", "completed_at": "2025-06-09T18:51:48.950454Z"}], "thread_id": "Thread-8", "execution_time": 3.948512077331543, "adapter_response": {}, "message": "Database Error in model zuora_amendment_source (models/sources/zuora/zuora_amendment_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,349)..Location(1,361)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora/zuora_amendment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_amendment_source", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.amendment\n\n), renamed AS (\n\n    SELECT\n      --keys\n      id::VARCHAR                          AS amendment_id,\n      subscriptionid::VARCHAR              AS subscription_id,\n      code::VARCHAR                        AS amendment_code,\n      status::VARCHAR                      AS amendment_status,\n      name::VARCHAR                        AS amendment_name,\n      serviceactivationdate::TIMESTAMP_TZ  AS service_activation_date,\n      currentterm::NUMBER                  AS current_term,\n      description::VARCHAR                 AS amendment_description,\n      currenttermperiodtype::VARCHAR       AS current_term_period_type,\n      customeracceptancedate::TIMESTAMP_TZ AS customer_acceptance_date,\n      effectivedate::TIMESTAMP_TZ          AS effective_date,\n      renewalsetting::VARCHAR              AS renewal_setting,\n      termstartdate::TIMESTAMP_TZ          AS term_start_date,\n      contracteffectivedate::TIMESTAMP_TZ  AS contract_effective_date,\n      type::VARCHAR                        AS amendment_type,\n      autorenew::BOOLEAN                   AS auto_renew,\n      renewaltermperiodtype::VARCHAR       AS renewal_term_period_type,\n      renewalterm::NUMBER                  AS renewal_term,\n      termtype::VARCHAR                    AS term_type,\n\n      -- metadata\n      createdbyid::VARCHAR                 AS created_by_id,\n      createddate::TIMESTAMP_TZ            AS created_date,\n      updatedbyid::VARCHAR                 AS updated_by_id,\n      updateddate::TIMESTAMP_TZ            AS updated_date,\n      deleted::BOOLEAN                     AS is_deleted,\n      _sdc_table_version::NUMBER           AS sdc_table_version,\n      _sdc_received_at::TIMESTAMP_TZ       AS sdc_received_at,\n      _sdc_sequence::NUMBER                AS sdc_sequence,\n      _sdc_batched_at::TIMESTAMP_TZ        AS sdc_batched_at,\n      _sdc_extracted_at::TIMESTAMP_TZ      AS sdc_extracted_at\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_amendment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:43.206017Z", "completed_at": "2025-06-09T18:51:43.214948Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:43.215312Z", "completed_at": "2025-06-09T18:51:48.893818Z"}], "thread_id": "Thread-1", "execution_time": 5.8405890464782715, "adapter_response": {}, "message": "Database Error in model zuora_amendment_snapshots_source (models/legacy/snapshots/base/zuora_amendment_snapshots_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,375)..Location(1,387)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/zuora_amendment_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_amendment_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.zuora_amendment_snapshots\n\n), renamed AS (\n\n    SELECT\n      --keys\n      id::VARCHAR                          AS amendment_id,\n      subscriptionid::VARCHAR              AS subscription_id,\n      code::VARCHAR                        AS amendment_code,\n      status::VARCHAR                      AS amendment_status,\n      name::VARCHAR                        AS amendment_name,\n      serviceactivationdate::TIMESTAMP_TZ  AS service_activation_date,\n      currentterm::NUMBER                  AS current_term,\n      description::VARCHAR                 AS amendment_description,\n      currenttermperiodtype::VARCHAR       AS current_term_period_type,\n      customeracceptancedate::TIMESTAMP_TZ AS customer_acceptance_date,\n      effectivedate::TIMESTAMP_TZ          AS effective_date,\n      renewalsetting::VARCHAR              AS renewal_setting,\n      termstartdate::TIMESTAMP_TZ          AS term_start_date,\n      contracteffectivedate::TIMESTAMP_TZ  AS contract_effective_date,\n      type::VARCHAR                        AS amendment_type,\n      autorenew::BOOLEAN                   AS auto_renew,\n      renewaltermperiodtype::VARCHAR       AS renewal_term_period_type,\n      renewalterm::NUMBER                  AS renewal_term,\n      termtype::VARCHAR                    AS term_type,\n\n      -- metadata\n      createdbyid::VARCHAR                 AS created_by_id,\n      createddate::TIMESTAMP_TZ            AS created_date,\n      updatedbyid::VARCHAR                 AS updated_by_id,\n      updateddate::TIMESTAMP_TZ            AS updated_date,\n      deleted::BOOLEAN                     AS is_deleted,\n      _sdc_table_version::NUMBER           AS sdc_table_version,\n      _sdc_received_at::TIMESTAMP_TZ       AS sdc_received_at,\n      _sdc_sequence::NUMBER                AS sdc_sequence,\n      _sdc_batched_at::TIMESTAMP_TZ        AS sdc_batched_at,\n      _sdc_extracted_at::TIMESTAMP_TZ      AS sdc_extracted_at,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.zuora_amendment_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:19.674933Z", "completed_at": "2025-06-09T18:51:19.682623Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:19.682967Z", "completed_at": "2025-06-09T18:51:48.763912Z"}], "thread_id": "Thread-26", "execution_time": 29.09055995941162, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_quota_hist_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_xactly.xc_quota_hist\n\n), renamed AS (\n\n    SELECT\n\n      classification_name::VARCHAR              AS classification_name,\n      classification_type::FLOAT                AS classification_type,\n      created_by_id::FLOAT                      AS created_by_id,\n      created_by_name::VARCHAR                  AS created_by_name,\n      created_date::VARCHAR                     AS created_date,\n      description::VARCHAR                      AS description,\n      is_active::VARCHAR                        AS is_active,\n      modified_by_id::FLOAT                     AS modified_by_id,\n      modified_by_name::VARCHAR                 AS modified_by_name,\n      modified_date::VARCHAR                    AS modified_date,\n      name::VARCHAR                             AS name,\n      object_id::FLOAT                          AS object_id,\n      quota_id::FLOAT                           AS quota_id,\n      quota_interval_id::FLOAT                  AS quota_interval_id,\n      quota_interval_name::VARCHAR              AS quota_interval_name,\n      quota_period_id::FLOAT                    AS quota_period_id,\n      quota_period_name::VARCHAR                AS quota_period_name,\n      quota_value::FLOAT                        AS quota_value,\n      quota_value_unit_type_id::FLOAT           AS quota_value_unit_type_id,\n      quota_value_unit_type_name::VARCHAR       AS quota_value_unit_type_name,\n      source_id::FLOAT                          AS source_id\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.xactly_quota_hist_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.326185Z", "completed_at": "2025-06-09T18:51:27.353878Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.372957Z", "completed_at": "2025-06-09T18:51:48.825204Z"}], "thread_id": "Thread-12", "execution_time": 21.56270170211792, "adapter_response": {}, "message": "Database Error in model zendesk_sla_policies_source (models/sources/zendesk/zendesk_sla_policies_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,1035)..Location(1,1042)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,1043)..Location(1,1048)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,1052)..Location(1,1062)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"filter\", quote_style: None, span: Span(Location(1,1063)..Location(1,1069)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"path\", quote_style: None, span: Span(Location(1,1072)..Location(1,1076)) }, arg: Expr(Value(ValueWithSpan { value: SingleQuotedString(\"all\"), span: Span(Location(1,1080)..Location(1,1085)) })), operator: RightArrow }, Named { name: Ident { value: \"outer\", quote_style: None, span: Span(Location(1,1087)..Location(1,1092)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(true), span: Span(Location(1,1096)..Location(1,1100)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"filter_all\", quote_style: None, span: Span(Location(1,1105)..Location(1,1115)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/zendesk/zendesk_sla_policies_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_sla_policies_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_zendesk.sla_policies\n\n), renamed AS (\n\n  SELECT\n    id::VARCHAR                                      AS zendesk_sla_policy_id,\n    title::VARCHAR                                   AS zendesk_sla_title,\n    description::VARCHAR                             AS zendesk_sla_description,\n    filter_all.value['field']::VARCHAR               AS filter_all_field,\n    filter_all.value['operator']::VARCHAR            AS filter_all_operator,\n    filter_all.value['value']::VARCHAR               AS filter_all_value,\n    filter_any.value['field']::VARCHAR               AS filter_any_field,\n    filter_any.value['operator']::VARCHAR            AS filter_any_operator,\n    filter_any.value['value']::VARCHAR               AS filter_any_value,\n    policy_metrics.value['business_hours']::VARCHAR  AS policy_metrics_business_hours,\n    policy_metrics.value['metric']::VARCHAR          AS policy_metrics_metric,\n    policy_metrics.value['priority']::VARCHAR        AS policy_metrics_priority,\n    policy_metrics.value['target']::VARCHAR          AS policy_metrics_target\n  FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(filter), path => 'all', outer => true) filter_all,\n    LATERAL FLATTEN(INPUT => parse_json(filter), path => 'any', outer => true) filter_any,\n    LATERAL FLATTEN(INPUT => parse_json(policy_metrics), outer => true) policy_metrics\n\n), keyed AS (\n\n  SELECT md5(cast(coalesce(cast(zendesk_sla_policy_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(filter_all_field as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(filter_all_operator as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(filter_all_value as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(filter_any_field as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(filter_any_operator as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(filter_any_value as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(policy_metrics_business_hours as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(policy_metrics_metric as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(policy_metrics_priority as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(policy_metrics_target as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS zendesk_sla_surrogate_key,\n        *\n  FROM renamed\n\n)\n\nSELECT *\nFROM keyed", "relation_name": "EMBUCKET.zendesk.zendesk_sla_policies_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:40.492895Z", "completed_at": "2025-06-09T18:51:40.500601Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:40.504131Z", "completed_at": "2025-06-09T18:51:48.900896Z"}], "thread_id": "Thread-24", "execution_time": 8.492508888244629, "adapter_response": {}, "message": "Database Error in model zengrc_objective_source (models/sources/zengrc/zengrc_objective_source.sql)\n  000200: DataFusion error: Execution error: schema provider does not support registering tables\n  compiled code at target/run/gitlab_snowflake/models/sources/zengrc/zengrc_objective_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zengrc_objective_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_zengrc.objectives\n\n),\n\nrenamed AS (\n\n    SELECT\n      code::VARCHAR                                          AS objective_code,\n      created_at::TIMESTAMP                                  AS objective_created_at,\n      description::VARCHAR                                   AS objective_description,\n      id::NUMBER                                             AS objective_id,\n      os_state::VARCHAR                                      AS objective_os_state,\n      status::VARCHAR                                        AS objective_status,\n      title::VARCHAR                                         AS objective_title,\n      type::VARCHAR                                          AS zengrc_object_type,\n      updated_at::TIMESTAMP                                  AS objective_updated_at,\n      _sdc_extracted_at::TIMESTAMP                           AS objective_loaded_at,\n      PARSE_JSON(custom_attributes)['3']['value']::VARCHAR   AS fedramp_parameter,\n      PARSE_JSON(custom_attributes)['219']['value']::VARCHAR AS security_requirement_nist_800_171\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zengrc.zengrc_objective_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:46.871209Z", "completed_at": "2025-06-09T18:51:46.874469Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:46.874743Z", "completed_at": "2025-06-09T18:51:48.804685Z"}], "thread_id": "Thread-15", "execution_time": 1.9957027435302734, "adapter_response": {}, "message": "Database Error in model zuora_central_sandbox_invoice_payment_source (models/sources/zuora_central_sandbox/zuora_central_sandbox_invoice_payment_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,968)..Location(1,980)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_central_sandbox/zuora_central_sandbox_invoice_payment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_central_sandbox_invoice_payment_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_central_sandbox_fivetran.invoice_payment\n\n), renamed AS (\n\n    SELECT\n      --keys\n      id::VARCHAR                              AS invoice_payment_id,\n      invoice_id::VARCHAR                      AS invoice_id,\n      account_id::VARCHAR                      AS account_id,\n      accounting_period_id::VARCHAR            AS accounting_period_id,\n\n      --info\n      bill_to_contact_id::VARCHAR              AS bill_to_contact_id,\n      cash_accounting_code_id::VARCHAR         AS cash_accounting_code_id,\n      default_payment_method_id::VARCHAR       AS default_payment_method_id,\n      journal_entry_id::VARCHAR                AS journal_entry_id,\n      journal_run_id::VARCHAR                  AS journal_run_id,\n      -- parent_account_id::VARCHAR               AS parent_account_id,\n      payment_id::VARCHAR                      AS payment_id,\n      payment_method_id::VARCHAR               AS payment_method_id,\n      payment_method_snapshot_id::VARCHAR      AS payment_method_snapshot_id,\n      sold_to_contact_id::VARCHAR              AS sold_to_contact_id,\n\n      --financial info\n      amount::FLOAT                            AS payment_amount,\n      refund_amount::FLOAT                     AS refund_amount,\n\n      --metadata\n      updated_by_id::VARCHAR                   AS updated_by_id,\n      updated_date::TIMESTAMP_TZ               AS updated_date,\n      _FIVETRAN_DELETED::BOOLEAN               AS is_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_central_sandbox.zuora_central_sandbox_invoice_payment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:00.520725Z", "completed_at": "2025-06-09T18:51:00.540747Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:00.559317Z", "completed_at": "2025-06-09T18:51:48.879216Z"}], "thread_id": "Thread-11", "execution_time": 48.53677797317505, "adapter_response": {}, "message": "Database Error in model version_conversational_development_indices_source (models/sources/version/version_conversational_development_indices_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/version/version_conversational_development_indices_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.version_conversational_development_indices_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.version_db.conversational_development_indices\n    \n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n), renamed AS (\n\n    SELECT\n      id::NUMBER                                   AS id,\n      usage_data_id::NUMBER                        AS usage_data_id,\n      leader_boards::FLOAT                         AS leader_boards,\n      instance_boards::FLOAT                       AS instance_boards,\n      leader_ci_pipelines::FLOAT                   AS leader_ci_pipelines,\n      instance_ci_pipelines::FLOAT                 AS instance_ci_pipelines,\n      leader_deployments::FLOAT                    AS leader_deployments,\n      instance_deployments::FLOAT                  AS instance_deployments,\n      leader_environments::FLOAT                   AS leader_environments,\n      instance_environments::FLOAT                 AS instance_environments,\n      leader_issues::FLOAT                         AS leader_issues,\n      instance_issues::FLOAT                       AS instance_issues,\n      leader_merge_requests::FLOAT                 AS leader_merge_requests,\n      instance_merge_requests::FLOAT               AS instance_merge_requests,\n      leader_milestones::FLOAT                     AS leader_milestones,\n      instance_milestones::FLOAT                   AS instance_milestones,\n      leader_notes::FLOAT                          AS leader_notes,\n      instance_notes::FLOAT                        AS instance_notes,\n      leader_projects_prometheus_active::FLOAT     AS leader_projects_prometheus_active,\n      instance_projects_prometheus_active::FLOAT   AS instance_projects_prometheus_active,\n      leader_service_desk_issues::FLOAT            AS leader_service_desk_issues,\n      instance_service_desk_issues::FLOAT          AS instance_service_desk_issues,\n      percentage_boards::FLOAT                     AS percentage_boards,\n      percentage_ci_pipelines::FLOAT               AS percentage_ci_pipelines,\n      percentage_deployments::FLOAT                AS percentage_deployments,\n      percentage_environments::FLOAT               AS percentage_environments,\n      percentage_issues::FLOAT                     AS percentage_issues,\n      percentage_merge_requests::FLOAT             AS percentage_merge_requests,\n      percentage_milestones::FLOAT                 AS percentage_milestones,\n      percentage_notes::FLOAT                      AS percentage_notes,\n      percentage_projects_prometheus_active::FLOAT AS percentage_projects_prometheus_active,\n      percentage_service_desk_issues::FLOAT        AS percentage_service_desk_issues,\n      created_at::TIMESTAMP                        AS created_at,\n      updated_at::TIMESTAMP                        AS updated_at\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.version_db.version_conversational_development_indices_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:40.500891Z", "completed_at": "2025-06-09T18:51:40.509618Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:40.510000Z", "completed_at": "2025-06-09T18:51:48.992721Z"}], "thread_id": "Thread-17", "execution_time": 8.611319065093994, "adapter_response": {}, "message": "Database Error in model zengrc_risk_source (models/sources/zengrc/zengrc_risk_source.sql)\n  000200: DataFusion error: Execution error: schema provider does not support registering tables\n  compiled code at target/run/gitlab_snowflake/models/sources/zengrc/zengrc_risk_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zengrc_risk_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_zengrc.risks\n\n),\n\nrenamed AS (\n\n    SELECT\n      code::VARCHAR                                          AS risk_code,\n      created_at::TIMESTAMP                                  AS risk_created_at,\n      custom_attributes::VARIANT                             AS risk_custom_attributes,\n      description::VARCHAR                                   AS risk_description,\n      id::NUMBER                                             AS risk_id,\n      risk_vector_score_values::VARIANT                      AS risk_vector_score_values,\n      status::VARCHAR                                        AS risk_status,\n      title::VARCHAR                                         AS risk_title,\n      type::VARCHAR                                          AS zengrc_object_type,\n      updated_at::TIMESTAMP                                  AS risk_updated_at,\n      _sdc_extracted_at::TIMESTAMP                           AS risk_loaded_at,\n      PARSE_JSON(custom_attributes)['156']['value']::VARCHAR AS acceptance_of_risk_ownership,\n      PARSE_JSON(custom_attributes)['44']['value']::VARCHAR  AS cia_impact,\n      PARSE_JSON(custom_attributes)['79']['value']::DATE     AS risk_identified_date,\n      PARSE_JSON(custom_attributes)['81']['value']::VARCHAR  AS existing_mitigations,\n      PARSE_JSON(custom_attributes)['57']['value']::VARCHAR  AS interested_parties,\n      PARSE_JSON(custom_attributes)['158']['value']::BOOLEAN AS is_risk_ready_for_review_and_closure,\n      PARSE_JSON(custom_attributes)['46']['value']::VARCHAR  AS risk_owner,\n      PARSE_JSON(custom_attributes)['74']['value']::VARCHAR  AS risk_tier,\n      PARSE_JSON(custom_attributes)['160']['value']::DATE    AS risk_treatment_completion_date,\n      PARSE_JSON(custom_attributes)['159']['value']::VARCHAR AS risk_treatment_option_selected,\n      PARSE_JSON(custom_attributes)['45']['value']::VARCHAR  AS root_cause,\n      PARSE_JSON(custom_attributes)['58']['value']::VARCHAR  AS threat_source,\n      PARSE_JSON(custom_attributes)['148']['value']::BOOLEAN AS is_tprm_related,\n      PARSE_JSON(custom_attributes)['75']['value']::BOOLEAN  AS is_within_risk_appetite\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zengrc.zengrc_risk_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.055328Z", "completed_at": "2025-06-09T18:51:49.101009Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.142489Z", "completed_at": "2025-06-09T18:51:50.465636Z"}], "thread_id": "Thread-13", "execution_time": 1.4472038745880127, "adapter_response": {}, "message": "Database Error in model zuora_central_sandbox_revenue_schedule_item_source (models/sources/zuora_central_sandbox/zuora_central_sandbox_revenue_schedule_item_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,801)..Location(1,813)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_central_sandbox/zuora_central_sandbox_revenue_schedule_item_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_central_sandbox_revenue_schedule_item_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_central_sandbox_fivetran.revenue_schedule_item\n\n), renamed AS (\n\n    SELECT\n      --Primary Keys\n      id::VARCHAR                                   AS revenue_schedule_item_id,\n\n      --Foreign Keys\n      account_id::VARCHAR                           AS account_id,\n      -- parent_account_id::VARCHAR                    AS parent_account_id,\n      accounting_period_id::VARCHAR                 AS accounting_period_id,\n      amendment_id::VARCHAR                         AS amendment_id,\n      subscription_id::VARCHAR                      AS subscription_id,\n      product_id::VARCHAR                           AS product_id,\n      rate_plan_charge_id::VARCHAR                  AS rate_plan_charge_id,\n      rate_plan_id::VARCHAR                         AS rate_plan_id,\n      sold_to_contact_id::VARCHAR                   AS sold_to_contact_id,\n\n      --Info\n      amount::FLOAT                                 AS revenue_schedule_item_amount,\n      bill_to_contact_id::VARCHAR                   AS bill_to_contact_id,\n      currency::VARCHAR                             AS currency,\n      created_by_id::VARCHAR                        AS created_by_id,\n      created_date::TIMESTAMP_TZ                    AS created_date,\n      default_payment_method_id::VARCHAR            AS default_payment_method_id,\n      _FIVETRAN_DELETED::BOOLEAN                    AS is_deleted,\n      updated_by_id::VARCHAR                        AS updated_by_id,\n      updated_date::TIMESTAMP_TZ                    AS updated_date\n\n      FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_central_sandbox.zuora_central_sandbox_revenue_schedule_item_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:43.200103Z", "completed_at": "2025-06-09T18:51:43.209177Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:43.209465Z", "completed_at": "2025-06-09T18:51:48.962790Z"}], "thread_id": "Thread-4", "execution_time": 5.888654947280884, "adapter_response": {}, "message": "Database Error in model zuora_accounting_period_source (models/sources/zuora/zuora_accounting_period_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,211)..Location(1,223)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora/zuora_accounting_period_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_accounting_period_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.accountingperiod\n\n), renamed AS (\n\n    SELECT\n      --Primary Keys\n      id::VARCHAR                       AS accounting_period_id,\n\n      --Info\n      enddate::TIMESTAMP_TZ             AS end_date,\n      fiscalyear::NUMBER                AS fiscal_year,\n      name::VARCHAR                     AS accounting_period_name,\n      startdate::TIMESTAMP_TZ           AS accounting_period_start_date,\n      status::VARCHAR                   AS accounting_period_status,\n      updatedbyid::VARCHAR              AS updated_by_id,\n      updateddate::TIMESTAMP_TZ         AS updated_date\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_accounting_period_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:00.636456Z", "completed_at": "2025-06-09T18:51:00.644244Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:00.645733Z", "completed_at": "2025-06-09T18:51:48.867220Z"}], "thread_id": "Thread-10", "execution_time": 48.26790928840637, "adapter_response": {}, "message": "Database Error in model version_usage_ping_metadata_source (models/sources/version/version_usage_ping_metadata_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/version/version_usage_ping_metadata_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.version_usage_ping_metadata_source", "compiled": true, "compiled_code": "\n\n\nWITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.version_db.usage_ping_metadata\n  \n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY created_at DESC) = 1\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER AS id,\n    created_at::TIMESTAMP AS created_at,\n    metrics::VARCHAR as metrics,\n    uuid::VARCHAR AS uuid\n  FROM source\n\n)\n\nSELECT *\nFROM renamed\nORDER BY created_at", "relation_name": "EMBUCKET.version_db.version_usage_ping_metadata_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:46.780618Z", "completed_at": "2025-06-09T18:51:46.790061Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:46.790479Z", "completed_at": "2025-06-09T18:51:48.933533Z"}], "thread_id": "Thread-29", "execution_time": 2.3343307971954346, "adapter_response": {}, "message": "Database Error in model zuora_booking_transaction_source (models/sources/zuora/zuora_booking_transaction_source.sql)\n  000200: DataFusion error: Execution error: schema provider does not support registering tables\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora/zuora_booking_transaction_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_booking_transaction_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.zuora_stitch.bookingtransaction\n\n),\n\nrenamed AS (\n\n  SELECT\n    -- primary key \n    id                 AS booking_transaction_id,\n\n    -- keys\n    rateplanchargeid   AS rate_plan_charge_id,\n\n    -- additive fields\n    listprice             AS list_price\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_booking_transaction_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:48.929668Z", "completed_at": "2025-06-09T18:51:49.123671Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.152776Z", "completed_at": "2025-06-09T18:51:50.473313Z"}], "thread_id": "Thread-32", "execution_time": 1.7060291767120361, "adapter_response": {}, "message": "Database Error in model zuora_central_sandbox_product_rate_plan_source (models/sources/zuora_central_sandbox/zuora_central_sandbox_product_rate_plan_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,363)..Location(1,375)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_central_sandbox/zuora_central_sandbox_product_rate_plan_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_central_sandbox_product_rate_plan_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_central_sandbox_fivetran.product_rate_plan\n\n), renamed AS (\n\n    SELECT\n      --Primary Keys\n      id::VARCHAR                               AS product_rate_plan_id,\n\n      --Info\n      product_id::VARCHAR                       AS product_id,\n      description::VARCHAR                      AS product_rate_plan_description,\n      effective_end_date::TIMESTAMP_TZ          AS effective_end_date,\n      effective_start_date::TIMESTAMP_TZ        AS effective_start_date,\n      name::VARCHAR                             AS product_rate_plan_name,\n      created_by_id::VARCHAR                    AS created_by_id,\n      created_date::TIMESTAMP_TZ                AS created_date,\n      updated_by_id::VARCHAR                    AS updated_by_id,\n      updated_date::TIMESTAMP_TZ                AS updated_date,\n      _FIVETRAN_DELETED                         AS is_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_central_sandbox.zuora_central_sandbox_product_rate_plan_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.074954Z", "completed_at": "2025-06-09T18:51:49.131250Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.184438Z", "completed_at": "2025-06-09T18:51:51.115292Z"}], "thread_id": "Thread-30", "execution_time": 2.0518558025360107, "adapter_response": {}, "message": "Database Error in model zuora_credit_balance_adjustment_source (models/sources/zuora/zuora_credit_balance_adjustment_source.sql)\n  000200: DataFusion error: Execution error: schema provider does not support registering tables\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora/zuora_credit_balance_adjustment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_credit_balance_adjustment_source", "compiled": true, "compiled_code": "-- depends_on: EMBUCKET.seed_finance.zuora_excluded_accounts\n\n\n\nWITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.zuora_stitch.creditbalanceadjustment\n\n),\n\nrenamed AS (\n\n  SELECT\n    -- primary key \n    id                 AS credit_balance_adjustment_id,\n\n    -- keys\n    number             AS credit_balance_adjustment_number,\n    accountid          AS account_id,\n    invoiceid          AS invoice_id,\n    accountingperiodid AS accounting_period_id,\n\n\n    -- credit balance adjustment dates\n    adjustmentdate     AS credit_balance_adjustment_date,\n\n    -- additive fields\n    amount             AS credit_balance_adjustment_amount,\n    status             AS credit_balance_adjustment_status,\n    type               AS credit_balance_adjustment_type\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_credit_balance_adjustment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.242403Z", "completed_at": "2025-06-09T18:51:49.305503Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:50.435306Z", "completed_at": "2025-06-09T18:51:51.276010Z"}], "thread_id": "Thread-8", "execution_time": 2.2053403854370117, "adapter_response": {}, "message": "Database Error in model zuora_order_action_source (models/sources/zuora_order/zuora_order_action_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,387)..Location(1,399)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_order/zuora_order_action_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_order_action_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch_rest_api.orderaction\n\n), renamed AS (\n\n    SELECT\n      --Primary Keys\n      id::VARCHAR                               AS order_action_id,\n\n      --Info\n      accountid::VARCHAR                        AS account_id,\n      autogenerated::VARCHAR                    AS auto_generated,\n      autorenew::VARCHAR                        AS auto_renew,\n      billtocontactid::VARCHAR                  AS bill_to_contact_id,\n      cancellationeffectivedate::TIMESTAMP_TZ   AS cancellation_effective_date,\n      cancellationpolicy::VARCHAR               AS cancellation_policy,\n      changereason::VARCHAR                     AS change_reason,\n      clearingexistingbilltocontact::VARCHAR    AS clearing_existing_bill_to_contact,\n      clearingexistingpaymentterm::VARCHAR      AS clearing_existing_payment_term,\n      contracteffectivedate::TIMESTAMP_TZ       AS contract_effective_date,\n      createdbyid::VARCHAR                      AS created_by_id,\n      createddate::TIMESTAMP_TZ                 AS created_date,\n      currentterm::VARCHAR                      AS current_term,\n      currenttermperiodtype::VARCHAR            AS current_term_period_type,\n      customeracceptancedate::TIMESTAMP_TZ      AS customer_acceptance_date,\n      defaultpaymentmethodid::VARCHAR           AS default_payment_method_id,\n      effectivepolicy::VARCHAR                  AS effective_policy,\n      orderactionbilltoid::VARCHAR              AS order_action_bill_to_id,\n      orderid::VARCHAR                          AS order_id,\n      parentaccountid::VARCHAR                  AS parent_account_id,\n      paymentterm::VARCHAR                      AS payment_term,\n      renewalterm::VARCHAR                      AS renewal_term,\n      renewaltermperiodtype::VARCHAR            AS renewal_term_period_type,\n      renewsetting::VARCHAR                     AS renew_setting,\n      sequence::VARCHAR                         AS sequence,\n      serviceactivationdate::TIMESTAMP_TZ       AS service_activation_date,\n      soldtocontactid::VARCHAR                  AS sold_to_contact_id,\n      subscriptionid::VARCHAR                   AS subscription_id,\n      subscriptionowneraccountbilltoid::VARCHAR AS subscription_owner_account_bill_to_id,\n      subscriptionowneraccountid::VARCHAR       AS subscription_owner_account_id,\n      subscriptionowneraccountsoldtoid::VARCHAR AS subscription_owner_account_sold_to_id,\n      subscriptionversionamendmentId::VARCHAR   AS amendment_id,\n      subtype::VARCHAR                          AS subtype,\n      termstartdate::TIMESTAMP_TZ               AS term_start_date,\n      termtype::VARCHAR                         AS term_type,\n      type::VARCHAR                             AS type,\n      updatedbyid::VARCHAR                      AS updated_by_id,\n      updateddate::TIMESTAMP_TZ                 AS updated_date\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_order.zuora_order_action_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.066291Z", "completed_at": "2025-06-09T18:51:49.149622Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.208176Z", "completed_at": "2025-06-09T18:51:51.275461Z"}], "thread_id": "Thread-19", "execution_time": 2.225105047225952, "adapter_response": {}, "message": "Database Error in model zuora_invoice_item_adjustment_source (models/sources/zuora/zuora_invoice_item_adjustment_source.sql)\n  000200: DataFusion error: Execution error: schema provider does not support registering tables\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora/zuora_invoice_item_adjustment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_invoice_item_adjustment_source", "compiled": true, "compiled_code": "-- depends_on: EMBUCKET.seed_finance.zuora_excluded_accounts\n\n\n\nWITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.zuora_stitch.invoiceitemadjustment\n\n),\n\nrenamed AS (\n\n  SELECT\n    -- primary key \n    id                 AS invoice_item_adjustment_id,\n\n    -- keys\n    adjustmentnumber   AS invoice_item_adjustment_number,\n    accountid          AS account_id,\n    invoiceid          AS invoice_id,\n    accountingperiodid AS accounting_period_id,\n\n\n    -- invoice item adjustment dates\n    adjustmentdate     AS invoice_item_adjustment_date,\n\n\n    -- additive fields\n    amount             AS invoice_item_adjustment_amount,\n    status             AS invoice_item_adjustment_status,\n    type               AS invoice_item_adjustment_type\n\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_invoice_item_adjustment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.540462Z", "completed_at": "2025-06-09T18:51:27.543819Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.544197Z", "completed_at": "2025-06-09T18:51:50.849857Z"}], "thread_id": "Thread-2", "execution_time": 23.317405939102173, "adapter_response": {}, "message": "Database Error in model zendesk_ticket_fields_source (models/sources/zendesk/zendesk_ticket_fields_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/zendesk/zendesk_ticket_fields_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_ticket_fields_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.tap_zendesk.ticket_fields\n    \n), flattened AS (\n\n    SELECT\n\n      id::NUMBER                                    AS ticket_field_id,\n      active::BOOLEAN                               AS is_field_active,\n      description::VARCHAR                          AS description,\n      agent_description::VARCHAR                    AS agent_description,\n      position::NUMBER                              AS field_position,\n      raw_description::VARCHAR                      AS raw_description,\n      raw_title::VARCHAR                            AS raw_title,\n      raw_title_in_portal::VARCHAR                  AS raw_title_in_portal,\n      regexp_for_validation::VARCHAR                AS regexp_for_validation,\n      sub_type_id::NUMBER                           AS sub_type_id,\n      system_field_options::VARCHAR                 AS system_field_options,\n      tag::VARCHAR                                  AS tag,\n      title::VARCHAR                                AS ticket_form_title,\n      title_in_portal::VARCHAR                      AS title_in_portal,\n      type::VARCHAR                                 AS type,\n      url::VARCHAR                                  AS url,\n      custom_field_options::VARIANT                 AS custom_field_options,\n      removable::BOOLEAN                            AS is_removable,\n      required::BOOLEAN                             AS is_required,\n      required_in_portal::BOOLEAN                   AS is_required_in_portal,\n      editable_in_portal::BOOLEAN                   AS is_editable_in_portal,\n      visible_in_portal::BOOLEAN                    AS is_visible_in_portal,\n      collapsed_for_agents::BOOLEAN                 AS is_collapsed_for_agents,\n      updated_at::TIMESTAMP                         AS updated_at,\n      created_at::TIMESTAMP                         AS created_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM flattened", "relation_name": "EMBUCKET.zendesk.zendesk_ticket_fields_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.271908Z", "completed_at": "2025-06-09T18:51:49.383692Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:50.411484Z", "completed_at": "2025-06-09T18:51:51.249792Z"}], "thread_id": "Thread-26", "execution_time": 2.1128461360931396, "adapter_response": {}, "message": "Database Error in model zuora_payment_source (models/sources/zuora/zuora_payment_source.sql)\n  000200: DataFusion error: Execution error: schema provider does not support registering tables\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora/zuora_payment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_payment_source", "compiled": true, "compiled_code": "-- depends_on: EMBUCKET.seed_finance.zuora_excluded_accounts\n\n\n\nWITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.zuora_stitch.payment\n\n),\n\nrenamed AS (\n\n  SELECT\n    -- primary key \n    id            AS payment_id,\n\n    -- keys\n    paymentnumber AS payment_number,\n    accountid     AS account_id,\n\n    -- payment dates\n    effectivedate AS payment_date,\n\n\n    -- additive fields\n    status        AS payment_status,\n    type          AS payment_type,\n    amount        AS payment_amount\n\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_payment_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.343980Z", "completed_at": "2025-06-09T18:51:50.434477Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:50.454206Z", "completed_at": "2025-06-09T18:51:52.678634Z"}], "thread_id": "Thread-5", "execution_time": 3.3795390129089355, "adapter_response": {}, "message": "Database Error in model zuora_invoice_payment_source (models/sources/zuora/zuora_invoice_payment_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,979)..Location(1,991)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora/zuora_invoice_payment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_invoice_payment_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.zuora_stitch.invoicepayment\n\n),\n\nrenamed AS (\n\n  SELECT\n    --keys\n    id::VARCHAR                      AS invoice_payment_id,\n    invoiceid::VARCHAR               AS invoice_id,\n    accountid::VARCHAR               AS account_id,\n    accountingperiodid::VARCHAR      AS accounting_period_id,\n\n    --info\n    billtocontactid::VARCHAR         AS bill_to_contact_id,\n    cashaccountingcodeid::VARCHAR    AS cash_accounting_code_id,\n    defaultpaymentmethodid::VARCHAR  AS default_payment_method_id,\n    journalentryid::VARCHAR          AS journal_entry_id,\n    journalrunid::VARCHAR            AS journal_run_id,\n    parentaccountid::VARCHAR         AS parent_account_id,\n    paymentid::VARCHAR               AS payment_id,\n    paymentmethodid::VARCHAR         AS payment_method_id,\n    paymentmethodsnapshotid::VARCHAR AS payment_method_snapshot_id,\n    soldtocontactid::VARCHAR         AS sold_to_contact_id,\n    createddate                      AS invoice_payment_date,\n\n    --financial info\n    amount::FLOAT                    AS invoice_payment_amount,\n    refundamount::FLOAT              AS refund_amount,\n\n    --metadata\n    updatedbyid::VARCHAR             AS updated_by_id,\n    updateddate::TIMESTAMP_TZ        AS updated_date,\n    deleted::BOOLEAN                 AS is_deleted\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_invoice_payment_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:46.971042Z", "completed_at": "2025-06-09T18:51:46.974619Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:46.975010Z", "completed_at": "2025-06-09T18:51:52.816566Z"}], "thread_id": "Thread-9", "execution_time": 5.846136093139648, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_central_sandbox_order_action_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_central_sandbox_fivetran.order_action\n\n), renamed AS(\n\n    SELECT\n      -- Keys\n      id                                        AS order_action_id,\n\n      order_id                                  AS order_id,\n      account_id                                AS account_id,\n      subscription_version_amendment_id         AS subscription_version_amendment_id,\n      subscription_id                           AS subscription_id,\n      default_payment_method_id                 AS default_payment_method_id,\n      bill_to_contact_id                        AS bill_to_contact_id,\n      sold_to_contact_id                        AS sold_to_contact_id,\n\n      auto_renew                                AS auto_renew,\n      cancellation_effective_date               AS cancellation_effective_date,\n      cancellation_policy                       AS cancellation_policy,\n      contract_effective_date                   AS contract_effective_date,\n      current_term                              AS current_term,\n      current_term_period_type                  AS current_term_period_type,\n      customer_acceptance_date                  AS customer_acceptance_date,\n      renewal_term                              AS renewal_term,\n      renewal_term_period_type                  AS renewal_term_period_type,\n      renew_setting                             AS renew_setting,\n      resume_date                               AS resume_date,\n      sequence                                  AS sequence,\n      service_activation_date                   AS service_activation_date,\n      suspend_date                              AS suspend_date,\n      term_start_date                           AS term_start_date,\n      term_type                                 AS term_type,\n      type                                      AS type,\n\n       -- metadata\n      updated_by_id                             AS updated_by_id,\n      updated_date                              AS updated_date,\n      created_by_id                             AS created_by_id,\n      created_date                              AS created_date,\n\n      _FIVETRAN_DELETED                         AS is_deleted\n\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_central_sandbox.zuora_central_sandbox_order_action_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.116540Z", "completed_at": "2025-06-09T18:51:49.151445Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.216196Z", "completed_at": "2025-06-09T18:51:52.906496Z"}], "thread_id": "Thread-18", "execution_time": 3.833254814147949, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_invoice_item_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.zuora_invoiceitem_snapshots\n\n), renamed AS (\n\n    SELECT\n      -- keys\n      id                     AS invoice_item_id,\n      invoiceid              AS invoice_id,\n      appliedtoinvoiceitemid AS applied_to_invoice_item_id,\n      rateplanchargeid       AS rate_plan_charge_id,\n      subscriptionid         AS subscription_id,\n\n\n      -- invoice item metadata\n      accountingcode         AS accounting_code,\n      productid              AS product_id,\n      --revrecstartdate        AS revenue_recognition_start_date,\n      serviceenddate         AS service_end_date,\n      servicestartdate       AS service_start_date,\n\n\n      -- financial info\n      chargeamount           AS charge_amount,\n      chargedate             AS charge_date,\n      chargename             AS charge_name,\n      processingtype         AS processing_type,\n      quantity               AS quantity,\n      sku                    AS sku,\n      taxamount              AS tax_amount,\n      taxcode                AS tax_code,\n      taxexemptamount        AS tax_exempt_amount,\n      taxmode                AS tax_mode,\n      uom                    AS unit_of_measure,\n      unitprice              AS unit_price,\n\n      -- metadata\n      createdbyid            AS created_by_id,\n      createddate            AS created_date,\n      updatedbyid            AS updated_by_id,\n      updateddate            AS updated_date,\n      deleted                AS is_deleted,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.zuora_invoice_item_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:48.985585Z", "completed_at": "2025-06-09T18:51:49.103942Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.104261Z", "completed_at": "2025-06-09T18:51:52.988988Z"}], "thread_id": "Thread-28", "execution_time": 4.231698036193848, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_central_sandbox_product_rate_plan_charge_tier_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_central_sandbox_fivetran.product_rate_plan_charge_tier\n\n), renamed AS (\n\n    SELECT \n      product_rate_plan_charge_id           AS product_rate_plan_charge_id,\n      currency                              AS currency,\n      price                                 AS price\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_central_sandbox.zuora_central_sandbox_product_rate_plan_charge_tier_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.008510Z", "completed_at": "2025-06-09T18:51:49.070927Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.164078Z", "completed_at": "2025-06-09T18:51:53.002863Z"}], "thread_id": "Thread-3", "execution_time": 3.995021104812622, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_contact_snapshots_source", "compiled": true, "compiled_code": "-- depends_on: EMBUCKET.seed_finance.zuora_excluded_accounts\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.zuora_contact_snapshots\n\n), renamed AS(\n\n    SELECT \n      id                  AS contact_id,\n      -- keys\n      accountid           AS account_id,\n\n\n      -- contact info\n      firstname           AS first_name,\n      lastname            AS last_name,\n      nickname,\n      address1            AS street_address,\n      address2            AS street_address2,\n      county,\n      state,\n      postalcode          AS postal_code,\n      city,\n      country,\n      taxregion           AS tax_region,\n      workemail           AS work_email,\n      workphone           AS work_phone,\n      otherphone          AS other_phone,\n      otherphonetype      AS other_phone_type,\n      fax,\n      homephone           AS home_phone,\n      mobilephone         AS mobile_phone,\n      personalemail       AS personal_email,\n      description,\n\n\n      -- metadata\n      createdbyid         AS created_by_id,\n      createddate         AS created_date,\n      updatedbyid         AS updated_by_id,\n      updateddate         AS updated_date,\n      deleted             AS is_deleted,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.zuora_contact_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.047113Z", "completed_at": "2025-06-09T18:51:49.093395Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.136774Z", "completed_at": "2025-06-09T18:51:53.001733Z"}], "thread_id": "Thread-14", "execution_time": 4.019881963729858, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_central_sandbox_rate_plan_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_central_sandbox_fivetran.rate_plan\n\n), renamed AS(\n\n    SELECT\n      id                            AS rate_plan_id,\n      name                          AS rate_plan_name,\n      --keys\n      subscription_id               AS subscription_id,\n      product_id                    AS product_id,\n      product_rate_plan_id          AS product_rate_plan_id,\n      -- info\n      amendment_id                  AS amendment_id,\n      amendment_type                AS amendment_type,\n\n      --metadata\n      updated_by_id                 AS updated_by_id,\n      updated_date                  AS updated_date,\n      created_by_id                 AS created_by_id,\n      created_date                  AS created_date,\n      _FIVETRAN_DELETED             AS is_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_central_sandbox.zuora_central_sandbox_rate_plan_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:48.570481Z", "completed_at": "2025-06-09T18:51:48.624001Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:48.746449Z", "completed_at": "2025-06-09T18:51:53.007027Z"}], "thread_id": "Thread-31", "execution_time": 4.438302993774414, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_central_sandbox_product_rate_plan_charge_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_central_sandbox_fivetran.product_rate_plan_charge\n\n), renamed AS (\n\n    SELECT \n      id                    AS product_rate_plan_charge_id,\n      product_rate_plan_id  AS product_rate_plan_id,\n      name                  AS product_rate_plan_charge_name\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_central_sandbox.zuora_central_sandbox_product_rate_plan_charge_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.193407Z", "completed_at": "2025-06-09T18:51:49.251703Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.317586Z", "completed_at": "2025-06-09T18:51:53.010233Z"}], "thread_id": "Thread-25", "execution_time": 3.875304937362671, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_invoice_snapshots_source", "compiled": true, "compiled_code": "-- depends_on: EMBUCKET.seed_finance.zuora_excluded_accounts\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.zuora_invoice_snapshots\n\n), renamed AS(\n\n    SELECT \n      id                          AS invoice_id,\n      -- keys\n      accountid                   AS account_id,\n\n      -- invoice metadata\n      duedate                     AS due_date,\n      invoicenumber               AS invoice_number,\n      invoicedate                 AS invoice_date,\n      status,\n\n      lastemailsentdate           AS last_email_sent_date,\n      posteddate                  AS posted_date,\n      targetdate                  AS target_date,\n\n\n      includesonetime             AS includes_one_time,\n      includesrecurring           AS includesrecurring,\n      includesusage               AS includes_usage,\n      transferredtoaccounting     AS transferred_to_accounting,\n\n      -- financial info\n      adjustmentamount            AS adjustment_amount,\n      amount,\n      amountwithouttax            AS amount_without_tax, \n      balance,\n      creditbalanceadjustmentamount   AS credit_balance_adjustment_amount,\n      paymentamount                   AS payment_amount,\n      refundamount                    AS refund_amount,\n      taxamount                       AS tax_amount,\n      taxexemptamount                 AS tax_exempt_amount,\n      comments,\n\n      -- ext1, ext2, ext3, ... ext9\n\n      -- metadata\n      createdbyid                     AS created_by_id,\n      createddate                     AS created_date,\n      postedby                        AS posted_by,\n      source                          AS source,\n      source                          AS source_id,\n      updatedbyid                     AS updated_by_id,\n      updateddate                     AS updated_date,\n      deleted                         AS is_deleted,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.zuora_invoice_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:46.786770Z", "completed_at": "2025-06-09T18:51:46.799133Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:46.800266Z", "completed_at": "2025-06-09T18:51:53.009063Z"}], "thread_id": "Thread-21", "execution_time": 6.229599952697754, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_central_sandbox_invoice_item_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_central_sandbox_fivetran.invoice_item\n\n), renamed AS (\n\n    SELECT\n      -- keys\n      id                            AS invoice_item_id,\n      invoice_id                    AS invoice_id,\n      applied_to_invoice_item_id    AS applied_to_invoice_item_id,\n      rate_plan_charge_id           AS rate_plan_charge_id,\n      subscription_id               AS subscription_id,\n\n\n      -- invoice item metadata\n      accounting_code               AS accounting_code,\n      product_id                    AS product_id,\n      product_rate_plan_charge_id   AS product_rate_plan_charge_id,\n      service_end_date              AS service_end_date,\n      service_start_date            AS service_start_date,\n\n\n      -- financial info\n      charge_amount                 AS charge_amount,\n      charge_date                   AS charge_date,\n      charge_name                   AS charge_name,\n      processing_type               AS processing_type,\n      quantity                      AS quantity,\n      sku                           AS sku,\n      tax_amount                    AS tax_amount,\n      tax_code                      AS tax_code,\n      tax_exempt_amount             AS tax_exempt_amount,\n      tax_mode                      AS tax_mode,\n      uom                           AS unit_of_measure,\n      unit_price                    AS unit_price,\n\n      -- metadata\n      created_by_id                 AS created_by_id,\n      created_date                  AS created_date,\n      updated_by_id                 AS updated_by_id,\n      updated_date                  AS updated_date,\n      _FIVETRAN_DELETED             AS is_deleted\n\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_central_sandbox.zuora_central_sandbox_invoice_item_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:51.368917Z", "completed_at": "2025-06-09T18:51:51.403272Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:51.421357Z", "completed_at": "2025-06-09T18:51:52.958899Z"}], "thread_id": "Thread-13", "execution_time": 1.6358001232147217, "adapter_response": {}, "message": "Database Error in model zuora_product_rate_plan_source (models/sources/zuora/zuora_product_rate_plan_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,308)..Location(1,320)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora/zuora_product_rate_plan_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_product_rate_plan_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.productrateplan\n\n), renamed AS (\n\n    SELECT\n      --Primary Keys\n      id::VARCHAR                       AS product_rate_plan_id,\n\n      --Info\n      productid::VARCHAR                AS product_id,\n      description::VARCHAR              AS product_rate_plan_description,\n      effectiveenddate::TIMESTAMP_TZ    AS effective_end_date,\n      effectivestartdate::TIMESTAMP_TZ  AS effective_start_date,\n      name::VARCHAR                     AS product_rate_plan_name,\n      createdbyid::VARCHAR              AS created_by_id,\n      createddate::TIMESTAMP_TZ         AS created_date,\n      updatedbyid::VARCHAR              AS updated_by_id,\n      updateddate::TIMESTAMP_TZ         AS updated_date,\n      deleted                           AS is_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_product_rate_plan_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:51.373104Z", "completed_at": "2025-06-09T18:51:51.414931Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:51.439530Z", "completed_at": "2025-06-09T18:51:52.948908Z"}], "thread_id": "Thread-10", "execution_time": 1.621805191040039, "adapter_response": {}, "message": "Database Error in model zuora_product_source (models/sources/zuora/zuora_product_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,506)..Location(1,518)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora/zuora_product_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_product_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.product\n\n), renamed AS (\n\n    SELECT\n      --Primary Keys\n      id::VARCHAR                       AS product_id,\n\n      --Info\n      name::VARCHAR                     AS product_name,\n      sku::VARCHAR                      AS sku,\n      description::VARCHAR              AS product_description,\n      category::VARCHAR                 AS category,\n      producttier__c::VARCHAR           AS product_tier,\n      productdelivery__c::VARCHAR       AS product_delivery_type,\n      productdeployment__c::VARCHAR     AS product_deployment_type,\n      updatedbyid::VARCHAR              AS updated_by_id,\n      updateddate::TIMESTAMP_TZ         AS updated_date,\n      deleted                           AS is_deleted,\n      effectivestartdate                AS effective_start_date,\n      effectiveenddate                  AS effective_end_date\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_product_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:51.376896Z", "completed_at": "2025-06-09T18:51:51.414487Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:51.433346Z", "completed_at": "2025-06-09T18:51:53.045231Z"}], "thread_id": "Thread-17", "execution_time": 1.7247252464294434, "adapter_response": {}, "message": "Database Error in model zuora_product_rate_plan_snapshots_source (models/legacy/snapshots/base/zuora_product_rate_plan_snapshots_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,336)..Location(1,348)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/zuora_product_rate_plan_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_product_rate_plan_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.zuora_product_rate_plan_snapshots\n\n), renamed AS (\n\n    SELECT\n      --Primary Keys\n      id::VARCHAR                       AS product_rate_plan_id,\n\n      --Info\n      productid::VARCHAR                AS product_id,\n      description::VARCHAR              AS product_rate_plan_description,\n      effectiveenddate::TIMESTAMP_TZ    AS effective_end_date,\n      effectivestartdate::TIMESTAMP_TZ  AS effective_start_date,\n      name::VARCHAR                     AS product_rate_plan_name,\n      createdbyid::VARCHAR              AS created_by_id,\n      createddate::TIMESTAMP_TZ         AS created_date,\n      updatedbyid::VARCHAR              AS updated_by_id,\n      updateddate::TIMESTAMP_TZ         AS updated_date,\n      deleted                           AS is_deleted,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.zuora_product_rate_plan_snapshots_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:52.819008Z", "completed_at": "2025-06-09T18:51:52.822829Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:52.823196Z", "completed_at": "2025-06-09T18:51:53.075505Z"}], "thread_id": "Thread-9", "execution_time": 0.29994702339172363, "adapter_response": {}, "message": "Database Error in model zuora_revenue_accounting_type_source (models/sources/zuora_revenue/zuora_revenue_accounting_type_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_accounting_type_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_accounting_type_source", "compiled": true, "compiled_code": "WITH zuora_revenue_accounting_type AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_acct_type\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT \n    \n      id::VARCHAR                               AS accounting_type_id,\n      name::VARCHAR                             AS accounting_type_name,\n      wf_type::VARCHAR                          AS waterfall_type,\n      wf_summ_type::VARCHAR\t                    AS waterfall_summary_type,\n      revenue_summary::VARCHAR                  AS revenue_summary_type,\n      balance_sheet_acct_flag::VARCHAR          AS is_balance_sheet_account,\n      p_l_acct_flag::VARCHAR                    AS is_p_l_account,\n      cost_flag::VARCHAR                        AS is_cost,\n      vc_acct_flag::VARCHAR                     AS is_variable_consideration_account,\n      vc_clr_acct_flag::VARCHAR                 AS is_variable_consideration_clearing_account,\n      incl_in_netting_flag::VARCHAR             AS is_include_in_netting,\n      incl_in_manual_je_flag::VARCHAR           AS is_include_in_manual_journal_entry,\n      waterfall_flag::VARCHAR                   AS is_waterfall_account,\n      acct_group::VARCHAR                       AS accounting_group,\n      def_rec_flag::VARCHAR                     AS defer_recognition_type,\n      client_id::VARCHAR                        AS client_id,\n      crtd_by::VARCHAR                          AS accounting_type_created_by,\n      crtd_dt::DATETIME                         AS accounting_type_created_date,\n      updt_by::VARCHAR                          AS accounting_type_updated_by,\n      updt_dt::DATETIME                         AS accounting_type_updated_date,\n      incr_updt_dt::DATETIME                    AS incremental_update_date,\n      allow_mapping_flag::VARCHAR               AS is_mapping_allowed,\n      def_offset_flag::VARCHAR                  AS is_deferred_offset,\n      enabled_flag::VARCHAR                     AS is_enabled,\n      payables_acct_flag::VARCHAR               AS is_payables_account,\n      rev_offset_flag::VARCHAR                  AS is_revenue_offset,\n      rev_display_seq::VARCHAR                  AS revenue_display_sequence\n\n    FROM zuora_revenue_accounting_type\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_accounting_type_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:51.404399Z", "completed_at": "2025-06-09T18:51:51.430372Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:51.457485Z", "completed_at": "2025-06-09T18:51:53.017026Z"}], "thread_id": "Thread-4", "execution_time": 1.692213773727417, "adapter_response": {}, "message": "Database Error in model zuora_product_snapshots_source (models/legacy/snapshots/base/zuora_product_snapshots_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,379)..Location(1,391)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/zuora_product_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_product_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.zuora_product_snapshots\n\n), renamed AS (\n\n    SELECT\n      --Primary Keys\n      id::VARCHAR                       AS product_id,\n\n      --Info\n      name::VARCHAR                     AS product_name,\n      sku::VARCHAR                      AS sku,\n      description::VARCHAR              AS product_description,\n      category::VARCHAR                 AS category,\n      updatedbyid::VARCHAR              AS updated_by_id,\n      updateddate::TIMESTAMP_TZ         AS updated_date,\n      deleted                           AS is_deleted,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.zuora_product_snapshots_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:52.687666Z", "completed_at": "2025-06-09T18:51:52.694285Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:52.694622Z", "completed_at": "2025-06-09T18:51:53.378793Z"}], "thread_id": "Thread-5", "execution_time": 0.7250730991363525, "adapter_response": {}, "message": "Database Error in model zuora_refund_source (models/sources/zuora/zuora_refund_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,428)..Location(1,440)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora/zuora_refund_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_refund_source", "compiled": true, "compiled_code": "-- depends_on: EMBUCKET.seed_finance.zuora_excluded_accounts\n\nWITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.zuora_stitch.refund\n\n),\n\nrenamed AS (\n\n  SELECT\n    --Primary Keys\n    refundnumber::VARCHAR               AS refund_number,\n    id::VARCHAR                         AS refund_id,\n\n    --Foreign Keys\n    accountid::VARCHAR                  AS account_id,\n    parentaccountid::VARCHAR            AS parent_account_id,\n\n    --Info\n    accountingcode::VARCHAR             AS accounting_code,\n    amount::FLOAT                       AS refund_amount,\n    billtocontactid::VARCHAR            AS bill_to_contact_id,\n    cancelledon::TIMESTAMP_TZ           AS cancelled_on,\n    comment::VARCHAR                    AS comment,\n    createdbyid::VARCHAR                AS created_by_id,\n    createddate::TIMESTAMP_TZ           AS created_date,\n    defaultpaymentmethodid::VARCHAR     AS default_payment_method_id,\n    gateway::VARCHAR                    AS gateway,\n    gatewayresponse::VARCHAR            AS gateway_response,\n    gatewayresponsecode::VARCHAR        AS gateway_response_code,\n    gatewaystate::VARCHAR               AS gateway_state,\n    methodtype::VARCHAR                 AS method_type,\n    paymentmethodid::VARCHAR            AS payment_method_id,\n    paymentmethodsnapshotid::VARCHAR    AS payment_method_snapshot_id,\n    reasoncode::VARCHAR                 AS reason_code,\n    referenceid::VARCHAR                AS reference_id,\n    refunddate::TIMESTAMP_TZ            AS refund_date,\n    refundtransactiontime::TIMESTAMP_TZ AS refund_transaction_time,\n    secondrefundreferenceid::VARCHAR    AS second_refund_reference_id,\n    softdescriptor::VARCHAR             AS soft_descriptor,\n    softdescriptorphone::VARCHAR        AS soft_descriptor_phone,\n    soldtocontactid::VARCHAR            AS sold_to_contact_id,\n    sourcetype::VARCHAR                 AS source_type,\n    status::VARCHAR                     AS refund_status,\n    submittedon::TIMESTAMP_TZ           AS submitted_on,\n    transferredtoaccounting::VARCHAR    AS transferred_to_accounting,\n    type::VARCHAR                       AS refund_type,\n    updatedbyid::VARCHAR                AS updated_by_id,\n    updateddate::TIMESTAMP_TZ           AS updated_date,\n    deleted::BOOLEAN                    AS is_deleted\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_refund_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.126117Z", "completed_at": "2025-06-09T18:51:49.173540Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.225110Z", "completed_at": "2025-06-09T18:51:53.380109Z"}], "thread_id": "Thread-16", "execution_time": 4.350643157958984, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_central_sandbox_rate_plan_charge_tier_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_central_sandbox_fivetran.rate_plan_charge_tier\n\n), renamed AS (\n\n    SELECT \n      rate_plan_charge_id         AS rate_plan_charge_id,\n      product_rate_plan_charge_id AS product_rate_plan_charge_id,\n      price,\n      currency\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_central_sandbox.zuora_central_sandbox_rate_plan_charge_tier_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:51.497460Z", "completed_at": "2025-06-09T18:51:51.523640Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:51.545415Z", "completed_at": "2025-06-09T18:51:53.430472Z"}], "thread_id": "Thread-26", "execution_time": 1.9968812465667725, "adapter_response": {}, "message": "Database Error in model zuora_refund_snapshots_source (models/legacy/snapshots/base/zuora_refund_snapshots_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,454)..Location(1,466)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/zuora_refund_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_refund_snapshots_source", "compiled": true, "compiled_code": "-- depends_on: EMBUCKET.seed_finance.zuora_excluded_accounts\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.zuora_refund_snapshots\n\n), renamed AS (\n\n    SELECT\n      --Primary Keys\n      refundnumber::VARCHAR                  AS refund_number,\n      id::VARCHAR                            AS refund_id,\n\n      --Foreign Keys\n      accountid::VARCHAR                     AS account_id,\n      parentaccountid::VARCHAR               AS parent_account_id,\n\n      --Info\n      accountingcode::VARCHAR                AS accounting_code,\n      amount::FLOAT                          AS refund_amount,\n      billtocontactid::VARCHAR               AS bill_to_contact_id,\n      cancelledon::TIMESTAMP_TZ              AS cancelled_on,\n      comment::VARCHAR                       AS comment,\n      createdbyid::VARCHAR                   AS created_by_id,\n      createddate::TIMESTAMP_TZ              AS created_date,\n      defaultpaymentmethodid::VARCHAR        AS default_payment_method_id,\n      gateway::VARCHAR                       AS gateway,\n      gatewayresponse::VARCHAR               AS gateway_response,\n      gatewayresponsecode::VARCHAR           AS gateway_response_code,\n      gatewaystate::VARCHAR                  AS gateway_state,\n      methodtype::VARCHAR                    AS method_type,\n      paymentmethodid::VARCHAR               AS payment_method_id,\n      paymentmethodsnapshotid::VARCHAR       AS payment_method_snapshot_id,\n      reasoncode::VARCHAR                    AS reason_code,\n      referenceid::VARCHAR                   AS reference_id,\n      refunddate::TIMESTAMP_TZ               AS refund_date,\n      refundtransactiontime::TIMESTAMP_TZ    AS refund_transaction_time,\n      secondrefundreferenceid::VARCHAR       AS second_refund_reference_id,\n      softdescriptor::VARCHAR                AS soft_descriptor,\n      softdescriptorphone::VARCHAR           AS soft_descriptor_phone,\n      soldtocontactid::VARCHAR               AS sold_to_contact_id,\n      sourcetype::VARCHAR                    AS source_type,\n      status::VARCHAR                        AS refund_status,\n      submittedon::TIMESTAMP_TZ              AS submitted_on,\n      transferredtoaccounting::VARCHAR       AS transferred_to_accounting,\n      type::VARCHAR                          AS refund_type,\n      updatedbyid::VARCHAR                   AS updated_by_id,\n      updateddate::TIMESTAMP_TZ              AS updated_date,\n      deleted::BOOLEAN                       AS is_deleted,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.zuora_refund_snapshots_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:51.470200Z", "completed_at": "2025-06-09T18:51:51.503089Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:51.515104Z", "completed_at": "2025-06-09T18:51:53.412085Z"}], "thread_id": "Thread-2", "execution_time": 2.0470499992370605, "adapter_response": {}, "message": "Database Error in model zuora_refund_invoice_payment_source (models/sources/zuora/zuora_refund_invoice_payment_source.sql)\n  000200: DataFusion error: Execution error: schema provider does not support registering tables\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora/zuora_refund_invoice_payment_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_refund_invoice_payment_source", "compiled": true, "compiled_code": "-- depends_on: EMBUCKET.seed_finance.zuora_excluded_accounts\n\n\n\nWITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.zuora_stitch.refundinvoicepayment\n\n),\n\nrenamed AS (\n\n  SELECT\n    -- primary key \n    id                 AS refund_invoice_payment_id,\n\n    -- keys\n    invoiceid          AS invoice_id,\n    refundid           AS refund_id,\n    paymentid          AS payment_id,\n    accountid          AS account_id,\n    accountingperiodid AS accounting_period_id,\n\n\n    -- refund invoice payment dates\n    createddate        AS refund_invoice_payment_date,\n\n\n    -- additive fields\n    refundamount       AS refund_invoice_payment_amount\n\n\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_refund_invoice_payment_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__models", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.dbt_artifacts.stg_dbt__models", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__model_executions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.dbt_artifacts.stg_dbt__model_executions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__invocations", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.dbt_artifacts.stg_dbt__invocations", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__exposures", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.dbt_artifacts.stg_dbt__exposures", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__seed_executions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.dbt_artifacts.stg_dbt__seed_executions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__seeds", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.dbt_artifacts.stg_dbt__seeds", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__test_executions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.dbt_artifacts.stg_dbt__test_executions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__tests", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.dbt_artifacts.stg_dbt__tests", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__snapshots", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.dbt_artifacts.stg_dbt__snapshots", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__snapshot_executions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.dbt_artifacts.stg_dbt__snapshot_executions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.influx_db_all_fabrication_stats", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.influx_db_all_fabrication_stats", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.355970Z", "completed_at": "2025-06-09T18:51:50.460096Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:50.481340Z", "completed_at": "2025-06-09T18:51:54.923819Z"}], "thread_id": "Thread-24", "execution_time": 5.720198154449463, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_product_rate_plan_charge_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.productrateplancharge\n\n), renamed AS (\n\n    SELECT \n      id                    AS product_rate_plan_charge_id,\n      productrateplanid     AS product_rate_plan_id,\n      name                  AS product_rate_plan_charge_name,\n      chargetype            AS charge_type\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_product_rate_plan_charge_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.281987Z", "completed_at": "2025-06-09T18:51:49.332545Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.332915Z", "completed_at": "2025-06-09T18:51:54.928762Z"}], "thread_id": "Thread-7", "execution_time": 5.705006122589111, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_invoice_source", "compiled": true, "compiled_code": "-- depends_on: EMBUCKET.seed_finance.zuora_excluded_accounts\n\n\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.invoice\n\n), renamed AS(\n\n    SELECT \n      id                          AS invoice_id,\n      -- keys\n      accountid                   AS account_id,\n\n      -- invoice metadata\n      duedate                     AS due_date,\n      invoicenumber               AS invoice_number,\n      invoicedate                 AS invoice_date,\n      status,\n\n      lastemailsentdate           AS last_email_sent_date,\n      posteddate                  AS posted_date,\n      targetdate                  AS target_date,\n\n\n      includesonetime             AS includes_one_time,\n      includesrecurring           AS includesrecurring,\n      includesusage               AS includes_usage,\n      transferredtoaccounting     AS transferred_to_accounting,\n\n      -- financial info\n      adjustmentamount            AS adjustment_amount,\n      amount,\n      amountwithouttax            AS amount_without_tax, \n      balance,\n      creditbalanceadjustmentamount   AS credit_balance_adjustment_amount,\n      paymentamount                   AS payment_amount,\n      refundamount                    AS refund_amount,\n      taxamount                       AS tax_amount,\n      taxexemptamount                 AS tax_exempt_amount,\n      comments,\n\n      -- ext1, ext2, ext3, ... ext9\n\n      -- metadata\n      createdbyid                     AS created_by_id,\n      createddate                     AS created_date,\n      postedby                        AS posted_by,\n      source                          AS source,\n      source                          AS source_id,\n      updatedbyid                     AS updated_by_id,\n      updateddate                     AS updated_date,\n      deleted                         AS is_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_invoice_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.158971Z", "completed_at": "2025-06-09T18:51:49.289635Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.290046Z", "completed_at": "2025-06-09T18:51:54.935739Z"}], "thread_id": "Thread-22", "execution_time": 5.811388254165649, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_invoice_item_source", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.invoiceitem\n\n), renamed AS (\n\n    SELECT\n      -- keys\n      id                      AS invoice_item_id,\n      invoiceid               AS invoice_id,\n      appliedtoinvoiceitemid  AS applied_to_invoice_item_id,\n      rateplanchargeid        AS rate_plan_charge_id,\n      subscriptionid          AS subscription_id,\n\n\n      -- invoice item metadata\n      accountingcode          AS accounting_code,\n      productid               AS product_id,\n      productrateplanchargeid AS product_rate_plan_charge_id,\n\n      --revrecstartdate        AS revenue_recognition_start_date,\n      serviceenddate          AS service_end_date,\n      servicestartdate        AS service_start_date,\n\n\n      -- financial info\n      chargeamount            AS charge_amount,\n      chargedate              AS charge_date,\n      chargename              AS charge_name,\n      processingtype          AS processing_type,\n      quantity                AS quantity,\n      sku                     AS sku,\n      taxamount               AS tax_amount,\n      taxcode                 AS tax_code,\n      taxexemptamount         AS tax_exempt_amount,\n      taxmode                 AS tax_mode,\n      uom                     AS unit_of_measure,\n      unitprice               AS unit_price,\n\n      -- metadata\n      createdbyid             AS created_by_id,\n      createddate             AS created_date,\n      updatedbyid             AS updated_by_id,\n      updateddate             AS updated_date,\n      deleted                 AS is_deleted\n\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_invoice_item_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.095959Z", "completed_at": "2025-06-09T18:51:49.221799Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.370593Z", "completed_at": "2025-06-09T18:51:54.939809Z"}], "thread_id": "Thread-6", "execution_time": 5.844865798950195, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_discount_applied_metrics_source", "compiled": true, "compiled_code": "-- values to consider renaming:\n-- mrr\n-- dmrc\n-- dtcv\n-- tcv\n-- uom\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.discountappliedmetrics\n\n), renamed AS(\n\n    SELECT\n      id                                      AS discount_applied_metrics_id, \n    \n      --keys \n      accountid                               AS account_id,\n      amendmentid                             AS amendment_id, \n      billtocontactid                         AS bill_to_contact_id, \n      defaultpaymentmethodid                  AS default_payment_method_id, \n      discountrateplanchargeid                AS discount_rate_plan_charge_id, \n      parentaccountid                         AS parent_account_id, \n      productid                               AS product_id, \n      productrateplanchargeid                 AS product_rate_plan_charge_id, \n      productrateplanid                       AS product_rate_plan_id, \n      rateplanchargeid                        AS rate_plan_charge_id, \n      rateplanid                              AS rate_plan_id,\n      soldtocontactid                         AS sold_to_contact_id, \n      subscriptionid                          AS subscription_id, \n    \n      --info \n      date_trunc('month', enddate)::DATE      AS end_date, \n      date_trunc('month', startdate)::DATE    AS start_date,\n      mrr, \n      tcv,\n    \n      --metadata \n      createdbyid                             AS created_by_id, \n      createddate                             AS created_date,\n\n      updatedbyid                             AS updated_by_id,\n      updateddate                             AS updated_date\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_discount_applied_metrics_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.421425Z", "completed_at": "2025-06-09T18:51:49.425210Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.425497Z", "completed_at": "2025-06-09T18:51:54.943704Z"}], "thread_id": "Thread-1", "execution_time": 5.5230491161346436, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_payment_method_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.paymentmethod\n\n), renamed AS(\n\n    SELECT \n      id                          AS payment_method_id,\n      -- keys\n      accountid                   AS account_id,\n\n      -- payment method info\n      type                        AS payment_method_type,\n      subtype                     AS payment_method_subtype,\n\n      -- metadata\n      createdbyid                 AS created_by_id,\n      createddate                 AS created_date,\n      updatedbyid                 AS updated_by_id,\n      updateddate                 AS updated_date,\n      deleted                     AS is_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_payment_method_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:51.339538Z", "completed_at": "2025-06-09T18:51:51.359206Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:51.388304Z", "completed_at": "2025-06-09T18:51:55.264791Z"}], "thread_id": "Thread-11", "execution_time": 3.9364378452301025, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_product_rate_plan_charge_tier_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.productrateplanchargetier\n\n), renamed AS (\n\n    SELECT \n      productrateplanchargeid AS product_rate_plan_charge_id,\n      currency                AS currency,\n      price                   AS price,\n      active                  AS active\n    FROM source\n    WHERE deleted = FALSE\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_product_rate_plan_charge_tier_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.493277Z", "completed_at": "2025-06-09T18:51:53.501873Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.502303Z", "completed_at": "2025-06-09T18:51:55.221053Z"}], "thread_id": "Thread-16", "execution_time": 1.8073079586029053, "adapter_response": {}, "message": "Database Error in model zuora_revenue_schedule_item_source (models/sources/zuora/zuora_revenue_schedule_item_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,776)..Location(1,788)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora/zuora_revenue_schedule_item_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_schedule_item_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.revenuescheduleitem\n\n), renamed AS (\n\n    SELECT\n      --Primary Keys\n      id::VARCHAR                           AS revenue_schedule_item_id,\n\n      --Foreign Keys\n      accountid::VARCHAR                    AS account_id,\n      parentaccountid::VARCHAR              AS parent_account_id,\n      accountingperiodid::VARCHAR           AS accounting_period_id,\n      amendmentid::VARCHAR                  AS amendment_id,\n      subscriptionid::VARCHAR               AS subscription_id,\n      productid::VARCHAR                    AS product_id,\n      rateplanchargeid::VARCHAR             AS rate_plan_charge_id,\n      rateplanid::VARCHAR                   AS rate_plan_id,\n      soldtocontactid::VARCHAR              AS sold_to_contact_id,\n\n      --Info\n      amount::FLOAT                         AS revenue_schedule_item_amount,\n      billtocontactid::VARCHAR              AS bill_to_contact_id,\n      currency::VARCHAR                     AS currency,\n      createdbyid::VARCHAR                  AS created_by_id,\n      createddate::TIMESTAMP_TZ             AS created_date,\n      defaultpaymentmethodid::VARCHAR       AS default_payment_method_id,\n      deleted::BOOLEAN                      AS is_deleted,\n      updatedbyid::VARCHAR                  AS updated_by_id,\n      updateddate::TIMESTAMP_TZ             AS updated_date\n\n      FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_revenue_schedule_item_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.307589Z", "completed_at": "2025-06-09T18:51:49.310725Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.311009Z", "completed_at": "2025-06-09T18:51:55.316076Z"}], "thread_id": "Thread-12", "execution_time": 6.070096254348755, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_product_rate_plan_charge_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.zuora_product_rate_plan_charge_snapshots\n\n), renamed AS (\n\n    SELECT \n      id                    AS product_rate_plan_charge_id,\n      productrateplanid     AS product_rate_plan_id,\n      name                  AS product_rate_plan_charge_name,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.zuora_product_rate_plan_charge_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:51.381823Z", "completed_at": "2025-06-09T18:51:51.416513Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:51.444557Z", "completed_at": "2025-06-09T18:51:55.323854Z"}], "thread_id": "Thread-29", "execution_time": 3.973968982696533, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_rate_plan_charge_snapshots_source", "compiled": true, "compiled_code": "-- depends_on: EMBUCKET.seed_finance.zuora_excluded_accounts\n\n-- values to consider renaming:\n-- mrr\n-- dmrc\n-- dtcv\n-- tcv\n-- uom\n\n\n\nWITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.zuora_rateplancharge_snapshots\n\n), renamed AS(\n\n    SELECT\n      id                                                    AS rate_plan_charge_id,\n      name                                                  AS rate_plan_charge_name,\n      --keys\n      originalid                                            AS original_id,\n      rateplanid                                            AS rate_plan_id,\n      productrateplanchargeid                               AS product_rate_plan_charge_id,\n      productid                                             AS product_id,\n\n      --recognition\n      revenuerecognitionrulename                            AS revenue_recognition_rule_name,\n      revreccode                                            AS revenue_recognition_code,\n      revrectriggercondition                                AS revenue_recognition_trigger_condition,\n\n      -- info\n      effectivestartdate                                    AS effective_start_date,\n      effectiveenddate                                      AS effective_end_date,\n      date_trunc('month', effectivestartdate)::DATE         AS effective_start_month,\n      date_trunc('month', effectiveenddate)::DATE           AS effective_end_month,\n\n      mrr,\n      quantity                                              AS quantity,\n      tcv,\n      uom                                                   AS unit_of_measure,\n\n      accountid                                             AS account_id,\n      accountingcode                                        AS accounting_code,\n      applydiscountto                                       AS apply_discount_to,\n      billcycleday                                          AS bill_cycle_day,\n      billcycletype                                         AS bill_cycle_type,\n      billingperiod                                         AS billing_period,\n      billingperiodalignment                                AS billing_period_alignment,\n      chargedthroughdate                                    AS charged_through_date,\n      chargemodel                                           AS charge_model,\n      chargenumber                                          AS rate_plan_charge_number,\n      chargetype                                            AS charge_type,\n      description                                           AS description,\n      discountlevel                                         AS discount_level,\n      dmrc                                                  AS delta_mrc, -- delta monthly recurring charge\n      dtcv                                                  AS delta_tcv, -- delta total contract value\n\n      islastsegment                                         AS is_last_segment,\n      listpricebase                                         AS list_price_base,\n      --numberofperiods                                       AS number_of_periods,\n      overagecalculationoption                              AS overage_calculation_option,\n      overageunusedunitscreditoption                        AS overage_unused_units_credit_option,\n      processedthroughdate                                  AS processed_through_date,\n\n      segment                                               AS segment,\n      specificbillingperiod                                 AS specific_billing_period,\n      specificenddate                                       AS specific_end_date,\n      triggerdate                                           AS trigger_date,\n      triggerevent                                          AS trigger_event,\n      uptoperiods                                           AS up_to_period,\n      uptoperiodstype                                       AS up_to_periods_type,\n      version                                               AS version,\n\n      --ext1, ext2, ext3, ... ext13\n\n      --metadata\n      createdbyid                                           AS created_by_id,\n      createddate                                           AS created_date,\n      updatedbyid                                           AS updated_by_id,\n      updateddate                                           AS updated_date,\n      deleted                                               AS is_deleted,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.restricted_safe_legacy.zuora_rate_plan_charge_snapshots_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:51.363639Z", "completed_at": "2025-06-09T18:51:51.396546Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:51.397998Z", "completed_at": "2025-06-09T18:51:55.340322Z"}], "thread_id": "Thread-32", "execution_time": 3.986792802810669, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_rate_plan_charge_source", "compiled": true, "compiled_code": "-- depends_on: EMBUCKET.seed_finance.zuora_excluded_accounts\n\n-- values to consider renaming:\n-- mrr\n-- dmrc\n-- dtcv\n-- tcv\n-- uom\n\n\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.rateplancharge\n\n), renamed AS(\n\n    SELECT\n      id                                                    AS rate_plan_charge_id,\n      name                                                  AS rate_plan_charge_name,\n      --keys\n      originalid                                            AS original_id,\n      rateplanid                                            AS rate_plan_id,\n      productrateplanchargeid                               AS product_rate_plan_charge_id,\n      productrateplanid                                     AS product_rate_plan_id,\n      productid                                             AS product_id,\n\n      --recognition\n      revenuerecognitionrulename                            AS revenue_recognition_rule_name,\n      revreccode                                            AS revenue_recognition_code,\n      revrectriggercondition                                AS revenue_recognition_trigger_condition,\n\n      -- info\n      effectivestartdate                                    AS effective_start_date,\n      effectiveenddate                                      AS effective_end_date,\n      date_trunc('month', effectivestartdate)::DATE         AS effective_start_month,\n      date_trunc('month', effectiveenddate)::DATE           AS effective_end_month,\n      enddatecondition                                      AS end_date_condition,\n\n      mrr,\n      quantity                                              AS quantity,\n      tcv,\n      uom                                                   AS unit_of_measure,\n\n      accountid                                             AS account_id,\n      accountingcode                                        AS accounting_code,\n      applydiscountto                                       AS apply_discount_to,\n      billcycleday                                          AS bill_cycle_day,\n      billcycletype                                         AS bill_cycle_type,\n      billingperiod                                         AS billing_period,\n      billingperiodalignment                                AS billing_period_alignment,\n      chargedthroughdate                                    AS charged_through_date,\n      chargemodel                                           AS charge_model,\n      chargenumber                                          AS rate_plan_charge_number,\n      chargetype                                            AS charge_type,\n      description                                           AS description,\n      discountlevel                                         AS discount_level,\n      dmrc                                                  AS delta_mrc, -- delta monthly recurring charge\n      dtcv                                                  AS delta_tcv, -- delta total contract value\n\n      islastsegment                                         AS is_last_segment,\n      listpricebase                                         AS list_price_base,\n      --numberofperiods                                       AS number_of_periods,\n      overagecalculationoption                              AS overage_calculation_option,\n      overageunusedunitscreditoption                        AS overage_unused_units_credit_option,\n      processedthroughdate                                  AS processed_through_date,\n\n      segment                                               AS segment,\n      specificbillingperiod                                 AS specific_billing_period,\n      specificenddate                                       AS specific_end_date,\n      triggerdate                                           AS trigger_date,\n      triggerevent                                          AS trigger_event,\n      uptoperiods                                           AS up_to_period,\n      uptoperiodstype                                       AS up_to_periods_type,\n      version                                               AS version,\n\n      --ext1, ext2, ext3, ... ext13\n\n      --metadata\n      createdbyid                                           AS created_by_id,\n      createddate                                           AS created_date,\n      updatedbyid                                           AS updated_by_id,\n      updateddate                                           AS updated_date,\n      deleted                                               AS is_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_rate_plan_charge_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.256840Z", "completed_at": "2025-06-09T18:51:49.329820Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.384669Z", "completed_at": "2025-06-09T18:51:54.590470Z"}], "thread_id": "Thread-15", "execution_time": 5.39049506187439, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_product_rate_plan_charge_tier_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.zuora_product_rate_plan_charge_tier_snapshots\n\n), renamed AS (\n\n    SELECT \n      productrateplanchargeid AS product_rate_plan_charge_id,\n      currency                AS currency,\n      price                   AS price,\n\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.zuora_product_rate_plan_charge_tier_snapshots_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.122300Z", "completed_at": "2025-06-09T18:51:53.169907Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.197608Z", "completed_at": "2025-06-09T18:51:55.340847Z"}], "thread_id": "Thread-25", "execution_time": 2.272005319595337, "adapter_response": {}, "message": "Database Error in model zuora_revenue_revenue_contract_bill_source (models/sources/zuora_revenue/zuora_revenue_revenue_contract_bill_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_revenue_contract_bill_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_revenue_contract_bill_source", "compiled": true, "compiled_code": "WITH zuora_revenue_revenue_contract_bill AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_rc_bill\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT \n\n      id::VARCHAR                           AS revenue_contract_bill_id,\n      rc_id::VARCHAR                        AS revenue_contract_id,\n      ext_sll_prc::FLOAT                    AS external_selling_price,\n      def_amt::FLOAT                        AS deferred_amount,\n      rec_amt::FLOAT                        AS recognized_amount,\n      alctbl_xt_prc::FLOAT                  AS allocatable_external_price,\n      cstmr_nm::VARCHAR                     AS customer_name,\n      invoice_num::VARCHAR                  AS invoice_number,\n      invoice_date::DATETIME                AS invoice_date,\n      invoice_line_num::VARCHAR             AS invoice_item_number,\n      invoice_line_id::VARCHAR              AS invoice_item_id,\n      item_num::VARCHAR                     AS item_number,\n      bndl_cnfg_id::VARCHAR                 AS bundle_configuration_id,\n      invoice_qty::VARCHAR                  AS invoice_quantity,\n      start_date::DATETIME                  AS revenue_start_date,\n      end_date::DATETIME                    AS revenue_end_date,\n      duration::VARCHAR                     AS revenue_amortization_duration,\n      ext_lst_prc::VARCHAR                  AS extended_selling_price,\n      batch_id::VARCHAR                     AS revenue_contract_batch_id,\n      book_id::VARCHAR                      AS book_id,\n      curr::VARCHAR                         AS transactional_currency,\n      f_cur::VARCHAR                        AS functional_currency,\n      f_ex_rate::VARCHAR                    AS functional_exchange_rate,\n      g_ex_rate::VARCHAR                    AS reporting_currency_exchange_rate,\n      ref_doc_line_id::VARCHAR              AS reference_document_line_id,\n      ref_bill_id::VARCHAR                  AS reference__bill_id,\n      lt_def_acnt::VARCHAR                  AS long_term_deferred_account,\n      def_segments::VARCHAR                 AS deferred_accounting_segment,\n      rev_segments::VARCHAR                 AS revenue_accounting_segment,\n      atr1::VARCHAR                         AS revenue_contract_bill_attribute_1,\n      atr2::VARCHAR                         AS revenue_contract_bill_attribute_2,\n      atr3::VARCHAR                         AS revenue_contract_bill_attribute_3,\n      atr4::VARCHAR                         AS revenue_contract_bill_attribute_4,\n      atr5::VARCHAR                         AS revenue_contract_bill_attribute_5,\n      atr6::VARCHAR                         AS revenue_contract_bill_attribute_6,\n      atr7::VARCHAR                         AS revenue_contract_bill_attribute_7,\n      atr8::VARCHAR                         AS revenue_contract_bill_attribute_8,\n      atr9::VARCHAR                         AS revenue_contract_bill_attribute_9,\n      atr10::VARCHAR                        AS revenue_contract_bill_attribute_10,\n      atr11::VARCHAR                        AS revenue_contract_bill_attribute_11,\n      atr12::VARCHAR                        AS revenue_contract_bill_attribute_12,\n      atr13::VARCHAR                        AS revenue_contract_bill_attribute_13,\n      atr14::VARCHAR                        AS revenue_contract_bill_attribute_14,\n      atr15::VARCHAR                        AS revenue_contract_bill_attribute_15,\n      atr16::VARCHAR                        AS revenue_contract_bill_attribute_16,\n      atr17::VARCHAR                        AS revenue_contract_bill_attribute_17,\n      atr18::VARCHAR                        AS revenue_contract_bill_attribute_18,\n      atr19::VARCHAR                        AS revenue_contract_bill_attribute_19,\n      atr20::VARCHAR                        AS revenue_contract_bill_attribute_20,\n      atr21::VARCHAR                        AS revenue_contract_bill_attribute_21,\n      atr22::VARCHAR                        AS revenue_contract_bill_attribute_22,\n      atr23::VARCHAR                        AS revenue_contract_bill_attribute_23,\n      atr24::VARCHAR                        AS revenue_contract_bill_attribute_24,\n      atr25::VARCHAR                        AS revenue_contract_bill_attribute_25,\n      atr26::VARCHAR                        AS revenue_contract_bill_attribute_26,\n      atr27::VARCHAR                        AS revenue_contract_bill_attribute_27,\n      atr28::VARCHAR                        AS revenue_contract_bill_attribute_28,\n      atr29::VARCHAR                        AS revenue_contract_bill_attribute_29,\n      atr30::VARCHAR                        AS revenue_contract_bill_attribute_30,\n      atr31::VARCHAR                        AS revenue_contract_bill_attribute_31,\n      atr32::VARCHAR                        AS revenue_contract_bill_attribute_32,\n      atr33::VARCHAR                        AS revenue_contract_bill_attribute_33,\n      atr34::VARCHAR                        AS revenue_contract_bill_attribute_34,\n      atr35::VARCHAR                        AS revenue_contract_bill_attribute_35,\n      atr36::VARCHAR                        AS revenue_contract_bill_attribute_36,\n      atr37::VARCHAR                        AS revenue_contract_bill_attribute_37,\n      atr38::VARCHAR                        AS revenue_contract_bill_attribute_38,\n      atr39::VARCHAR                        AS revenue_contract_bill_attribute_39,\n      atr40::VARCHAR                        AS revenue_contract_bill_attribute_40,\n      atr41::VARCHAR                        AS revenue_contract_bill_attribute_41,\n      atr42::VARCHAR                        AS revenue_contract_bill_attribute_42,\n      atr43::VARCHAR                        AS revenue_contract_bill_attribute_43,\n      atr44::VARCHAR                        AS revenue_contract_bill_attribute_44,\n      atr45::VARCHAR                        AS revenue_contract_bill_attribute_45,\n      atr46::VARCHAR                        AS revenue_contract_bill_attribute_46,\n      atr47::VARCHAR                        AS revenue_contract_bill_attribute_47,\n      atr48::VARCHAR                        AS revenue_contract_bill_attribute_48,\n      atr49::VARCHAR                        AS revenue_contract_bill_attribute_49,\n      atr50::VARCHAR                        AS revenue_contract_bill_attribute_50,\n      atr51::VARCHAR                        AS revenue_contract_bill_attribute_51,\n      atr52::VARCHAR                        AS revenue_contract_bill_attribute_52,\n      atr53::VARCHAR                        AS revenue_contract_bill_attribute_53,\n      atr54::VARCHAR                        AS revenue_contract_bill_attribute_54,\n      atr55::VARCHAR                        AS revenue_contract_bill_attribute_55,\n      atr56::VARCHAR                        AS revenue_contract_bill_attribute_56,\n      atr57::VARCHAR                        AS revenue_contract_bill_attribute_57,\n      atr58::VARCHAR                        AS revenue_contract_bill_attribute_58,\n      atr59::VARCHAR                        AS revenue_contract_bill_attribute_59,\n      atr60::VARCHAR                        AS revenue_contract_bill_attribute_60,\n      num1::FLOAT                           AS revenue_contract_bill_number_1,\n      num2::FLOAT                           AS revenue_contract_bill_number_2,\n      num3::FLOAT                           AS revenue_contract_bill_number_3,\n      num4::FLOAT                           AS revenue_contract_bill_number_4,\n      num5::FLOAT                           AS revenue_contract_bill_number_5,\n      num6::FLOAT                           AS revenue_contract_bill_number_6,\n      num7::FLOAT                           AS revenue_contract_bill_number_7,\n      num8::FLOAT                           AS revenue_contract_bill_number_8,\n      num9::FLOAT                           AS revenue_contract_bill_number_9,\n      num10::FLOAT                          AS revenue_contract_bill_number_10,\n      num11::FLOAT                          AS revenue_contract_bill_number_11,\n      num12::FLOAT                          AS revenue_contract_bill_number_12,\n      num13::FLOAT                          AS revenue_contract_bill_number_13,\n      num14::FLOAT                          AS revenue_contract_bill_number_14,\n      num15::FLOAT                          AS revenue_contract_bill_number_15,\n      date1::DATETIME                       AS revenue_contract_bill_date_1,\n      date2::DATETIME                       AS revenue_contract_bill_date_2,\n      date3::DATETIME                       AS revenue_contract_bill_date_3,\n      date4::DATETIME                       AS revenue_contract_bill_date_4,\n      date5::DATETIME                       AS revenue_contract_bill_date_5,\n      credit_rule::VARCHAR                  AS credit__rule,\n      rel_pct::FLOAT                        AS recognized_percent,\n      cost_amt::FLOAT                       AS cost_amount,\n      cost_def_amt::FLOAT                   AS cost_deferred_amt,\n      cost_rec_amt::FLOAT                   AS cost_recognized_amt,\n      cost_curr::VARCHAR                    AS cost_transactional_curr,\n      cost_fx_rate::VARCHAR                 AS cost_functional_currency_exchange_rate,\n      dcog_segments::VARCHAR                AS deferred_cogs_segment,\n      rcog_segments::VARCHAR                AS recognized_cogs_segment,\n      line_id::VARCHAR                      AS revenue_contract_line_id,\n      CONCAT(crtd_prd_id::VARCHAR, '01')    AS revenue_contract_bill_created_period_id,\n      client_id::VARCHAR                    AS client_id,\n      sec_atr_val::VARCHAR                  AS security_attribute_value,\n      crtd_by::VARCHAR                      AS revenue_contract_bill_created_by,\n      crtd_dt::DATETIME                     AS revenue_contract_bill_created_date,\n      updt_by::VARCHAR                      AS revenue_contract_bill_updt_by,\n      updt_dt::DATETIME                     AS revenue_contract_bill_updt_dt,\n      incr_updt_dt::DATETIME                AS incremental_update_date,\n      type::VARCHAR                         AS revenue_contract_bill_type,\n      business_unit::VARCHAR                AS business_unit,\n      ct_mod_date::DATETIME                 AS revenue_contract_line_modification_date,\n      cust_num::VARCHAR                     AS customer_number,\n      def_offset_segs::VARCHAR              AS deferred_offset_account,\n      fv_date::VARCHAR                      AS fair_value_date,\n      model_id::VARCHAR                     AS model_id,\n      po_num::VARCHAR                       AS purchase_order_number,\n      prod_class::VARCHAR                   AS product_class,\n      prod_ctgry::VARCHAR                   AS product_category,\n      prod_fmly::VARCHAR                    AS product_family,\n      prod_ln::VARCHAR                      AS product_line,\n      quote_num::VARCHAR                    AS quote_number,\n      rev_offset_segs::VARCHAR              AS revenue_offset_account,\n      sales_rep_name::VARCHAR               AS sales_representative_name,\n      schd_ship_dt::VARCHAR                 AS scheduled_ship_date,\n      ship_dt::DATETIME                     AS ship_dt,\n      sob_id::VARCHAR                       AS set_of_books_id,\n      unit_sell_prc::FLOAT                  AS unit_sell_price,\n      unit_list_prc::FLOAT                  AS unit_list_price,\n      bndl_prnt_id::VARCHAR                 AS bundle_parent_id,\n      company_code::VARCHAR                 AS company_code,\n      ca_account::VARCHAR                   AS contract_asset_account,\n      ci_account::VARCHAR                   AS ci_account,\n      al_account::VARCHAR                   AS al_account,\n      contra_ar_acct::VARCHAR               AS contra_ar_account,\n      payables_acct::VARCHAR                AS payables_account,\n      lt_def_adj_acct::VARCHAR              AS long_term_deferred_adjustment_account,\n      ub_liab_acct::VARCHAR                 AS ub_liability_account,\n      ic_account::VARCHAR                   AS intercompany_account,\n      alloc_rec_hold_flag::VARCHAR          AS is_allocation_recognition_hold,\n      alloc_schd_hold_flag::VARCHAR         AS is_allocation_schedule_hold,\n      approval_status_flag::VARCHAR         AS approval_status,\n      contra_entry_flag::VARCHAR            AS is_contra_entry,\n      cv_eligible_flag::VARCHAR             AS is_carve_eligible,\n      disc_adj_flag::VARCHAR                AS is_disc_adjustment,\n      fv_eligible_flag::VARCHAR             AS is_fair_value_eligible,\n      impairment_type_flag::VARCHAR         AS impairment_type,\n      manual_fv_flag::VARCHAR               AS is_manual_fair_value,\n      reclass_flag::VARCHAR                 AS is_reclass,\n      return_flag::VARCHAR                  AS is_return,\n      rev_rec_hold_flag::VARCHAR            AS is_revenue_recogition_hold,\n      rev_schd_hold_flag::VARCHAR           AS is_revenue_schedule_hold,\n      rssp_calc_type::VARCHAR               AS rssp_calcultion_type,\n      standalone_flag::VARCHAR              AS is_standalone,\n      stated_flag::VARCHAR                  AS is_stated,\n      within_fv_range_flag::VARCHAR         AS is_within_fair_value_range,\n      ar_account::VARCHAR                   AS ar_account,\n      cancel_flag::VARCHAR                  AS is_canceled,\n      impairment_type_code::VARCHAR         AS impairment_type_code,\n      impairment_type_name::VARCHAR         AS impairment_type_name,\n      cv_eligible_lvl2_flag::VARCHAR        AS is_level_2_allocation_eligible,\n      lt_def_cogs_acct::VARCHAR             AS long_term_deferred_cogs_account,\n      lt_ca_account::VARCHAR                AS long_term_ca_account,\n      rord_updt_flag::VARCHAR               AS is_reduction_order_update,\n      ovr_std_incld_flag::VARCHAR           AS is_ovr_std_included,\n      cm_cancel_flag::VARCHAR               AS is_cm_cancel,\n      action_type::VARCHAR                  AS amendment_action_type,\n      cost_gx_rate::VARCHAR                 AS cost_bill_exchange_rate,\n      skip_ct_mod_flag::VARCHAR             AS is_skip_ct_mod,\n      rem_init_entry_amt::FLOAT             AS rem_init_entry_amount,\n      subscrp_term_num::VARCHAR             AS subscrpription_term,\n      rord_knock_off_flag::VARCHAR          AS is_reduction_order_knock_off,\n      sys_gnrtd_cmc_flag::VARCHAR           AS is_system_generated_cmc,\n      sys_conv_cmro_flag::VARCHAR           AS is_system_converted_cmro,\n      so_term_rec_flag::VARCHAR             AS is_sales_order_term_recognition,\n      zbill_true_up_flag::VARCHAR           AS is_zbill_true_up,\n      retain_line_id_flag::VARCHAR          AS is_retain_line_id,\n      avoid_overage_flag::VARCHAR           AS is_avoid_overage\n      \n    FROM zuora_revenue_revenue_contract_bill\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_revenue_contract_bill_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.183917Z", "completed_at": "2025-06-09T18:51:53.213258Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.262927Z", "completed_at": "2025-06-09T18:51:55.352606Z"}], "thread_id": "Thread-21", "execution_time": 2.303006172180176, "adapter_response": {}, "message": "Database Error in model zuora_revenue_revenue_contract_header_source (models/sources/zuora_revenue/zuora_revenue_revenue_contract_header_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_revenue_contract_header_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_revenue_contract_header_source", "compiled": true, "compiled_code": "WITH zuora_revenue_revenue_contract_header AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_rc_head\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT \n\n      id::VARCHAR                                   AS revenue_contract_id,\n      version::VARCHAR                              AS revenue_contract_version,\n      batch_id::VARCHAR                             AS revenue_contract_batch_id,\n      book_id::VARCHAR                              AS book_id,\n      list_amt::FLOAT                               AS list_amount,\n      sell_amt::FLOAT                               AS sell_amount,\n      ca_amt::FLOAT                                 AS contract_asset_amount,\n      cl_amt::FLOAT                                 AS contract_liability_amount,\n      tot_cv_amt::FLOAT                             AS carve_amount,\n      tmpl_id::VARCHAR                              AS template_id,\n      fv_date::DATETIME                             AS fair_value_date,\n      curr::VARCHAR                                 AS transactional_currency,\n      f_cur::VARCHAR                                AS functional_currency,\n      f_ex_rate::VARCHAR                            AS functional_currency_exchange_rate,\n      g_ex_rate::VARCHAR                            AS reporting_currency_exchange_rate,\n      atr1::VARCHAR                                 AS revenue_contract_attribute_1,\n      atr2::VARCHAR                                 AS revenue_contract_attribute_2,\n      atr3::VARCHAR                                 AS revenue_contract_attribute_3,\n      atr4::VARCHAR                                 AS revenue_contract_attribute_4,\n      atr5::VARCHAR                                 AS revenue_contract_attribute_5,\n      company_code::VARCHAR                         AS company_code,\n      init_pob_exp_dt::DATETIME                     AS initial_performance_obligation_expiration_date,\n      cstmr_nm::VARCHAR                             AS customer_name,\n      posted_flag::VARCHAR                          AS is_posted,\n      alloc_error_flag::VARCHAR                     AS is_allocation_error,\n      multi_curr_flag::VARCHAR                      AS is_multiple_currency,\n      alloc_eligible_flag::VARCHAR                  AS is_allocation_eligible,\n      manual_cv_flag::VARCHAR                       AS is_manual_cv,\n      manual_rc_flag::VARCHAR                       AS is_manual_revenue_contract,\n      freeze_flag::VARCHAR                          AS is_freeze,\n      approval_status_flag::VARCHAR                 AS revnue_contract_approval_status,\n      conversion_flag::VARCHAR                      AS is_conversion,\n      archive_flag::VARCHAR                         AS is_archive,\n      stale_group_flag::VARCHAR                     AS is_stale_group,\n      initial_alloc_flag::VARCHAR                   AS is_initial_allocation,\n      alloc_trtmt_flag::VARCHAR                     AS revenue_contract_allocation_treatment,\n      schd_hold_flag::VARCHAR                       AS is_schedule_hold,\n      revrev_hold_flag::VARCHAR                     AS is_revrev_hold,\n      alloc_schd_hold_flag::VARCHAR                 AS is_allocation_schedule_hold,\n      alloc_rec_hold_flag::VARCHAR                  AS is_allocation_recognition_hold,\n      mje_rc_flag::VARCHAR                          AS is_manual_journal_entry_revenue_contract,\n      netting_pending_flag::VARCHAR                 AS is_netting_pending,\n      is_hold_applied_flag::VARCHAR                 AS is_hold_applied,\n      CONCAT(crtd_prd_id::VARCHAR, '01')            AS revenue_contract_created_period_id,\n      client_id::VARCHAR                            AS client_id,\n      sec_atr_val::VARCHAR                          AS security_attribute_value,\n      crtd_by::VARCHAR                              AS revenue_contract_created_by,\n      crtd_dt::DATETIME                             AS revenue_contract_created_date,\n      updt_by::VARCHAR                              AS revenue_contract_updated_by,\n      updt_dt::DATETIME                             AS revenue_contract_updated_date,\n      incr_updt_dt::DATETIME                        AS incremental_update_date,\n      ct_mod_end_dt::DATETIME                       AS revenue_contract_modification_end_date,\n      is_allocatable_flag::VARCHAR                  AS is_allocatable,\n      inter_company_flag::VARCHAR                   AS is_inter_company,\n      rc_crtd_manual_flag::VARCHAR                  AS is_revenue_contract_manually_created,\n      rc_ssp_pct::VARCHAR                           AS revenue_contract_ssp_percent,\n      multi_f_curr_flag::VARCHAR                    AS is_multi_functional_currency,\n      skip_allocation_flag::VARCHAR                 AS is_skip_allocation,\n      vc_allocation_flag::VARCHAR                   AS is_variable_consideration_allocation,\n      rc_closed_flag::VARCHAR                       AS is_revenue_contract_closed,\n      CONCAT(timeline_period_flag::VARCHAR, '01')   AS timeline_period,\n      new_rc_by_ctmod_flag::VARCHAR                 AS is_new_revenue_contact_created_by_ct_mod,\n      manual_hold_flag::VARCHAR                     AS is_manual_hold,\n      acct_updt_dt::DATETIME                        AS account_updated_date,\n      multi_t_curr_flag::VARCHAR                    AS is_multiple_transactional_currency,\n      retro_pros_flag::VARCHAR                      AS is_retro_pros,\n      exception_flag::VARCHAR                       AS is_exception,\n      rev_rel_appr_flag::VARCHAR                    AS is_rev_rel_approval,\n      CONCAT(max_schd_prd::VARCHAR, '01')           AS max_schedule_period,\n      lifecycle_change_dt::DATETIME                 AS lifecycle_change_date,\n      old_ct_mod_end_dt::DATETIME                   AS old_revenue_contract_modification_end_date,\n      lifecycle_state_flag::VARCHAR                 AS lifecycle_state,\n      skip_ctmod_flag::VARCHAR                      AS is_skip_revenue_contract_modification,\n      hybrid_rc_flag::VARCHAR                       AS is_hybrid_revenue_contract,\n      get_delink_flag::VARCHAR                      AS is_delinked,\n      ltst_mje_flag::VARCHAR                        AS is_lt_st_manual_journal_entry,\n      alloc_multi_curr_flag::VARCHAR                AS is_multiple_currency_allocation,\n      alloc_multi_f_curr_flag::VARCHAR              AS is_multiple_functional_currency_allocation,\n      alloc_multi_t_curr_flag::VARCHAR              AS is_multiple_transactional_currency_allocation\n      \n    FROM zuora_revenue_revenue_contract_header\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_revenue_contract_header_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.555204Z", "completed_at": "2025-06-09T18:51:53.559441Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.559755Z", "completed_at": "2025-06-09T18:51:55.353319Z"}], "thread_id": "Thread-2", "execution_time": 1.886470079421997, "adapter_response": {}, "message": "Database Error in model bizible_accounts_source_pii (models/sources/bizible/sensitive/bizible_accounts_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha256'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_accounts_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_accounts_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                account_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS account_id_hash,\n\n\n\n        \n    \n    \n    \n    name  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_accounts_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_accounts_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.474695Z", "completed_at": "2025-06-09T18:51:53.496822Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.508004Z", "completed_at": "2025-06-09T18:51:55.365344Z"}], "thread_id": "Thread-5", "execution_time": 1.974370002746582, "adapter_response": {}, "message": "Database Error in model zuora_revenue_schedule_item_snapshots_source (models/legacy/snapshots/base/zuora_revenue_schedule_item_snapshots_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Custom(ObjectName([Identifier(Ident { value: \"TIMESTAMP_TZ\", quote_style: None, span: Span(Location(1,804)..Location(1,816)) })]), [])\n  compiled code at target/run/gitlab_snowflake/models/legacy/snapshots/base/zuora_revenue_schedule_item_snapshots_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_schedule_item_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.zuora_revenue_schedule_item_snapshots\n\n), renamed AS (\n\n    SELECT\n      --Primary Keys\n      id::VARCHAR                           AS revenue_schedule_item_id,\n\n      --Foreign Keys\n      accountid::VARCHAR                    AS account_id,\n      parentaccountid::VARCHAR              AS parent_account_id,\n      accountingperiodid::VARCHAR           AS accounting_period_id,\n      amendmentid::VARCHAR                  AS amendment_id,\n      subscriptionid::VARCHAR               AS subscription_id,\n      productid::VARCHAR                    AS product_id,\n      rateplanchargeid::VARCHAR             AS rate_plan_charge_id,\n      rateplanid::VARCHAR                   AS rate_plan_id,\n      soldtocontactid::VARCHAR              AS sold_to_contact_id,\n\n      --Info\n      amount::FLOAT                         AS revenue_schedule_item_amount,\n      billtocontactid::VARCHAR              AS bill_to_contact_id,\n      currency::VARCHAR                     AS currency,\n      createdbyid::VARCHAR                  AS created_by_id,\n      createddate::TIMESTAMP_TZ             AS created_date,\n      defaultpaymentmethodid::VARCHAR       AS default_payment_method_id,\n      deleted::BOOLEAN                      AS is_deleted,\n      updatedbyid::VARCHAR                  AS updated_by_id,\n      updateddate::TIMESTAMP_TZ             AS updated_date,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n\n\n      FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.legacy.zuora_revenue_schedule_item_snapshots_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.487970Z", "completed_at": "2025-06-09T18:51:53.513898Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.519488Z", "completed_at": "2025-06-09T18:51:55.370751Z"}], "thread_id": "Thread-26", "execution_time": 1.967391014099121, "adapter_response": {}, "message": "Database Error in model zuora_revenue_waterfall_source (models/sources/zuora_revenue/zuora_revenue_waterfall_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_waterfall_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_waterfall_source", "compiled": true, "compiled_code": "WITH zuora_revenue_waterfall_summary AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_wf_summ\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY as_of_prd_id, schd_id, acctg_type_id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT \n    \n      md5(cast(coalesce(cast(as_of_prd_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(schd_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(acctg_type_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))   AS primary_key,\n      as_of_prd_id::VARCHAR                                                         AS as_of_period_id,\n      schd_id::VARCHAR                                                              AS revenue_contract_schedule_id,\n      line_id::VARCHAR                                                              AS revenue_contract_line_id,\n      root_line_id::VARCHAR                                                         AS root_line_id,\n      prd_id::VARCHAR                                                               AS period_id,\n      post_prd_id::VARCHAR                                                          AS post_period_id,\n      sec_atr_val::VARCHAR                                                          AS security_attribute_value,\n      book_id::VARCHAR                                                              AS book_id,\n      client_id::VARCHAR                                                            AS client_id,\n      acctg_seg::VARCHAR                                                            AS accounting_segment,\n      acctg_type_id::VARCHAR                                                        AS accounting_type_id,\n      netting_entry_flag::VARCHAR                                                   AS is_netting_entry,\n      schd_type_flag::VARCHAR                                                       AS revenue_contract_schedule_type,\n      t_at::FLOAT                                                                   AS transactional_amount,\n      f_at::FLOAT                                                                   AS functional_amount,\n      r_at::FLOAT                                                                   AS reporting_amount,\n      crtd_prd_id::VARCHAR                                                          AS waterfall_created_peridd_id,\n      crtd_dt::DATETIME                                                             AS waterfall_created_date,\n      crtd_by::VARCHAR                                                              AS waterfall_created_by,\n      updt_dt::DATETIME                                                             AS waterfall_updated_date,\n      updt_by::VARCHAR                                                              AS waterfall_updated_by,\n      incr_updt_dt::DATETIME                                                        AS incremental_update_date\n    \n    FROM zuora_revenue_waterfall_summary\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_waterfall_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.294284Z", "completed_at": "2025-06-09T18:51:53.320230Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.403967Z", "completed_at": "2025-06-09T18:51:55.375651Z"}], "thread_id": "Thread-9", "execution_time": 2.148347854614258, "adapter_response": {}, "message": "Database Error in model zuora_revenue_revenue_contract_schedule_deleted_source (models/sources/zuora_revenue/zuora_revenue_revenue_contract_schedule_deleted_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_revenue_contract_schedule_deleted_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_revenue_contract_schedule_deleted_source", "compiled": true, "compiled_code": "WITH zuora_revenue_revenue_contract_schedule_deleted AS (\n\n    SELECT DISTINCT *\n    FROM EMBUCKET.zuora_revenue.bi3_rc_schd_del\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY schd_id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT \n    \n      schd_id::VARCHAR              AS revenue_contract_schedule_id,\n      client_id::VARCHAR            AS client_id,\n      deleted_time::DATETIME        AS revenue_contract_schedule_deleted_at,\n      crtd_by::VARCHAR              AS revenue_contract_schedule_created_by,\n      crtd_dt::DATETIME             AS revenue_contract_schedule_created_date,\n      updt_by::VARCHAR              AS revenue_contract_schedule_updated_by,\n      updt_dt::DATETIME             AS revenue_contract_schedule_updated_date,\n      incr_updt_dt::DATETIME        AS incremental_update_date\n\n    FROM zuora_revenue_revenue_contract_schedule_deleted\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_revenue_contract_schedule_deleted_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.094580Z", "completed_at": "2025-06-09T18:51:53.119428Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.142024Z", "completed_at": "2025-06-09T18:51:55.392418Z"}], "thread_id": "Thread-3", "execution_time": 2.3751590251922607, "adapter_response": {}, "message": "Database Error in model zuora_revenue_calendar_source (models/sources/zuora_revenue/zuora_revenue_calendar_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_calendar_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_calendar_source", "compiled": true, "compiled_code": "WITH zuora_revenue_calendar AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_calendar\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT\n    \n      CONCAT(id::VARCHAR,'01')      AS period_id,\n      period_name::VARCHAR          AS period_name,\n      period_num::VARCHAR           AS period_number,\n      start_date::DATETIME          AS calendar_start_date,\n      end_date::DATETIME            AS calendar_end_date,\n      year_start_dt::DATETIME       AS year_start_date,\n      qtr_num::VARCHAR              AS quarter_number,\n      qtr_start_dt::DATETIME        AS quarter_start_date,\n      period_year::VARCHAR          AS period_year,\n      qtr_end_dt::DATETIME          AS quarter_end_date,\n      year_end_dt::DATETIME         AS year_end_date,\n      client_id::VARCHAR            AS client_id,\n      crtd_by::VARCHAR              AS calendar_created_by,\n      crtd_dt::DATETIME             AS calendar_created_date,\n      updt_by::VARCHAR              AS calendar_updated_by,\n      updt_dt::DATETIME             AS calendar_updated_date,\n      incr_updt_dt::DATETIME        AS incremental_update_date\n\n    FROM zuora_revenue_calendar\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_calendar_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.246245Z", "completed_at": "2025-06-09T18:51:53.323472Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.395298Z", "completed_at": "2025-06-09T18:51:55.385798Z"}], "thread_id": "Thread-31", "execution_time": 2.3057069778442383, "adapter_response": {}, "message": "Database Error in model zuora_revenue_organization_source (models/sources/zuora_revenue/zuora_revenue_organization_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_organization_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_organization_source", "compiled": true, "compiled_code": "WITH zuora_revenue_organization AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_org\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT \n    \n      id::VARCHAR                               AS zuora_revenue_organization_id,\n      org_id::VARCHAR                           AS organization_id,\n      org_name::VARCHAR                         AS organization_name,\n      crtd_by::VARCHAR                          AS organization_created_by,\n      crtd_dt::DATETIME                         AS organization_created_date,\n      updt_by::VARCHAR                          AS organization_updated_by,\n      updt_dt::DATETIME                         AS organization_updated_date,\n      client_id::VARCHAR                        AS client_id,\n      CONCAT(crtd_prd_id::VARCHAR, '01')        AS organization_created_period_id,\n      incr_updt_dt::DATETIME                    AS incremental_update_date,\n      org_code::VARCHAR                         AS organization_code,\n      entity_id::VARCHAR                        AS entity_id\n\n    FROM zuora_revenue_organization\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_organization_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:52.971590Z", "completed_at": "2025-06-09T18:51:53.007482Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.031995Z", "completed_at": "2025-06-09T18:51:55.393181Z"}], "thread_id": "Thread-18", "execution_time": 2.5003719329833984, "adapter_response": {}, "message": "Database Error in model zuora_revenue_approval_detail_source (models/sources/zuora_revenue/zuora_revenue_approval_detail_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_approval_detail_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_approval_detail_source", "compiled": true, "compiled_code": "WITH zuora_revenue_approval_detail AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_appr_dtl\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY rc_appr_id, approver_sequence, approval_rule_id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT\n    \n    md5(cast(coalesce(cast(rc_appr_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(approver_sequence as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(approval_rule_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))  AS primary_key,\n    rc_appr_id::VARCHAR                                                                     AS revenue_contract_approval_id, \n    rc_id::VARCHAR                                                                          AS revenue_contract_id, \n    approval_obj_type::VARCHAR                                                              AS approval_object_type, \n    approval_status::VARCHAR                                                                AS approval_status, \n    approver_comments::VARCHAR                                                              AS approver_comments, \n    approved_by_user::VARCHAR                                                               AS approved_by_user_id, \n    approved_by_name::VARCHAR                                                               AS approved_by_user_name, \n    approval_date::DATETIME                                                                 AS approval_date, \n    pending_since::DATETIME                                                                 AS pending_since, \n    approver_user::VARCHAR                                                                  AS approver_user_id, \n    approver_name::VARCHAR                                                                  AS approver_user_name, \n    approver_sequence::VARCHAR                                                              AS approver_sequence, \n    approval_rule_id::VARCHAR                                                               AS approver_rule_id, \n    approval_rule_name::VARCHAR                                                             AS approval_rule_name, \n    approval_type::VARCHAR                                                                  AS approval_type, \n    approval_rule_desc::VARCHAR                                                             AS approval_rule_description, \n    book_id::VARCHAR                                                                        AS book_id, \n    sec_atr_val::VARCHAR                                                                    AS security_attribute_value, \n    client_id::VARCHAR                                                                      AS client_id, \n    rc_appr_crtd_by::VARCHAR                                                                AS revenue_contract_approval_created_by, \n    rc_appr_crtd_dt::DATETIME                                                               AS revenue_contract_approval_created_date, \n    rc_appr_updt_by::VARCHAR                                                                AS revenue_contract_approval_updated_by, \n    rc_appr_updt_dt::DATETIME                                                               AS revenue_contract_approval_updated_date, \n    rc_rule_crtd_by::VARCHAR                                                                AS revenue_contract_rule_created__by, \n    rc_rule_crtd_dt::DATETIME                                                               AS revenue_contract_rule_created_date, \n    rc_rule_updt_by::VARCHAR                                                                AS revenue_contract_rule_updated_by, \n    rc_rule_updt_dt::DATETIME                                                               AS revenue_contract_rule_updatd_date, \n    appr_rule_crtd_by::VARCHAR                                                              AS approval_rule_created_by, \n    appr_rule_crtd_dt::DATETIME                                                             AS approval_rule_created_date, \n    appr_rule_updt_by::VARCHAR                                                              AS approval_rule_updated_by, \n    appr_rule_updt_dt::DATETIME                                                             AS approval_rule_updated_date, \n    incr_updt_dt::DATETIME                                                                  AS incremental_update_date, \n    approval_start_date::DATETIME                                                           AS approval_start_date, \n    approval_end_date::DATETIME                                                             AS approval_end_date, \n    rc_rule_id::VARCHAR                                                                     AS revenue_contract_rule_id, \n    rc_rule_rule_id::VARCHAR                                                                AS revenue_contract_rule_rule_id, \n    rc_rule_obj_type::VARCHAR                                                               AS revenue_contract_rule_object_type, \n    rev_schd_flag::VARCHAR                                                                  AS is_revenue_schedule, \n    override_approver_flag::VARCHAR                                                         AS is_override_approve, \n    func_name::VARCHAR                                                                      AS function_name, \n    rule_id::VARCHAR                                                                        AS rule_id, \n    rc_rev_rel_appr_flag::VARCHAR                                                           AS is_revenue_contract_revenue_rel_approver, \n    appr_removal_flag::VARCHAR                                                              AS is_approval_removal, \n    rule_rev_rel_appr_flag::VARCHAR                                                         AS is_rule_revenue_approve, \n    override_aprv_flag::VARCHAR                                                             AS is_override_aprv\n\n    FROM zuora_revenue_approval_detail\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_approval_detail_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.355755Z", "completed_at": "2025-06-09T18:51:53.401541Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.413126Z", "completed_at": "2025-06-09T18:51:55.393700Z"}], "thread_id": "Thread-4", "execution_time": 2.1267588138580322, "adapter_response": {}, "message": "Database Error in model zuora_revenue_revenue_contract_schedule_source (models/sources/zuora_revenue/zuora_revenue_revenue_contract_schedule_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_revenue_contract_schedule_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_revenue_contract_schedule_source", "compiled": true, "compiled_code": "\n\nWITH zuora_revenue_revenue_contract_schedule AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_rc_schd\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY schd_id, acctg_type ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT \n\n      md5(cast(coalesce(cast(schd_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(acctg_type as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))  AS primary_key,\n      rc_id::VARCHAR                                            AS revenue_contract_id,\n      rc_ver::VARCHAR                                           AS revenue_contract_version,\n      dist_id::VARCHAR                                          AS dist_id,\n      atr1::VARCHAR                                             AS revenue_contract_schedule_attribute_1,\n      atr2::VARCHAR                                             AS revenue_contract_schedule_attribute_2,\n      atr3::VARCHAR                                             AS revenue_contract_schedule_attribute_3,\n      atr4::VARCHAR                                             AS revenue_contract_schedule_attribute_4,\n      atr5::VARCHAR                                             AS revenue_contract_schedule_attribute_5,\n      pob_id::VARCHAR                                           AS performance_obligation_id,\n      amount::FLOAT                                             AS amount,\n      curr::VARCHAR                                             AS transactional_currency,\n      f_ex_rate::FLOAT                                          AS functional_currency_exchange_rate,\n      ex_rate_date::DATETIME                                    AS exchange_rate_date,\n      post_date::DATETIME                                       AS post_date,\n      CONCAT(prd_id, '01')::VARCHAR                             AS period_id,\n      post_prd_id::VARCHAR                                      AS posted_period_id,\n      post_batch_id::VARCHAR                                    AS post_batch_id,\n      g_ex_rate::FLOAT                                          AS reporting_currency_exchange_rate,\n      rel_id::VARCHAR                                           AS release_action_id,\n      rel_pct::FLOAT                                            AS release_percent,\n      CONCAT(crtd_prd_id,'01')::VARCHAR                         AS revenue_contract_schedule_created_period_id,\n      root_line_id::VARCHAR                                     AS root_line_id,\n      ref_bill_id::VARCHAR                                      AS reference_revenue_contract_bill_id,\n      schd_id::VARCHAR                                          AS revenue_contract_schedule_id,\n      line_id::VARCHAR                                          AS revenue_contract_line_id,\n      acctg_seg::VARCHAR                                        AS accounting_segment,\n      dr_amount::FLOAT                                          AS transactional_debit_amount,\n      cr_amount::FLOAT                                          AS transactional_credit_amount,\n      f_dr_amount::FLOAT                                        AS functional_debit_amount,\n      f_cr_amount::FLOAT                                        AS functional_credit_amount,\n      g_dr_amount::FLOAT                                        AS reporting_debit_amount,\n      g_cr_amount::FLOAT                                        AS reporting_credit_amount,\n      acctg_type::VARCHAR                                       AS accounting_type_id,\n      interfaced_flag::VARCHAR                                  AS is_interfaced,\n      initial_entry_flag::VARCHAR                               AS is_initial_entry,\n      reversal_flag::VARCHAR                                    AS is_reversal,\n      fcst_flag::VARCHAR                                        AS is_forecast,\n      pp_cl_flag::VARCHAR                                       AS is_previous_period_contract_liability,\n      netting_entry_flag::VARCHAR                               AS is_netting_entry,\n      reallocation_flag::VARCHAR                                AS is_reallocation,\n      account_name::VARCHAR                                     AS account_name,\n      schd_type_flag::VARCHAR                                   AS schedule_type,\n      initial_rep_entry_flag::VARCHAR                           AS is_initial_reporting_entry,\n      period_name::VARCHAR                                      AS period_name,\n      client_id::VARCHAR                                        AS client_id,\n      book_id::VARCHAR                                          AS book_id,\n      sec_atr_val::VARCHAR                                      AS security_attribute_value,\n      crtd_by::VARCHAR                                          AS revenue_contract_schedule_created_by,\n      crtd_dt::DATETIME                                         AS revenue_contract_schedule_created_date,\n      updt_by::VARCHAR                                          AS revenue_contract_schedule_updated_by,\n      updt_dt::DATETIME                                         AS revenue_contract_schedule_updated_date,\n      incr_updt_dt::DATETIME                                    AS incremental_update_date,\n      impact_trans_prc_flag::VARCHAR                            AS is_impact_transaction_price,\n      line_type_flag::VARCHAR                                   AS revenue_contract_line_type,\n      unbilled_flag::VARCHAR                                    AS is_unbilled,\n      bld_fx_dt::DATETIME                                       AS billed_fx_date,\n      bld_fx_rate::FLOAT                                        AS billed_fx_rate,\n      rord_inv_ref::VARCHAR                                     AS reduction_order_invoice_reference,\n      cr_acctg_flag::VARCHAR                                    AS credit_accounting,\n      dr_acctg_flag::VARCHAR                                    AS debit_accounting,\n      mass_action_flag::VARCHAR                                 AS is_mass_action,\n      special_alloc_flag::VARCHAR                               AS is_special_allocation,\n      pp_adj_flag::VARCHAR                                      AS is_previous_period_adjustment,\n      vc_expiry_schd_flag::VARCHAR                              AS is_variable_consideration_expiry_schedule,\n      orig_line_id::VARCHAR                                     AS original_revenue_contract_line_id,\n      dr_link_id::VARCHAR                                       AS debit_link_id,\n      cr_link_id::VARCHAR                                       AS credit_link_id,\n      model_id::VARCHAR                                         AS model_id,\n      je_batch_id::VARCHAR                                      AS manual_journal_entry_header_id,\n      je_batch_name::VARCHAR                                    AS manual_journal_entry_header_name,\n      pq_adj_flag::VARCHAR                                      AS is_previous_quarter_adjustment,\n      delink_flag::VARCHAR                                      AS is_delink,\n      retro_rvrsl_flag::VARCHAR                                 AS is_retro_reversal,\n      pp_amt::FLOAT                                             AS previous_period_amount,\n      pq_amt::FLOAT                                             AS previous_quarter_amount,\n      py_amt::FLOAT                                             AS previous_year_amount,\n      updt_prd_id::VARCHAR                                      AS revenue_contract_schedule_update_period_id,\n      pord_flag::VARCHAR                                        AS is_pord,\n      unbill_rvrsl_flag::VARCHAR                                AS is_unbilled_reversal,\n      rec_evt_act_flag::VARCHAR                                 AS is_recognition_event_account,\n      cmro_contra_entry_flag::VARCHAR                           AS is_cmro_contra_entry,\n      retro_entry_flag::VARCHAR                                 AS is_retro_entry,\n      left_over_entry_flag::VARCHAR                             AS is_left_over_entry,\n      revs_posted_inv_flag::VARCHAR                             AS is_revs_posted_invoice,\n      cl_dist_entry_flag::VARCHAR                               AS is_contract_liability_dist_entry\n      \n    FROM zuora_revenue_revenue_contract_schedule\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_revenue_contract_schedule_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.083305Z", "completed_at": "2025-06-09T18:51:53.117481Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.134432Z", "completed_at": "2025-06-09T18:51:55.394349Z"}], "thread_id": "Thread-28", "execution_time": 2.380722999572754, "adapter_response": {}, "message": "Database Error in model zuora_revenue_book_source (models/sources/zuora_revenue/zuora_revenue_book_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_book_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_book_source", "compiled": true, "compiled_code": "WITH zuora_revenue_book AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_book\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT \n    \n      id ::VARCHAR                              AS book_id,\n      name::VARCHAR                             AS book_name,\n      description::VARCHAR                      AS book_description,\n      type::VARCHAR                             AS book_type,\n      rc_prefix::VARCHAR                        AS revenue_contract_prefix,\n      CONCAT(open_prd_id::VARCHAR,'01')         AS book_open_period_id,\n      start_date::DATETIME                      AS book_start_date,\n      end_date::VARCHAR                         AS book_end_date,\n      asst_segments::VARCHAR                    AS asset_segment,\n      lblty_segments::VARCHAR                   AS liabilty_segment,\n      allocation_flag::VARCHAR                  AS is_allocation,\n      bndl_expl_flag::VARCHAR                   AS is_bundle_explosion,\n      hard_freeze_flag ::VARCHAR                AS is_hard_freeze,\n      ltst_enabled_flag::VARCHAR                AS is_ltst_enabled,\n      postable_flag::VARCHAR                    AS is_postable,\n      primary_book_flag::VARCHAR                AS is_primary_book,\n      soft_freeze_flag::VARCHAR                 AS is_soft_freeze,\n      client_id::VARCHAR                        AS client_id,\n      CONCAT(crtd_prd_id::VARCHAR,'01')         AS book_created_period_id,\n      crtd_dt::DATETIME                         AS book_created_date,\n      crtd_by::VARCHAR                          AS book_created_by,\n      updt_dt::DATETIME                         AS book_updated_date,\n      updt_by::VARCHAR                          AS book_updated_by,\n      incr_updt_dt::DATETIME                    AS incremental_update_date,\n      enabled_flag::VARCHAR                     AS is_enabled\n\n    FROM zuora_revenue_book\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_book_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.148398Z", "completed_at": "2025-06-09T18:51:53.175967Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.176361Z", "completed_at": "2025-06-09T18:51:55.412849Z"}], "thread_id": "Thread-14", "execution_time": 2.3292510509490967, "adapter_response": {}, "message": "Database Error in model zuora_revenue_manual_journal_entry_source (models/sources/zuora_revenue/zuora_revenue_manual_journal_entry_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_manual_journal_entry_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_manual_journal_entry_source", "compiled": true, "compiled_code": "\n\nWITH zuora_revenue_manual_journal_entry AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_mje\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY je_line_id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT \n\n      je_head_id::VARCHAR                           AS manual_journal_entry_header_id,\n      je_head_name::VARCHAR                         AS manual_journal_entry_header_name,\n      je_head_desc::VARCHAR                         AS manual_journal_entry_header_description,\n      je_head_cat_code::VARCHAR                     AS manual_journal_entry_header_category_code,\n      je_head_ex_rate_type::VARCHAR                 AS manual_journal_entry_header_exchange_rate_type,\n      hash_total::VARCHAR                           AS hash_total,\n      sob_id::VARCHAR                               AS set_of_books_id,\n      sob_name::VARCHAR                             AS set_of_books_name,\n      fn_cur::VARCHAR                               AS functional_currency,\n      -- Data received from Zuora in YYYYMM format, formatted to YYYYMMDD in the below. \n      CONCAT(rvsl_prd_id::VARCHAR,'01')             AS reversal_period_id,\n      CONCAT(prd_id::VARCHAR,'01')                  AS period_id,\n      je_head_atr1::VARCHAR                         AS manual_journal_entry_header_attribute_1,\n      je_head_atr2::VARCHAR                         AS manual_journal_entry_header_attribute_2,\n      je_head_atr3::VARCHAR                         AS manual_journal_entry_header_attribute_3,\n      je_head_atr4::VARCHAR                         AS manual_journal_entry_header_attribute_4,\n      je_head_atr5::VARCHAR                         AS manual_journal_entry_header_attribute_5,\n      CONCAT(je_head_crtd_prd_id::VARCHAR,'01')     AS manual_journal_entry_header_created_period_id,\n      je_line_id::VARCHAR                           AS manual_journal_entry_line_id,\n      activity_type::VARCHAR                        AS activity_type,\n      curr::VARCHAR                                 AS currency,\n      dr_cc_id::VARCHAR                             AS debit_account_code_combination_id,\n      cr_cc_id::VARCHAR                             AS credit_account_code_combination_id,\n      ex_rate_date::DATETIME                        AS exchange_rate_date,\n      ex_rate::VARCHAR                              AS exchange_rate,\n      g_ex_rate::VARCHAR                            AS reporting_currency_exchange_rate,\n      amount::FLOAT                                 AS amount,\n      func_amount::FLOAT                            AS funcional_currency_amount,\n      start_date::DATETIME                          AS manual_journal_entry_line_start_date,\n      end_date::DATETIME                            AS manual_journal_entry_line_end_date,\n      reason_code::VARCHAR                          AS reason_code,\n      description::VARCHAR                          AS manual_journal_entry_line_description,\n      comments::VARCHAR                             AS manual_journal_entry_line_comments,\n      dr_segment1::VARCHAR                          AS debit_segment_1,\n      dr_segment2::VARCHAR                          AS debit_segment_2,\n      dr_segment3::VARCHAR                          AS debit_segment_3,\n      dr_segment4::VARCHAR                          AS debit_segment_4,\n      dr_segment5::VARCHAR                          AS debit_segment_5,\n      dr_segment6::VARCHAR                          AS debit_segment_6,\n      dr_segment7::VARCHAR                          AS debit_segment_7,\n      dr_segment8::VARCHAR                          AS debit_segment_8,\n      dr_segment9::VARCHAR                          AS debit_segment_9,\n      dr_segment10::VARCHAR                         AS debit_segment_10,\n      cr_segment1::VARCHAR                          AS credit_segment_1,\n      cr_segment2::VARCHAR                          AS credit_segment_2,\n      cr_segment3::VARCHAR                          AS credit_segment_3,\n      cr_segment4::VARCHAR                          AS credit_segment_4,\n      cr_segment5::VARCHAR                          AS credit_segment_5,\n      cr_segment6::VARCHAR                          AS credit_segment_6,\n      cr_segment7::VARCHAR                          AS credit_segment_7,\n      cr_segment8::VARCHAR                          AS credit_segment_8,\n      cr_segment9::VARCHAR                          AS credit_segment_9,\n      cr_segment10::VARCHAR                         AS credit_segment_10,\n      reference1::VARCHAR                           AS manual_journal_entry_reference_1,\n      reference2::VARCHAR                           AS manual_journal_entry_reference_2,\n      reference3::VARCHAR                           AS manual_journal_entry_reference_3,\n      reference4::VARCHAR                           AS manual_journal_entry_reference_4,\n      reference5::VARCHAR                           AS manual_journal_entry_reference_5,\n      reference6::VARCHAR                           AS manual_journal_entry_reference_6,\n      reference7::VARCHAR                           AS manual_journal_entry_reference_7,\n      reference8::VARCHAR                           AS manual_journal_entry_reference_8,\n      reference9::VARCHAR                           AS manual_journal_entry_reference_9,\n      reference10::VARCHAR                          AS manual_journal_entry_reference_10,\n      reference11::VARCHAR                          AS manual_journal_entry_reference_11,\n      reference12::VARCHAR                          AS manual_journal_entry_reference_12,\n      reference13::VARCHAR                          AS manual_journal_entry_reference_13,\n      reference14::VARCHAR                          AS manual_journal_entry_reference_14,\n      reference15::VARCHAR                          AS manual_journal_entry_reference_15,\n      sec_atr_val::VARCHAR                          AS security_attribute_value,\n      book_id::VARCHAR                              AS book_id,\n      client_id::VARCHAR                            AS client_id,\n      je_head_crtd_by::VARCHAR                      AS manual_journal_entry_header_created_by,\n      je_head_crtd_dt::DATETIME                     AS manual_journal_entry_header_created_date,\n      je_head_updt_by::VARCHAR                      AS manual_journal_entry_header_updated_by,\n      je_head_updt_dt::DATETIME                     AS manual_journal_entry_header_updated_date,\n      je_line_crtd_by::VARCHAR                      AS manual_journal_entry_line_created_by,\n      je_line_crtd_dt::DATETIME                     AS manual_journal_entry_line_created_date,\n      je_line_updt_by::VARCHAR                      AS manual_journal_entry_line_updated_by,\n      je_line_updt_dt::DATETIME                     AS manual_journal_entry_line_updated_date,\n      incr_updt_dt::DATETIME                        AS incremental_update_date,\n      je_status_flag::VARCHAR                       AS manual_journal_entry_header_status,\n      rev_rec_type_flag::VARCHAR                    AS is_revenue_recognition_type,\n      je_type_flag::VARCHAR                         AS manual_journal_entry_header_type,\n      summary_flag::VARCHAR                         AS is_summary,\n      manual_reversal_flag::VARCHAR                 AS is_manual_reversal,\n      reversal_status_flag::VARCHAR                 AS reversal_status,\n      approval_status_flag::VARCHAR                 AS approval_status,\n      reversal_approval_status_flag::VARCHAR        AS reversal_approval_status,\n      rev_rec_type::VARCHAR                         AS revenue_recognition_type,\n      error_msg::VARCHAR                            AS error_message,\n      dr_activity_type::VARCHAR                     AS debit_activity_type,\n      cr_activity_type::VARCHAR                     AS credit_activity_type,\n      active_flag::VARCHAR                          AS is_active,\n      appr_name::VARCHAR                            AS approver_name,\n      rc_id::VARCHAR                                AS revenue_contract_id,\n      doc_line_id::VARCHAR                          AS doc_line_id,\n      rc_line_id::VARCHAR                           AS revenue_contract_line_id,\n      cst_or_vc_type::VARCHAR                       AS is_cost_or_vairable_consideration,\n      type_name::VARCHAR                            AS manual_journal_entry_line_type,\n      dt_frmt::VARCHAR                              AS date_format,\n      opn_int_flag::VARCHAR                         AS is_open_interface,\n      auto_appr_flag::VARCHAR                       AS is_auto_approved,\n      unbilled_flag::VARCHAR                        AS is_unbilled\n\n    FROM zuora_revenue_manual_journal_entry\n\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_manual_journal_entry_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.189504Z", "completed_at": "2025-06-09T18:51:53.228549Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.289301Z", "completed_at": "2025-06-09T18:51:55.413490Z"}], "thread_id": "Thread-13", "execution_time": 2.3211848735809326, "adapter_response": {}, "message": "Database Error in model zuora_revenue_revenue_contract_hold_source (models/sources/zuora_revenue/zuora_revenue_revenue_contract_hold_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_revenue_contract_hold_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_revenue_contract_hold_source", "compiled": true, "compiled_code": "\n\nWITH zuora_revenue_revenue_contract_hold AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_rc_hold\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY rc_hold_id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT \n\n      rc_hold_id::VARCHAR                               AS revenue_contract_hold_id,\n      rc_id::VARCHAR                                    AS revenue_contract_id,\n      rc_hold_applied_by::VARCHAR                       AS revenue_contract_hold_applied_by_id,\n      rc_hold_applied_by_name::VARCHAR                  AS revenue_contract_hold_applied_by_name,\n      CONCAT(rc_hold_applied_prd_id::VARCHAR, '01')     AS revenue_contract_hold_applied_period_id,\n      rc_hold_applied_dt::DATETIME                      AS revenue_contract_hold_applied_date,\n      rc_hold_comment::VARCHAR                          AS revenue_contract_hold_comment,\n      rc_hold_released_flag::VARCHAR                    AS is_revenue_contract_hold_released,\n      rc_hold_release_comment::VARCHAR                  AS revenue_contract_hold_release_comment,\n      rc_hold_release_reason::VARCHAR                   AS revenue_contract_hold_release_reason,\n      CONCAT(rc_hold_release_prd_id::VARCHAR, '01')     AS revenue_contract_hold_release_period_id,\n      rc_hold_release_dt::DATETIME                      AS revenue_contract_hold_release_date,\n      rc_hold_release_by::VARCHAR                       AS revenue_contract_hold_release_by_id,\n      rc_hold_release_by_name::VARCHAR                  AS revenue_contract_hold_release_by_name,\n      hold_id::VARCHAR                                  AS hold_id,\n      hold_type::VARCHAR                                AS hold_type,\n      hold_name::VARCHAR                                AS hold_name,\n      hold_desc::VARCHAR                                AS hold_description,\n      rev_schd_hold_flag::VARCHAR                       AS is_revenue_schedule_hold,\n      revrec_hold_flag::VARCHAR                         AS is_revenue_recognition_hold,\n      alloc_schd_hold_flag::VARCHAR                     AS is_allocation_schedule_hold,\n      alloc_rec_hold_flag::VARCHAR                      AS is_allocation_recognition_hold,\n      user_releasable_flag::VARCHAR                     AS is_user_releasable,\n      sec_atr_val::VARCHAR                              AS security_attribute_value,\n      client_id::VARCHAR                                AS client_id,\n      book_id::VARCHAR                                  AS book_id,\n      hold_crtd_by::VARCHAR                             AS hold_created_by,\n      hold_crtd_dt::DATETIME                            AS hold_created_date,\n      hold_updt_by::VARCHAR                             AS hold_update_by,\n      hold_updt_dt::DATETIME                            AS hold_update_date,\n      rc_hold_crtd_by::VARCHAR                          AS revenue_contract_hold_created_by,\n      rc_hold_crtd_dt::DATETIME                         AS revenue_contract_hold_created_date,\n      rc_hold_updt_by::VARCHAR                          AS revenue_contract_hold_updated_by,\n      rc_hold_updt_dt::DATETIME                         AS revenue_contract_hold_updated_date,\n      incr_updt_dt::DATETIME                            AS incremental_update_date,\n      rc_hold_exp_date::DATETIME                        AS revenue_contract_hold_expiration_date,\n      rc_hold_acct_segments::VARCHAR                    AS revenue_contract_hold_accounting_segment,\n      allow_manual_apply_flag::VARCHAR                  AS is_allow_manual_apply,\n      allow_manual_rel_flag::VARCHAR                    AS is_allow_manual_rel,\n      hold_level::VARCHAR                               AS hold_level,\n      hold_schd_type::VARCHAR                           AS hold_schedule_type,\n      exp_fld_name::VARCHAR                             AS expiry_field_name,\n      exp_num_type::VARCHAR                             AS expiry_number_type,\n      exp_num::VARCHAR                                  AS expiry_number,\n      ln_hold_level_flag::VARCHAR                       AS line_hold_level,\n      ln_hold_type_flag::VARCHAR                        AS line_hold_type,\n      ln_hold_processed_flag::VARCHAR                   AS is_line_hold_processed,\n      rev_hold_start_date::DATETIME                     AS revenue_hold_start_date,\n      rev_hold_end_date::DATETIME                       AS revenue_hold_end_date,\n      criteria_match_flag::VARCHAR                      AS is_criteria_match,\n      remove_hold_flag::VARCHAR                         AS is_remove_hold,\n      line_id::VARCHAR                                  AS revenue_contract_line_id,\n      event_id::VARCHAR                                 AS event_id,\n      manual_hold_flag::VARCHAR                         AS is_manual_hold,\n      evnt_hold_appld_manul_flag::VARCHAR               AS is_manual_event_hold_applied,\n      override_aprv_flag::VARCHAR                       AS is_override_approval,\n      sha_enabled_flag::VARCHAR                         AS is_sha_enabled,\n      rc_pob_id::VARCHAR                                AS revenue_contract_performance_obligation_id\n      \n    FROM zuora_revenue_revenue_contract_hold\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_revenue_contract_hold_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.airflow_dag_run", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.airflow_dag_run", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.256771Z", "completed_at": "2025-06-09T18:51:53.299602Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.299922Z", "completed_at": "2025-06-09T18:51:55.406654Z"}], "thread_id": "Thread-17", "execution_time": 2.2862708568573, "adapter_response": {}, "message": "Database Error in model zuora_revenue_revenue_contract_performance_obligation_source (models/sources/zuora_revenue/zuora_revenue_revenue_contract_performance_obligation_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_revenue_contract_performance_obligation_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_revenue_contract_performance_obligation_source", "compiled": true, "compiled_code": "\n\nWITH zuora_revenue_revenue_contract_performance_obligation AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_rc_pob\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY rc_pob_id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT \n    \n      rc_pob_id::VARCHAR                            AS revenue_contract_performance_obligation_id,\n      rc_id::VARCHAR                                AS revenue_contract_id,\n      lead_line_id::VARCHAR                         AS lead_line_id,\n      pob_version::VARCHAR                          AS performance_obligation_version,\n      rc_pob_name::VARCHAR                          AS revenue_contract_performance_obligation_name,\n      pob_dependency_flag::VARCHAR                  AS is_performance_obligation_dependency,\n      pob_processed_flag::VARCHAR                   AS is_performance_obligation_processed,\n      pob_removed_flag::VARCHAR                     AS is_performance_obligation_removed,\n      pob_multi_sign_flag::VARCHAR                  AS is_performance_obligation_multiple_sign,\n      pob_removal_flag::VARCHAR                     AS is_performance_obligation_removal,\n      pob_manual_flag::VARCHAR                      AS is_performance_obligation_manual,\n      pob_orphan_flag::VARCHAR                      AS is_performance_obligation_orphan,\n      pob_manual_forecast_flag::VARCHAR             AS is_performance_obligation_manual_forecast,\n      pob_tmpl_id::VARCHAR                          AS performance_obligation_template_id,\n      pob_tmpl_name::VARCHAR                        AS performance_obligation_template_name,\n      pob_tmpl_desc::VARCHAR                        AS performance_obligation_template_description,\n      pob_tmpl_version::VARCHAR                     AS performance_obligation_template_version,\n      rev_rec_type::VARCHAR                         AS revenue_recognition_type,\n      start_date::DATETIME                          AS revenue_contract_performance_obligation_start_date,\n      end_date::DATETIME                            AS revenue_contract_performance_obligation_end_date,\n      rev_timing::VARCHAR                           AS revenue_timing,\n      rev_start_dt::DATETIME                        AS revenue_start_date,\n      rev_end_dt::DATETIME                          AS revenue_end_date,\n      duration::VARCHAR                             AS revenue_amortization_duration,\n      rev_segments::VARCHAR                         AS revenue_accounting_segment,\n      cv_in_segments::VARCHAR                       AS carve_in_accounting_segment,\n      cv_out_segments::VARCHAR                      AS carve_out_accounting_segment,\n      cl_segments::VARCHAR                          AS contract_liability_accounting_segment,\n      ca_segments::VARCHAR                          AS contract_asset_accounting_segment,\n      qty_distinct_flag::VARCHAR                    AS is_quantity_distinct,\n      term_distinct_flag::VARCHAR                   AS is_term_distinct,\n      apply_manually_flag::VARCHAR                  AS is_apply_manually,\n      release_manually_flag::VARCHAR                AS is_release_manually,\n      rev_leading_flag::VARCHAR                     AS is_revenue_leading,\n      cv_in_leading_flag::VARCHAR                   AS is_carve_in_leading,\n      cv_out_leading_flag::VARCHAR                  AS is_carve_out_leading,\n      cl_leading_flag::VARCHAR                      AS is_contract_liability_leading,\n      ca_leading_flag::VARCHAR                      AS is_contract_asset_leading,\n      rel_action_type_flag::VARCHAR                 AS release_action_type,\n      pob_tmpl_dependency_flag::VARCHAR             AS is_performance_obligation_template_dependency,\n      latest_version_flag::VARCHAR                  AS is_latest_version,\n      consumption_flag::VARCHAR                     AS is_consumption,\n      pob_satisfied_flag::VARCHAR                   AS is_performance_obligation_satisfied,\n      event_id::VARCHAR                             AS event_id,\n      event_name::VARCHAR                           AS event_name,\n      postable_flag::VARCHAR                        AS is_postable,\n      event_type_flag::VARCHAR                      AS event_type,\n      book_id::VARCHAR                              AS book_id,\n      sec_atr_val::VARCHAR                          AS security_attribute_value,\n      client_id::VARCHAR                            AS client_id,\n      CONCAT(crtd_prd_id::VARCHAR, '01')            AS revenue_contract_performance_obligation_created_period_id,\n      rc_pob_crtd_by::VARCHAR                       AS revenue_contract_performance_obligation_created_by,\n      rc_pob_crtd_dt::DATETIME                      AS revenue_contract_performance_obligation_created_date,\n      rc_pob_updt_by::VARCHAR                       AS revenue_contract_performance_obligation_updated_by,\n      rc_pob_updt_dt::DATETIME                      AS revenue_contract_performance_obligation_updated_date,\n      pob_tmpl_crtd_by::VARCHAR                     AS performance_obligation_template_created_by,\n      pob_tmpl_crtd_dt::DATETIME                    AS performance_obligation_template_created_date,\n      pob_tmpl_updt_by::VARCHAR                     AS performance_obligation_template_updated_by,\n      pob_tmpl_updt_dt::DATETIME                    AS performance_obligation_template_updated_date,\n      event_crtd_by::VARCHAR                        AS event_created_by,\n      event_crtd_dt::DATETIME                       AS event_created_date,\n      event_updt_by::VARCHAR                        AS event_updated_by,\n      event_updt_dt::DATETIME                       AS event_updated_date,\n      incr_updt_dt::VARCHAR                         AS incremental_update_date,\n      pob_id::VARCHAR                               AS performance_obligation_id,\n      natural_acct::VARCHAR                         AS natural_account,\n      distinct_flag::VARCHAR                        AS is_distinct,\n      tolerance_pct::FLOAT                          AS tolerance_percent,\n      evt_type_id::VARCHAR                          AS event_type_id,\n      cmltv_prcs_flag::VARCHAR                      AS is_cumulative_prcs,\n      exp_date::DATETIME                            AS expiry_date,\n      manual_edit_flag::VARCHAR                     AS is_manual_edit,\n      rule_identifier::VARCHAR                      AS rule_identifier,\n      exp_fld_name::VARCHAR                         AS expiry_field_name,\n      exp_num::VARCHAR                              AS expiry_number,\n      exp_num_type::VARCHAR                         AS expiry_number_type,\n      rel_immediate_flag::VARCHAR                   AS is_release_immediate,\n      so_term_change_flag::VARCHAR                  AS is_sales_order_term_change,\n      event_column1::VARCHAR                        AS event_column_1,\n      event_column2::VARCHAR                        AS event_column_2,\n      event_column3::VARCHAR                        AS event_column_3,\n      event_column4::VARCHAR                        AS event_column_4,\n      event_column5::VARCHAR                        AS event_column_5,\n      source_column1::VARCHAR                       AS source_colum_n1,\n      source_column2::VARCHAR                       AS source_column_2,\n      source_column3::VARCHAR                       AS source_column_3,\n      source_column4::VARCHAR                       AS source_column_4,\n      source_column5::VARCHAR                       AS source_column_5,\n      order_column1::VARCHAR                        AS order_column_1,\n      order_column2::VARCHAR                        AS order_column_2,\n      order_column3::VARCHAR                        AS order_column_3,\n      order_column4::VARCHAR                        AS order_column_4,\n      order_column5::VARCHAR                        AS order_column_5,\n      process_type::VARCHAR                         AS process_type,\n      rel_base_date::DATETIME                       AS release_base_date,\n      retain_method::VARCHAR                        AS retain_method,\n      manual_rearranged_flag::VARCHAR               AS is_manual_rearranged,\n      manual_release_flag::VARCHAR                  AS is_manual_release,\n      fcst_tmpl_id::VARCHAR                         AS forecast_template_id\n\n    FROM zuora_revenue_revenue_contract_performance_obligation\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_revenue_contract_performance_obligation_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:51.426747Z", "completed_at": "2025-06-09T18:51:51.467652Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:51.492465Z", "completed_at": "2025-06-09T18:51:55.479572Z"}], "thread_id": "Thread-8", "execution_time": 4.107216835021973, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_rate_plan_snapshots_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM \"EMBUCKET\".snapshots.zuora_rateplan_snapshots\n\n), renamed AS(\n\n    SELECT\n      id                  AS rate_plan_id,\n      name                AS rate_plan_name,\n      --keys\n      subscriptionid      AS subscription_id,\n      productid           AS product_id,\n      productrateplanid   AS product_rate_plan_id,\n      -- info\n      amendmentid         AS amendement_id,\n      amendmenttype       AS amendement_type,\n\n      --metadata\n      updatedbyid         AS updated_by_id,\n      updateddate         AS updated_date,\n      createdbyid         AS created_by_id,\n      createddate         AS created_date,\n      deleted             AS is_deleted,\n\n      -- snapshot metadata\n      dbt_scd_id,\n      dbt_updated_at,\n      dbt_valid_from,\n      dbt_valid_to\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.restricted_safe_legacy.zuora_rate_plan_snapshots_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.categories_yaml_acquisitions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.categories_yaml_acquisitions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:27.342823Z", "completed_at": "2025-06-09T18:51:27.366470Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:27.378030Z", "completed_at": "2025-06-09T18:51:55.619141Z"}], "thread_id": "Thread-20", "execution_time": 28.304199934005737, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_ticket_audits_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_zendesk.ticket_audits\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY _uploaded_at DESC) = 1", "relation_name": "EMBUCKET.zendesk.zendesk_ticket_audits_dedupe_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:51.408824Z", "completed_at": "2025-06-09T18:51:51.455588Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:51.484862Z", "completed_at": "2025-06-09T18:51:55.712509Z"}], "thread_id": "Thread-19", "execution_time": 4.350939989089966, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_rate_plan_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.rateplan\n\n), renamed AS(\n\n    SELECT\n      id                  AS rate_plan_id,\n      name                AS rate_plan_name,\n      --keys\n      subscriptionid      AS subscription_id,\n      productid           AS product_id,\n      productrateplanid   AS product_rate_plan_id,\n      -- info\n      amendmentid         AS amendement_id,\n      amendmenttype       AS amendement_type,\n\n      --metadata\n      updatedbyid         AS updated_by_id,\n      updateddate         AS updated_date,\n      createdbyid         AS created_by_id,\n      createddate         AS created_date,\n      deleted             AS is_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_rate_plan_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:53.153846Z", "completed_at": "2025-06-09T18:51:53.188686Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:53.215042Z", "completed_at": "2025-06-09T18:51:55.748198Z"}], "thread_id": "Thread-10", "execution_time": 2.765033006668091, "adapter_response": {}, "message": "Database Error in model zuora_revenue_revenue_contract_line_source (models/sources/zuora_revenue/zuora_revenue_revenue_contract_line_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported SQL type Datetime(None)\n  compiled code at target/run/gitlab_snowflake/models/sources/zuora_revenue/zuora_revenue_revenue_contract_line_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_revenue_revenue_contract_line_source", "compiled": true, "compiled_code": "\n\nWITH zuora_revenue_revenue_contract_line AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_revenue.bi3_rc_lns\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY incr_updt_dt DESC) = 1\n\n), renamed AS (\n\n    SELECT \n    \n      id::VARCHAR                                       AS revenue_contract_line_id,\n      rc_id::VARCHAR                                    AS revenue_contract_id,\n      type::VARCHAR                                     AS revenue_contract_line_type,\n      rc_pob_id::VARCHAR                                AS revenue_contract_performance_obligation_id,\n      ext_sll_prc::FLOAT                                AS extended_selling_price,\n      ext_fv_prc::FLOAT                                 AS extended_fair_value_price,\n      def_amt::FLOAT                                    AS deferred_amount,\n      rec_amt::FLOAT                                    AS recognized_amount,\n      cv_amt::FLOAT                                     AS carve_amount,\n      alctbl_xt_prc::VARCHAR                            AS allocatable_price,\n      alctd_xt_prc::VARCHAR                             AS allocated_price,\n      bld_def_amt::VARCHAR                              AS billed_deferred_amount,\n      bld_rec_amt::VARCHAR                              AS billed_recognized_amount,\n      cstmr_nm::VARCHAR                                 AS customer_name,\n      so_num::VARCHAR                                   AS sales_order_number,\n      so_book_date::DATETIME                            AS sales_order_book_date,\n      so_line_num::VARCHAR                              AS sales_order_line_number,\n      so_line_id::VARCHAR                               AS sales_order_line_id,\n      item_num::VARCHAR                                 AS item_number,\n      bndl_cnfg_id::VARCHAR                             AS bundle_configuration_id,\n      ord_qty::VARCHAR                                  AS order_quantity,\n      inv_qty::VARCHAR                                  AS invoice_quantity,\n      ret_qty::VARCHAR                                  AS return_quantity,\n      start_date::VARCHAR                               AS revenue_start_date,\n      end_date::VARCHAR                                 AS revenue_end_date,\n      duration::VARCHAR                                 AS revenue_amortization_duration,\n      ext_lst_prc::VARCHAR                              AS list_price,\n      batch_id::VARCHAR                                 AS revenue_contract_batch_id,\n      curr::VARCHAR                                     AS transactional_currency,\n      f_cur::VARCHAR                                    AS functional_currency,\n      f_ex_rate::VARCHAR                                AS functional_currency_exchage_rate,\n      g_ex_rate::VARCHAR                                AS reporting_currency_exchange_rate,\n      disc_amt::FLOAT                                   AS discount_amount,\n      disc_pct::FLOAT                                   AS discount_percent,\n      alctbl_fn_xt_prc::VARCHAR                         AS allocatable_functional_price,\n      ref_doc_line_id::VARCHAR                          AS reference_document_line_id,\n      lt_def_acnt::VARCHAR                              AS long_term_deferred_account,\n      fv_grp_id::VARCHAR                                AS fair_value_group_id,\n      fv_pct::FLOAT                                     AS fair_value_percent,\n      fv_prc::FLOAT                                     AS fair_value_price,\n      fv_type::VARCHAR                                  AS fair_value_type,\n      err_msg::VARCHAR                                  AS error_message,\n      def_segments::VARCHAR                             AS deferred_accounting_segment,\n      rev_segments::VARCHAR                             AS revenue_accounting_segment,\n      atr1::VARCHAR                                     AS revenue_contract_line_attribute_1,\n      atr2::VARCHAR                                     AS revenue_contract_line_attribute_2,\n      atr3::VARCHAR                                     AS revenue_contract_line_attribute_3,\n      atr4::VARCHAR                                     AS revenue_contract_line_attribute_4,\n      atr5::VARCHAR                                     AS revenue_contract_line_attribute_5,\n      atr6::VARCHAR                                     AS revenue_contract_line_attribute_6,\n      atr7::VARCHAR                                     AS revenue_contract_line_attribute_7,\n      atr8::VARCHAR                                     AS revenue_contract_line_attribute_8,\n      atr9::VARCHAR                                     AS revenue_contract_line_attribute_9,\n      atr10::VARCHAR                                    AS revenue_contract_line_attribute_10,\n      atr11::VARCHAR                                    AS revenue_contract_line_attribute_11,\n      atr12::VARCHAR                                    AS revenue_contract_line_attribute_12,\n      atr13::VARCHAR                                    AS revenue_contract_line_attribute_13,\n      atr14::VARCHAR                                    AS revenue_contract_line_attribute_14,\n      atr15::VARCHAR                                    AS revenue_contract_line_attribute_15,\n      atr16::VARCHAR                                    AS revenue_contract_line_attribute_16,\n      atr17::VARCHAR                                    AS revenue_contract_line_attribute_17,\n      atr18::VARCHAR                                    AS revenue_contract_line_attribute_18,\n      atr19::VARCHAR                                    AS revenue_contract_line_attribute_19,\n      atr20::VARCHAR                                    AS revenue_contract_line_attribute_20,\n      atr21::VARCHAR                                    AS revenue_contract_line_attribute_21,\n      atr22::VARCHAR                                    AS revenue_contract_line_attribute_22,\n      atr23::VARCHAR                                    AS revenue_contract_line_attribute_23,\n      atr24::VARCHAR                                    AS revenue_contract_line_attribute_24,\n      atr25::VARCHAR                                    AS revenue_contract_line_attribute_25,\n      atr26::VARCHAR                                    AS revenue_contract_line_attribute_26,\n      atr27::VARCHAR                                    AS revenue_contract_line_attribute_27,\n      atr28::VARCHAR                                    AS revenue_contract_line_attribute_28,\n      atr29::VARCHAR                                    AS revenue_contract_line_attribute_29,\n      atr30::VARCHAR                                    AS revenue_contract_line_attribute_30,\n      atr31::VARCHAR                                    AS revenue_contract_line_attribute_31,\n      atr32::VARCHAR                                    AS revenue_contract_line_attribute_32,\n      atr33::VARCHAR                                    AS revenue_contract_line_attribute_33,\n      atr34::VARCHAR                                    AS revenue_contract_line_attribute_34,\n      atr35::VARCHAR                                    AS revenue_contract_line_attribute_35,\n      atr36::VARCHAR                                    AS revenue_contract_line_attribute_36,\n      atr37::VARCHAR                                    AS revenue_contract_line_attribute_37,\n      atr38::VARCHAR                                    AS revenue_contract_line_attribute_38,\n      atr39::VARCHAR                                    AS revenue_contract_line_attribute_39,\n      atr40::VARCHAR                                    AS revenue_contract_line_attribute_40,\n      atr41::VARCHAR                                    AS revenue_contract_line_attribute_41,\n      atr42::VARCHAR                                    AS revenue_contract_line_attribute_42,\n      atr43::VARCHAR                                    AS revenue_contract_line_attribute_43,\n      atr44::VARCHAR                                    AS revenue_contract_line_attribute_44,\n      atr45::VARCHAR                                    AS revenue_contract_line_attribute_45,\n      atr46::VARCHAR                                    AS revenue_contract_line_attribute_46,\n      atr47::VARCHAR                                    AS revenue_contract_line_attribute_47,\n      atr48::VARCHAR                                    AS revenue_contract_line_attribute_48,\n      atr49::VARCHAR                                    AS revenue_contract_line_attribute_49,\n      atr50::VARCHAR                                    AS revenue_contract_line_attribute_50,\n      atr51::VARCHAR                                    AS revenue_contract_line_attribute_51,\n      atr52::VARCHAR                                    AS revenue_contract_line_attribute_52,\n      atr53::VARCHAR                                    AS revenue_contract_line_attribute_53,\n      atr54::VARCHAR                                    AS revenue_contract_line_attribute_54,\n      atr55::VARCHAR                                    AS revenue_contract_line_attribute_55,\n      atr56::VARCHAR                                    AS revenue_contract_line_attribute_56,\n      atr57::VARCHAR                                    AS revenue_contract_line_attribute_57,\n      atr58::VARCHAR                                    AS revenue_contract_line_attribute_58,\n      atr59::VARCHAR                                    AS revenue_contract_line_attribute_59,\n      atr60::VARCHAR                                    AS revenue_contract_line_attribute_60,\n      num1::VARCHAR                                     AS revenue_contract_line_number_1,\n      num2::VARCHAR                                     AS revenue_contract_line_number_2,\n      num3::VARCHAR                                     AS revenue_contract_line_number_3,\n      num4::VARCHAR                                     AS revenue_contract_line_number_4,\n      num5::VARCHAR                                     AS revenue_contract_line_number_5,\n      num6::VARCHAR                                     AS revenue_contract_line_number_6,\n      num7::VARCHAR                                     AS revenue_contract_line_number_7,\n      num8::VARCHAR                                     AS revenue_contract_line_number_8,\n      num9::VARCHAR                                     AS revenue_contract_line_number_9,\n      num10::VARCHAR                                    AS revenue_contract_line_number_10,\n      num11::VARCHAR                                    AS revenue_contract_line_number_11,\n      num12::VARCHAR                                    AS revenue_contract_line_number_12,\n      num13::VARCHAR                                    AS revenue_contract_line_number_13,\n      num14::VARCHAR                                    AS revenue_contract_line_number_14,\n      num15::VARCHAR                                    AS revenue_contract_line_number_15,\n      date1::DATETIME                                   AS revenue_contract_line_date_1,\n      date2::DATETIME                                   AS revenue_contract_line_date_2,\n      date3::DATETIME                                   AS revenue_contract_line_date_3,\n      date4::DATETIME                                   AS revenue_contract_line_date_4,\n      date5::DATETIME                                   AS revenue_contract_line_date_5,\n      model_id::VARCHAR                                 AS model_id,\n      unschd_adj::VARCHAR                               AS unscheduled_adjustment,\n      posted_pct::FLOAT                                 AS posted_percent,\n      rel_pct::FLOAT                                    AS released_percent,\n      term::VARCHAR                                     AS revenue_contract_line_term,\n      vc_type_id::VARCHAR                               AS variable_consideration_type_id,\n      po_num::VARCHAR                                   AS purchase_order_number,\n      quote_num::VARCHAR                                AS quote_number,\n      schd_ship_dt::DATETIME                            AS scheduled_ship_date,\n      ship_dt::DATETIME                                 AS ship_date,\n      sales_rep_name::VARCHAR                           AS sales_representative_name,\n      cust_num::VARCHAR                                 AS customer_number,\n      prod_ctgry::VARCHAR                               AS product_category,\n      prod_class::VARCHAR                               AS product_class,\n      prod_fmly::VARCHAR                                AS product_family,\n      prod_ln::VARCHAR                                  AS product_line,\n      business_unit::VARCHAR                            AS business_unit,\n      ct_mod_date::DATETIME                             AS contract_modification_date,\n      ct_num::VARCHAR                                   AS contract_number,\n      ct_date::DATETIME                                 AS contract_date,\n      ct_line_num::VARCHAR                              AS contract_line_number,\n      ct_line_id::VARCHAR                               AS contract_line_id,\n      cum_cv_amt::VARCHAR                               AS cumulative_carve_amount,\n      cum_alctd_amt::VARCHAR                            AS cumulative_allocated_amount,\n      comments::VARCHAR                                 AS revenue_contract_line_comment,\n      prnt_ln_id::VARCHAR                               AS parent_revenue_contract_line_id,\n      prnt_ref_ln_id::VARCHAR                           AS parent_reference_line_id,\n      cv_eligible_flag::VARCHAR                         AS is_carve_eligible,\n      return_flag::VARCHAR                              AS is_return,\n      within_fv_range_flag::VARCHAR                     AS is_within_fair_value_range,\n      stated_flag::VARCHAR                              AS is_stated,\n      standalone_flag::VARCHAR                          AS is_standalone,\n      disc_adj_flag::VARCHAR                            AS is_discount_adjustment,\n      approval_status_flag::VARCHAR                     AS approval_status,\n      fv_eligible_flag::VARCHAR                         AS is_fair_value_eligible,\n      manual_fv_flag::VARCHAR                           AS is_manual_fair_value,\n      rssp_calc_type::VARCHAR                           AS rssp_calculation_type,\n      unbill_flag::VARCHAR                              AS is_unbilled,\n      manual_crtd_flag::VARCHAR                         AS is_manual_created,\n      vc_clearing_flag::VARCHAR                         AS is_variable_consideration_clearing,\n      mje_line_flag::VARCHAR                            AS is_manual_journal_entry_line,\n      update_or_insert_flag::VARCHAR                    AS is_update_or_insert,\n      delink_lvl_flag::VARCHAR                          AS delink_level,\n      CONCAT(crtd_prd_id::VARCHAR, '01')                AS created_period_id,\n      book_id::VARCHAR                                  AS book_id,\n      client_id::VARCHAR                                AS client_id,\n      sec_atr_val::VARCHAR                              AS security_attribute_value,\n      crtd_by::VARCHAR                                  AS revenue_contract_line_created_by,\n      crtd_dt::DATETIME                                 AS revenue_contract_line_created_date,\n      updt_by::VARCHAR                                  AS revenue_contract_line_updated_by,\n      updt_dt::DATETIME                                 AS revenue_contract_line_updated_date,\n      incr_updt_dt::VARCHAR                             AS incremental_update_date,\n      offset_segments::VARCHAR                          AS offset_accounting_segment,\n      sob_id::VARCHAR                                   AS set_of_books_id,\n      fv_date::DATETIME                                 AS fair_value_date,\n      orig_fv_date::DATETIME                            AS original_fair_value_date,\n      vc_amt::FLOAT                                     AS varaiable_consideration_amount,\n      unit_sell_prc::FLOAT                              AS unit_sell_price,\n      unit_list_prc::FLOAT                              AS unit_list_price,\n      impair_retrieve_amt::FLOAT                        AS impairment_retrieve_amount,\n      bndl_prnt_id::VARCHAR                             AS bundle_parent_id,\n      company_code::VARCHAR                             AS company_code,\n      cancel_flag::VARCHAR                              AS is_cancelled,\n      below_fv_prc::FLOAT                               AS below_fair_value_price,\n      above_fv_prc::FLOAT                               AS above_fair_value_price,\n      fv_tmpl_id::VARCHAR                               AS fair_value_template_id,\n      fv_expr::VARCHAR                                  AS fair_value_expiration,\n      below_mid_pct::FLOAT                              AS below_mid_percent,\n      above_mid_pct::FLOAT                              AS above_mid_percent,\n      ic_account::VARCHAR                               AS intercompany_account,\n      ca_account::VARCHAR                               AS contract_asset_account,\n      ci_account::VARCHAR                               AS ci_account,\n      al_account::VARCHAR                               AS al_account,\n      ar_account::VARCHAR                               AS ar_account,\n      contra_ar_acct::VARCHAR                           AS contra_ar_account,\n      payables_acct::VARCHAR                            AS payables_account,\n      lt_def_adj_acct::VARCHAR                          AS long_term_deferred_adjustment_account,\n      ub_liab_acct::VARCHAR                             AS ub_liability_account,\n      alloc_rec_hold_flag::VARCHAR                      AS is_allocation_recognition_hold,\n      alloc_schd_hold_flag::VARCHAR                     AS is_allocation_schedule_hold,\n      alloc_trtmt_flag::VARCHAR                         AS is_allocation_treatment,\n      contra_entry_flag::VARCHAR                        AS is_contra_entry,\n      conv_wfall_flag::VARCHAR                          AS is_conv_waterfall,\n      ct_mod_code_flag::VARCHAR                         AS contract_modification_code,\n      impairment_type_flag::VARCHAR                     AS impairment_type,\n      previous_fv_flag::VARCHAR                         AS previous_fair_value,\n      reclass_flag::VARCHAR                             AS is_reclass,\n      rev_rec_hold_flag::VARCHAR                        AS is_revenue_recognition_hold,\n      rev_schd_hold_flag::VARCHAR                       AS is_revenue_schedule_hold,\n      rev_schd_flag::VARCHAR                            AS is_revevnue_schedule,\n      trnsfr_hold_flag::VARCHAR                         AS is_transfer_hold,\n      alloc_delink_flag::VARCHAR                        AS is_allocation_delink,\n      cancel_by_rord_flag::VARCHAR                      AS is_canceled_by_reduction_order,\n      cv_eligible_lvl2_flag::VARCHAR                    AS is_level_2_carve_eligible,\n      rc_level_range_flag::VARCHAR                      AS revenue_contract_level,\n      rssp_fail_flag::VARCHAR                           AS is_rssp_failed,\n      vc_eligible_flag::VARCHAR                         AS is_variable_consideration_eligible,\n      ghost_line_flag::VARCHAR                          AS is_ghost_line,\n      initial_ct_flag::VARCHAR                          AS is_initial_contract,\n      material_rights_flag::VARCHAR                     AS is_material_rights,\n      ramp_up_flag::VARCHAR                             AS is_ramp_up,\n      lt_def_cogs_acct::VARCHAR                         AS long_term_deferred_cogs_account,\n      lt_ca_account::VARCHAR                            AS long_term_ca_account,\n      tot_bgd_hrs::FLOAT                                AS total_budget_hours,\n      tot_bgd_cst::FLOAT                                AS total_budget_cost,\n      fcst_date::DATETIME                               AS forecast_date,\n      link_identifier::VARCHAR                          AS link_identifier,\n      prod_life_term::VARCHAR                           AS product_life_term,\n      ramp_identifier::VARCHAR                          AS ramp_identifier,\n      mr_line_id::VARCHAR                               AS material_rights_line_id,\n      price_point::VARCHAR                              AS price_point,\n      tp_pct_ssp::FLOAT                                 AS transaction_price_ssp_percent,\n      orig_quantity::FLOAT                              AS original_quantity,\n      split_ref_doc_line_id::VARCHAR                    AS split_reference_document_line_id,\n      overstated_amt::FLOAT                             AS overstated_amount,\n      ovst_lst_amt::FLOAT                               AS overstated_list_price_amount,\n      ref_rc_id::VARCHAR                                AS reference_revenue_contract_id,\n      split_flag::VARCHAR                               AS is_split,\n      ord_orch_flag::VARCHAR                            AS is_ord_orch,\n      upd_model_id_flag::VARCHAR                        AS updated_model_id,\n      new_pob_flag::VARCHAR                             AS is_new_performance_obligation,\n      mr_org_prc::FLOAT                                 AS material_rights_org_percent,\n      action_type::VARCHAR                              AS action_type,\n      pord_def_amt::FLOAT                               AS pord_deferred_amount,\n      pord_rec_amt::FLOAT                               AS pord_recognized_amount,\n      net_sll_prc::FLOAT                                AS net_sell_price,\n      net_lst_prc::FLOAT                                AS net_list_price,\n      full_cm_flag::VARCHAR                             AS full_cm_flag,\n      skip_ct_mod_flag::VARCHAR                         AS is_skip_contract_modification,\n      step1_rc_level_range_flag::VARCHAR                AS step_1_revenue_contract_level_range,\n      impairment_exception_flag::VARCHAR                AS is_impairment_exception,\n      pros_defer_flag::VARCHAR                          AS is_pros_deferred,\n      manual_so_flag::VARCHAR                           AS is_manual_sales_order,\n      zero_doll_rec_flag::VARCHAR                       AS is_zero_dollar_recognition,\n      cv_amt_imprtmt::VARCHAR                           AS carve_amount_imprtmt,\n      full_pord_disc_flag::VARCHAR                      AS is_full_pord_discount,\n      zero_dollar_rord_flag::VARCHAR                    AS is_zero_dollar_reduction_order,\n      subscrp_id::VARCHAR                               AS subscription_id,\n      subscrp_name::VARCHAR                             AS subscription_name,\n      subscrp_version::VARCHAR                          AS subscription_version,\n      subscrp_start_date::DATETIME                      AS subscription_start_date,\n      subscrp_end_date::DATETIME                        AS subscription_end_date,\n      subscrp_owner::VARCHAR                            AS subscription_owner,\n      invoice_owner::VARCHAR                            AS invoice_owner,\n      rp_id::VARCHAR                                    AS rate_plan_id,\n      rp_name::VARCHAR                                  AS rate_plan_name,\n      rpc_num::VARCHAR                                  AS rate_plan_charge_number,\n      rpc_name::VARCHAR                                 AS rate_plan_charge_name,\n      rpc_version::VARCHAR                              AS rate_plan_charge_version,\n      rpc_model::VARCHAR                                AS rate_plan_charge_model,\n      rpc_type::VARCHAR                                 AS rate_plan_charge_type,\n      rpc_trigger_evt::VARCHAR                          AS rate_plan_charge_trigger_event,\n      rpc_segment::VARCHAR                              AS rate_plan_charge_segment,\n      rpc_id::VARCHAR                                   AS rate_plan_charge_id,\n      orig_rpc_id::VARCHAR                              AS original_rate_plan_charge_id,\n      subscrp_type::VARCHAR                             AS subscription_type,\n      charge_level::VARCHAR                             AS charge_level,\n      amendment_id::VARCHAR                             AS amendment_id,\n      amendment_type::VARCHAR                           AS amendment_type,\n      amendment_reason::VARCHAR                         AS amendment_reason,\n      order_id::VARCHAR                                 AS order_id,\n      order_item_id::VARCHAR                            AS order_item_id,\n      order_action_id::VARCHAR                          AS order_action_id,\n      account_id::VARCHAR                               AS billing_account_id,\n      product_id::VARCHAR                               AS product_id,\n      product_rp_id::VARCHAR                            AS product_rate_plan_id,\n      product_rpc_id::VARCHAR                           AS product_rate_plan_charge_id,\n      charge_crtd_date::DATETIME                        AS charge_created_date,\n      charge_last_updt_date::DATETIME                   AS charge_last_updated_date,\n      bill_id::VARCHAR                                  AS revenue_contract_bill_id,\n      bill_item_id::VARCHAR                             AS revenue_contract_bill_item_id,\n      zbill_batch_id::VARCHAR                           AS zbilling_batch_id,\n      ramp_deal_ref::VARCHAR                            AS ramp_deal_id,\n      seq_num::VARCHAR                                  AS sequence_number,\n      avg_prcing_mthd::VARCHAR                          AS average_pricing_method,\n      prc_frmt::VARCHAR                                 AS percent_format,\n      prnt_chrg_segment::VARCHAR                        AS parent_charge_segment,\n      prnt_chrg_num::VARCHAR                            AS parent_charge_number,\n      entity_id::VARCHAR                                AS entity_id,\n      ssp_sll_prc::FLOAT                                AS ssp_sell_price,\n      ssp_lst_prc::FLOAT                                AS ssp_list_price,\n      subscrp_trm_st_dt::DATETIME                       AS subscription_term_start_date,\n      subscrp_trm_end_dt::DATETIME                      AS subscription_term_end_date,\n      subscrp_term_num::VARCHAR                         AS subscrp_term_number,\n      old_sell_prc::FLOAT                               AS old_sell_price,\n      rstrct_so_val_upd_flag::VARCHAR                   AS is_restricted_sales_order_value_update,\n      zbilling_cmplte_flag::VARCHAR                     AS is_zbilling_complete,\n      zbil_unschd_adj_flag::VARCHAR                     AS is_zbilling_unscheduled_adjustment,\n      zbill_cancel_line_flag::VARCHAR                   AS is_zbillling_cancelled_line,\n      non_distinct_pob_flag::VARCHAR                    AS is_non_distinct_performance_obligation,\n      zbill_ctmod_rule_flag::VARCHAR                    AS is_zbilling_contract_modification_rule,\n      sys_inv_exist_flag::VARCHAR                       AS is_system_inv_exist,\n      zbill_manual_so_flag::VARCHAR                     AS is_zbillling_manual_sales_order,\n      so_term_change_flag::VARCHAR                      AS is_sales_order_term_change,\n      ramp_alloc_pct::FLOAT                             AS ramp_allocation_percent,\n      ramp_alctbl_prc::FLOAT                            AS ramp_allocatable_percent,\n      ramp_alctd_prc::FLOAT                             AS ramp_allocted_percent,\n      ramp_cv_amt::FLOAT                                AS ramp_carve_amount,\n      ramp_cum_cv_amt::FLOAT                            AS ramp_cumulative_carve_amount,\n      ramp_cum_alctd_amt::FLOAT                         AS ramp_cumulative_allocated_amount,\n      ovg_exist_flag::VARCHAR                           AS is_overage_exists,\n      zbill_ramp_flag::VARCHAR                          AS is_zbilling_ramp,\n      update_by_rord_flag::VARCHAR                      AS is_updated_by_reduction_order,\n      unbilled_evergreen_flag::VARCHAR                  AS is_unbilled_evergreen,\n      k2_batch_id::VARCHAR                              AS k2_batch_id,\n      reason_code::VARCHAR                              AS reason_code,\n      CONCAT(updt_prd_id::VARCHAR, '01')                AS revenue_contract_line_updated_period_id,\n      ramp_id::VARCHAR                                  AS ramp_id,\n      CONCAT(unbl_rvsl_prd::VARCHAR, '01')              AS unbilled_reversal_period,\n      ramp_cv_chg_flag::VARCHAR                         AS is_ramp_carve,\n      zero_flip_flag::VARCHAR                           AS is_zero_f,\n      pros_decrse_prc_flag::VARCHAR                     AS is_pros_decrse_p,\n      CONCAT(defer_prd_id::VARCHAR, '01')               AS deferred_period_id\n\n    FROM zuora_revenue_revenue_contract_line\n\n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.zuora_revenue.zuora_revenue_revenue_contract_line_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:28.972675Z", "completed_at": "2025-06-09T18:51:28.977973Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:28.978325Z", "completed_at": "2025-06-09T18:51:55.921167Z"}], "thread_id": "Thread-23", "execution_time": 26.949233055114746, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_tickets_dedupe_source", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM EMBUCKET.tap_zendesk.tickets\n\nQUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1", "relation_name": "EMBUCKET.zendesk.zendesk_tickets_dedupe_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.489592Z", "completed_at": "2025-06-09T18:51:55.773487Z"}], "thread_id": "Thread-22", "execution_time": 0.4511692523956299, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_ad_accounts (models/workspaces/workspace_marketing/bizible/wk_bizible_ad_accounts.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_ad_accounts (models/workspaces/workspace_marketing/bizible/wk_bizible_ad_accounts.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_ad_accounts", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_ad_accounts", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.541887Z", "completed_at": "2025-06-09T18:51:55.764362Z"}], "thread_id": "Thread-29", "execution_time": 0.4477689266204834, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_account_to_emails (models/workspaces/workspace_marketing/bizible/wk_bizible_account_to_emails.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_account_to_emails (models/workspaces/workspace_marketing/bizible/wk_bizible_account_to_emails.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_account_to_emails", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_account_to_emails", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.528353Z", "completed_at": "2025-06-09T18:51:55.765753Z"}], "thread_id": "Thread-16", "execution_time": 0.4506378173828125, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_ad_campaigns (models/workspaces/workspace_marketing/bizible/wk_bizible_ad_campaigns.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_ad_campaigns (models/workspaces/workspace_marketing/bizible/wk_bizible_ad_campaigns.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_ad_campaigns", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_ad_campaigns", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.514362Z", "completed_at": "2025-06-09T18:51:55.767067Z"}], "thread_id": "Thread-7", "execution_time": 0.4550201892852783, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_ad_providers (models/workspaces/workspace_marketing/bizible/wk_bizible_ad_providers.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_ad_providers (models/workspaces/workspace_marketing/bizible/wk_bizible_ad_providers.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_ad_providers", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_ad_providers", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.507206Z", "completed_at": "2025-06-09T18:51:55.819200Z"}], "thread_id": "Thread-24", "execution_time": 0.45986509323120117, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_accounts (models/workspaces/workspace_marketing/bizible/wk_bizible_accounts.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_accounts (models/workspaces/workspace_marketing/bizible/wk_bizible_accounts.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_accounts", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_accounts", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.520624Z", "completed_at": "2025-06-09T18:51:55.775620Z"}], "thread_id": "Thread-6", "execution_time": 0.46442294120788574, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_ad_groups (models/workspaces/workspace_marketing/bizible/wk_bizible_ad_groups.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_ad_groups (models/workspaces/workspace_marketing/bizible/wk_bizible_ad_groups.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_ad_groups", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_ad_groups", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.537677Z", "completed_at": "2025-06-09T18:51:55.580450Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:55.645190Z", "completed_at": "2025-06-09T18:51:55.955428Z"}], "thread_id": "Thread-12", "execution_time": 0.6793570518493652, "adapter_response": {}, "message": "Database Error in model bizible_account_to_emails_source_pii (models/sources/bizible/sensitive/bizible_account_to_emails_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha512'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_account_to_emails_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_account_to_emails_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                account_to_email_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT_EMAIL', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS account_to_email_id_hash,\n\n\n\n        \n    \n    \n    \n    account_to_email_id   , \n    \n    \n    \n    email  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_account_to_emails_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_account_to_emails_source_pii", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:49.264535Z", "completed_at": "2025-06-09T18:51:49.324298Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:49.360612Z", "completed_at": "2025-06-09T18:51:56.168031Z"}], "thread_id": "Thread-27", "execution_time": 7.106670141220093, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_central_sandbox_rate_plan_charge_source", "compiled": true, "compiled_code": "-- values to consider renaming:\n-- mrr\n-- dmrc\n-- dtcv\n-- tcv\n-- uom\n\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_central_sandbox_fivetran.rate_plan_charge\n\n), renamed AS(\n\n    SELECT\n      id                                                    AS rate_plan_charge_id,\n      name                                                  AS rate_plan_charge_name,\n      --keys\n      original_id                                           AS original_id,\n      rate_plan_id                                          AS rate_plan_id,\n      product_rate_plan_charge_id                           AS product_rate_plan_charge_id,\n      product_rate_plan_id                                  AS product_rate_plan_id,\n      product_id                                            AS product_id,\n\n      --recognition\n      revenue_recognition_rule_name                         AS revenue_recognition_rule_name,\n      rev_rec_code                                          AS revenue_recognition_code,\n      rev_rec_trigger_condition                             AS revenue_recognition_trigger_condition,\n\n      -- info\n      effective_start_date                                  AS effective_start_date,\n      effective_end_date                                    AS effective_end_date,\n      date_trunc('month', effective_start_date)::DATE       AS effective_start_month,\n      date_trunc('month', effective_end_date)::DATE         AS effective_end_month,\n      end_date_condition                                    AS end_date_condition,\n\n      mrr                                                   AS mrr,\n      quantity                                              AS quantity,\n      tcv                                                   AS tcv,\n      uom                                                   AS unit_of_measure,\n\n      account_id                                            AS account_id,\n      accounting_code                                       AS accounting_code,\n      apply_discount_to                                     AS apply_discount_to,\n      bill_cycle_day                                        AS bill_cycle_day,\n      bill_cycle_type                                       AS bill_cycle_type,\n      billing_period                                        AS billing_period,\n      billing_period_alignment                              AS billing_period_alignment,\n      charged_through_date                                  AS charged_through_date,\n      charge_model                                          AS charge_model,\n      charge_number                                         AS rate_plan_charge_number,\n      charge_type                                           AS charge_type,\n      description                                           AS description,\n      discount_level                                        AS discount_level,\n      dmrc                                                  AS delta_mrc, -- delta monthly recurring charge\n      dtcv                                                  AS delta_tcv, -- delta total contract value\n\n      is_last_segment                                       AS is_last_segment,\n      list_price_base                                       AS list_price_base,\n      overage_calculation_option                            AS overage_calculation_option,\n      overage_unused_units_credit_option                    AS overage_unused_units_credit_option,\n      processed_through_date                                AS processed_through_date,\n\n      segment                                               AS segment,\n      specific_billing_period                               AS specific_billing_period,\n      specific_end_date                                     AS specific_end_date,\n      trigger_date                                          AS trigger_date,\n      trigger_event                                         AS trigger_event,\n      up_to_periods                                         AS up_to_period,\n      up_to_periods_type                                    AS up_to_periods_type,\n      version                                               AS version,\n\n      --ext1, ext2, ext3, ... ext13\n\n      --metadata\n      created_by_id                                         AS created_by_id,\n      created_date                                          AS created_date,\n      updated_by_id                                         AS updated_by_id,\n      updated_date                                          AS updated_date,\n      _FIVETRAN_DELETED                                     AS is_deleted\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora_central_sandbox.zuora_central_sandbox_rate_plan_charge_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.569556Z", "completed_at": "2025-06-09T18:51:55.958922Z"}], "thread_id": "Thread-1", "execution_time": 0.689647912979126, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_ads (models/workspaces/workspace_marketing/bizible/wk_bizible_ads.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_ads (models/workspaces/workspace_marketing/bizible/wk_bizible_ads.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_ads", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_ads", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.587964Z", "completed_at": "2025-06-09T18:51:55.966691Z"}], "thread_id": "Thread-21", "execution_time": 0.6836910247802734, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_advertisers (models/workspaces/workspace_marketing/bizible/wk_bizible_advertisers.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_advertisers (models/workspaces/workspace_marketing/bizible/wk_bizible_advertisers.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_advertisers", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_advertisers", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.601021Z", "completed_at": "2025-06-09T18:51:55.990035Z"}], "thread_id": "Thread-5", "execution_time": 0.6832871437072754, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_opportunities (models/workspaces/workspace_marketing/bizible/wk_bizible_opportunities.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_opportunities (models/workspaces/workspace_marketing/bizible/wk_bizible_opportunities.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_opportunities", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_opportunities", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.610650Z", "completed_at": "2025-06-09T18:51:56.031014Z"}], "thread_id": "Thread-9", "execution_time": 0.6834750175476074, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_email_to_visitor_ids (models/workspaces/workspace_marketing/bizible/wk_bizible_email_to_visitor_ids.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_email_to_visitor_ids (models/workspaces/workspace_marketing/bizible/wk_bizible_email_to_visitor_ids.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_email_to_visitor_ids", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_email_to_visitor_ids", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.650983Z", "completed_at": "2025-06-09T18:51:56.029466Z"}], "thread_id": "Thread-4", "execution_time": 0.6358067989349365, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_currencies (models/workspaces/workspace_marketing/bizible/wk_bizible_currencies.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_currencies (models/workspaces/workspace_marketing/bizible/wk_bizible_currencies.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_currencies", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_currencies", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.637460Z", "completed_at": "2025-06-09T18:51:55.996300Z"}], "thread_id": "Thread-18", "execution_time": 0.6374740600585938, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_attribution_touchpoints (models/workspaces/workspace_marketing/bizible/wk_bizible_attribution_touchpoints.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_attribution_touchpoints (models/workspaces/workspace_marketing/bizible/wk_bizible_attribution_touchpoints.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_attribution_touchpoints", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_attribution_touchpoints", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.561459Z", "completed_at": "2025-06-09T18:51:56.014796Z"}], "thread_id": "Thread-25", "execution_time": 0.7037029266357422, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_contacts (models/workspaces/workspace_marketing/bizible/wk_bizible_contacts.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_contacts (models/workspaces/workspace_marketing/bizible/wk_bizible_contacts.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_contacts", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_contacts", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.595095Z", "completed_at": "2025-06-09T18:51:56.048013Z"}], "thread_id": "Thread-2", "execution_time": 0.687140941619873, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_keywords (models/workspaces/workspace_marketing/bizible/wk_bizible_keywords.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_keywords (models/workspaces/workspace_marketing/bizible/wk_bizible_keywords.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_keywords", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_keywords", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.692789Z", "completed_at": "2025-06-09T18:51:56.049132Z"}], "thread_id": "Thread-17", "execution_time": 0.5989828109741211, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_crm_tasks (models/workspaces/workspace_marketing/bizible/wk_bizible_crm_tasks.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_crm_tasks (models/workspaces/workspace_marketing/bizible/wk_bizible_crm_tasks.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_crm_tasks", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_crm_tasks", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.582021Z", "completed_at": "2025-06-09T18:51:56.087098Z"}], "thread_id": "Thread-14", "execution_time": 0.700131893157959, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_campaign_members (models/workspaces/workspace_marketing/bizible/wk_bizible_campaign_members.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_campaign_members (models/workspaces/workspace_marketing/bizible/wk_bizible_campaign_members.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_campaign_members", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_campaign_members", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.657012Z", "completed_at": "2025-06-09T18:51:55.698807Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:55.728810Z", "completed_at": "2025-06-09T18:51:56.204666Z"}], "thread_id": "Thread-28", "execution_time": 0.6797828674316406, "adapter_response": {}, "message": "Database Error in model bizible_campaign_members_source_pii (models/sources/bizible/sensitive/bizible_campaign_members_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha256'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_campaign_members_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_campaign_members_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                campaign_member_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS campaign_member_id_hash,\n\n\n\n        \n    \n    \n    \n    lead_email   , \n    \n    \n    \n    contact_email  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_campaign_members_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_campaign_members_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.558096Z", "completed_at": "2025-06-09T18:51:55.621296Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:55.673120Z", "completed_at": "2025-06-09T18:51:56.205553Z"}], "thread_id": "Thread-15", "execution_time": 0.7744660377502441, "adapter_response": {}, "message": "Database Error in model bizible_contacts_source_pii (models/sources/bizible/sensitive/bizible_contacts_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha224'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_contacts_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_contacts_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                contact_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS contact_id_hash,\n\n\n\n        \n    \n    \n    \n    email  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_contacts_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_contacts_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.633356Z", "completed_at": "2025-06-09T18:51:55.690887Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:55.722194Z", "completed_at": "2025-06-09T18:51:56.204455Z"}], "thread_id": "Thread-31", "execution_time": 0.7090909481048584, "adapter_response": {}, "message": "Database Error in model bizible_attribution_touchpoints_source_pii (models/sources/bizible/sensitive/bizible_attribution_touchpoints_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha224'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_attribution_touchpoints_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_attribution_touchpoints_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                attribution_touchpoint_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS attribution_touchpoint_id_hash,\n\n\n\n        \n    \n    \n    \n    email   , \n    \n    \n    \n    user_touchpoint_id   , \n    \n    \n    \n    visitor_id  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_attribution_touchpoints_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_attribution_touchpoints_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.607372Z", "completed_at": "2025-06-09T18:51:55.672102Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:55.714288Z", "completed_at": "2025-06-09T18:51:56.205798Z"}], "thread_id": "Thread-26", "execution_time": 0.7576010227203369, "adapter_response": {}, "message": "Database Error in model bizible_email_to_visitor_ids_source_pii (models/sources/bizible/sensitive/bizible_email_to_visitor_ids_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha224'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_email_to_visitor_ids_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_email_to_visitor_ids_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                email_to_visitor_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT_EMAIL', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS email_to_visitor_id_hash,\n\n\n\n        \n    \n    \n    \n    email_to_visitor_id   , \n    \n    \n    \n    email   , \n    \n    \n    \n    visitor_id  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_email_to_visitor_ids_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_email_to_visitor_ids_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.662095Z", "completed_at": "2025-06-09T18:51:55.700719Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:55.733030Z", "completed_at": "2025-06-09T18:51:56.232370Z"}], "thread_id": "Thread-13", "execution_time": 0.7092747688293457, "adapter_response": {}, "message": "Database Error in model bizible_crm_tasks_source_pii (models/sources/bizible/sensitive/bizible_crm_tasks_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha256'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_crm_tasks_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_crm_tasks_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                crm_task_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS crm_task_id_hash,\n\n\n\n        \n    \n    \n    \n    lead_email   , \n    \n    \n    \n    contact_email  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_crm_tasks_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_crm_tasks_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.740840Z", "completed_at": "2025-06-09T18:51:56.233982Z"}], "thread_id": "Thread-8", "execution_time": 0.5875790119171143, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_lead_stage_transitions (models/workspaces/workspace_marketing/bizible/wk_bizible_lead_stage_transitions.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_lead_stage_transitions (models/workspaces/workspace_marketing/bizible/wk_bizible_lead_stage_transitions.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_lead_stage_transitions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_lead_stage_transitions", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.678586Z", "completed_at": "2025-06-09T18:51:55.727337Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:55.752448Z", "completed_at": "2025-06-09T18:51:56.232572Z"}], "thread_id": "Thread-11", "execution_time": 0.6885130405426025, "adapter_response": {}, "message": "Database Error in model bizible_lead_stage_transitions_source_pii (models/sources/bizible/sensitive/bizible_lead_stage_transitions_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha512'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_lead_stage_transitions_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_lead_stage_transitions_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                lead_stage_transition_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS lead_stage_transition_id_hash,\n\n\n\n        \n    \n    \n    \n    email  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_lead_stage_transitions_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_lead_stage_transitions_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.748398Z", "completed_at": "2025-06-09T18:51:55.907283Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:55.937319Z", "completed_at": "2025-06-09T18:51:56.290360Z"}], "thread_id": "Thread-3", "execution_time": 0.6096100807189941, "adapter_response": {}, "message": "Database Error in model bizible_crm_events_source_pii (models/sources/bizible/sensitive/bizible_crm_events_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha224'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_crm_events_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_crm_events_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                crm_event_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS crm_event_id_hash,\n\n\n\n        \n    \n    \n    \n    lead_email   , \n    \n    \n    \n    contact_email  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_crm_events_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_crm_events_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.266243Z", "completed_at": "2025-06-09T18:51:56.373299Z"}], "thread_id": "Thread-10", "execution_time": 0.18932414054870605, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_opp_stage_transitions (models/workspaces/workspace_marketing/bizible/wk_bizible_opp_stage_transitions.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_opp_stage_transitions (models/workspaces/workspace_marketing/bizible/wk_bizible_opp_stage_transitions.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_opp_stage_transitions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_opp_stage_transitions", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.194866Z", "completed_at": "2025-06-09T18:51:56.379430Z"}], "thread_id": "Thread-19", "execution_time": 0.4511561393737793, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_crm_events (models/workspaces/workspace_marketing/bizible/wk_bizible_crm_events.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_crm_events (models/workspaces/workspace_marketing/bizible/wk_bizible_crm_events.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_crm_events", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_crm_events", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.031229Z", "completed_at": "2025-06-09T18:51:56.190728Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:56.221828Z", "completed_at": "2025-06-09T18:51:56.385290Z"}], "thread_id": "Thread-20", "execution_time": 0.49692606925964355, "adapter_response": {}, "message": "Database Error in model bizible_opp_stage_transitions_source_pii (models/sources/bizible/sensitive/bizible_opp_stage_transitions_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha224'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_opp_stage_transitions_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_opp_stage_transitions_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                opp_stage_transition_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS opp_stage_transition_id_hash,\n\n\n\n        \n    \n    \n    \n    email  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_opp_stage_transitions_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_opp_stage_transitions_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:55.547405Z", "completed_at": "2025-06-09T18:51:55.768714Z"}], "thread_id": "Thread-32", "execution_time": 0.442277193069458, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_activities (models/workspaces/workspace_marketing/bizible/wk_bizible_activities.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_activities (models/workspaces/workspace_marketing/bizible/wk_bizible_activities.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_activities", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_activities", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-7", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.churn_forecasting_scores", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data_science.churn_forecasting_scores", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-6", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.cleanup_suggestions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.cleanup_suggestions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-12", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.categories_yaml_historical", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.categories_yaml_historical", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_commonroom_organizations", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_commonroom_organizations", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-17", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.commonroom_community_members_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.commonroom.commonroom_community_members_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-14", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_commonroom_community_members", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_commonroom_community_members", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.commonroom_activities_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.commonroom.commonroom_activities_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_commonroom_activities", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_commonroom_activities", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dashboard_analytics", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dashboard_analytics", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_customers_db_license_versions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.wk_customers_db_license_versions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-6", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_financial_metrics_program_phase_1", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_finance.wk_financial_metrics_program_phase_1", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-12", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dbt_gdpr_logs", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dbt_gdpr_logs", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-14", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_lead", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common_prep.prep_lead", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_date", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_date", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_cloud_activation", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_cloud_activation", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.bvs_ecosystems_document", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.bvs_ecosystems_document", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.bvs_ecosystems_document_collaborator", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.bvs_ecosystems_document_collaborator", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.bvs_ecosystems_collaborative_value_assessment", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.bvs_ecosystems_collaborative_value_assessment", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.rpt_elastic_billing_itemized_by_deployment", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.rpt_elastic_billing_itemized_by_deployment", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.rpt_elastic_billing_itemized", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.rpt_elastic_billing_itemized", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.events", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.events", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.fabrication_stats_e2e_metrics", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.fabrication_stats_e2e_metrics", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.field_cleanup_suggestions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.field_cleanup_suggestions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.ga360_session_hit_custom_dimension", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.ga360_session_hit_custom_dimension", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.ga360_session_custom_dimension", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.ga360_session_custom_dimension", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.feature_flags_yaml_historical", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.feature_flags_yaml_historical", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_geozone", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_geozone", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.274029Z", "completed_at": "2025-06-09T18:51:56.284880Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:56.285665Z", "completed_at": "2025-06-09T18:51:56.380179Z"}], "thread_id": "Thread-23", "execution_time": 0.2012479305267334, "adapter_response": {}, "message": "Database Error in model bizible_facts_source_pii (models/sources/bizible/sensitive/bizible_facts_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha224'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_facts_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_facts_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                cost_key || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS cost_key_hash,\n\n\n\n        \n    \n    \n    \n    email   , \n    \n    \n    \n    visitor_id  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_facts_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_facts_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.863860Z", "completed_at": "2025-06-09T18:51:57.131845Z"}], "thread_id": "Thread-24", "execution_time": 0.6109519004821777, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_channels (models/workspaces/workspace_marketing/bizible/wk_bizible_channels.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_channels (models/workspaces/workspace_marketing/bizible/wk_bizible_channels.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_channels", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_channels", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:51.476612Z", "completed_at": "2025-06-09T18:51:51.506421Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:51.525722Z", "completed_at": "2025-06-09T18:51:56.569222Z"}], "thread_id": "Thread-30", "execution_time": 5.152117967605591, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_rate_plan_charge_tier_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_stitch.rateplanchargetier\n\n), renamed AS (\n\n    SELECT \n      rateplanchargeid        AS rate_plan_charge_id,\n      productrateplanchargeid AS product_rate_plan_charge_id,\n      price,\n      currency\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zuora.zuora_rate_plan_charge_tier_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.846161Z", "completed_at": "2025-06-09T18:51:56.947780Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:56.958014Z", "completed_at": "2025-06-09T18:51:57.130583Z"}], "thread_id": "Thread-22", "execution_time": 0.5925331115722656, "adapter_response": {}, "message": "Database Error in model bizible_leads_source_pii (models/sources/bizible/sensitive/bizible_leads_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha512'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_leads_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_leads_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                lead_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS lead_id_hash,\n\n\n\n        \n    \n    \n    \n    email  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_leads_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_leads_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.888550Z", "completed_at": "2025-06-09T18:51:56.952238Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:56.977926Z", "completed_at": "2025-06-09T18:51:57.458389Z"}], "thread_id": "Thread-4", "execution_time": 0.6964612007141113, "adapter_response": {}, "message": "Database Error in model bizible_customer_ab_tests_source_pii (models/sources/bizible/sensitive/bizible_customer_ab_tests_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha256'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_customer_ab_tests_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_customer_ab_tests_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                visitor_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS visitor_id_hash,\n\n\n\n        \n    \n    \n    \n    visitor_id  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_customer_ab_tests_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_customer_ab_tests_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.877494Z", "completed_at": "2025-06-09T18:51:57.147235Z"}], "thread_id": "Thread-21", "execution_time": 0.6121659278869629, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_stage_definitions (models/workspaces/workspace_marketing/bizible/wk_bizible_stage_definitions.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_stage_definitions (models/workspaces/workspace_marketing/bizible/wk_bizible_stage_definitions.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_stage_definitions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_stage_definitions", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.910694Z", "completed_at": "2025-06-09T18:51:57.199784Z"}], "thread_id": "Thread-15", "execution_time": 0.6121737957000732, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_form_submits (models/workspaces/workspace_marketing/bizible/wk_bizible_form_submits.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_form_submits (models/workspaces/workspace_marketing/bizible/wk_bizible_form_submits.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_form_submits", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_form_submits", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.891885Z", "completed_at": "2025-06-09T18:51:57.211420Z"}], "thread_id": "Thread-18", "execution_time": 0.6148900985717773, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_customer_ab_tests (models/workspaces/workspace_marketing/bizible/wk_bizible_customer_ab_tests.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_customer_ab_tests (models/workspaces/workspace_marketing/bizible/wk_bizible_customer_ab_tests.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_customer_ab_tests", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_customer_ab_tests", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.852414Z", "completed_at": "2025-06-09T18:51:57.205772Z"}], "thread_id": "Thread-29", "execution_time": 0.6194899082183838, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_facts (models/workspaces/workspace_marketing/bizible/wk_bizible_facts.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_facts (models/workspaces/workspace_marketing/bizible/wk_bizible_facts.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_facts", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_facts", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.896474Z", "completed_at": "2025-06-09T18:51:57.239876Z"}], "thread_id": "Thread-25", "execution_time": 0.6155250072479248, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_creatives (models/workspaces/workspace_marketing/bizible/wk_bizible_creatives.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_creatives (models/workspaces/workspace_marketing/bizible/wk_bizible_creatives.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_creatives", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_creatives", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.883721Z", "completed_at": "2025-06-09T18:51:57.279525Z"}], "thread_id": "Thread-9", "execution_time": 0.6193437576293945, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_conversion_rates (models/workspaces/workspace_marketing/bizible/wk_bizible_conversion_rates.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_conversion_rates (models/workspaces/workspace_marketing/bizible/wk_bizible_conversion_rates.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_conversion_rates", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_conversion_rates", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.872735Z", "completed_at": "2025-06-09T18:51:57.291607Z"}], "thread_id": "Thread-1", "execution_time": 0.6209659576416016, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_page_views (models/workspaces/workspace_marketing/bizible/wk_bizible_page_views.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_page_views (models/workspaces/workspace_marketing/bizible/wk_bizible_page_views.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_page_views", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_page_views", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.936336Z", "completed_at": "2025-06-09T18:51:57.311932Z"}], "thread_id": "Thread-10", "execution_time": 0.616560697555542, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_user_touchpoints (models/workspaces/workspace_marketing/bizible/wk_bizible_user_touchpoints.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_user_touchpoints (models/workspaces/workspace_marketing/bizible/wk_bizible_user_touchpoints.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_user_touchpoints", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_user_touchpoints", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.921064Z", "completed_at": "2025-06-09T18:51:57.363995Z"}], "thread_id": "Thread-26", "execution_time": 0.6183319091796875, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_segments (models/workspaces/workspace_marketing/bizible/wk_bizible_segments.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_segments (models/workspaces/workspace_marketing/bizible/wk_bizible_segments.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_segments", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_segments", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.901327Z", "completed_at": "2025-06-09T18:51:57.362477Z"}], "thread_id": "Thread-2", "execution_time": 0.6202499866485596, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_costs (models/workspaces/workspace_marketing/bizible/wk_bizible_costs.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_costs (models/workspaces/workspace_marketing/bizible/wk_bizible_costs.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_costs", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_costs", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.869454Z", "completed_at": "2025-06-09T18:51:56.950441Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:56.967068Z", "completed_at": "2025-06-09T18:51:57.457330Z"}], "thread_id": "Thread-27", "execution_time": 0.6953592300415039, "adapter_response": {}, "message": "Database Error in model bizible_page_views_source_pii (models/sources/bizible/sensitive/bizible_page_views_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha256'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_page_views_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_page_views_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                page_view_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS page_view_id_hash,\n\n\n\n        \n    \n    \n    \n    email   , \n    \n    \n    \n    visitor_id  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_page_views_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_page_views_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.906548Z", "completed_at": "2025-06-09T18:51:56.953457Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:56.984666Z", "completed_at": "2025-06-09T18:51:57.471405Z"}], "thread_id": "Thread-28", "execution_time": 0.7142620086669922, "adapter_response": {}, "message": "Database Error in model bizible_form_submits_source_pii (models/sources/bizible/sensitive/bizible_form_submits_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha256'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_form_submits_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_form_submits_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                form_submit_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS form_submit_id_hash,\n\n\n\n        \n    \n    \n    \n    email   , \n    \n    \n    \n    ip_address   , \n    \n    \n    \n    visitor_id  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_form_submits_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_form_submits_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.002616Z", "completed_at": "2025-06-09T18:51:57.140824Z"}], "thread_id": "Thread-7", "execution_time": 0.49701499938964844, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_touchpoints (models/workspaces/workspace_marketing/bizible/wk_bizible_touchpoints.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_touchpoints (models/workspaces/workspace_marketing/bizible/wk_bizible_touchpoints.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_touchpoints", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_touchpoints", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.915960Z", "completed_at": "2025-06-09T18:51:57.161893Z"}], "thread_id": "Thread-31", "execution_time": 0.6101481914520264, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_placements (models/workspaces/workspace_marketing/bizible/wk_bizible_placements.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_placements (models/workspaces/workspace_marketing/bizible/wk_bizible_placements.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_placements", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_placements", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.932505Z", "completed_at": "2025-06-09T18:51:56.955929Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:56.996480Z", "completed_at": "2025-06-09T18:51:57.481031Z"}], "thread_id": "Thread-3", "execution_time": 0.712669849395752, "adapter_response": {}, "message": "Database Error in model bizible_user_touchpoints_source_pii (models/sources/bizible/sensitive/bizible_user_touchpoints_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha224'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_user_touchpoints_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_user_touchpoints_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                user_touchpoint_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS user_touchpoint_id_hash,\n\n\n\n        \n    \n    \n    \n    user_touchpoint_id   , \n    \n    \n    \n    email   , \n    \n    \n    \n    visitor_id  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_user_touchpoints_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_user_touchpoints_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.943018Z", "completed_at": "2025-06-09T18:51:56.957109Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:57.008481Z", "completed_at": "2025-06-09T18:51:57.458125Z"}], "thread_id": "Thread-32", "execution_time": 0.7110867500305176, "adapter_response": {}, "message": "Database Error in model bizible_touchpoints_source_pii (models/sources/bizible/sensitive/bizible_touchpoints_source_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha224'?\n  compiled code at target/run/gitlab_snowflake/models/sources/bizible/sensitive/bizible_touchpoints_source_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.bizible_touchpoints_source_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                touchpoint_id || \n                ENCRYPT_RAW(\n                  to_binary('SALT', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS touchpoint_id_hash,\n\n\n\n        \n    \n    \n    \n    user_touchpoint_id   , \n    \n    \n    \n    email   , \n    \n    \n    \n    visitor_id  \n    \n    \n\n\n    FROM EMBUCKET.bizible.bizible_touchpoints_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.sensitive.bizible_touchpoints_source_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.017667Z", "completed_at": "2025-06-09T18:51:57.504310Z"}], "thread_id": "Thread-17", "execution_time": 0.5990819931030273, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_sites (models/workspaces/workspace_marketing/bizible/wk_bizible_sites.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_sites (models/workspaces/workspace_marketing/bizible/wk_bizible_sites.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_sites", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_sites", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.858034Z", "completed_at": "2025-06-09T18:51:57.229252Z"}], "thread_id": "Thread-16", "execution_time": 0.6179368495941162, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_leads (models/workspaces/workspace_marketing/bizible/wk_bizible_leads.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_leads (models/workspaces/workspace_marketing/bizible/wk_bizible_leads.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_leads", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_leads", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.026196Z", "completed_at": "2025-06-09T18:51:57.506284Z"}], "thread_id": "Thread-11", "execution_time": 0.5968570709228516, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_site_links (models/workspaces/workspace_marketing/bizible/wk_bizible_site_links.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_site_links (models/workspaces/workspace_marketing/bizible/wk_bizible_site_links.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_site_links", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_site_links", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:56.925758Z", "completed_at": "2025-06-09T18:51:57.465300Z"}], "thread_id": "Thread-13", "execution_time": 0.7133088111877441, "adapter_response": {}, "message": "Compilation Error in model wk_bizible_urls (models/workspaces/workspace_marketing/bizible/wk_bizible_urls.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model wk_bizible_urls (models/workspaces/workspace_marketing/bizible/wk_bizible_urls.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_urls", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_bizible_urls", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.email_log_v2_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gainsight_customer_success.email_log_v2_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.facebook_ads", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.facebook_ads", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-21", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_gs_email_logs", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.wk_gs_email_logs", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-26", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_catalog_resource_versions_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_catalog_resource_versions_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_gitlab_dotcom_direct_imports", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.wk_gitlab_dotcom_direct_imports", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-25", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_catalog_resources_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_catalog_resources_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.392597Z", "completed_at": "2025-06-09T18:51:58.512106Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.569784Z", "completed_at": "2025-06-09T18:52:03.142048Z"}], "thread_id": "Thread-9", "execution_time": 5.464617967605591, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_award_emoji_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_award_emoji_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_award_emoji_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_award_emoji_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_award_emoji_dedupe_source\n\n)\n\nSELECT\n  id::NUMBER              AS award_emoji_id,\n  name::VARCHAR           AS award_emoji_name,\n  user_id::NUMBER         AS user_id,\n  awardable_id::NUMBER    AS awardable_id,\n  awardable_type::VARCHAR AS awardable_type,\n  created_at::TIMESTAMP   AS created_at,\n  updated_at::TIMESTAMP   AS updated_at\nFROM source", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_award_emoji_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.032632Z", "completed_at": "2025-06-09T18:51:57.043548Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:57.059579Z", "completed_at": "2025-06-09T18:52:03.479333Z"}], "thread_id": "Thread-20", "execution_time": 6.523798942565918, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_invoice_aging_detail", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.driveload_invoice_aging_detail_source\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.driveload_invoice_aging_detail", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.078362Z", "completed_at": "2025-06-09T18:51:57.120461Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:57.136414Z", "completed_at": "2025-06-09T18:52:03.529823Z"}], "thread_id": "Thread-14", "execution_time": 6.489789962768555, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.ssa_quarterly_aggregated_metrics_for_coverage", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.driveload.driveload_ssa_quarterly_aggregated_metrics_for_coverage_source\n\n)\n\nSELECT *\nFROM base", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.ssa_quarterly_aggregated_metrics_for_coverage", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.055298Z", "completed_at": "2025-06-09T18:51:57.098008Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:57.116016Z", "completed_at": "2025-06-09T18:52:03.521058Z"}], "thread_id": "Thread-6", "execution_time": 6.4842870235443115, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_pending_invoices_report", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.driveload_pending_invoices_report_source\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.driveload_pending_invoices_report", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.013676Z", "completed_at": "2025-06-09T18:51:57.042930Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:57.049814Z", "completed_at": "2025-06-09T18:52:03.523049Z"}], "thread_id": "Thread-5", "execution_time": 6.573403835296631, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_booking_to_billing_monthly_reconciliation", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.driveload_booking_to_billing_monthly_reconciliation_source\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.driveload_booking_to_billing_monthly_reconciliation", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.650828Z", "completed_at": "2025-06-09T18:51:57.669888Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:57.690791Z", "completed_at": "2025-06-09T18:52:03.587926Z"}], "thread_id": "Thread-24", "execution_time": 5.9600160121917725, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_waterfall_report_with_wf_type_unbilled_revenue", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.driveload_zuora_revenue_waterfall_report_with_wf_type_unbilled_revenue_source\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.driveload_zuora_revenue_waterfall_report_with_wf_type_unbilled_revenue", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.702074Z", "completed_at": "2025-06-09T18:51:58.388862Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.419733Z", "completed_at": "2025-06-09T18:52:03.601511Z"}], "thread_id": "Thread-18", "execution_time": 5.94115686416626, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_unreleased_pob_report", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.driveload_zuora_revenue_unreleased_pob_report_source\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.driveload_zuora_revenue_unreleased_pob_report", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.565977Z", "completed_at": "2025-06-09T18:51:57.569820Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:57.570101Z", "completed_at": "2025-06-09T18:52:03.589695Z"}], "thread_id": "Thread-19", "execution_time": 6.024399995803833, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_rc_rollforward_report", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.driveload_zuora_revenue_rc_rollforward_report_source\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.driveload_zuora_revenue_rc_rollforward_report", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.512799Z", "completed_at": "2025-06-09T18:51:58.588556Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.643444Z", "completed_at": "2025-06-09T18:52:03.580290Z"}], "thread_id": "Thread-22", "execution_time": 5.907261848449707, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_job_artifacts_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_job_artifacts_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_job_artifacts_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_job_artifacts_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_job_artifacts_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER                AS ci_job_artifact_id,\n    project_id::NUMBER        AS project_id,\n    job_id::NUMBER            AS ci_job_id,\n    file_type                 AS file_type,\n    size                      AS size,\n    created_at::TIMESTAMP     AS created_at,\n    updated_at::TIMESTAMP     AS updated_at,\n    expire_at::TIMESTAMP      AS expire_at,\n    file                      AS file,\n    file_store                AS file_store,\n    file_format               AS file_format,\n    file_location             AS file_location,\n    locked                    AS locked,\n    pgp_is_deleted            AS pgp_is_deleted,\n    pgp_is_deleted_updated_at AS pgp_is_deleted_updated_at\n  FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_job_artifacts_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.371047Z", "completed_at": "2025-06-09T18:51:58.410639Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.491754Z", "completed_at": "2025-06-09T18:52:03.554843Z"}], "thread_id": "Thread-16", "execution_time": 5.92965292930603, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_audit_events_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_audit_events_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_audit_events_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_audit_events_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_audit_events_dedupe_source\n\n), renamed AS (\n\n  SELECT\n    id::NUMBER              AS audit_event_id,\n    author_id::NUMBER       AS author_id,\n    entity_id::NUMBER       AS entity_id,\n    entity_type::VARCHAR    AS entity_type,\n    details::VARCHAR        AS audit_event_details,\n    created_at::TIMESTAMP   AS created_at\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_audit_events_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.451781Z", "completed_at": "2025-06-09T18:51:58.529435Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.599093Z", "completed_at": "2025-06-09T18:52:03.565849Z"}], "thread_id": "Thread-21", "execution_time": 5.247828006744385, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_pipeline_artifacts_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_pipeline_artifacts_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_pipeline_artifacts_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_pipeline_artifacts_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipeline_artifacts_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER             AS ci_pipeline_artifact_id,\n    project_id::NUMBER     AS project_id,\n    pipeline_id::NUMBER    AS pipeline_id,\n    file_type::NUMBER      AS file_type,\n    size::NUMBER           AS size,\n    created_at::TIMESTAMP  AS created_at,\n    updated_at::TIMESTAMP  AS updated_at,\n    expire_at::TIMESTAMP   AS expire_at,\n    file::VARCHAR          AS file,\n    file_store::NUMBER     AS file_store,\n    file_format::NUMBER    AS file_format,\n    locked::NUMBER         AS locked\n  FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipeline_artifacts_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.428104Z", "completed_at": "2025-06-09T18:51:58.510343Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.561402Z", "completed_at": "2025-06-09T18:52:03.531006Z"}], "thread_id": "Thread-25", "execution_time": 5.17238187789917, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_runner_projects_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_runner_projects_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_runner_projects_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_runner_projects_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_runner_projects_dedupe_source\n      \n)\n\n, renamed AS (\n  \n    SELECT\n    \n      id::NUMBER           AS ci_runner_project_id,\n      runner_id::NUMBER    AS runner_id,\n      project_id::NUMBER   AS project_id,\n      created_at::TIMESTAMP AS created_at,\n      updated_at::TIMESTAMP AS updated_at\n\n    FROM source\n    WHERE project_id IS NOT NULL\n  \n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_runner_projects_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.374355Z", "completed_at": "2025-06-09T18:51:58.425615Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.501718Z", "completed_at": "2025-06-09T18:52:03.659246Z"}], "thread_id": "Thread-11", "execution_time": 5.98839807510376, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_build_trace_chunks_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_build_trace_chunks_dedupe_source\n\n), renamed AS (\n\n    SELECT\n      build_id::NUMBER     AS ci_build_id,\n      chunk_index::VARCHAR  AS chunk_index,\n      data_store::VARCHAR   AS data_store\n\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_build_trace_chunks_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.677072Z", "completed_at": "2025-06-09T18:51:57.710598Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.384103Z", "completed_at": "2025-06-09T18:52:03.665551Z"}], "thread_id": "Thread-30", "execution_time": 6.021294832229614, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_unbill_rollforward_report", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.driveload_zuora_revenue_unbill_rollforward_report_source\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.driveload_zuora_revenue_unbill_rollforward_report", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.639172Z", "completed_at": "2025-06-09T18:51:57.659163Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:57.671165Z", "completed_at": "2025-06-09T18:52:03.602608Z"}], "thread_id": "Thread-23", "execution_time": 5.983138084411621, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_waterfall_report_with_wf_type_adjustments", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.driveload_zuora_revenue_waterfall_report_with_wf_type_adjustments_source\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.driveload_zuora_revenue_waterfall_report_with_wf_type_adjustments", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.064546Z", "completed_at": "2025-06-09T18:51:57.100072Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:57.121049Z", "completed_at": "2025-06-09T18:52:03.676128Z"}], "thread_id": "Thread-12", "execution_time": 6.638849258422852, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_billing_waterfall_report", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.driveload_zuora_revenue_billing_waterfall_report_source\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.driveload_zuora_revenue_billing_waterfall_report", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.356609Z", "completed_at": "2025-06-09T18:51:58.405193Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.462036Z", "completed_at": "2025-06-09T18:52:03.691048Z"}], "thread_id": "Thread-7", "execution_time": 6.022207260131836, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_board_assignees_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_board_assignees_dedupe_source\n  \n), renamed AS (\n\n  SELECT\n    id::NUMBER                 AS board_assignee_relation_id,\n    board_id::NUMBER           AS board_id,\n    assignee_id::NUMBER        AS board_assignee_id\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_board_assignees_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.661268Z", "completed_at": "2025-06-09T18:51:57.681301Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:57.705839Z", "completed_at": "2025-06-09T18:52:03.689556Z"}], "thread_id": "Thread-29", "execution_time": 6.028883934020996, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_revenue_waterfall_report", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.driveload_zuora_revenue_revenue_waterfall_report_source\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.driveload_zuora_revenue_revenue_waterfall_report", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.268036Z", "completed_at": "2025-06-09T18:51:58.398666Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.439866Z", "completed_at": "2025-06-09T18:52:03.696359Z"}], "thread_id": "Thread-2", "execution_time": 6.029638051986694, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_approval_project_rules_groups_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_approval_project_rules_groups_dedupe_source\n  \n), renamed AS (\n\n  SELECT\n    id::NUMBER                          AS project_rules_groups_id,\n    approval_project_rule_id::NUMBER    AS approval_project_rule_id,\n    group_id::NUMBER                     AS group_id\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_approval_project_rules_groups_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.083966Z", "completed_at": "2025-06-09T18:51:57.115743Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:57.131998Z", "completed_at": "2025-06-09T18:52:03.697830Z"}], "thread_id": "Thread-8", "execution_time": 6.657059907913208, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_billing_waterfall_report_with_additional_columns", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.driveload_zuora_revenue_billing_waterfall_report_with_additional_columns_source\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.driveload_zuora_revenue_billing_waterfall_report_with_additional_columns", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.435320Z", "completed_at": "2025-06-09T18:51:58.525116Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.589056Z", "completed_at": "2025-06-09T18:52:03.700902Z"}], "thread_id": "Thread-4", "execution_time": 5.368726015090942, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_group_variables_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_group_variables_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_group_variables_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_group_variables_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_group_variables_dedupe_source\n  \n), renamed AS (\n\n  SELECT \n    id::NUMBER              AS ci_group_variable_id,\n    group_id::NUMBER        AS ci_group_variable_group_id, \n    created_at::TIMESTAMP   AS created_at, \n    updated_at::TIMESTAMP   AS updated_at, \n    masked                  AS masked, \n    variable_type           AS variable_variable_type \n  FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_group_variables_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.432139Z", "completed_at": "2025-06-09T18:51:58.518031Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.577746Z", "completed_at": "2025-06-09T18:52:03.710014Z"}], "thread_id": "Thread-26", "execution_time": 5.323347091674805, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_pipeline_schedules_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_pipeline_schedules_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_pipeline_schedules_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_pipeline_schedules_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipeline_schedules_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n      id::NUMBER            AS ci_pipeline_schedule_id, \n      ref                    AS ref, \n      next_run_at::TIMESTAMP AS next_run_at, \n      project_id::NUMBER    AS project_id, \n      owner_id::NUMBER      AS owner_id, \n      active                 AS active, \n      created_at::TIMESTAMP  AS created_at, \n      updated_at::TIMESTAMP  AS updated_at\n\n\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipeline_schedules_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.697464Z", "completed_at": "2025-06-09T18:51:58.383570Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.412093Z", "completed_at": "2025-06-09T18:52:03.603694Z"}], "thread_id": "Thread-15", "execution_time": 5.944035053253174, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.driveload_zuora_revenue_waterfall_report_with_wf_type_net_revenue_with_mje_flag_y", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.driveload.driveload_zuora_revenue_waterfall_report_with_wf_type_net_revenue_with_mje_flag_y_source\n\n)\nSELECT * \nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.driveload_zuora_revenue_waterfall_report_with_wf_type_net_revenue_with_mje_flag_y", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.367057Z", "completed_at": "2025-06-09T18:51:58.409337Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.480251Z", "completed_at": "2025-06-09T18:52:03.573593Z"}], "thread_id": "Thread-17", "execution_time": 5.937355995178223, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_boards_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_boards_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_boards_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_boards_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_boards_dedupe_source\n  \n), renamed AS (\n\n  SELECT\n    id::NUMBER              AS board_id,\n    project_id::NUMBER      AS project_id,\n    created_at::TIMESTAMP    AS created_at,\n    updated_at::TIMESTAMP    AS updated_at,\n    milestone_id::NUMBER    AS milestone_id,\n    group_id::NUMBER        AS group_id,\n    weight::NUMBER          AS weight\n\n  FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_boards_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.349451Z", "completed_at": "2025-06-09T18:51:58.404454Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.456102Z", "completed_at": "2025-06-09T18:52:03.608374Z"}], "thread_id": "Thread-27", "execution_time": 5.960536956787109, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_approvals_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_approvals_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_approvals_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_approvals_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_approvals_dedupe_source\n  \n), renamed AS (\n\n  SELECT\n    id::NUMBER                     AS approval_id,\n    merge_request_id::NUMBER       AS merge_request_id,\n    user_id::NUMBER                AS user_id,\n    created_at::TIMESTAMP           AS created_at,\n    updated_at::TIMESTAMP           AS updated_at\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_approvals_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.718619Z", "completed_at": "2025-06-09T18:51:58.399122Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.445502Z", "completed_at": "2025-06-09T18:52:03.694505Z"}], "thread_id": "Thread-10", "execution_time": 6.028379917144775, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_application_settings_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_application_settings_dedupe_source\n    \n), renamed AS (\n  \n    SELECT\n      id::NUMBER                          AS application_settings_id,\n      shared_runners_minutes::NUMBER      AS shared_runners_minutes\n    FROM source\n    \n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_application_settings_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-17", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_group_group_links", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_group_group_links", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-17", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_gitlab_subscriptions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_gitlab_subscriptions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.359435Z", "completed_at": "2025-06-09T18:51:58.407237Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.473977Z", "completed_at": "2025-06-09T18:52:04.825934Z"}], "thread_id": "Thread-31", "execution_time": 7.156692028045654, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_approval_project_rules_users_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_approval_project_rules_users_dedupe_source\n  \n), renamed AS (\n\n  SELECT\n    id::NUMBER                          AS project_rules_users_id,\n    approval_project_rule_id::NUMBER    AS approval_project_rule_id,\n    user_id::NUMBER                     AS user_id\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_approval_project_rules_users_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.363691Z", "completed_at": "2025-06-09T18:51:58.409660Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.486466Z", "completed_at": "2025-06-09T18:52:04.953974Z"}], "thread_id": "Thread-32", "execution_time": 7.291406154632568, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_banned_users_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_banned_users_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_banned_users_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_banned_users_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_banned_users_dedupe_source\n  \n), renamed AS (\n\n  SELECT\n    user_id::NUMBER                       AS user_id,\n    created_at::TIMESTAMP                 AS created_at,\n    updated_at::TIMESTAMP                 AS updated_at,\n    pgp_is_deleted::BOOLEAN               AS is_deleted,\n    pgp_is_deleted_updated_at::TIMESTAMP  AS is_deleted_updated_at\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_banned_users_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.352739Z", "completed_at": "2025-06-09T18:51:58.406747Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.467538Z", "completed_at": "2025-06-09T18:52:04.964750Z"}], "thread_id": "Thread-28", "execution_time": 7.302826166152954, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_builds_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_builds_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_builds_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_builds_source", "compiled": true, "compiled_code": "WITH all_rows_source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_builds_dedupe_source\n\n), internal_rows_source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_builds_internal_only_dedupe_source\n\n), all_rows_renamed AS (\n\n  SELECT\n    id::NUMBER                        AS ci_build_id,\n    status::VARCHAR                   AS status,\n    finished_at::TIMESTAMP            AS finished_at,\n    created_at::TIMESTAMP             AS created_at,\n    updated_at::TIMESTAMP             AS updated_at,\n    started_at::TIMESTAMP             AS started_at,\n    runner_id::NUMBER                 AS ci_build_runner_id,\n    coverage::VARCHAR                 AS coverage,\n    commit_id::NUMBER                 AS ci_build_commit_id,\n    name::VARCHAR                     AS ci_build_name,\n    options::VARCHAR                  AS options,\n    allow_failure::VARCHAR            AS allow_failure,\n    stage::VARCHAR                    AS stage,\n    trigger_request_id::NUMBER        AS ci_build_trigger_request_id,\n    stage_idx::NUMBER                 AS stage_idx,\n    tag::VARCHAR                      AS tag,\n    ref::VARCHAR                      AS ref,\n    user_id::NUMBER                   AS ci_build_user_id,\n    type::VARCHAR                     AS type,\n    description::VARCHAR              AS description,\n    project_id::NUMBER                AS ci_build_project_id,\n    erased_by_id::NUMBER              AS ci_build_erased_by_id,\n    erased_at::TIMESTAMP              AS ci_build_erased_at,\n    artifacts_expire_at::TIMESTAMP    AS ci_build_artifacts_expire_at,\n    environment::VARCHAR              AS environment,\n    queued_at::TIMESTAMP              AS ci_build_queued_at,\n    lock_version::VARCHAR             AS lock_version,\n    coverage_regex::VARCHAR           AS coverage_regex,\n    auto_canceled_by_id::NUMBER       AS ci_build_auto_canceled_by_id,\n    retried::BOOLEAN                  AS retried,\n    stage_id::NUMBER                  AS ci_build_stage_id,\n    protected::BOOLEAN                AS protected,\n    failure_reason::VARCHAR           AS failure_reason,\n    scheduled_at::TIMESTAMP           AS ci_build_scheduled_at,\n    upstream_pipeline_id::NUMBER      AS upstream_pipeline_id,\n    scheduling_type::NUMBER           AS scheduling_type\n\n  FROM all_rows_source\n\n), internal_rows_renamed AS (\n\n  SELECT\n    id::NUMBER                        AS internal_ci_build_id,\n    updated_at::TIMESTAMP             AS internal_updated_at,\n    name::VARCHAR                     AS internal_ci_build_name,\n    stage::VARCHAR                    AS internal_stage,\n    ref::VARCHAR                      AS internal_ref,\n    description::VARCHAR              AS internal_description,\n    project_id::NUMBER                AS internal_project_id\n  from internal_rows_source\n\n), joined AS (\n\n  SELECT\n\n    ci_build_id                                       AS ci_build_id,\n    status                                            AS status,\n    finished_at                                       AS finished_at,\n    created_at                                        AS created_at,\n    updated_at                                        AS updated_at,\n    started_at                                        AS started_at,\n    ci_build_runner_id                                AS ci_build_runner_id,\n    coverage                                          AS coverage,\n    ci_build_commit_id                                AS ci_build_commit_id,\n    COALESCE(ci_build_name, internal_ci_build_name)   AS ci_build_name,\n    options                                           AS options,\n    allow_failure                                     AS allow_failure,\n    internal_stage                                    AS stage,\n    ci_build_trigger_request_id                       AS ci_build_trigger_request_id,\n    stage_idx                                         AS stage_idx,\n    tag                                               AS tag,\n    internal_ref                                      AS ref,\n    ci_build_user_id                                  AS ci_build_user_id,\n    type                                              AS type,\n    internal_description                              AS description,\n    ci_build_project_id                               AS ci_build_project_id,\n    ci_build_erased_by_id                             AS ci_build_erased_by_id,\n    ci_build_erased_at                                AS ci_build_erased_at,\n    ci_build_artifacts_expire_at                      AS ci_build_artifacts_expire_at,\n    environment                                       AS environment,\n    ci_build_queued_at                                AS ci_build_queued_at,\n    lock_version                                      AS lock_version,\n    coverage_regex                                    AS coverage_regex,\n    ci_build_auto_canceled_by_id                      AS ci_build_auto_canceled_by_id,\n    retried                                           AS retried,\n    ci_build_stage_id                                 AS ci_build_stage_id,\n    protected                                         AS protected,\n    failure_reason                                    AS failure_reason,\n    ci_build_scheduled_at                             AS ci_build_scheduled_at,\n    upstream_pipeline_id                              AS upstream_pipeline_id,\n    scheduling_type                                   AS scheduling_type\n\n  FROM all_rows_renamed\n  LEFT JOIN internal_rows_renamed \n    ON all_rows_renamed.ci_build_id = internal_rows_renamed.internal_ci_build_id\n\n)\n\nSELECT *\nFROM joined", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_builds_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:57.714640Z", "completed_at": "2025-06-09T18:51:58.398070Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.519238Z", "completed_at": "2025-06-09T18:52:05.259006Z"}], "thread_id": "Thread-1", "execution_time": 7.593219041824341, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_alert_management_alert_assignees_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_alert_management_alert_assignees_dedupe_source\n    \n), renamed AS (\n\n    SELECT\n      id::NUMBER                AS alert_management_alert_assignee_id,\n      user_id::NUMBER           AS user_id,\n      alert_id::NUMBER          AS alert_id\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_alert_management_alert_assignees_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_issue_assignees", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_issue_assignees", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:03.149973Z", "completed_at": "2025-06-09T18:52:03.159423Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:03.159780Z", "completed_at": "2025-06-09T18:52:06.743118Z"}], "thread_id": "Thread-9", "execution_time": 3.5999937057495117, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_runner_machines_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_runner_machines_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_runner_machines_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_runner_machines_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_runner_machines_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER            AS id,\n    runner_id::NUMBER     AS runner_id,\n    executor_type::NUMBER AS executor_type,\n    created_at::TIMESTAMP AS created_at,\n    updated_at::TIMESTAMP AS updated_at,\n    version::VARCHAR      AS version,\n    runner_type::NUMBER   AS runner_type\n\n  FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_runner_machines_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.723091Z", "completed_at": "2025-06-09T18:52:04.773938Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.813181Z", "completed_at": "2025-06-09T18:52:08.918736Z"}], "thread_id": "Thread-27", "execution_time": 4.322875022888184, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_container_repositories_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_container_repositories_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_container_repositories_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_container_repositories_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_container_repositories_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER AS container_repository_id,\n    project_id::NUMBER AS project_id,\n    created_at::TIMESTAMP AS created_at,\n    updated_at::TIMESTAMP AS updated_at\n  FROM source \n\n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_container_repositories_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-27", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_label_links", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_label_links", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-27", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_label_links", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_label_links", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.484418Z", "completed_at": "2025-06-09T18:52:04.523341Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.571331Z", "completed_at": "2025-06-09T18:52:09.569444Z"}], "thread_id": "Thread-24", "execution_time": 5.154754877090454, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_pipelines_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_pipelines_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_pipelines_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_pipelines_source", "compiled": true, "compiled_code": "WITH all_rows_source AS (\n\n  SELECT\n    id::NUMBER                           AS ci_pipeline_id,\n    created_at::TIMESTAMP                AS created_at,\n    updated_at::TIMESTAMP                AS updated_at,\n    ref::VARCHAR                         AS ref,\n    true::BOOLEAN                         AS has_tag,\n    yaml_errors::VARCHAR                 AS yaml_errors,\n    committed_at::TIMESTAMP              AS committed_at,\n    project_id::NUMBER                   AS project_id,\n    status::VARCHAR                      AS status,\n    started_at::TIMESTAMP                AS started_at,\n    finished_at::TIMESTAMP               AS finished_at,\n    duration::NUMBER                     AS ci_pipeline_duration,\n    user_id::NUMBER                      AS user_id,\n    lock_version::NUMBER                 AS lock_version,\n    auto_canceled_by_id::NUMBER          AS auto_canceled_by_id,\n    pipeline_schedule_id::NUMBER         AS pipeline_schedule_id,\n    source::NUMBER                       AS ci_pipeline_source,\n    config_source::NUMBER                AS config_source,\n    true::BOOLEAN                   AS is_protected,\n    failure_reason::VARCHAR              AS failure_reason,\n    iid::NUMBER                          AS ci_pipeline_iid,\n    merge_request_id::NUMBER             AS merge_request_id,\n    true::BOOLEAN              AS is_deleted,\n    pgp_is_deleted_updated_at::TIMESTAMP AS is_deleted_updated_at\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipelines_dedupe_source\n\n), internal_rows_source AS (\n\n  SELECT\n    id::NUMBER                      AS internal_ci_pipeline_id,\n    ref::VARCHAR                    AS internal_ref\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipelines_internal_only_dedupe_source \n\n), joined AS (\n\n  SELECT\n    ci_pipeline_id                  AS ci_pipeline_id,\n    created_at                      AS created_at,\n    updated_at                      AS updated_at,\n    internal_ref                    AS ref,\n    has_tag                         AS has_tag,\n    yaml_errors                     AS yaml_errors,\n    committed_at                    AS committed_at,\n    project_id                      AS project_id,\n    status                          AS status,\n    started_at                      AS started_at,\n    finished_at                     AS finished_at,\n    ci_pipeline_duration            AS ci_pipeline_duration,\n    user_id                         AS user_id,\n    lock_version                    AS lock_version,\n    auto_canceled_by_id             AS auto_canceled_by_id,\n    pipeline_schedule_id            AS pipeline_schedule_id,\n    ci_pipeline_source              AS ci_pipeline_source,\n    config_source                   AS config_source,\n    is_protected                    AS is_protected,\n    failure_reason                  AS failure_reason,\n    ci_pipeline_iid                 AS ci_pipeline_iid,\n    merge_request_id                AS merge_request_id,\n    is_deleted                      AS is_deleted,\n    is_deleted_updated_at           AS is_deleted_updated_at\n  FROM all_rows_source\n  LEFT JOIN internal_rows_source\n    ON all_rows_source.ci_pipeline_id = internal_rows_source.internal_ci_pipeline_id\n\n)\n\nSELECT *\nFROM joined\nWHERE created_at IS NOT NULL", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipelines_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.538549Z", "completed_at": "2025-06-09T18:51:58.626603Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.678852Z", "completed_at": "2025-06-09T18:52:09.591955Z"}], "thread_id": "Thread-3", "execution_time": 11.198068141937256, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_builds_metadata_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_builds_metadata_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported CAST from Boolean to Decimal128(38, 10)\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_builds_metadata_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_builds_metadata_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_builds_metadata_dedupe_source\n  \n), renamed AS (\n\n  SELECT\n    id::NUMBER                          AS ci_builds_metadata_id,\n    project_id::NUMBER                  AS project_id,\n    timeout::TIMESTAMP                  AS timeout,\n    timeout_source::VARCHAR             AS timeout_source,\n    interruptible::NUMBER               AS interruptible,\n    has_exposed_artifacts::BOOLEAN      AS has_exposed_artifacts,\n    exit_code::NUMBER                   AS exit_code,\n    build_id::NUMBER                    AS build_id\n\n  FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_builds_metadata_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:03.631671Z", "completed_at": "2025-06-09T18:52:03.643819Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:03.645416Z", "completed_at": "2025-06-09T18:52:09.597367Z"}], "thread_id": "Thread-6", "execution_time": 5.9858880043029785, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_runners_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_runners_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_runners_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_runners_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_runners_dedupe_source\n  WHERE created_at IS NOT NULL\n\n), renamed AS (\n\n  SELECT\n    id::NUMBER                                     AS runner_id,\n    created_at::TIMESTAMP                          AS created_at,\n    updated_at::TIMESTAMP                          AS updated_at,\n    description::VARCHAR                           AS description,\n    contacted_at::TIMESTAMP                        AS contacted_at,\n    active::BOOLEAN                                AS is_active,\n    version::VARCHAR                               AS version,\n    revision::VARCHAR                              AS revision,\n    platform::VARCHAR                              AS platform,\n    run_untagged::BOOLEAN                          AS is_untagged,\n    locked::BOOLEAN                                AS is_locked,\n    access_level::NUMBER                           AS access_level,\n    maximum_timeout::NUMBER                        AS maximum_timeout,\n    runner_type::NUMBER                            AS runner_type,\n    public_projects_minutes_cost_factor::FLOAT     AS public_projects_minutes_cost_factor,\n    private_projects_minutes_cost_factor::FLOAT    AS private_projects_minutes_cost_factor\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_runners_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:03.639562Z", "completed_at": "2025-06-09T18:52:03.660863Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:03.682847Z", "completed_at": "2025-06-09T18:52:10.194989Z"}], "thread_id": "Thread-14", "execution_time": 6.572659015655518, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_namespace_monthly_usages_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_namespace_monthly_usages_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_namespace_monthly_usages_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_namespace_monthly_usages_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_namespace_monthly_usages_dedupe_source\n      \n)\n\n, renamed AS (\n    SELECT\n    id::NUMBER                                  AS ci_namespace_monthly_usages_id,\n    namespace_id::NUMBER                        AS namespace_id,\n    date::TIMESTAMP                             AS date,\n    amount_used::NUMBER                         AS amount_used,\n    notification_level::NUMBER                  AS notification_level,\n    shared_runners_duration::NUMBER             AS shared_runners_duration,\n    created_at::TIMESTAMP                       AS created_at\n    FROM source\n  \n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_namespace_monthly_usages_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:51:58.400008Z", "completed_at": "2025-06-09T18:51:58.461384Z"}, {"name": "execute", "started_at": "2025-06-09T18:51:58.530279Z", "completed_at": "2025-06-09T18:52:10.206378Z"}], "thread_id": "Thread-13", "execution_time": 12.519471883773804, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_board_labels_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_board_labels_dedupe_source\n  \n), renamed AS (\n\n  SELECT\n    id::NUMBER        AS board_label_relation_id,\n    board_id::NUMBER  AS board_id,\n    label_id::NUMBER  AS label_id\n\n  FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_board_labels_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.463740Z", "completed_at": "2025-06-09T18:52:04.489643Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.516804Z", "completed_at": "2025-06-09T18:52:10.202028Z"}], "thread_id": "Thread-25", "execution_time": 5.7922539710998535, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_secure_files_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_secure_files_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_secure_files_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_secure_files_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_secure_files_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n   id::NUMBER              AS ci_secure_files_id,\n   project_id::NUMBER      AS project_id,\n   created_at::TIMESTAMP   AS created_at,\n   updated_at::TIMESTAMP   AS updated_at\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_secure_files_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.550159Z", "completed_at": "2025-06-09T18:52:04.603340Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.637271Z", "completed_at": "2025-06-09T18:52:10.189689Z"}], "thread_id": "Thread-29", "execution_time": 5.7487170696258545, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_cluster_agents_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_cluster_agents_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_cluster_agents_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_cluster_agents_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_cluster_agents_dedupe_source\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                               AS cluster_agent_id,\n      project_id::NUMBER                                       AS project_id,\n      created_by_user_id::NUMBER                               AS created_by_user_id,\n      created_at::TIMESTAMP                                    AS created_at,\n      updated_at::TIMESTAMP                                    AS updated_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_cluster_agents_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:03.540622Z", "completed_at": "2025-06-09T18:52:03.588452Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:03.621198Z", "completed_at": "2025-06-09T18:52:10.598555Z"}], "thread_id": "Thread-20", "execution_time": 7.111040115356445, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_subscriptions_projects_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_subscriptions_projects_dedupe_source\n\n), renamed AS (\n  \n  SELECT\n    id::NUMBER                        AS ci_subscriptions_projects_id,\n    downstream_project_id::NUMBER     AS downstream_project_id,\n    upstream_project_id::NUMBER       AS upstream_project_id,\n    author_id::NUMBER                 AS author_id\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_subscriptions_projects_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:03.636036Z", "completed_at": "2025-06-09T18:52:03.651723Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:03.652155Z", "completed_at": "2025-06-09T18:52:10.635161Z"}], "thread_id": "Thread-5", "execution_time": 7.015036106109619, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_sources_pipelines_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_sources_pipelines_dedupe_source\n\n), renamed AS (\n\n  SELECT\n    id::NUMBER                   AS ci_source_pipeline_id,\n    project_id::NUMBER           AS project_id,\n    pipeline_id::NUMBER          AS pipeline_id,\n    source_project_id::NUMBER    AS source_project_id,\n    source_pipeline_id::NUMBER   AS source_pipeline_id,\n    source_job_id::NUMBER        AS source_job_id\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_sources_pipelines_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.442828Z", "completed_at": "2025-06-09T18:52:04.473810Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.491467Z", "completed_at": "2025-06-09T18:52:10.264981Z"}], "thread_id": "Thread-19", "execution_time": 5.859385967254639, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_stages_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_stages_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_stages_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_stages_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_stages_dedupe_source\n  WHERE created_at IS NOT NULL\n\n), renamed AS (\n  \n  SELECT\n    id::NUMBER           AS ci_stage_id,\n    project_id::NUMBER   AS project_id,\n    pipeline_id::NUMBER  AS pipeline_id,\n    created_at::TIMESTAMP AS created_at,\n    updated_at::TIMESTAMP AS updated_at,\n    name::VARCHAR         AS ci_stage_name,\n    status::NUMBER       AS ci_stage_status,\n    lock_version::NUMBER AS lock_version,\n    position::NUMBER     AS position\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_stages_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.616901Z", "completed_at": "2025-06-09T18:52:04.683818Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.757433Z", "completed_at": "2025-06-09T18:52:10.258696Z"}], "thread_id": "Thread-11", "execution_time": 5.767367124557495, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_trigger_requests_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_trigger_requests_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_trigger_requests_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_trigger_requests_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_trigger_requests_dedupe_source\n  \n), renamed AS (\n  \n  SELECT\n\n    id::NUMBER           AS ci_trigger_request_id,\n    trigger_id::NUMBER   AS trigger_id,\n    created_at::TIMESTAMP AS created_at,\n    updated_at::TIMESTAMP AS updated_at,\n    commit_id::NUMBER    AS commit_id\n    \n  FROM source\n  \n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_trigger_requests_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.655115Z", "completed_at": "2025-06-09T18:52:04.755994Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.798050Z", "completed_at": "2025-06-09T18:52:10.275271Z"}], "thread_id": "Thread-4", "execution_time": 5.781984090805054, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_clusters_applications_ingress_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_ingress_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_ingress_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_ingress_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_ingress_dedupe_source\n    \n), \n\nrenamed AS (\n    \n    SELECT\n      id::NUMBER              AS clusters_applications_ingress_id,\n      cluster_id::NUMBER      AS cluster_id,\n      created_at::TIMESTAMP    AS created_at,\n      updated_at::TIMESTAMP    AS updated_at,\n      status::NUMBER          AS status,\n      version::VARCHAR         AS version,\n      status_reason::VARCHAR   AS status_reason,\n      ingress_type::NUMBER    AS ingress_type\n      --external_ip (hidden for sensitivity)\n      --external_hostname (hidden for sensitivity)\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_ingress_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.507729Z", "completed_at": "2025-06-09T18:52:04.560150Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.605211Z", "completed_at": "2025-06-09T18:52:10.742582Z"}], "thread_id": "Thread-22", "execution_time": 6.29879093170166, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_triggers_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_triggers_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_triggers_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_triggers_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_triggers_dedupe_source\n  \n), renamed AS (\n  \n  SELECT\n  \n    id::NUMBER           AS ci_trigger_id,\n    created_at::TIMESTAMP AS created_at,\n    updated_at::TIMESTAMP AS updated_at,\n    project_id::NUMBER   AS project_id,\n    owner_id::NUMBER     AS owner_id\n    \n  FROM source\n  \n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_triggers_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.469391Z", "completed_at": "2025-06-09T18:52:04.498555Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.526086Z", "completed_at": "2025-06-09T18:52:10.636584Z"}], "thread_id": "Thread-18", "execution_time": 6.208972930908203, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_pipeline_metadata_internal_only_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipeline_metadata_internal_only_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    project_id::INT             AS project_id,\n    pipeline_id::INT            AS ci_pipeline_id,\n    name::VARCHAR               AS name\n  FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipeline_metadata_internal_only_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.499154Z", "completed_at": "2025-06-09T18:52:04.544019Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.592620Z", "completed_at": "2025-06-09T18:52:10.240981Z"}], "thread_id": "Thread-23", "execution_time": 5.789154052734375, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_clusters_applications_crossplane_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_crossplane_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_crossplane_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_crossplane_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_crossplane_dedupe_source\n    \n), \n\nrenamed AS (\n    \n    SELECT\n      id::NUMBER              AS clusters_applications_crossplane_id,\n      cluster_id::NUMBER      AS cluster_id,\n      created_at::TIMESTAMP    AS created_at,\n      updated_at::TIMESTAMP    AS updated_at,\n      status::NUMBER          AS status,\n      version::VARCHAR         AS version,\n      status_reason::VARCHAR   AS status_reason,\n      stack::VARCHAR           AS stack\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_crossplane_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.651611Z", "completed_at": "2025-06-09T18:52:04.752840Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.784117Z", "completed_at": "2025-06-09T18:52:10.641665Z"}], "thread_id": "Thread-2", "execution_time": 6.137561082839966, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_clusters_applications_elastic_stacks_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_elastic_stacks_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_elastic_stacks_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_elastic_stacks_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_elastic_stacks_dedupe_source\n    \n), \n\nrenamed AS (\n    \n    SELECT\n      id::NUMBER              AS clusters_applications_elastic_stacks_id,\n      cluster_id::NUMBER      AS cluster_id,\n      created_at::TIMESTAMP    AS created_at,\n      updated_at::TIMESTAMP    AS updated_at,\n      status::NUMBER          AS status,\n      version::VARCHAR         AS version,\n      status_reason::VARCHAR   AS status_reason\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_elastic_stacks_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.544517Z", "completed_at": "2025-06-09T18:52:04.603665Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.643219Z", "completed_at": "2025-06-09T18:52:10.649018Z"}], "thread_id": "Thread-7", "execution_time": 6.17893123626709, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_clusters_applications_prometheus_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_prometheus_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_prometheus_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_prometheus_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_prometheus_dedupe_source\n    \n), \n\nrenamed AS (\n    \n    SELECT\n      id::NUMBER              AS clusters_applications_prometheus_id,\n      cluster_id::NUMBER      AS cluster_id,\n      created_at::TIMESTAMP    AS created_at,\n      updated_at::TIMESTAMP    AS updated_at,\n      status::NUMBER          AS status,\n      version::VARCHAR         AS version,\n      status_reason::VARCHAR   AS status_reason\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_prometheus_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.540357Z", "completed_at": "2025-06-09T18:52:04.627863Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.710897Z", "completed_at": "2025-06-09T18:52:10.641984Z"}], "thread_id": "Thread-12", "execution_time": 6.161143064498901, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_clusters_applications_knative_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_knative_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_knative_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_knative_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_knative_dedupe_source\n    \n), \n\nrenamed AS (\n    \n    SELECT\n      id::NUMBER              AS clusters_applications_knative_id,\n      cluster_id::NUMBER      AS cluster_id,\n      created_at::TIMESTAMP    AS created_at,\n      updated_at::TIMESTAMP    AS updated_at,\n      status::NUMBER          AS status,\n      version::VARCHAR         AS version,\n      status_reason::VARCHAR   AS status_reason\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_knative_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:08.930595Z", "completed_at": "2025-06-09T18:52:08.936329Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:08.936617Z", "completed_at": "2025-06-09T18:52:10.639148Z"}], "thread_id": "Thread-27", "execution_time": 1.7384991645812988, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_events_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_events_source.sql)\n  000200: DataFusion error: Schema error: No field named event_action_type_id. Valid fields are source.id, source.project_id, source.author_id, source.target_id, source.created_at, source.updated_at, source.action, source.target_type, source._uploaded_at, source.qualify_alias.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_events_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_events_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_events_dedupe_source\n\n), renamed AS (\n\n    SELECT\n      id                                                              AS event_id,\n      project_id::NUMBER                                             AS project_id,\n      author_id::NUMBER                                              AS author_id,\n      target_id::NUMBER                                              AS target_id,\n      target_type::VARCHAR                                            AS target_type,\n      created_at::TIMESTAMP                                           AS created_at,\n      updated_at::TIMESTAMP                                           AS updated_at,\n      action::NUMBER                                                 AS event_action_type_id,\n      CASE  WHEN event_action_type_id::NUMBER = 1 THEN 'created'\n        WHEN event_action_type_id::NUMBER = 2 THEN 'updated'\n        WHEN event_action_type_id::NUMBER = 3 THEN 'closed'\n        WHEN event_action_type_id::NUMBER = 4 THEN 'reopened'\n        WHEN event_action_type_id::NUMBER = 5 THEN 'pushed'\n        WHEN event_action_type_id::NUMBER = 6 THEN 'commented'\n        WHEN event_action_type_id::NUMBER = 7 THEN 'merged'\n        WHEN event_action_type_id::NUMBER = 8 THEN 'joined'\n        WHEN event_action_type_id::NUMBER = 9 THEN 'left'\n        WHEN event_action_type_id::NUMBER = 10 THEN 'destroyed'\n        WHEN event_action_type_id::NUMBER = 11 THEN 'expired'\n        END::VARCHAR AS event_action_type\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_events_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.878854Z", "completed_at": "2025-06-09T18:52:04.883405Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.884344Z", "completed_at": "2025-06-09T18:52:10.706161Z"}], "thread_id": "Thread-31", "execution_time": 5.8350231647491455, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_clusters_applications_helm_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_helm_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_helm_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_helm_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_helm_dedupe_source\n    \n), \n\nrenamed AS (\n    \n    SELECT\n      id::NUMBER              AS clusters_applications_helm_id,\n      cluster_id::NUMBER      AS cluster_id,\n      created_at::TIMESTAMP    AS created_at,\n      updated_at::TIMESTAMP    AS updated_at,\n      status::NUMBER          AS status,\n      version::VARCHAR         AS version,\n      status_reason::VARCHAR   AS status_reason\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_helm_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.534904Z", "completed_at": "2025-06-09T18:52:04.584892Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.585286Z", "completed_at": "2025-06-09T18:52:10.281218Z"}], "thread_id": "Thread-21", "execution_time": 5.847672700881958, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ci_pipeline_schedule_variables_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_pipeline_schedule_variables_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ci_pipeline_schedule_variables_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_pipeline_schedule_variables_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipeline_schedule_variables_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n      id::NUMBER                    AS ci_pipeline_schedule_variable_id,\n      pipeline_schedule_id::NUMBER  AS ci_pipeline_schedule_id,\n      created_at::TIMESTAMP         AS created_at,\n      updated_at::TIMESTAMP         AS updated_at,\n      variable_type                 AS variable_type\n\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_pipeline_schedule_variables_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.658830Z", "completed_at": "2025-06-09T18:52:04.755603Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.791604Z", "completed_at": "2025-06-09T18:52:10.726634Z"}], "thread_id": "Thread-30", "execution_time": 6.225709676742554, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_clusters_applications_cert_managers_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_cert_managers_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_cert_managers_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_cert_managers_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_cert_managers_dedupe_source\n    \n), \n\nrenamed AS (\n    \n    SELECT\n      id::NUMBER              AS clusters_applications_cert_managers_id,\n      cluster_id::NUMBER      AS cluster_id,\n      created_at::TIMESTAMP    AS created_at,\n      updated_at::TIMESTAMP    AS updated_at,\n      status::NUMBER          AS status,\n      version::VARCHAR         AS version,\n      status_reason::VARCHAR   AS status_reason\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_cert_managers_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.869537Z", "completed_at": "2025-06-09T18:52:04.893600Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.895202Z", "completed_at": "2025-06-09T18:52:10.737154Z"}], "thread_id": "Thread-17", "execution_time": 5.8911521434783936, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_dast_profiles_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_dast_profiles_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_dast_profiles_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_dast_profiles_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_dast_profiles_dedupe_source\n\n), renamed AS (\n\n  SELECT\n    id::NUMBER                        AS dast_profiles_id,\n    project_id::NUMBER                AS project_id,\n    created_at::TIMESTAMP             AS created_at,\n    updated_at::TIMESTAMP             AS updated_at\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_dast_profiles_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.556853Z", "completed_at": "2025-06-09T18:52:04.614037Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.664341Z", "completed_at": "2025-06-09T18:52:10.771721Z"}], "thread_id": "Thread-8", "execution_time": 6.2584850788116455, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_cluster_groups_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_cluster_groups_dedupe_source\n      \n)\n\n, renamed AS (\n  \n    SELECT\n    \n      id::NUMBER           AS cluster_group_id,\n      cluster_id::NUMBER   AS cluster_id,\n      group_id::NUMBER     AS group_id\n\n    FROM source\n  \n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_cluster_groups_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.564404Z", "completed_at": "2025-06-09T18:52:04.616570Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.670477Z", "completed_at": "2025-06-09T18:52:10.605989Z"}], "thread_id": "Thread-16", "execution_time": 6.1237568855285645, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_cluster_projects_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_cluster_projects_dedupe_source\n      \n)\n\n, renamed AS (\n  \n    SELECT\n      id::NUMBER           AS cluster_project_id,\n      cluster_id::NUMBER   AS cluster_id,\n      project_id::NUMBER   AS project_id\n      \n    FROM source\n  \n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_cluster_projects_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.561398Z", "completed_at": "2025-06-09T18:52:04.620649Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.685895Z", "completed_at": "2025-06-09T18:52:10.777814Z"}], "thread_id": "Thread-26", "execution_time": 6.2674078941345215, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_clusters_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_dedupe_source\n    \n), renamed AS (\n\n    SELECT\n      id::NUMBER                AS cluster_id,\n      user_id::NUMBER           AS user_id,\n      provider_type::NUMBER     AS provider_type_id,\n      platform_type::NUMBER     AS platform_type_id,\n      created_at::TIMESTAMP      AS created_at,\n      updated_at::TIMESTAMP      AS updated_at,\n      enabled::BOOLEAN           AS is_enabled,\n      environment_scope::VARCHAR AS environment_scope,\n      cluster_type::NUMBER      AS cluster_type_id,\n      domain::VARCHAR            AS domain,\n      managed::VARCHAR           AS managed\n\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.580241Z", "completed_at": "2025-06-09T18:52:04.622220Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.695885Z", "completed_at": "2025-06-09T18:52:10.621595Z"}], "thread_id": "Thread-15", "execution_time": 6.113856077194214, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_clusters_applications_jupyter_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_jupyter_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_jupyter_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_jupyter_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_jupyter_dedupe_source\n    \n), \n\nrenamed AS (\n    \n    SELECT\n      id::NUMBER                     AS clusters_applications_jupyter_id,\n      cluster_id::NUMBER             AS cluster_id,\n      created_at::TIMESTAMP           AS created_at,\n      updated_at::TIMESTAMP           AS updated_at,\n      status::NUMBER                 AS status,\n      version::VARCHAR                AS version,\n      status_reason::VARCHAR          AS status_reason,\n      --hostname::VARCHAR             AS hostname,\n      oauth_application_id::NUMBER   AS oauth_application_id\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_jupyter_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.980184Z", "completed_at": "2025-06-09T18:52:04.987551Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.987859Z", "completed_at": "2025-06-09T18:52:10.731834Z"}], "thread_id": "Thread-32", "execution_time": 5.772740125656128, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_elasticsearch_indexed_namespaces_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_elasticsearch_indexed_namespaces_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_elasticsearch_indexed_namespaces_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_elasticsearch_indexed_namespaces_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_elasticsearch_indexed_namespaces_dedupe_source\n\n), types_cast AS (\n\n    SELECT\n      namespace_id::NUMBER            AS namespace_id,\n      created_at::TIMESTAMP           AS created_at,\n      updated_at::TIMESTAMP           AS updated_at,\n      _uploaded_at::NUMBER::TIMESTAMP AS uploaded_at,\n      _task_instance::VARCHAR         AS task_instance_name\n    FROM source\n\n)\n\nSELECT *\nFROM types_cast", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_elasticsearch_indexed_namespaces_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_members", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_members", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_request_reviewers", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_merge_request_reviewers", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-7", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_request_diff_commit_users_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_diff_commit_users_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-30", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_gitlab_dotcom_namespace_details_snapshots", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.wk_gitlab_dotcom_namespace_details_snapshots", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-17", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_lineage_scd", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.preparation.gitlab_dotcom_namespace_lineage_scd", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.633362Z", "completed_at": "2025-06-09T18:52:04.735747Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:04.736139Z", "completed_at": "2025-06-09T18:52:11.481428Z"}], "thread_id": "Thread-10", "execution_time": 6.973794937133789, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_clusters_applications_runners_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_runners_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_clusters_applications_runners_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_clusters_applications_runners_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_runners_dedupe_source\n    \n), \n\nrenamed AS (\n    \n    SELECT\n      id::NUMBER              AS clusters_applications_runners_id,\n      cluster_id::NUMBER      AS cluster_id,\n      created_at::TIMESTAMP    AS created_at,\n      updated_at::TIMESTAMP    AS updated_at,\n      status::NUMBER          AS status,\n      version::VARCHAR         AS version,\n      status_reason::VARCHAR   AS status_reason\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_clusters_applications_runners_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:05.262201Z", "completed_at": "2025-06-09T18:52:05.266288Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:05.266558Z", "completed_at": "2025-06-09T18:52:11.482476Z"}], "thread_id": "Thread-1", "execution_time": 6.287935972213745, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_deployments_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_deployments_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_deployments_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_deployments_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_deployments_dedupe_source\n    \n), renamed AS (\n\n    SELECT\n      id::NUMBER                                      AS deployment_id,\n      iid::NUMBER                                     AS deployment_iid,\n      project_id::NUMBER                              AS project_id,\n      environment_id::NUMBER                          AS environment_id,\n      ref::VARCHAR                                     AS ref,\n      tag::BOOLEAN                                     AS tag,\n      user_id::NUMBER                                 AS user_id,\n      deployable_id::NUMBER                           AS deployable_id,\n      deployable_type::VARCHAR                         AS deployable_type,\n      created_at::TIMESTAMP                            AS created_at,\n      updated_at::TIMESTAMP                            AS updated_at,\n      on_stop::VARCHAR                                 AS on_stop,\n      finished_at::TIMESTAMP                           AS finished_at,\n      status::NUMBER                                  AS status_id,\n      cluster_id::NUMBER                              AS cluster_id\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_deployments_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.335636Z", "completed_at": "2025-06-09T18:52:11.414172Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.452798Z", "completed_at": "2025-06-09T18:52:11.678372Z"}], "thread_id": "Thread-22", "execution_time": 0.45313405990600586, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ml_candidates_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ml_candidates_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Function 'dateadd' failed to match any signature, errors: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Int64), Int64)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker,Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Int64), Int64)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker,Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Int64), Int64)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'dateadd(Utf8, Int32, Utf8)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tdateadd(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Int64), Int64))), Coercion(TypeSignatureClass::Timestamp, implicit_coercion=ImplicitCoercion([Native(LogicalType(Native(String), String))], default_type=Timestamp(Nanosecond, None)))\n  \tdateadd(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Int64), Int64))), Coercion(TypeSignatureClass::Time))\n  \tdateadd(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Int64), Int64))), Coercion(TypeSignatureClass::Native(LogicalType(Native(Date), Date))))\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ml_candidates_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ml_candidates_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ml_candidates_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER                                         AS ml_candidate_id,\n    created_at::TIMESTAMP                              AS created_at,\n    updated_at::TIMESTAMP                              AS updated_at,\n    experiment_id::NUMBER                              AS experiment_id,\n    user_id::NUMBER                                    AS user_id,\n    DATEADD('ms', start_time, '1970-01-01')::TIMESTAMP AS start_at,\n    DATEADD('ms', end_time, '1970-01-01')::TIMESTAMP   AS end_at,\n    status::NUMBER                                     AS status,\n    package_id::NUMBER                                 AS package_id,\n    eid::TEXT                                          AS ml_candidate_eid,\n    project_id::NUMBER                                 AS project_id,\n    internal_id::NUMBER                                AS ml_candidate_internal_id,\n    ci_build_id::NUMBER                                AS ci_build_id\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ml_candidates_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:06.751795Z", "completed_at": "2025-06-09T18:52:06.756629Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:06.758954Z", "completed_at": "2025-06-09T18:52:12.020944Z"}], "thread_id": "Thread-9", "execution_time": 5.269778251647949, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_deployment_merge_requests_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_deployment_merge_requests_dedupe_source\n    \n), renamed AS (\n\n    SELECT\n      deployment_id::NUMBER                           AS deployment_id,\n      merge_request_id::NUMBER                        AS merge_request_id,\n      MD5(deployment_merge_request_id::VARCHAR)        AS deployment_merge_request_id\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_deployment_merge_requests_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.233516Z", "completed_at": "2025-06-09T18:52:11.289612Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.345842Z", "completed_at": "2025-06-09T18:52:14.172877Z"}], "thread_id": "Thread-16", "execution_time": 2.995123863220215, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_merge_request_predictions_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_merge_request_predictions_source.sql)\n  000200: DataFusion error: Schema error: No field named obj_suggested_reviewers. Did you mean 'source.suggested_reviewers'?.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_merge_request_predictions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_request_predictions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_predictions_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    merge_request_id::NUMBER AS merge_request_id,\n    created_at::TIMESTAMP AS created_at,\n    updated_at::TIMESTAMP AS updated_at,\n    TRY_PARSE_JSON(suggested_reviewers)::VARIANT AS obj_suggested_reviewers,\n    obj_suggested_reviewers['top_n']::VARCHAR AS suggested_reviewers_top_n,\n    obj_suggested_reviewers['version']::VARCHAR AS suggested_reviewers_version,\n    obj_suggested_reviewers['reviewers']::VARIANT AS suggested_reviewers_list\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_predictions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.311814Z", "completed_at": "2025-06-09T18:52:11.372555Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.427737Z", "completed_at": "2025-06-09T18:52:15.202207Z"}], "thread_id": "Thread-15", "execution_time": 4.016698837280273, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_merge_requests_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_merge_requests_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'lower(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tlower(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_merge_requests_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_requests_source", "compiled": true, "compiled_code": "WITH all_merge_requests AS (\n\n  SELECT\n\n    id::NUMBER                                         AS merge_request_id,\n    iid::NUMBER                                        AS merge_request_iid,\n    title::VARCHAR                                     AS merge_request_title,\n\n    IFF(LOWER(merge_error) = 'nan', NULL, merge_error) AS merge_error,\n    assignee_id::NUMBER                                AS assignee_id,\n    updated_by_id::NUMBER                              AS updated_by_id,\n    merge_user_id::NUMBER                              AS merge_user_id,\n    last_edited_by_id::NUMBER                          AS last_edited_by_id,\n    milestone_id::NUMBER                               AS milestone_id,\n    head_pipeline_id::NUMBER                           AS head_pipeline_id,\n    latest_merge_request_diff_id::NUMBER               AS latest_merge_request_diff_id,\n    approvals_before_merge::NUMBER                     AS approvals_before_merge,\n    lock_version::NUMBER                               AS lock_version,\n    time_estimate::NUMBER                              AS time_estimate,\n    source_project_id::NUMBER                          AS project_id,\n    target_project_id::NUMBER                          AS target_project_id,\n    author_id::NUMBER                                  AS author_id,\n    state_id::NUMBER                                   AS merge_request_state_id,\n    -- Override state by mapping state_id. See issue #3556.\n    CASE\n      WHEN state_id::NUMBER = 1 THEN 'opened'\n      WHEN state_id::NUMBER = 2 THEN 'closed'\n      WHEN state_id::NUMBER = 3 THEN 'merged'\n      WHEN state_id::NUMBER = 4 THEN 'locked'\n      ELSE NULL\n    END                                                AS merge_request_state,\n    merge_status                                       AS merge_request_status,\n    merge_when_pipeline_succeeds::BOOLEAN              AS does_merge_when_pipeline_succeeds,\n    squash::BOOLEAN                                    AS does_squash,\n    discussion_locked::BOOLEAN                         AS is_discussion_locked,\n    allow_maintainer_to_push::BOOLEAN                  AS does_allow_maintainer_to_push,\n    created_at::TIMESTAMP                              AS created_at,\n    updated_at::TIMESTAMP                              AS updated_at,\n    last_edited_at::TIMESTAMP                          AS merge_request_last_edited_at,\n    description::VARCHAR                               AS merge_request_description,\n    pgp_is_deleted::BOOLEAN                            AS is_deleted,\n    pgp_is_deleted_updated_at::TIMESTAMP               AS is_deleted_updated_at\n\n      --merge_params // hidden for privacy\n\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_requests_dedupe_source\n\n),\n\ninternal_merge_requests AS (\n\n  SELECT\n\n    id::NUMBER                                         AS internal_merge_request_id,\n    title::VARCHAR                                     AS internal_merge_request_title,\n    description::VARCHAR                               AS internal_merge_request_description,\n    target_branch::VARCHAR                             AS internal_target_branch,\n    IFF(LOWER(target_branch) IN ('master', 'main'), TRUE, FALSE)  AS is_merge_to_master\n\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_requests_internal_only_dedupe_source\n),\n\njoined AS (\n\n  SELECT\n\n    all_merge_requests.merge_request_id                        AS merge_request_id,\n    all_merge_requests.merge_request_iid                       AS merge_request_iid,\n    internal_merge_requests.internal_merge_request_title       AS merge_request_title,\n    internal_merge_requests.internal_merge_request_description AS merge_request_description,\n    internal_merge_requests.internal_target_branch             AS target_branch,\n    internal_merge_requests.is_merge_to_master                 AS is_merge_to_master,\n    all_merge_requests.merge_error                             AS merge_error,\n    all_merge_requests.assignee_id                             AS assignee_id,\n    all_merge_requests.updated_by_id                           AS updated_by_id,\n    all_merge_requests.merge_user_id                           AS merge_user_id,\n    all_merge_requests.last_edited_by_id                       AS last_edited_by_id,\n    all_merge_requests.milestone_id                            AS milestone_id,\n    all_merge_requests.head_pipeline_id                        AS head_pipeline_id,\n    all_merge_requests.latest_merge_request_diff_id            AS latest_merge_request_diff_id,\n    all_merge_requests.approvals_before_merge                  AS approvals_before_merge,\n    all_merge_requests.lock_version                            AS lock_version,\n    all_merge_requests.time_estimate                           AS time_estimate,\n    all_merge_requests.project_id                              AS project_id,\n    all_merge_requests.target_project_id                       AS target_project_id,\n    all_merge_requests.author_id                               AS author_id,\n    all_merge_requests.merge_request_state_id                  AS merge_request_state_id,\n    all_merge_requests.merge_request_state                     AS merge_request_state,\n    all_merge_requests.merge_request_status                    AS merge_request_status,\n    all_merge_requests.does_merge_when_pipeline_succeeds       AS does_merge_when_pipeline_succeeds,\n    all_merge_requests.does_squash                             AS does_squash,\n    all_merge_requests.is_discussion_locked                    AS is_discussion_locked,\n    all_merge_requests.does_allow_maintainer_to_push           AS does_allow_maintainer_to_push,\n    all_merge_requests.created_at                              AS created_at,\n    all_merge_requests.updated_at                              AS updated_at,\n    all_merge_requests.merge_request_last_edited_at            AS merge_request_last_edited_at,\n    all_merge_requests.is_deleted                              AS is_deleted,\n    all_merge_requests.is_deleted_updated_at                   AS is_deleted_updated_at\n\n  FROM all_merge_requests\n  LEFT JOIN internal_merge_requests\n    ON all_merge_requests.merge_request_id = internal_merge_requests.internal_merge_request_id\n\n)\n\nSELECT *\nFROM joined", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_requests_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.583772Z", "completed_at": "2025-06-09T18:52:11.595146Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.595514Z", "completed_at": "2025-06-09T18:52:15.227076Z"}], "thread_id": "Thread-1", "execution_time": 3.656899929046631, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_namespaces_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_namespaces_source.sql)\n  000200: DataFusion error: Schema error: No field named lineage. Valid fields are embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.id, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.name, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.path, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.owner_id, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.created_at, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.updated_at, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.type, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.avatar, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.membership_lock, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.share_with_group_lock, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.visibility_level, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.request_access_enabled, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.ldap_sync_status, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.ldap_sync_error, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.ldap_sync_last_update_at, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.ldap_sync_last_successful_update_at, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.ldap_sync_last_sync_at, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.lfs_enabled, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.parent_id, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.shared_runners_minutes_limit, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.extra_shared_runners_minutes_limit, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.repository_size_limit, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.require_two_factor_authentication, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.two_factor_grace_period, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.project_creation_level, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.auto_devops_enabled, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.push_rule_id, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.shared_runners_enabled, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.custom_project_templates_group_id, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.traversal_ids, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source._uploaded_at, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.pgp_is_deleted, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.pgp_is_deleted_updated_at, embucket.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source.qualify_alias.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_namespaces_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespaces_source", "compiled": true, "compiled_code": "WITH all_namespaces AS (\n\n  SELECT\n    id::NUMBER                                         AS namespace_id,\n    name::VARCHAR                                      AS namespace_name,\n    path::VARCHAR                                      AS namespace_path,\n    owner_id::NUMBER                                   AS owner_id,\n    type                                               AS namespace_type,\n    IFF(avatar IS NULL, FALSE, TRUE)                   AS has_avatar,\n    created_at::TIMESTAMP                              AS created_at,\n    updated_at::TIMESTAMP                              AS updated_at,\n    true::BOOLEAN                           AS is_membership_locked,\n    true::BOOLEAN                    AS has_request_access_enabled,\n    true::BOOLEAN                     AS has_share_with_group_locked,\n    CASE\n      WHEN visibility_level = '20' THEN 'public'\n      WHEN visibility_level = '10' THEN 'internal'\n      ELSE 'private'\n    END::VARCHAR                                       AS visibility_level,\n    ldap_sync_status                                   AS ldap_sync_status,\n    ldap_sync_error                                    AS ldap_sync_error,\n    null::TIMESTAMP                AS ldap_sync_last_update_at,\n    null::TIMESTAMP     AS ldap_sync_last_successful_update_at,\n    null::TIMESTAMP                  AS ldap_sync_last_sync_at,\n    true::BOOLEAN                               AS lfs_enabled,\n    parent_id::NUMBER                                  AS parent_id,\n    shared_runners_minutes_limit::NUMBER               AS shared_runners_minutes_limit,\n    extra_shared_runners_minutes_limit::NUMBER         AS extra_shared_runners_minutes_limit,\n    repository_size_limit::NUMBER                      AS repository_size_limit,\n    true::BOOLEAN         AS does_require_two_factor_authentication,\n    two_factor_grace_period::NUMBER                    AS two_factor_grace_period,\n    project_creation_level::NUMBER                     AS project_creation_level,\n    push_rule_id::INTEGER                              AS push_rule_id,\n    true:BOOLEAN                     AS shared_runners_enabled,\n    PARSE_JSON('[' || TRIM(null,'{}') || ']') AS lineage,\n    lineage[0]::NUMBER                                 AS ultimate_parent_id,\n    true::BOOLEAN                            AS is_deleted,\n    pgp_is_deleted_updated_at::TIMESTAMP               AS is_deleted_updated_at\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespaces_dedupe_source\n\n),\n\ninternal_namespaces AS (\n\n  SELECT\n    id         AS internal_namespace_id,\n    name       AS internal_namespace_name,\n    path       AS internal_namespace_path,\n    updated_at AS internal_namespace_updated_at,\n    TRUE       AS namespace_is_internal\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespaces_internal_only_dedupe_source\n),\n\ncombined AS (\n\n  SELECT\n    all_namespaces.namespace_id                                                         AS namespace_id,\n    COALESCE(all_namespaces.namespace_name,internal_namespaces.internal_namespace_name) AS namespace_name,\n    internal_namespaces.internal_namespace_path                                         AS namespace_path,\n    COALESCE(internal_namespaces.namespace_is_internal, FALSE)                          AS namespace_is_internal,\n    all_namespaces.owner_id                                                             AS owner_id,\n    all_namespaces.namespace_type                                                       AS namespace_type,\n    all_namespaces.has_avatar                                                           AS has_avatar,\n    all_namespaces.created_at                                                           AS created_at,\n    all_namespaces.updated_at                                                           AS updated_at,\n    all_namespaces.is_membership_locked                                                 AS is_membership_locked,\n    all_namespaces.has_request_access_enabled                                           AS has_request_access_enabled,\n    all_namespaces.has_share_with_group_locked                                          AS has_share_with_group_locked,\n    all_namespaces.visibility_level                                                     AS visibility_level,\n    all_namespaces.ldap_sync_status                                                     AS ldap_sync_status,\n    all_namespaces.ldap_sync_error                                                      AS ldap_sync_error,\n    all_namespaces.ldap_sync_last_update_at                                             AS ldap_sync_last_update_at,\n    all_namespaces.ldap_sync_last_successful_update_at                                  AS ldap_sync_last_successful_update_at,\n    all_namespaces.ldap_sync_last_sync_at                                               AS ldap_sync_last_sync_at,\n    all_namespaces.lfs_enabled                                                          AS lfs_enabled,\n    all_namespaces.parent_id                                                            AS parent_id,\n    all_namespaces.shared_runners_minutes_limit                                         AS shared_runners_minutes_limit,\n    all_namespaces.extra_shared_runners_minutes_limit                                   AS extra_shared_runners_minutes_limit,\n    all_namespaces.repository_size_limit                                                AS repository_size_limit,\n    all_namespaces.does_require_two_factor_authentication                               AS does_require_two_factor_authentication,\n    all_namespaces.two_factor_grace_period                                              AS two_factor_grace_period,\n    all_namespaces.project_creation_level                                               AS project_creation_level,\n    all_namespaces.push_rule_id                                                         AS push_rule_id,\n    all_namespaces.shared_runners_enabled                                               AS shared_runners_enabled,\n    all_namespaces.lineage                                                              AS lineage,\n    all_namespaces.ultimate_parent_id                                                   AS ultimate_parent_id,\n    all_namespaces.is_deleted                                                           AS is_deleted,\n    all_namespaces.is_deleted_updated_at                                                AS is_deleted_updated_at\n  FROM all_namespaces\n  LEFT JOIN internal_namespaces\n    ON all_namespaces.namespace_id = internal_namespaces.internal_namespace_id\n\n)\n\nSELECT *\nFROM combined", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespaces_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.279236Z", "completed_at": "2025-06-09T18:52:11.334597Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.398750Z", "completed_at": "2025-06-09T18:52:15.442100Z"}], "thread_id": "Thread-21", "execution_time": 4.264616966247559, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_lists_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_lists_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_lists_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_lists_source", "compiled": true, "compiled_code": "WITH source AS (\n\n      SELECT *\n      FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_lists_dedupe_source\n      \n), renamed AS (\n\n      SELECT\n        id::NUMBER               AS list_id,\n        board_id::NUMBER         AS board_id,\n        label_id::NUMBER         AS label_id,\n        list_type::NUMBER        AS list_type,\n        created_at::TIMESTAMP     AS created_at,\n        updated_at::TIMESTAMP     AS updated_at,\n        user_id::NUMBER          AS user_id,\n        milestone_id::NUMBER     AS milestone_id,\n        max_issue_count::NUMBER  AS max_issue_count,\n        max_issue_weight::NUMBER AS max_issue_weight,\n        limit_metric::VARCHAR     AS limit_metric\n      FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_lists_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:12.024737Z", "completed_at": "2025-06-09T18:52:12.030471Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:12.030811Z", "completed_at": "2025-06-09T18:52:15.454609Z"}], "thread_id": "Thread-9", "execution_time": 3.436387062072754, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_pages_domains_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_pages_domains_source.sql)\n  000200: DataFusion error: Error during planning: Unexpected argument type to 'json_get' at position 1, expected a string, got Boolean.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_pages_domains_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_pages_domains_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_pages_domains_dedupe_source\n    \n), renamed AS (\n  \n    SELECT\n    \n      id::NUMBER                              AS pages_domain_id,\n      project_id::NUMBER                      AS project_id,\n      verified_at::TIMESTAMP                  AS verified_at,\n      enabled_until::TIMESTAMP                AS enabled_until,\n      remove_at::TIMESTAMP                    AS remove_at,\n      auto_ssl_enabled::BOOLEAN               AS is_auto_ssl_enabled,\n      wildcard::BOOLEAN                       AS wildcard,\n      usage::NUMBER                           AS usage,\n      scope::NUMBER                           AS scope,\n      auto_ssl_failed:BOOLEAN                 AS is_auto_ssl_failed\n    \n    FROM source\n      \n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_pages_domains_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.091803Z", "completed_at": "2025-06-09T18:52:11.110371Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.128249Z", "completed_at": "2025-06-09T18:52:15.974300Z"}], "thread_id": "Thread-14", "execution_time": 4.920269012451172, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_gpg_signatures_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_gpg_signatures_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_gpg_signatures_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_gpg_signatures_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_gpg_signatures_dedupe_source\n\n), parsed_columns AS (\n\n    SELECT\n      id::NUMBER                  AS gpg_signatures_id,\n      created_at::TIMESTAMP       AS created_at,\n      updated_at::TIMESTAMP       AS updated_at,\n      project_id::NUMBER          AS project_id,\n      gpg_key_id::NUMBER          AS gpg_key_id,\n      verification_status::NUMBER AS verification_status\n    FROM source\n\n)\n\nSELECT *\nFROM parsed_columns", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_gpg_signatures_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-21", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_group_links", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_project_group_links", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:04.998989Z", "completed_at": "2025-06-09T18:52:05.003707Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:05.003986Z", "completed_at": "2025-06-09T18:52:16.224321Z"}], "thread_id": "Thread-28", "execution_time": 11.227007865905762, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_fork_network_members_source", "compiled": true, "compiled_code": "WITH source AS (\n\n   SELECT *\n   FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_fork_network_members_dedupe_source\n\n), renamed AS (\n\n   SELECT\n     id::NUMBER                                AS id,\n     fork_network_id::NUMBER                   AS fork_network_id,\n     project_id::NUMBER                        AS project_id,\n     forked_from_project_id::NUMBER            AS forked_from_project_id\n   FROM source\n  \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_fork_network_members_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.265201Z", "completed_at": "2025-06-09T18:52:11.328930Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.374651Z", "completed_at": "2025-06-09T18:52:16.230475Z"}], "thread_id": "Thread-12", "execution_time": 5.075249910354614, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_label_priorities_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_label_priorities_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_label_priorities_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_label_priorities_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_label_priorities_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                            AS label_priority_id,\n      project_id::NUMBER                    AS project_id,\n      label_id::NUMBER                      AS label_id,\n      created_at::TIMESTAMP                 AS created_at,\n      updated_at::TIMESTAMP                 AS updated_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_label_priorities_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.273133Z", "completed_at": "2025-06-09T18:52:11.334280Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.387427Z", "completed_at": "2025-06-09T18:52:16.314841Z"}], "thread_id": "Thread-31", "execution_time": 5.181516885757446, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_labels_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_labels_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_labels_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_labels_source", "compiled": true, "compiled_code": "WITH all_labels AS (\n\n  SELECT\n\n    id::NUMBER                                AS label_id,\n    color::VARCHAR                            AS color,\n    project_id::NUMBER                        AS project_id,\n    group_id::NUMBER                          AS group_id,\n    template::VARCHAR                         AS template,\n    type::VARCHAR                             AS label_type,\n    created_at::TIMESTAMP                     AS created_at,\n    updated_at::TIMESTAMP                     AS updated_at\n\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_labels_dedupe_source\n  \n),\n\ninternal_labels AS (\n\n  SELECT\n    \n    id::NUMBER                                AS internal_label_id,\n    title::VARCHAR                            AS internal_label_title\n  \n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_labels_internal_only_dedupe_source\n\n),\n\njoined AS (\n\n  SELECT\n\n    all_labels.label_id                       AS label_id,\n    internal_labels.internal_label_title      AS label_title,\n    all_labels.color                          AS color,\n    all_labels.project_id                     AS project_id,\n    all_labels.group_id                       AS group_id,\n    all_labels.template                       AS template,\n    all_labels.label_type                     AS label_type,\n    all_labels.created_at                     AS created_at,\n    all_labels.updated_at                     AS updated_at\n\n  FROM all_labels\n    LEFT JOIN internal_labels\n      ON all_labels.label_id = internal_labels.internal_label_id \n)\n\nSELECT *\nFROM joined", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_labels_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.238435Z", "completed_at": "2025-06-09T18:52:11.309259Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.352246Z", "completed_at": "2025-06-09T18:52:16.239239Z"}], "thread_id": "Thread-18", "execution_time": 5.151576042175293, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_issue_metrics_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_issue_metrics_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_issue_metrics_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_issue_metrics_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_issue_metrics_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                               AS issue_metric_id,\n      issue_id::NUMBER                                         AS issue_id,\n      first_mentioned_in_commit_at::DATE                        AS first_mentioned_in_commit_at,\n      first_associated_with_milestone_at::DATE                  AS first_associated_with_milestone_at,\n      first_added_to_board_at::DATE                             AS first_added_to_board_at,\n      created_at::TIMESTAMP                                     AS created_at,\n      updated_at::TIMESTAMP                                     AS updated_at\n\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_issue_metrics_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.449506Z", "completed_at": "2025-06-09T18:52:11.502334Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.525544Z", "completed_at": "2025-06-09T18:52:16.251999Z"}], "thread_id": "Thread-17", "execution_time": 5.017168045043945, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_namespace_statistics_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_namespace_statistics_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_namespace_statistics_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_statistics_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespace_statistics_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                      AS namespace_statistics_id,\n      namespace_id::NUMBER                            AS namespace_id,\n      shared_runners_seconds::NUMBER                  AS shared_runners_seconds,\n      shared_runners_seconds_last_reset::TIMESTAMP     AS shared_runners_seconds_last_reset\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespace_statistics_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.422705Z", "completed_at": "2025-06-09T18:52:11.470670Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.511121Z", "completed_at": "2025-06-09T18:52:16.294376Z"}], "thread_id": "Thread-7", "execution_time": 5.027241945266724, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_namespace_settings_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_namespace_settings_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_namespace_settings_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_settings_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespace_settings_dedupe_source\n\n), renamed AS (\n\n    SELECT\n      created_at::TIMESTAMP                               AS created_at,\n      updated_at::TIMESTAMP                               AS updated_at,\n      namespace_id::NUMBER                                AS namespace_id,\n      prevent_forking_outside_group::BOOLEAN              AS prevent_forking_outside_group,\n      allow_mfa_for_subgroups::BOOLEAN                    AS allow_mfa_for_subgroups,\n      default_branch_name::VARCHAR                        AS default_branch_name,\n      repository_read_only::BOOLEAN                       AS repository_read_only,\n      resource_access_token_creation_allowed::BOOLEAN     AS resource_access_token_creation_allowed,\n      prevent_sharing_groups_outside_hierarchy::BOOLEAN   AS prevent_sharing_groups_outside_hierarchy,\n      new_user_signups_cap::NUMBER                        AS new_signups_cap,\n      setup_for_company::BOOLEAN                          AS is_setup_for_company,\n      jobs_to_be_done::NUMBER                             AS jobs_to_be_done,\n      early_access_program_participant::BOOLEAN           AS early_access_program_participant,\n      early_access_program_joined_by_id::NUMBER           AS early_access_program_joined_by_id,\n      experiment_features_enabled::BOOLEAN                AS experiment_features_enabled,\n      code_suggestions::BOOLEAN                           AS code_suggestions,\n      seat_control::NUMBER                                AS seat_control\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespace_settings_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.195049Z", "completed_at": "2025-06-09T18:52:11.244737Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.297639Z", "completed_at": "2025-06-09T18:52:16.279599Z"}], "thread_id": "Thread-20", "execution_time": 5.213805198669434, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_incident_management_timeline_events_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_incident_management_timeline_events_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_incident_management_timeline_events_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_incident_management_timeline_events_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_incident_management_timeline_events_dedupe_source\n  \n),\nrenamed AS (\n\n    SELECT\n      id::NUMBER                        AS id,\n      created_at::TIMESTAMP             AS created_at,\n      updated_at::TIMESTAMP             AS updated_at,\n      occurred_at::TIMESTAMP            AS occurred_at,\n      project_id::NUMBER                AS project_id,\n      author_id::NUMBER                 AS author_id,\n      issue_id::NUMBER                  AS issue_id,\n      updated_by_user_id::NUMBER        AS updated_by_user_id,\n      promoted_from_note_id::NUMBER     AS promoted_from_note_id,\n      cached_markdown_version::NUMBER   AS cached_markdown_version,\n      editable::BOOLEAN                 AS editable\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_incident_management_timeline_events_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.269299Z", "completed_at": "2025-06-09T18:52:11.329905Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.381101Z", "completed_at": "2025-06-09T18:52:16.293973Z"}], "thread_id": "Thread-27", "execution_time": 5.176330089569092, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_member_roles_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_member_roles_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_member_roles_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_member_roles_source", "compiled": true, "compiled_code": "WITH final AS (\n\n    SELECT \n      id::INT AS id,\n      namespace_id::INT AS namespace_id,\n      created_at::TIMESTAMP AS created_at,\n      updated_at::TIMESTAMP AS updated_at,\n      base_access_level::INT,\n      _uploaded_at::FLOAT\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_member_roles_dedupe_source \n\n)\n\n\n\nSELECT\n      *,\n      '@mpetersen'::VARCHAR       AS created_by,\n      '@mpetersen'::VARCHAR       AS updated_by,\n      '2023-03-20'::DATE        AS model_created_date,\n      '2023-03-20'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM final", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_member_roles_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:09.626492Z", "completed_at": "2025-06-09T18:52:09.638952Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:09.640731Z", "completed_at": "2025-06-09T18:52:16.323718Z"}], "thread_id": "Thread-6", "execution_time": 6.703997850418091, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_epic_issues_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_epic_issues_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n      id::NUMBER                       AS epic_issues_relation_id,\n      epic_id::NUMBER                  AS epic_id,\n      issue_id::NUMBER                 AS issue_id,\n      relative_position::NUMBER        AS epic_issue_relative_position\n\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_epic_issues_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:09.621301Z", "completed_at": "2025-06-09T18:52:09.640347Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:09.653208Z", "completed_at": "2025-06-09T18:52:16.315658Z"}], "thread_id": "Thread-3", "execution_time": 6.755230903625488, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_epics_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_epics_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_epics_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_epics_source", "compiled": true, "compiled_code": "WITH all_epics AS (\n\n  SELECT\n    id::NUMBER                          AS epic_id,\n    group_id::NUMBER                    AS group_id,\n    author_id::NUMBER                   AS author_id,\n    assignee_id::NUMBER                 AS assignee_id,\n    iid::NUMBER                         AS epic_internal_id,\n    updated_by_id::NUMBER               AS updated_by_id,\n    last_edited_by_id::NUMBER           AS last_edited_by_id,\n    lock_version::NUMBER                AS lock_version,\n    start_date::DATE                    AS epic_start_date,\n    end_date::DATE                      AS epic_end_date,\n    last_edited_at::TIMESTAMP           AS epic_last_edited_at,\n    created_at::TIMESTAMP               AS created_at,\n    updated_at::TIMESTAMP               AS updated_at,\n    closed_at::TIMESTAMP                AS closed_at,\n    state_id::NUMBER                    AS state_id,\n    parent_id::NUMBER                   AS parent_id,\n    relative_position::NUMBER           AS relative_position,\n    start_date_sourcing_epic_id::NUMBER AS start_date_sourcing_epic_id,\n    confidential::BOOLEAN               AS is_confidential,\n    CASE\n      WHEN state_id::NUMBER = 1 THEN 'opened'\n      WHEN state_id::NUMBER = 2 THEN 'closed'\n      WHEN state_id::NUMBER = 3 THEN 'merged'\n      WHEN state_id::NUMBER = 4 THEN 'locked'\n      ELSE NULL\n    END                                 AS state,\n    LENGTH(title)::NUMBER               AS epic_title_length,\n    LENGTH(description)::NUMBER         AS epic_description_length\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_epics_dedupe_source\n\n),\n\ninteral_epics AS (\n\n  SELECT\n    id::NUMBER           AS internal_epic_id,\n    iid::NUMBER          AS internal_epic_iid,\n    title::VARCHAR       AS internal_epic_title,\n    description::VARCHAR AS internal_epic_description -- has this bneen nullifed?\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_epics_internal_only_dedupe_source\n\n),\n\njoined AS (\n\n  SELECT\n    all_epics.epic_id                       AS epic_id,\n    all_epics.group_id                      AS group_id,\n    all_epics.author_id                     AS author_id,\n    all_epics.assignee_id                   AS assignee_id,\n    all_epics.updated_by_id                 AS updated_by_id,\n    all_epics.last_edited_by_id             AS last_edited_by_id,\n    all_epics.lock_version                  AS lock_version,\n    all_epics.epic_start_date               AS epic_start_date,\n    all_epics.epic_end_date                 AS epic_end_date,\n    all_epics.epic_last_edited_at           AS epic_last_edited_at,\n    all_epics.created_at                    AS created_at,\n    all_epics.updated_at                    AS updated_at,\n    interal_epics.internal_epic_title       AS epic_title,\n    interal_epics.internal_epic_description AS epic_description,\n    all_epics.closed_at                     AS closed_at,\n    all_epics.state_id                      AS state_id,\n    all_epics.parent_id                     AS parent_id,\n    all_epics.relative_position             AS relative_position,\n    all_epics.start_date_sourcing_epic_id   AS start_date_sourcing_epic_id,\n    all_epics.is_confidential               AS is_confidential,\n    all_epics.state                         AS state,\n    all_epics.epic_title_length             AS epic_title_length,\n    all_epics.epic_description_length       AS epic_description_length\n  FROM all_epics\n  LEFT JOIN interal_epics\n    ON all_epics.epic_id = interal_epics.internal_epic_id\n\n)\n\nSELECT *\nFROM joined", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_epics_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.189912Z", "completed_at": "2025-06-09T18:52:11.243413Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.291074Z", "completed_at": "2025-06-09T18:52:16.324454Z"}], "thread_id": "Thread-29", "execution_time": 5.229372978210449, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_integrations_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_integrations_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_integrations_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_integrations_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_integrations_dedupe_source\n    \n), renamed AS (\n\n    SELECT\n      id::NUMBER                             AS integration_id,\n      type_new::VARCHAR                      AS integration_type,\n      project_id::NUMBER                     AS project_id,\n      created_at::TIMESTAMP                  AS created_at,\n      updated_at::TIMESTAMP                  AS updated_at,\n      true::BOOLEAN                        AS is_active,\n      true::BOOLEAN                      AS integration_template,\n      true::BOOLEAN                   AS has_push_events,\n      true::BOOLEAN                 AS has_issues_events,\n      true::BOOLEAN         AS has_merge_requests_events,\n      true::BOOLEAN               AS has_tag_push_events,\n      true::BOOLEAN                   AS has_note_events,\n      category::VARCHAR                      AS integration_category,\n      true::BOOLEAN              AS has_wiki_page_events,\n      true::BOOLEAN               AS has_pipeline_events,\n      true::BOOLEAN    AS has_confidential_issues_events,\n      true::BOOLEAN                 AS has_commit_events,\n      true::BOOLEAN                    AS has_job_events,\n      true::BOOLEAN      AS has_confidential_note_events,\n      true::BOOLEAN             AS has_deployment_events,\n      true::BOOLEAN      AS is_comment_on_event_enabled,\n      group_id::NUMBER                       AS group_id,\n      inherit_from_id::NUMBER                AS inherit_from_id\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_integrations_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.330401Z", "completed_at": "2025-06-09T18:52:11.398349Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.441304Z", "completed_at": "2025-06-09T18:52:16.342482Z"}], "thread_id": "Thread-32", "execution_time": 5.150555849075317, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_milestones_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_milestones_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_milestones_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_milestones_source", "compiled": true, "compiled_code": "WITH all_milestones AS (\n\n  SELECT\n\n    id::NUMBER            AS milestone_id,\n    title::VARCHAR        AS milestone_title,\n    description::VARCHAR  AS milestone_description,\n    project_id::NUMBER    AS project_id,\n    group_id::NUMBER      AS group_id,\n    start_date::DATE      AS start_date,\n    due_date::DATE        AS due_date,\n    state::VARCHAR        AS milestone_status,\n    created_at::TIMESTAMP AS created_at,\n    updated_at::TIMESTAMP AS updated_at\n\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_milestones_dedupe_source\n\n),\n\ninternal_milestones AS (\n  SELECT\n    id::NUMBER            AS internal_milestone_id,\n    iid::NUMBER           AS internal_milestone_iid,\n    title::VARCHAR        AS internal_milestone_title,\n    project_id::NUMBER    AS internal_project_id,\n    updated_at::TIMESTAMP AS internal_updated_id\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_milestones_internal_only_dedupe_source\n),\n\ncombined AS (\n\n  SELECT\n\n    all_milestones.milestone_id                  AS milestone_id,\n    internal_milestones.internal_milestone_title AS milestone_title,\n    all_milestones.milestone_description         AS milestone_description,\n    all_milestones.project_id                    AS project_id,\n    all_milestones.group_id                      AS group_id,\n    all_milestones.start_date                    AS start_date,\n    all_milestones.due_date                      AS due_date,\n    all_milestones.milestone_status              AS milestone_status,\n    all_milestones.created_at                    AS created_at,\n    all_milestones.updated_at                    AS updated_at\n\n  FROM all_milestones\n  LEFT JOIN internal_milestones\n    ON all_milestones.milestone_id = internal_milestones.internal_milestone_id\n\n)\n\nSELECT *\nFROM combined", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_milestones_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:09.614203Z", "completed_at": "2025-06-09T18:52:09.620842Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:09.630983Z", "completed_at": "2025-06-09T18:52:16.353274Z"}], "thread_id": "Thread-24", "execution_time": 6.768289089202881, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_environments_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_environments_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_environments_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_environments_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_environments_dedupe_source\n    \n), renamed AS (\n\n    SELECT\n      id::NUMBER                                       AS environment_id,\n      project_id::NUMBER                               AS project_id,\n      name::VARCHAR                                    AS environment_name,\n      created_at::TIMESTAMP                            AS created_at,\n      updated_at::TIMESTAMP                            AS updated_at,\n      environment_type::VARCHAR                        AS environment_type,\n      state::VARCHAR                                   AS state,\n      tier::NUMBER                                     AS tier\n    FROM source\n\n)\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_environments_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.339663Z", "completed_at": "2025-06-09T18:52:11.414487Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.458817Z", "completed_at": "2025-06-09T18:52:16.351278Z"}], "thread_id": "Thread-8", "execution_time": 5.148755311965942, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_merge_request_metrics_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_merge_request_metrics_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_merge_request_metrics_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_request_metrics_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_metrics_dedupe_source\n  \n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                              AS merge_request_metric_id,\n      merge_request_id::NUMBER                                AS merge_request_id,\n\n      latest_build_started_at::TIMESTAMP                       AS latest_build_started_at,\n      latest_build_finished_at::TIMESTAMP                      AS latest_build_finished_at,\n      first_deployed_to_production_at::TIMESTAMP               AS first_deployed_to_production_at,\n      merged_at::TIMESTAMP                                     AS merged_at,\n      created_at::TIMESTAMP                                    AS created_at,\n      updated_at::TIMESTAMP                                    AS updated_at,\n      latest_closed_at::TIMESTAMP                              AS latest_closed_at,\n      first_comment_at::TIMESTAMP                              AS first_comment_at,\n      first_commit_at::TIMESTAMP                               AS first_commit_at,\n      last_commit_at::TIMESTAMP                                AS last_commit_at,\n      first_approved_at::TIMESTAMP                             AS first_approved_at,\n      first_reassigned_at::TIMESTAMP                           AS first_reassigned_at,\n\n      pipeline_id::NUMBER                                     AS pipeline_id,\n      merged_by_id::NUMBER                                    AS merged_by_id,\n      latest_closed_by_id::NUMBER                             AS latest_closed_by_id,\n      diff_size::NUMBER                                       AS diff_size,\n      modified_paths_size::NUMBER                             AS modified_paths_size,\n      commits_count::NUMBER                                   AS commits_count,\n      added_lines::NUMBER                                     AS added_lines,\n      removed_lines::NUMBER                                   AS removed_lines\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_metrics_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-12", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_releases_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_releases_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.147063Z", "completed_at": "2025-06-09T18:52:11.178424Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.210742Z", "completed_at": "2025-06-09T18:52:16.368739Z"}], "thread_id": "Thread-25", "execution_time": 5.273213863372803, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_incident_management_timeline_event_tag_links_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_incident_management_timeline_event_tag_links_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_incident_management_timeline_event_tag_links_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_incident_management_timeline_event_tag_links_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_incident_management_timeline_event_tag_links_dedupe_source\n  \n),\nrenamed AS (\n\n    SELECT\n      id::NUMBER                     AS event_tag_link_id,\n      timeline_event_id::NUMBER      AS timeline_event_id,\n      timeline_event_tag_id::NUMBER  AS timeline_event_tag_id,\n      created_at::TIMESTAMP          AS created_at,\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_incident_management_timeline_event_tag_links_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.686522Z", "completed_at": "2025-06-09T18:52:11.690150Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.690436Z", "completed_at": "2025-06-09T18:52:16.398673Z"}], "thread_id": "Thread-22", "execution_time": 4.733512878417969, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_notification_settings_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_notification_settings_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_notification_settings_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_notification_settings_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_notification_settings_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                      AS notification_settings_id,\n      user_id::NUMBER                                 AS user_id,\n      source_id::NUMBER                               AS source_id,\n      created_at::TIMESTAMP                           AS created_at,\n      updated_at::TIMESTAMP                           AS updated_at,\n      source_type::VARCHAR                            AS source_type,\n      level::NUMBER                                   AS level,\n      new_note::BOOLEAN                               AS new_note,\n      new_issue::BOOLEAN                              AS new_issue,\n      reopen_issue::BOOLEAN                           AS reopen_issue,\n      close_issue::BOOLEAN                            AS close_issue,\n      reassign_issue::BOOLEAN                         AS reassign_issue,\n      new_merge_request::BOOLEAN                      AS new_merge_request,\n      reopen_merge_request::BOOLEAN                   AS reopen_merge_request,\n      close_merge_request::BOOLEAN                    AS close_merge_request,\n      reassign_merge_request::BOOLEAN                 AS reassign_merge_request,\n      merge_merge_request::BOOLEAN                    AS merge_merge_request,\n      failed_pipeline::BOOLEAN                        AS failed_pipeline,\n      success_pipeline::BOOLEAN                       AS success_pipeline,\n      push_to_merge_request::BOOLEAN                  AS push_to_merge_request,\n      issue_due::BOOLEAN                              AS issue_due,\n      new_epic::BOOLEAN                               AS new_epic,\n      fixed_pipeline::BOOLEAN                         AS fixed_pipeline,\n      new_release::BOOLEAN                            AS new_release,\n      moved_project::BOOLEAN                          AS moved_project,\n      change_reviewer_merge_request::BOOLEAN          AS change_reviewer_merge_request,\n      merge_when_pipeline_succeeds::BOOLEAN           AS merge_when_pipeline_succeeds\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_notification_settings_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.404285Z", "completed_at": "2025-06-09T18:52:11.452409Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.494953Z", "completed_at": "2025-06-09T18:52:16.388421Z"}], "thread_id": "Thread-30", "execution_time": 5.133249998092651, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ml_experiments_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ml_experiments_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ml_experiments_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ml_experiments_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ml_experiments_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER            AS ml_experiment_id,\n    created_at::TIMESTAMP AS created_at,\n    updated_at::TIMESTAMP AS updated_at,\n    iid::NUMBER           AS ml_experiment_iid,\n    project_id::NUMBER    AS project_id,\n    user_id::NUMBER       AS user_id,\n    deleted_on::TIMESTAMP AS deleted_on\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ml_experiments_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.258547Z", "completed_at": "2025-06-09T18:52:11.328342Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.367737Z", "completed_at": "2025-06-09T18:52:17.179431Z"}], "thread_id": "Thread-11", "execution_time": 6.004678726196289, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_issuable_severities_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_issuable_severities_dedupe_source\n\n), renamed AS (\n\n    SELECT\n      id::NUMBER            AS issue_severity_id,\n      issue_id::NUMBER      AS issue_id,\n      severity::NUMBER      AS severity\n\n    FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_issuable_severities_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.205791Z", "completed_at": "2025-06-09T18:52:11.257679Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.318982Z", "completed_at": "2025-06-09T18:52:17.227139Z"}], "thread_id": "Thread-19", "execution_time": 6.089029788970947, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_incident_management_issuable_escalation_statuses_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_incident_management_issuable_escalation_statuses_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_incident_management_issuable_escalation_statuses_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_incident_management_issuable_escalation_statuses_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_incident_management_issuable_escalation_statuses_dedupe_source\n  \n),\nrenamed AS (\n\n    SELECT\n      id::NUMBER                        AS status_id,\n      created_at::TIMESTAMP             AS created_at,\n      updated_at::TIMESTAMP             AS updated_at,\n      issue_id::NUMBER                  AS issue_id,\n      policy_id::NUMBER                 AS policy_id,\n      escalations_started_at::TIMESTAMP AS escalations_started_at,\n      resolved_at::TIMESTAMP            AS resolved_at,\n      status::NUMBER                    AS status\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_incident_management_issuable_escalation_statuses_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.342839Z", "completed_at": "2025-06-09T18:52:11.418376Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.463538Z", "completed_at": "2025-06-09T18:52:17.238237Z"}], "thread_id": "Thread-26", "execution_time": 6.04868483543396, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_request_diffs_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_diffs_dedupe_source\n  WHERE created_at IS NOT NULL\n    AND updated_at IS NOT NULL\n\n),\n\nrenamed AS (\n\n  SELECT\n    id        AS merge_request_diff_id,\n    base_commit_sha,\n    head_commit_sha,\n    start_commit_sha,\n    state     AS merge_request_diff_status,\n    merge_request_id,\n    real_size AS merge_request_real_size,\n    commits_count,\n    created_at,\n    updated_at,\n    external_diff,\n    external_diff_store,\n    stored_externally,\n    files_count,\n    sorted,\n    diff_type,\n    _uploaded_at\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_diffs_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.432562Z", "completed_at": "2025-06-09T18:52:16.461892Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.495763Z", "completed_at": "2025-06-09T18:52:17.331110Z"}], "thread_id": "Thread-28", "execution_time": 0.9359910488128662, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_project_ci_cd_settings_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_ci_cd_settings_source.sql)\n  000200: DataFusion error: Error during planning: Unexpected argument type to 'json_get' at position 1, expected a string, got Int32.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_ci_cd_settings_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_ci_cd_settings_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_ci_cd_settings_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n\n    id::NUMBER                                             AS project_ci_cd_settings_id,\n    project_id::NUMBER                                     AS project_id,\n    group_runners_enabled::BOOLEAN                         AS group_runners_enabled,\n    merge_pipelines_enabled::BOOLEAN                       AS merge_pipelines_enabled,\n    default_git_depth:NUMBER                               AS default_git_depth,\n    forward_deployment_enabled::BOOLEAN                    AS forward_deployment_enabled,\n    merge_trains_enabled::BOOLEAN                          AS merge_trains_enabled,\n    auto_rollback_enabled::BOOLEAN                         AS auto_rollback_enabled,\n    keep_latest_artifact::BOOLEAN                          AS keep_latest_artifact,\n    restrict_user_defined_variables::BOOLEAN               AS restrict_user_defined_variables,\n    job_token_scope_enabled::BOOLEAN                       AS job_token_scope_enabled,\n    runner_token_expiration_interval::NUMBER               AS runner_token_expiration_interval,\n    separated_caches::BOOLEAN                              AS separated_caches,\n    allow_fork_pipelines_to_run_in_parent_project::BOOLEAN AS allow_fork_pipelines_to_run_in_parent_project,\n    inbound_job_token_scope_enabled::BOOLEAN               AS inbound_job_token_scope_enabled\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_ci_cd_settings_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.199757Z", "completed_at": "2025-06-09T18:52:11.245438Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.303965Z", "completed_at": "2025-06-09T18:52:17.358619Z"}], "thread_id": "Thread-13", "execution_time": 6.223879814147949, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_group_audit_events_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_group_audit_events_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_group_audit_events_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_group_audit_events_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_group_audit_events_dedupe_source\n\n), parsed_columns AS (\n\n    SELECT\n      id::NUMBER                  AS id,\n      created_at::TIMESTAMP       AS created_at,\n      group_id::NUMBER            AS group_id,\n      target_id::NUMBER           AS target_id,\n      author_id::NUMBER           AS author_id,\n      event_name::VARCHAR         AS event_name,\n      details::VARCHAR            AS details\n    FROM source\n\n)\n\nSELECT *\nFROM parsed_columns", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_group_audit_events_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.578632Z", "completed_at": "2025-06-09T18:52:11.587784Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.588398Z", "completed_at": "2025-06-09T18:52:18.230309Z"}], "thread_id": "Thread-10", "execution_time": 6.6646363735198975, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_namespace_root_storage_statistics_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_namespace_root_storage_statistics_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_namespace_root_storage_statistics_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_root_storage_statistics_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespace_root_storage_statistics_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n\n      namespace_id::NUMBER                 AS namespace_id,\n      repository_size::NUMBER              AS repository_size,\n      container_registry_size::NUMBER      AS container_registry_size,\n      lfs_objects_size::NUMBER             AS lfs_objects_size,\n      wiki_size::NUMBER                    AS wiki_size,\n      build_artifacts_size::NUMBER         AS build_artifacts_size,\n      storage_size::NUMBER                 AS storage_size,\n      packages_size::NUMBER                AS packages_size,\n      updated_at::TIMESTAMP                AS namespace_updated_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespace_root_storage_statistics_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.154526Z", "completed_at": "2025-06-09T18:52:11.183873Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.220362Z", "completed_at": "2025-06-09T18:52:19.404313Z"}], "thread_id": "Thread-4", "execution_time": 8.319026947021484, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_incident_management_timeline_event_tags_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_incident_management_timeline_event_tags_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_incident_management_timeline_event_tags_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_incident_management_timeline_event_tags_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_incident_management_timeline_event_tags_dedupe_source\n  \n),\nrenamed AS (\n\n    SELECT\n      id::NUMBER             AS event_tag_id,\n      created_at::TIMESTAMP  AS created_at,\n      updated_at::TIMESTAMP  AS updated_at,\n      project_id::NUMBER     AS project_id\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_incident_management_timeline_event_tags_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.028625Z", "completed_at": "2025-06-09T18:52:16.042401Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.047280Z", "completed_at": "2025-06-09T18:52:19.425743Z"}], "thread_id": "Thread-15", "execution_time": 3.409160852432251, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_onboarding_progresses_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_onboarding_progresses_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_onboarding_progresses_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_onboarding_progresses_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_onboarding_progresses_dedupe_source\n\n), renamed AS (\n\n    SELECT\n      id::NUMBER                                    AS onboarding_progress_id,\n      namespace_id::NUMBER                          AS namespace_id,\n      created_at::TIMESTAMP                         AS created_at,\n      updated_at::TIMESTAMP                         AS updated_at,\n      merge_request_created_at::TIMESTAMP           AS merge_request_created_at,\n      pipeline_created_at::TIMESTAMP                AS pipeline_created_at,\n      user_added_at::TIMESTAMP                      AS user_added_at,\n      trial_started_at::TIMESTAMP                   AS trial_started_at,\n      required_mr_approvals_enabled_at::TIMESTAMP   AS required_mr_approvals_enabled_at,\n      code_owners_enabled_at::TIMESTAMP             AS code_owners_enabled_at,\n      issue_created_at::TIMESTAMP                   AS issue_created_at,\n      secure_dependency_scanning_run_at::TIMESTAMP  AS secure_dependency_scanning_run_at,\n      secure_dast_run_at::TIMESTAMP                 AS secure_dast_run_at,\n      license_scanning_run_at::TIMESTAMP            AS license_scanning_run_at,\n      code_added_at::TIMESTAMP                      AS code_added_at,\n      ended_at::TIMESTAMP                           AS ended_at\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_onboarding_progresses_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.166473Z", "completed_at": "2025-06-09T18:52:11.204562Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.245822Z", "completed_at": "2025-06-09T18:52:19.425302Z"}], "thread_id": "Thread-5", "execution_time": 8.320028305053711, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_identities_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_identities_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_identities_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_identities_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_identities_dedupe_source\n  \n),\nrenamed AS (\n\n    SELECT\n      id::NUMBER                 AS identity_id,\n      provider::VARCHAR           AS identity_provider,\n      user_id::NUMBER            AS user_id,\n      created_at::TIMESTAMP       AS created_at,\n      updated_at::TIMESTAMP       AS updated_at,\n      saml_provider_id::NUMBER   AS saml_provider_id\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_identities_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerability_reads_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerability_reads_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.491503Z", "completed_at": "2025-06-09T18:52:16.551813Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.584041Z", "completed_at": "2025-06-09T18:52:19.504039Z"}], "thread_id": "Thread-24", "execution_time": 3.050713062286377, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_repository_languages_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_repository_languages_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Function 'md5' failed to match any signature, errors: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Binary), Binary)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker,Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(Binary), Binary)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'md5(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tmd5(Coercion(TypeSignatureClass::Native(LogicalType(Native(Binary), Binary)), implicit_coercion=ImplicitCoercion([Native(LogicalType(Native(String), String))], default_type=String))\n  \tmd5(Coercion(TypeSignatureClass::Native(LogicalType(Native(Binary), Binary)), implicit_coercion=ImplicitCoercion([Native(LogicalType(Native(Binary), Binary))], default_type=Binary))\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_repository_languages_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_repository_languages_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_repository_languages_dedupe_source\n    \n), renamed AS (\n  \n    SELECT\n      MD5(project_programming_language_id)::VARCHAR AS repository_language_id,\n      project_id::NUMBER                           AS project_id,\n      programming_language_id::NUMBER              AS programming_language_id,\n      share::FLOAT                                  AS share\n    FROM source\n    \n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_repository_languages_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.252866Z", "completed_at": "2025-06-09T18:52:11.326918Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.362336Z", "completed_at": "2025-06-09T18:52:19.436902Z"}], "thread_id": "Thread-2", "execution_time": 8.272823095321655, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_issues_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_issues_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_issues_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_issues_source", "compiled": true, "compiled_code": "WITH all_issues AS (\n\n  SELECT  \n    id::NUMBER                                               AS issue_id,\n    iid::NUMBER                                              AS issue_iid,\n    author_id::NUMBER                                        AS author_id,\n    project_id::NUMBER                                       AS project_id,\n    milestone_id::NUMBER                                     AS milestone_id,\n    sprint_id::NUMBER                                        AS sprint_id,\n    updated_by_id::NUMBER                                    AS updated_by_id,\n    last_edited_by_id::NUMBER                                AS last_edited_by_id,\n    moved_to_id::NUMBER                                      AS moved_to_id,\n    created_at::TIMESTAMP                                    AS created_at,\n    updated_at::TIMESTAMP                                    AS updated_at,\n    last_edited_at::TIMESTAMP                                AS issue_last_edited_at,\n    closed_at::TIMESTAMP                                     AS issue_closed_at,\n    confidential::BOOLEAN                                    AS is_confidential,\n    pgp_is_deleted::BOOLEAN                                  AS is_deleted,\n    pgp_is_deleted_updated_at::TIMESTAMP                     AS is_deleted_updated_at,\n    title::VARCHAR                                           AS issue_title,\n    description::VARCHAR                                     AS issue_description,\n\n    -- Override state by mapping state_id. See issue #3344.\n    CASE\n      WHEN state_id::NUMBER = 1 THEN 'opened'\n      WHEN state_id::NUMBER = 2 THEN 'closed'\n      WHEN state_id::NUMBER = 3 THEN 'merged'\n      WHEN state_id::NUMBER = 4 THEN 'locked'\n      ELSE NULL\n    END                           AS state,\n\n    weight::NUMBER                                           AS weight,\n    due_date::DATE                                           AS due_date,\n    lock_version::NUMBER                                     AS lock_version,\n    time_estimate::NUMBER                                    AS time_estimate,\n    discussion_locked::BOOLEAN                               AS has_discussion_locked,\n    closed_by_id::NUMBER                                     AS closed_by_id,\n    relative_position::NUMBER                                AS relative_position,\n    service_desk_reply_to::VARCHAR                           AS service_desk_reply_to,\n    state_id::NUMBER                                         AS state_id,\n    duplicated_to_id::NUMBER                                 AS duplicated_to_id,\n    promoted_to_epic_id::NUMBER                              AS promoted_to_epic_id,\n    work_item_type_id                                        AS work_item_type_id\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_issues_dedupe_source\n  WHERE created_at::VARCHAR NOT IN ('0001-01-01 12:00:00','1000-01-01 12:00:00','10000-01-01 12:00:00')\n    AND LEFT(created_at::VARCHAR , 10) != '1970-01-01'\n  \n), \n\ninternal_only AS (\n\n  SELECT\n    id::NUMBER                                               AS internal_issue_id,\n    iid::NUMBER                                              AS internal_issue_iid,\n    title::VARCHAR                                           AS internal_issue_title,\n    description::VARCHAR                                     AS internal_issue_description,\n    project_id::NUMBER                                       AS internal_project_id,\n    service_desk_reply_to::VARCHAR                           AS internal_service_desk_reply_to\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_issues_internal_only_dedupe_source\n  \n),\n\ncombined AS (\n\n  SELECT\n    all_issues.issue_id                                      AS issue_id,\n    all_issues.issue_iid                                     AS issue_iid,\n    all_issues.author_id                                     AS author_id,\n    all_issues.project_id                                    AS project_id,\n    all_issues.milestone_id                                  AS milestone_id,\n    all_issues.sprint_id                                     AS sprint_id,\n    all_issues.updated_by_id                                 AS updated_by_id,\n    all_issues.last_edited_by_id                             AS last_edited_by_id,\n    all_issues.moved_to_id                                   AS moved_to_id,\n    all_issues.created_at                                    AS created_at,\n    all_issues.updated_at                                    AS updated_at,\n    all_issues.issue_last_edited_at                          AS issue_last_edited_at,\n    all_issues.issue_closed_at                               AS issue_closed_at,\n    all_issues.is_confidential                               AS is_confidential,\n    all_issues.is_deleted                                    AS is_deleted,\n    all_issues.is_deleted_updated_at                         AS is_deleted_updated_at,\n    internal_only.internal_issue_title                       AS issue_title,\n    internal_only.internal_issue_description                 AS issue_description,\n    all_issues.state                                         AS state,\n    all_issues.weight                                        AS weight,\n    all_issues.due_date                                      AS due_date,\n    all_issues.lock_version                                  AS lock_version,\n    all_issues.time_estimate                                 AS time_estimate,\n    all_issues.has_discussion_locked                         AS has_discussion_locked,\n    all_issues.closed_by_id                                  AS closed_by_id,\n    all_issues.relative_position                             AS relative_position,\n    internal_only.internal_service_desk_reply_to             AS service_desk_reply_to,\n    all_issues.state_id                                      AS state_id,\n    all_issues.duplicated_to_id                              AS duplicated_to_id,\n    all_issues.promoted_to_epic_id                           AS promoted_to_epic_id,\n    all_issues.work_item_type_id                             AS work_item_type_id\n  FROM all_issues\n  LEFT JOIN internal_only \n    ON internal_only.internal_issue_id = all_issues.issue_id\n  \n)\n\nSELECT *\nFROM combined", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_issues_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.036121Z", "completed_at": "2025-06-09T18:52:16.061733Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.063444Z", "completed_at": "2025-06-09T18:52:19.518485Z"}], "thread_id": "Thread-1", "execution_time": 3.498444080352783, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_oauth_access_tokens_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_oauth_access_tokens_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_oauth_access_tokens_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_oauth_access_tokens_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_oauth_access_tokens_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n      id::NUMBER                 AS oauth_access_token_id,\n      resource_owner_id::NUMBER  AS resource_owner_id,\n      application_id::NUMBER     AS application_id,\n      expires_in::NUMBER         AS expires_in_seconds,\n      revoked_at::TIMESTAMP       AS oauth_access_token_revoked_at,\n      created_at::TIMESTAMP       AS created_at,\n      scopes::VARCHAR             AS scopes\n    FROM source\n\n)\n\nSELECT *\nFROM renamed\nORDER BY created_at", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_oauth_access_tokens_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:14.186764Z", "completed_at": "2025-06-09T18:52:14.190743Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:14.191702Z", "completed_at": "2025-06-09T18:52:19.549584Z"}], "thread_id": "Thread-16", "execution_time": 5.382465124130249, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_packages_packages_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_packages_packages_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_packages_packages_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_packages_packages_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_packages_packages_dedupe_source\n\n), renamed AS (\n\n    SELECT\n      id::NUMBER                 AS packages_package_id,\n      name::VARCHAR              AS package_name,\n      project_id::NUMBER         AS project_id,\n      creator_id::NUMBER         AS creator_id,\n      version::VARCHAR           AS package_version,\n      package_type::VARCHAR      AS package_type,\n      created_at::TIMESTAMP      AS created_at,\n      updated_at::TIMESTAMP      AS updated_at\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_packages_packages_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:11.415286Z", "completed_at": "2025-06-09T18:52:11.469655Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:11.502762Z", "completed_at": "2025-06-09T18:52:19.537407Z"}], "thread_id": "Thread-23", "execution_time": 8.265249967575073, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_namespace_details_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_namespace_details_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_namespace_details_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_details_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespace_details_dedupe_source\n\n), renamed AS (\n\n    SELECT\n\n      namespace_id::NUMBER                                     AS namespace_id,\n      free_user_cap_over_limit_notified_at::TIMESTAMP          AS free_user_cap_over_limit_notified_at,\n      dashboard_notification_at::TIMESTAMP                     AS dashboard_notification_at,\n      dashboard_enforcement_at::TIMESTAMP                      AS dashboard_enforcement_at,\n      created_at::TIMESTAMP                                    AS created_at,\n      updated_at::TIMESTAMP                                    AS updated_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_namespace_details_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.522477Z", "completed_at": "2025-06-09T18:52:16.566129Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.609002Z", "completed_at": "2025-06-09T18:52:19.548319Z"}], "thread_id": "Thread-32", "execution_time": 3.1089110374450684, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_protected_branch_merge_access_levels_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_protected_branch_merge_access_levels_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_protected_branch_merge_access_levels_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_protected_branch_merge_access_levels_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_protected_branch_merge_access_levels_dedupe_source\n\n),\n\nrenamed AS (\n\nSELECT \n    id::NUMBER                        AS protected_branch_merge_access_levels_id,\n    protected_branch_id::NUMBER       AS protected_branch_id,\n    access_level::NUMBER              AS access_level,\n    created_at::TIMESTAMP             AS created_at,\n    updated_at::TIMESTAMP             AS updated_at,\n    user_id::NUMBER                   AS user_id,\n    group_id::NUMBER                  AS group_id\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_protected_branch_merge_access_levels_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.110514Z", "completed_at": "2025-06-09T18:52:16.139484Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.171227Z", "completed_at": "2025-06-09T18:52:20.169136Z"}], "thread_id": "Thread-21", "execution_time": 4.078825950622559, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_project_auto_devops_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_auto_devops_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_auto_devops_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_auto_devops_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_auto_devops_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n      id::NUMBER                      AS project_auto_devops_id,\n      project_id::NUMBER              AS project_id,\n      created_at::TIMESTAMP            AS created_at,\n      updated_at::TIMESTAMP            AS updated_at,\n      enabled::BOOLEAN                 AS has_auto_devops_enabled\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_auto_devops_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.510201Z", "completed_at": "2025-06-09T18:52:16.561994Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.597731Z", "completed_at": "2025-06-09T18:52:20.155510Z"}], "thread_id": "Thread-29", "execution_time": 3.709541082382202, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_projects_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_projects_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Expect TypeSignatureClass::Native(LogicalType(Native(String), String)) but received NativeType::Int32, DataType: Int32.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'lower(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \tlower(Coercion(TypeSignatureClass::Native(LogicalType(Native(String), String))))\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_projects_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_projects_source", "compiled": true, "compiled_code": "WITH all_projects AS (\n\n  SELECT \n    id::NUMBER                                                                  AS project_id,   \n    description::VARCHAR                                                        AS project_description,\n    import_source::VARCHAR                                                      AS project_import_source,\n    issues_template::VARCHAR                                                    AS project_issues_template,\n    name::VARCHAR                                                               AS project_name,\n    path::VARCHAR                                                               AS project_path,\n    import_url::VARCHAR                                                         AS project_import_url,\n    merge_requests_template                                                     AS project_merge_requests_template,\n    created_at::TIMESTAMP                                                       AS created_at,\n    updated_at::TIMESTAMP                                                       AS updated_at,\n    creator_id::NUMBER                                                          AS creator_id,\n    namespace_id::NUMBER                                                        AS namespace_id,\n    last_activity_at::TIMESTAMP                                                 AS last_activity_at,\n    CASE\n      WHEN visibility_level::NUMBER = '20' THEN 'public'\n      WHEN visibility_level::NUMBER = '10' THEN 'internal'\n      ELSE 'private'\n    END::VARCHAR                             AS visibility_level,\n    true::BOOLEAN                                                           AS archived,\n    IFF(avatar IS NULL, FALSE, TRUE)::BOOLEAN                                   AS has_avatar,\n    star_count::NUMBER                                                          AS project_star_count,\n    true::BOOLEAN                                      AS merge_requests_rebase_enabled,\n    IFF(LOWER(import_type) = 'nan', NULL, import_type)                          AS import_type,\n    approvals_before_merge::NUMBER                                              AS approvals_before_merge,\n    true::BOOLEAN                                            AS reset_approvals_on_push,\n    true::BOOLEAN                                     AS merge_requests_ff_only_enabled,\n    true::BOOLEAN                                                             AS mirror,\n    mirror_user_id::NUMBER                                                      AS mirror_user_id,\n    true::BOOLEAN                                             AS shared_runners_enabled,\n    true::BOOLEAN                                              AS build_allow_git_fetch,\n    build_timeout::NUMBER                                                       AS build_timeout,\n    true::BOOLEAN                                              AS mirror_trigger_builds,\n    true::BOOLEAN                                                     AS pending_delete,\n    true::BOOLEAN                                                      AS public_builds,\n    true::BOOLEAN                                       AS last_repository_check_failed,\n    last_repository_check_at::TIMESTAMP                                         AS last_repository_check_at,\n    true::BOOLEAN                                         AS container_registry_enabled,\n    true::BOOLEAN                              AS only_allow_merge_if_pipeline_succeeds,\n    true::BOOLEAN                                         AS has_external_issue_tracker,\n    repository_storage,\n    true::BOOLEAN                                               AS repository_read_only,\n    true::BOOLEAN                                             AS request_access_enabled,\n    true::BOOLEAN                                                  AS has_external_wiki,\n    ci_config_path,\n    true::BOOLEAN                                                        AS lfs_enabled,\n    true::BOOLEAN                   AS only_allow_merge_if_all_discussions_are_resolved,\n    repository_size_limit::NUMBER                                               AS repository_size_limit,\n    true::BOOLEAN                                AS printing_merge_request_link_enabled,\n    IFF(auto_cancel_pending_pipelines :: int = 1, TRUE, FALSE)                  AS has_auto_canceling_pending_pipelines,\n    true::BOOLEAN                                               AS service_desk_enabled,\n    IFF(LOWER(delete_error) = 'nan', NULL, delete_error)                        AS delete_error,\n    last_repository_updated_at::TIMESTAMP                                       AS last_repository_updated_at,\n    storage_version::NUMBER                                                     AS storage_version,\n    true::BOOLEAN                                  AS resolve_outdated_diff_discussions,\n    true::BOOLEAN                     AS disable_overriding_approvers_per_merge_request,\n    true::BOOLEAN                                 AS remote_mirror_available_overridden,\n    true::BOOLEAN                                     AS only_mirror_protected_branches,\n    true::BOOLEAN                                   AS pull_mirror_available_overridden,\n    true::BOOLEAN                                AS mirror_overwrites_diverged_branches,\n    external_authorization_classification_label,\n    project_namespace_id::NUMBER AS project_namespace_id\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_projects_dedupe_source\n  \n), \n\ninternal_projects AS (\n\n  SELECT \n    id::NUMBER                                                                  AS internal_project_id,\n    description::VARCHAR                                                        AS internal_project_description,   \n    name::VARCHAR                                                               AS internal_project_name,\n    path::VARCHAR                                                               AS internal_project_path,\n    import_url::VARCHAR                                                         AS internal_project_import_url,\n    created_at::TIMESTAMP                                                       AS internal_created_at,\n    updated_at::TIMESTAMP                                                       AS internal_updated_at,\n    namespace_id::NUMBER                                                        AS internal_namespace_id\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_projects_internal_only_dedupe_source\n  \n), \n\ncombined AS (\n\n  SELECT \n    all_projects.project_id                                                     AS project_id,\n    internal_projects.internal_project_description                              AS project_description ,\n    all_projects.project_import_source                                          AS project_import_source,\n    all_projects.project_issues_template                                        AS project_issues_template,\n    internal_projects.internal_project_name                                     AS project_name,\n    internal_projects.internal_project_path                                     AS project_path,\n    internal_projects.internal_project_import_url                               AS project_import_url,\n    all_projects.project_merge_requests_template                                AS project_merge_requests_template,\n    all_projects.created_at                                                     AS created_at,\n    all_projects.updated_at                                                     AS updated_at,\n    all_projects.creator_id                                                     AS creator_id,\n    all_projects.namespace_id                                                   AS namespace_id,\n    all_projects.last_activity_at                                               AS last_activity_at,\n    all_projects.visibility_level                                               AS visibility_level,\n    all_projects.archived                                                       AS archived,\n    all_projects.has_avatar                                                     AS has_avatar,\n    all_projects.project_star_count                                             AS project_star_count,\n    all_projects.merge_requests_rebase_enabled                                  AS merge_requests_rebase_enabled,\n    all_projects.import_type                                                    AS import_type,\n    all_projects.approvals_before_merge                                         AS approvals_before_merge,\n    all_projects.reset_approvals_on_push                                        AS reset_approvals_on_push,\n    all_projects.merge_requests_ff_only_enabled                                 AS merge_requests_ff_only_enabled,\n    all_projects.mirror                                                         AS mirror,\n    all_projects.mirror_user_id                                                 AS mirror_user_id,\n    all_projects.shared_runners_enabled                                         AS shared_runners_enabled,\n    all_projects.build_allow_git_fetch                                          AS build_allow_git_fetch,\n    all_projects.build_timeout                                                  AS build_timeout,\n    all_projects.mirror_trigger_builds                                          AS mirror_trigger_builds,\n    all_projects.pending_delete                                                 AS pending_delete,\n    all_projects.public_builds                                                  AS public_builds,\n    all_projects.last_repository_check_failed                                   AS last_repository_check_failed,\n    all_projects.last_repository_check_at                                       AS last_repository_check_at,\n    all_projects.container_registry_enabled                                     AS container_registry_enabled,\n    all_projects.only_allow_merge_if_pipeline_succeeds                          AS only_allow_merge_if_pipeline_succeeds,\n    all_projects.has_external_issue_tracker                                     AS has_external_issue_tracker,\n    all_projects.repository_storage                                             AS repository_storage,\n    all_projects.repository_read_only                                           AS repository_read_only,\n    all_projects.request_access_enabled                                         AS request_access_enabled,\n    all_projects.has_external_wiki                                              AS has_external_wiki,\n    all_projects.ci_config_path                                                 AS ci_config_path,\n    all_projects.lfs_enabled                                                    AS lfs_enabled,\n    all_projects.only_allow_merge_if_all_discussions_are_resolved               AS only_allow_merge_if_all_discussions_are_resolved,\n    all_projects.repository_size_limit                                          AS repository_size_limit,\n    all_projects.printing_merge_request_link_enabled                            AS printing_merge_request_link_enabled,\n    all_projects.has_auto_canceling_pending_pipelines                           AS has_auto_canceling_pending_pipelines,\n    all_projects.service_desk_enabled                                           AS service_desk_enabled,\n    all_projects.delete_error                                                   AS delete_error,\n    all_projects.last_repository_updated_at                                     AS last_repository_updated_at,\n    all_projects.storage_version                                                AS storage_version,\n    all_projects.resolve_outdated_diff_discussions                              AS resolve_outdated_diff_discussions,\n    all_projects.disable_overriding_approvers_per_merge_request                 AS disable_overriding_approvers_per_merge_request,\n    all_projects.remote_mirror_available_overridden                             AS remote_mirror_available_overridden,\n    all_projects.only_mirror_protected_branches                                 AS only_mirror_protected_branches,\n    all_projects.pull_mirror_available_overridden                               AS pull_mirror_available_overridden,\n    all_projects.mirror_overwrites_diverged_branches                            AS mirror_overwrites_diverged_branches,\n    all_projects.external_authorization_classification_label                    AS external_authorization_classification_label,\n    all_projects.project_namespace_id                                           AS project_namespace_id\n  FROM all_projects\n  LEFT JOIN internal_projects\n    ON all_projects.project_id = internal_projects.internal_project_id\n    \n)\n\nSELECT *\nFROM combined", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_projects_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-21", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_label_links", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_ops_label_links", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-29", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_members", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_ops_members", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-29", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_labels", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_ops_labels", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-29", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_ci_pipelines", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_ops_ci_pipelines", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-29", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_ci_stages", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_ops_ci_stages", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.532598Z", "completed_at": "2025-06-09T18:52:16.583455Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.627983Z", "completed_at": "2025-06-09T18:52:21.507992Z"}], "thread_id": "Thread-20", "execution_time": 5.070864915847778, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_project_security_settings_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_security_settings_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_security_settings_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_security_settings_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_security_settings_dedupe_source\n  \n), renamed AS (\n\n  SELECT\n    project_id::NUMBER                                  AS project_id,\n    created_at::TIMESTAMP                               AS created_at,\n    updated_at::TIMESTAMP                               AS updated_at,\n    pre_receive_secret_detection_enabled::BOOLEAN       AS is_pre_receive_secret_detection_enabled,\n    secret_push_protection_enabled::BOOLEAN             AS is_secret_push_protection_enabled\n  FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_security_settings_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.096665Z", "completed_at": "2025-06-09T18:52:16.119834Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.120353Z", "completed_at": "2025-06-09T18:52:21.532015Z"}], "thread_id": "Thread-9", "execution_time": 5.480838060379028, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_plans_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_plans_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_plans_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_plans_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_plans_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                      AS plan_id,\n      created_at::TIMESTAMP           AS created_at,\n      updated_at::TIMESTAMP           AS updated_at,\n      name::VARCHAR                   AS plan_name,\n      title::VARCHAR                  AS plan_title,\n      id IN (2, 3, 4, 100, 101)       AS plan_is_paid\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_plans_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.483595Z", "completed_at": "2025-06-09T18:52:16.538106Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.577092Z", "completed_at": "2025-06-09T18:52:21.509574Z"}], "thread_id": "Thread-27", "execution_time": 5.085714101791382, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_project_settings_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_settings_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_settings_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_settings_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_settings_dedupe_source\n  \n), renamed AS (\n\n  SELECT\n    project_id::NUMBER                                    AS project_id,\n    created_at::TIMESTAMP                                 AS created_at, \n    updated_at::TIMESTAMP                                 AS updated_at,\n    push_rule_id::NUMBER                                  AS push_rule_id,\n    show_default_award_emojis::BOOLEAN                    AS show_default_award_emojis, \n    allow_merge_on_skipped_pipeline::BOOLEAN              AS allow_merge_on_skipped_pipeline,\n    squash_option::NUMBER                                 AS squash_option,\n    has_confluence::BOOLEAN                               AS has_confluence,\n    has_vulnerabilities::BOOLEAN                          AS has_vulnerabilities,\n    prevent_merge_without_jira_issue::BOOLEAN             AS prevent_merge_without_jira_issue,\n    cve_id_request_enabled::BOOLEAN                       AS cve_id_request_enabled,\n    mr_default_target_self::BOOLEAN                       AS mr_default_target_self,\n    previous_default_branch::VARCHAR                      AS previous_default_branch,\n    warn_about_potentially_unwanted_characters::BOOLEAN   AS warn_about_potentially_unwanted_characters,\n    merge_commit_template::VARCHAR                        AS merge_commit_template,\n    has_shimo::BOOLEAN                                    AS has_shimo,\n    squash_commit_template::VARCHAR                       AS squash_commit_template,\n    legacy_open_source_license_available::BOOLEAN         AS legacy_open_source_license_available,\n    target_platforms::VARCHAR                             AS target_platforms,\n    enforce_auth_checks_on_uploads::BOOLEAN               AS enforce_auth_checks_on_uploads\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_settings_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.538450Z", "completed_at": "2025-06-09T18:52:16.591081Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.638585Z", "completed_at": "2025-06-09T18:52:21.508810Z"}], "thread_id": "Thread-8", "execution_time": 5.094929933547974, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_resource_label_events_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_resource_label_events_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_resource_label_events_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_resource_label_events_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_resource_label_events_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n      id                                             AS resource_label_event_id,\n      action::NUMBER                                AS action_type_id,\n      CASE  WHEN action::NUMBER = 1 THEN 'added'\n        WHEN action::NUMBER = 2 THEN 'removed'\n  END     AS action_type,\n      issue_id::NUMBER                              AS issue_id,\n      merge_request_id::NUMBER                      AS merge_request_id,\n      epic_id::NUMBER                               AS epic_id,\n      label_id::NUMBER                              AS label_id,\n      user_id::NUMBER                               AS user_id,\n      created_at::TIMESTAMP                          AS created_at,\n      cached_markdown_version::VARCHAR               AS cached_markdown_version,\n      reference::VARCHAR                             AS referrence,\n      reference_html::VARCHAR                        AS reference_html  \n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_resource_label_events_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_projects", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_ops_projects", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-27", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_merge_requests", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_ops_merge_requests", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-27", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_merge_request_metrics", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_ops_merge_request_metrics", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.455559Z", "completed_at": "2025-06-09T18:52:16.477420Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.477700Z", "completed_at": "2025-06-09T18:52:22.080148Z"}], "thread_id": "Thread-17", "execution_time": 5.636925935745239, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_repositories_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_repositories_dedupe_source\n  \n), renamed AS (\n\n  SELECT\n    id::NUMBER                        AS project_repository_id,\n    shard_id::NUMBER                  AS shard_id,\n    disk_path::VARCHAR                AS disk_path,\n    project_id::NUMBER                AS project_id\n  FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_repositories_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.555474Z", "completed_at": "2025-06-09T18:52:16.608444Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.657173Z", "completed_at": "2025-06-09T18:52:22.080937Z"}], "thread_id": "Thread-12", "execution_time": 5.624117136001587, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_resource_milestone_events_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_resource_milestone_events_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_resource_milestone_events_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_resource_milestone_events_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_resource_milestone_events_dedupe_source\n\n), renamed AS (\n\n    SELECT\n      id                                             AS resource_milestone_event_id,\n      action::NUMBER                                AS action_type_id,\n      CASE  WHEN action::NUMBER = 1 THEN 'added'\n        WHEN action::NUMBER = 2 THEN 'removed'\n  END     AS action_type,\n      user_id::NUMBER                               AS user_id,\n      issue_id::NUMBER                              AS issue_id,\n      merge_request_id::NUMBER                      AS merge_request_id,\n      milestone_id::NUMBER                          AS milestone_id,\n      CASE\n      WHEN state::NUMBER = 1 THEN 'opened'\n      WHEN state::NUMBER = 2 THEN 'closed'\n      WHEN state::NUMBER = 3 THEN 'merged'\n      WHEN state::NUMBER = 4 THEN 'locked'\n      ELSE NULL\n    END                    AS milestone_state,\n      created_at::TIMESTAMP                          AS created_at\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_resource_milestone_events_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-12", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.google_ad_group_hourly_stats", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.google_ad_group_hourly_stats", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.566915Z", "completed_at": "2025-06-09T18:52:16.620203Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.671734Z", "completed_at": "2025-06-09T18:52:22.293250Z"}], "thread_id": "Thread-31", "execution_time": 5.864875078201294, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_project_features_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_features_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_features_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_features_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_features_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                     AS project_feature_id,\n      project_id::NUMBER                             AS project_id,\n      merge_requests_access_level::NUMBER            AS merge_requests_access_level,\n      issues_access_level::NUMBER                    AS issues_access_level,\n      wiki_access_level::NUMBER                      AS wiki_access_level,\n      snippets_access_level::NUMBER                  AS snippets_access_level,\n      builds_access_level::NUMBER                    AS builds_access_level,\n      repository_access_level::NUMBER                AS repository_access_level,\n      pages_access_level::NUMBER                     AS pages_access_level, \n      forking_access_level::NUMBER                   AS forking_access_level,\n      metrics_dashboard_access_level::NUMBER         AS metrics_dashboard_access_level,\n      requirements_access_level::NUMBER              AS requirements_access_level, \n      operations_access_level::NUMBER                AS operations_access_level,\n      analytics_access_level::NUMBER                 AS analytics_access_level,\n      security_and_compliance_access_level::NUMBER   AS security_and_compliance_access_level, \n      container_registry_access_level::NUMBER        AS container_registry_access_level, \n      package_registry_access_level::NUMBER          AS package_registry_access_level, \n      monitor_access_level::NUMBER                   AS monitor_access_level, \n      infrastructure_access_level::NUMBER            AS infrastructure_access_level, \n      feature_flags_access_level::NUMBER             AS feature_flags_access_level, \n      environments_access_level::NUMBER              AS environments_access_level, \n      releases_access_level::NUMBER                  AS releases_access_level,\n      created_at::TIMESTAMP                          AS created_at,\n      updated_at::TIMESTAMP                          AS updated_at\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_features_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.google_search_console_keyword_page_report", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.google_search_console_keyword_page_report", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_talent_acquisition_candidate", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_workspace_people.wk_talent_acquisition_candidate", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.rpt_interviewee_satisfaction_isat", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.rpt_interviewee_satisfaction_isat", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_talent_acquisition_candidate_survey", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_workspace_people.wk_talent_acquisition_candidate_survey", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.incident_history", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.incident_history", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_iterable_campaign_metrics", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_iterable_campaign_metrics", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_survey_builder", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_workspace_people.wk_survey_builder", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_iterable_event", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_iterable_event", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.fct_iterable_event", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.fct_iterable_event", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_add_to_list", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_add_to_list", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_location_factor", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_location_factor", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_talent_acquisition_candidate_tag", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_workspace_people.wk_talent_acquisition_candidate_tag", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.key_assets", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.key_assets", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.main_test_stats_e2e_metrics", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.main_test_stats_e2e_metrics", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_change_score", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_change_score", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.demo_labs", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.demo_labs", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_add_to_sfdc_campaign", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_add_to_sfdc_campaign", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_click_link_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.marketo_activity_click_link_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_click_link", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_click_link", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.handbook_values_page_contributors", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.handbook_values_page_contributors", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_add_to_opportunity", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_add_to_opportunity", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.icp_successful_accounts_scores", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data_science.icp_successful_accounts_scores", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_change_nurture_cadence", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_change_nurture_cadence", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_change_segment", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_change_segment", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_change_data_value", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_change_data_value", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_change_status_in_sfdc_campaign", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_change_status_in_sfdc_campaign", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_add_to_nurture", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_add_to_nurture", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_convert_lead", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_convert_lead", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_call_webhook", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_call_webhook", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_change_nurture_track", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_change_nurture_track", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_change_status_in_progression", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_change_status_in_progression", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_iterable_list", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_iterable_list", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_change_owner", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_change_owner", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_click_email", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_click_email", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_email_bounced_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.marketo_activity_email_bounced_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_email_bounced", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_email_bounced", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_execute_campaign", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_execute_campaign", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_iterable_email_template", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_iterable_email_template", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_email_bounced_soft_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.marketo_activity_email_bounced_soft_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_email_bounced_soft", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_email_bounced_soft", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_delete_lead", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_delete_lead", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_email_delivered", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_email_delivered", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_interesting_moment", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_interesting_moment", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_remove_from_list", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_remove_from_list", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_remove_from_sfdc_campaign", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_remove_from_sfdc_campaign", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_fill_out_linkedin_lead_gen_form", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_fill_out_linkedin_lead_gen_form", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_new_lead_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.marketo_activity_new_lead_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_new_lead", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_new_lead", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_fill_out_form_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.marketo_activity_fill_out_form_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_fill_out_form", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_fill_out_form", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_push_lead_to_marketo_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.marketo_activity_push_lead_to_marketo_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_push_lead_to_marketo", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_push_lead_to_marketo", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_open_email", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_open_email", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_send_alert_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.marketo_activity_send_alert_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_send_alert", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_send_alert", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_merge_leads", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_merge_leads", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_sfdc_activity_updated_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.marketo_activity_sfdc_activity_updated_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_sfdc_activity_updated", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_sfdc_activity_updated", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_send_email", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_send_email", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_visit_webpage_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.marketo_activity_visit_webpage_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_visit_webpage", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_visit_webpage", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_request_campaign", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_request_campaign", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_accounting_books", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.netsuite_accounting_books", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.mart_crm_opportunity_id", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.pumps.mart_crm_opportunity_id", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_sync_lead_to_sfdc_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.marketo_activity_sync_lead_to_sfdc_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_sync_lead_to_sfdc", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_sync_lead_to_sfdc", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_update_opportunity", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_update_opportunity", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.monitor_recom_field_health", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.monitor_recom_field_health", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.monitors", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.monitors", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_unsubscribe_email_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.marketo_activity_unsubscribe_email_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_unsubscribe_email", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_unsubscribe_email", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.marketo_activity_sfdc_activity_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.marketo_activity_sfdc_activity_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.monitor_issues_and_solutions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.monitor_issues_and_solutions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_accounting_periods", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.netsuite_accounting_periods", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_sfdc_activity", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_sfdc_activity", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_omamori_gitlab_deleted_projects", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_omamori_gitlab_deleted_projects", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_omamori_rule_evaluation_matches", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_omamori_rule_evaluation_matches", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_omamori_mitigation_plans", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_omamori_mitigation_plans", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_omamori_entity_data", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_omamori_entity_data", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_omamori_mitigation_plan_entity_data", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_omamori_mitigation_plan_entity_data", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_omamori_mitigation_plan_tags", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_omamori_mitigation_plan_tags", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_omamori_tags", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_omamori_tags", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_transaction_lines", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_legacy.netsuite_transaction_lines", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_transaction_lines_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.netsuite_transaction_lines_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_omamori_rule_evaluations", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_omamori_rule_evaluations", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_transactions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_legacy.netsuite_transactions", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.473993Z", "completed_at": "2025-06-09T18:52:16.569949Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.614683Z", "completed_at": "2025-06-09T18:52:22.493267Z"}], "thread_id": "Thread-7", "execution_time": 6.043890953063965, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_project_statistics_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_statistics_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_statistics_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_statistics_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_statistics_dedupe_source\n  \n), renamed AS (\n\n  SELECT\n    id::NUMBER                                     AS project_statistics_id,\n    project_id::NUMBER                             AS project_id,\n    namespace_id::NUMBER                           AS namespace_id,\n    commit_count::NUMBER                           AS commit_count,\n    storage_size::NUMBER                           AS storage_size,\n    repository_size::NUMBER                        AS repository_size,\n    container_registry_size::NUMBER                AS container_registry_size,\n    lfs_objects_size::NUMBER                       AS lfs_objects_size,\n    build_artifacts_size::NUMBER                   AS build_artifacts_size,\n    packages_size::NUMBER                          AS packages_size,\n    wiki_size::NUMBER                              AS wiki_size,\n    shared_runners_seconds::NUMBER                 AS shared_runners_seconds,\n    shared_runners_seconds_last_reset::TIMESTAMP    AS last_update_started_at\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_statistics_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-7", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_omamori_mitigation_plan_template_tags", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_omamori_mitigation_plan_template_tags", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:21.311546Z", "completed_at": "2025-06-09T18:52:21.329467Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:21.329754Z", "completed_at": "2025-06-09T18:52:22.516602Z"}], "thread_id": "Thread-23", "execution_time": 2.2313520908355713, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_user_details_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_user_details_source.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'try_to_number'.\n  Did you mean 'try_to_time'?\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_user_details_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_user_details_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_user_details_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    user_id::NUMBER                                         AS user_id,\n    job_title::VARCHAR                                      AS job_title,\n    registration_objective::NUMBER                          AS registration_objective,\n    organization::VARCHAR                                   AS user_organization,\n    TRY_TO_NUMBER(discord)                                  AS user_discord,\n    TRY_PARSE_JSON(onboarding_status):email_opt_in::VARCHAR AS initial_email_opt_in_value\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_user_details_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:22.114938Z", "completed_at": "2025-06-09T18:52:22.122077Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:22.122511Z", "completed_at": "2025-06-09T18:52:23.432516Z"}], "thread_id": "Thread-12", "execution_time": 1.3263602256774902, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_work_item_type_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_work_item_type_source.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'to_timestamp_ntz'.\n  Did you mean 'to_timestamp_nanos'?\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_work_item_type_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_work_item_type_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_work_item_types_dedupe_source\n    \n), renamed AS (\n  \n    SELECT\n      id::NUMBER                                AS work_item_type_id,\n      name::VARCHAR                             AS work_item_type_name,\n      created_at::TIMESTAMP                     AS created_at,\n      updated_at::TIMESTAMP                     AS updated_at,\n      TO_TIMESTAMP_NTZ(_uploaded_at::NUMBER)    AS uploaded_at\n      \n    FROM source\n    \n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_work_item_type_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.562782Z", "completed_at": "2025-06-09T18:52:16.614295Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.666192Z", "completed_at": "2025-06-09T18:52:23.786150Z"}], "thread_id": "Thread-25", "execution_time": 7.336966037750244, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_resource_weight_events_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_resource_weight_events_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_resource_weight_events_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_resource_weight_events_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_resource_weight_events_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n      id                                             AS resource_weight_event_id,\n      user_id::NUMBER                               AS user_id,\n      issue_id::NUMBER                              AS issue_id,\n      weight::NUMBER                                AS weight,\n      created_at::TIMESTAMP                          AS created_at\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_resource_weight_events_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.102078Z", "completed_at": "2025-06-09T18:52:16.131272Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.150557Z", "completed_at": "2025-06-09T18:52:23.838353Z"}], "thread_id": "Thread-14", "execution_time": 7.7458579540252686, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_programming_languages_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_programming_languages_dedupe_source\n    \n), renamed AS (\n\n    SELECT\n      id::NUMBER                       AS programming_language_id,\n      name::VARCHAR                     AS programming_language_name\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_programming_languages_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:18.245739Z", "completed_at": "2025-06-09T18:52:18.249853Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:18.250135Z", "completed_at": "2025-06-09T18:52:23.838968Z"}], "thread_id": "Thread-10", "execution_time": 5.633564233779907, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_subscriptions_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_subscriptions_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_subscriptions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscriptions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscriptions_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n\n      id::NUMBER               AS subscription_id,\n      user_id::NUMBER          AS user_id,\n      subscribable_id::NUMBER  AS subscribable_id,\n      project_id::NUMBER       AS project_id,\n      subscribable_type,\n      subscribed::BOOLEAN       AS is_subscribed,\n      created_at::TIMESTAMP     AS created_at,\n      updated_at::TIMESTAMP     AS updated_at\n\n    FROM source\n\n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscriptions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:17.247778Z", "completed_at": "2025-06-09T18:52:17.260465Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:17.260808Z", "completed_at": "2025-06-09T18:52:23.878534Z"}], "thread_id": "Thread-19", "execution_time": 6.6448729038238525, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_snippets_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_snippets_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_snippets_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_snippets_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_snippets_dedupe_source\n    \n), renamed AS (\n  \n    SELECT\n      id::NUMBER                                     AS snippet_id,\n      author_id::NUMBER                              AS author_id,\n      project_id::NUMBER                             AS project_id,\n      created_at::TIMESTAMP                          AS created_at,\n      updated_at::TIMESTAMP                          AS updated_at,\n      type::VARCHAR                                  AS snippet_type,\n      CASE\n      WHEN visibility_level::NUMBER = '20' THEN 'public'\n      WHEN visibility_level::NUMBER = '10' THEN 'internal'\n      ELSE 'private'\n    END::VARCHAR   AS visibility_level\n      \n    FROM source\n    \n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_snippets_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.525730Z", "completed_at": "2025-06-09T18:52:16.570840Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.620643Z", "completed_at": "2025-06-09T18:52:23.850825Z"}], "thread_id": "Thread-22", "execution_time": 7.427967071533203, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_reviews_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_reviews_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_reviews_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_reviews_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_reviews_dedupe_source\n\n), parsed_columns AS (\n\n    SELECT\n      id::NUMBER                  AS reviews_id,\n      created_at::TIMESTAMP       AS created_at,\n      author_id::NUMBER           AS author_id,\n      merge_request_id::NUMBER    AS merge_request_id,\n      project_id::NUMBER          AS project_id\n    FROM source\n\n)\n\nSELECT *\nFROM parsed_columns", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_reviews_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_vendors", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.netsuite_vendors", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:17.380736Z", "completed_at": "2025-06-09T18:52:17.384924Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:17.385219Z", "completed_at": "2025-06-09T18:52:23.864874Z"}], "thread_id": "Thread-13", "execution_time": 6.511286973953247, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_subscription_add_on_purchases_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_subscription_add_on_purchases_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_subscription_add_on_purchases_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscription_add_on_purchases_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscription_add_on_purchases_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                        AS id,\n      subscription_add_on_id::NUMBER    AS subscription_add_on_id,\n      namespace_id::NUMBER              AS namespace_id,\n      quantity::NUMBER                  AS quantity,\n      expires_on::TIMESTAMP             AS expires_on,\n      purchase_xid::VARCHAR             AS purchase_xid,\n      created_at::TIMESTAMP             AS created_at,\n      updated_at::TIMESTAMP             AS updated_at\n\n    FROM source\n\n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscription_add_on_purchases_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-14", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_omamori_users", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_omamori_users", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.462663Z", "completed_at": "2025-06-09T18:52:16.501944Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.545852Z", "completed_at": "2025-06-09T18:52:23.890131Z"}], "thread_id": "Thread-18", "execution_time": 7.465212106704712, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_project_mirror_data_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_mirror_data_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_project_mirror_data_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_mirror_data_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_mirror_data_dedupe_source\n  \n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                     AS project_mirror_data_id,\n      project_id::NUMBER                             AS project_id,\n      retry_count::NUMBER                            AS retry_count,\n      last_update_started_at::TIMESTAMP               AS last_update_started_at,\n      last_update_scheduled_at::TIMESTAMP             AS last_update_scheduled_at,\n      next_execution_timestamp::TIMESTAMP             AS next_execution_timestamp\n\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_mirror_data_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_vendors_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.netsuite_vendors_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.opportunity_forecasting_scores", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data_science.opportunity_forecasting_scores", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_consolidated_currency_exchange_rates", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_finance.netsuite_consolidated_currency_exchange_rates", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:21.544689Z", "completed_at": "2025-06-09T18:52:21.560814Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:21.572646Z", "completed_at": "2025-06-09T18:52:25.465228Z"}], "thread_id": "Thread-29", "execution_time": 3.946118116378784, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_vulnerability_occurrences_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_vulnerability_occurrences_source.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha512'?\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_vulnerability_occurrences_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerability_occurrences_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerability_occurrences_dedupe_source\n    \n)\nSELECT \n    id::NUMBER                                                              AS id,  \n    SHA2(RANDSTR(32, project_id::NUMBER) || project_id::VARCHAR)::VARCHAR   AS project_id,\n    scanner_id::NUMBER                                                      AS vulnerability_scanner_id,\n    primary_identifier_id::NUMBER                                           AS vulnerability_primary_identifier_id,\n    vulnerability_id::FLOAT                                                 AS vulnerability_id,\n    created_at::TIMESTAMP                                                   AS vulnerability_created_at,\n    updated_at::TIMESTAMP                                                   AS vulnerability_updated_at,\n    severity::NUMBER                                                        AS vulnerability_severity,\n    confidence::NUMBER                                                      AS vulnerability_confidence,\n    report_type::NUMBER                                                     AS vulnerability_report_type,\n    uuid::TEXT                                                              AS vulnerability_uuid,\n    name::VARCHAR                                                           AS vulnerability_name,\n    metadata_version::TEXT                                                  AS vulnerability_metadata_version,\n    raw_metadata::TEXT                                                      AS vulnerability_raw_metadata\nFROM source", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerability_occurrences_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.487390Z", "completed_at": "2025-06-09T18:52:16.536591Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.571298Z", "completed_at": "2025-06-09T18:52:25.963757Z"}], "thread_id": "Thread-6", "execution_time": 9.518023014068604, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_routes_source", "compiled": true, "compiled_code": "WITH all_routes AS (\n\n  SELECT \n    id::NUMBER                    AS route_id,\n    source_id::NUMBER             AS source_id,\n    source_type::VARCHAR          AS source_type,\n    path::VARCHAR                 AS path\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_routes_dedupe_source\n\n),\n\ninternal_routes AS (\n\n  SELECT \n    id::NUMBER                    AS internal_route_id,\n    source_id::NUMBER             AS internal_source_id,\n    source_type::VARCHAR          AS internal_source_type,\n    path::VARCHAR                 AS internal_path\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_routes_internal_only_dedupe_source\n\n), \n\ncombined AS (\n\nSELECT\n  all_routes.route_id                   AS route_id,\n  all_routes.source_id                  AS source_id,\n  internal_routes.internal_source_type  AS source_type,\n  internal_routes.internal_path         AS path\nFROM all_routes\nLEFT JOIN internal_routes\n  ON all_routes.route_id = internal_routes.internal_route_id\n\n)\n\nSELECT * \nFROM combined", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_routes_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-6", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.qualtrics_distribution_xf", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.qualtrics_distribution_xf", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-6", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.qualtrics_survey_invitation_emails_sent", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.qualtrics_survey_invitation_emails_sent", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-6", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_gitlab_releases", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_gitlab_releases", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:17.266955Z", "completed_at": "2025-06-09T18:52:17.270759Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:17.271192Z", "completed_at": "2025-06-09T18:52:25.979519Z"}], "thread_id": "Thread-26", "execution_time": 8.728863954544067, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_sprints_internal_only_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_sprints_internal_only_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_sprints_internal_only_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_sprints_internal_only_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_sprints_internal_only_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER                    AS id,\n    created_at::TIMESTAMP         AS created_at,\n    updated_at::TIMESTAMP         AS updated_at,\n    start_date::DATE              AS start_date,\n    due_date::DATE                AS due_date,\n    group_id::NUMBER              AS group_id,\n    iid::NUMBER                   AS iid,\n    title::VARCHAR                AS title,\n    description::VARCHAR          AS description,\n    iterations_cadence_id::NUMBER AS iterations_cadence_id\n  FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_sprints_internal_only_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.518666Z", "completed_at": "2025-06-09T18:52:16.562432Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.603298Z", "completed_at": "2025-06-09T18:52:26.008349Z"}], "thread_id": "Thread-30", "execution_time": 9.490637063980103, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_saml_providers_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_saml_providers_dedupe_source\n    \n), renamed AS (\n\n    SELECT\n      id::NUMBER                              AS saml_provider_id,\n      group_id::NUMBER                        AS group_id,\n      enabled::BOOLEAN                         AS is_enabled,\n      certificate_fingerprint::VARCHAR         AS certificate_fingerprint,\n      sso_url::VARCHAR                         AS sso_url,\n      enforced_sso::BOOLEAN                    AS is_enforced_sso,\n      enforced_group_managed_accounts::BOOLEAN AS is_enforced_group_managed_accounts,\n      prohibited_outer_forks::BOOLEAN          AS is_prohibited_outer_forks,\n      default_membership_role::NUMBER          AS default_membership_role_id\n    FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_saml_providers_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-30", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.roles_yaml_historical", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.roles_yaml_historical", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-30", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_namespace_hist", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_namespace_hist", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-30", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_performance_indicators_yaml", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_performance_indicators_yaml", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-30", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_marketo_person", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_marketo_person", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:16.502509Z", "completed_at": "2025-06-09T18:52:16.554633Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:16.591369Z", "completed_at": "2025-06-09T18:52:26.470512Z"}], "thread_id": "Thread-3", "execution_time": 10.01648736000061, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_protected_branch_push_access_levels_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_protected_branch_push_access_levels_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_protected_branch_push_access_levels_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_protected_branch_push_access_levels_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_protected_branch_push_access_levels_dedupe_source\n\n),\n\nrenamed AS (\n\nSELECT \n    id::NUMBER                        AS protected_branch_push_access_levels_id,\n    protected_branch_id::NUMBER       AS protected_branch_id,\n    access_level::NUMBER              AS access_level,\n    created_at::TIMESTAMP             AS created_at,\n    updated_at::TIMESTAMP             AS updated_at,\n    user_id::NUMBER                   AS user_id,\n    group_id::NUMBER                  AS group_id,\n    deploy_key_id::NUMBER             AS deploy_key_id\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_protected_branch_push_access_levels_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:24.030505Z", "completed_at": "2025-06-09T18:52:24.054985Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:24.056384Z", "completed_at": "2025-06-09T18:52:26.449179Z"}], "thread_id": "Thread-22", "execution_time": 2.4651217460632324, "adapter_response": {}, "message": "Database Error in model netsuite_subsidiaries_pii (models/sources/netsuite/sensitive/netsuite_subsidiaries_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha512'?\n  compiled code at target/run/gitlab_snowflake/models/sources/netsuite/sensitive/netsuite_subsidiaries_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_subsidiaries_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite.netsuite_subsidiaries_source\n\n), entity_pii AS (\n\n    SELECT\n      subsidiary_id,\n      \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                subsidiary_name || \n                ENCRYPT_RAW(\n                  to_binary('SALT_NAME', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS subsidiary_name_hash,\n\n\n\n        \n    \n    \n    \n    subsidiary_full_name   , \n    \n    \n    \n    subsidiary_name  \n    \n    \n\n\n    FROM source\n\n)\n\nSELECT *\nFROM entity_pii", "relation_name": "EMBUCKET.sensitive.netsuite_subsidiaries_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_servicenow_prd_incident", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_security.wk_servicenow_prd_incident", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:19.460447Z", "completed_at": "2025-06-09T18:52:19.466973Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:19.476682Z", "completed_at": "2025-06-09T18:52:26.739651Z"}], "thread_id": "Thread-15", "execution_time": 7.292845010757446, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_subscription_user_add_on_assignments_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_subscription_user_add_on_assignments_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_subscription_user_add_on_assignments_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscription_user_add_on_assignments_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscription_user_add_on_assignments_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS id,\n      add_on_purchase_id::NUMBER                AS add_on_purchase_id,\n      user_id::NUMBER                           AS user_id,\n      created_at::TIMESTAMP                     AS created_at,\n      updated_at::TIMESTAMP                     AS updated_at,\n      pgp_is_deleted                            AS pgp_is_deleted,\n      pgp_is_deleted_updated_at                 AS pgp_is_deleted_updated_at\n\n    FROM source\n\n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscription_user_add_on_assignments_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:20.282979Z", "completed_at": "2025-06-09T18:52:20.297630Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:20.316144Z", "completed_at": "2025-06-09T18:52:26.753116Z"}], "thread_id": "Thread-2", "execution_time": 6.483262777328491, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_system_note_metadata_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_system_note_metadata_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_system_note_metadata_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_system_note_metadata_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_system_note_metadata_dedupe_source\n    \n), renamed AS (\n\n    SELECT\n      id::NUMBER                           AS system_note_metadata_id,\n      note_id::NUMBER                      AS note_id,\n      commit_count::NUMBER                 AS commit_count,\n      action::VARCHAR                       AS action_type,\n      description_version_id::NUMBER       AS description_version_id,\n      created_at::TIMESTAMP                 AS created_at,\n      updated_at::TIMESTAMP                 AS updated_at\n\n    FROM source\n\n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_system_note_metadata_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_servicenow_prd_sys_user_group", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_security.wk_servicenow_prd_sys_user_group", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.sensitive_queries_base", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.data_classification.sensitive_queries_base", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sensitive_queries_tags", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.wk_sensitive_queries_tags", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.rspec_overall_time", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.rspec_overall_time", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:20.236259Z", "completed_at": "2025-06-09T18:52:20.248741Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:20.252165Z", "completed_at": "2025-06-09T18:52:26.499279Z"}], "thread_id": "Thread-5", "execution_time": 6.272212982177734, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_subscription_add_ons_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_subscription_add_ons_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_subscription_add_ons_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscription_add_ons_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscription_add_ons_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                AS id,\n      name::NUMBER              AS name,\n      description::VARCHAR      AS description,\n      created_at::TIMESTAMP     AS created_at,\n      updated_at::TIMESTAMP     AS updated_at\n\n    FROM source\n\n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscription_add_ons_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_servicenow_prd_sys_user", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_security.wk_servicenow_prd_sys_user", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sales_sfdc_contact_history", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_sales.sfdc_contact_history", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.ptpl_scores", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data_science.ptpl_scores", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_servicenow_prd_task", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_security.wk_servicenow_prd_task", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_environment", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_environment", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:17.182540Z", "completed_at": "2025-06-09T18:52:17.186192Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:17.188642Z", "completed_at": "2025-06-09T18:52:26.724723Z"}], "thread_id": "Thread-11", "execution_time": 9.549293994903564, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_security_scans_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_security_scans_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_security_scans_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_security_scans_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_security_scans_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER AS security_scan_id,\n    created_at::TIMESTAMP AS created_at,\n    updated_at::TIMESTAMP AS updated_at,\n    build_id::NUMBER AS build_id,\n    scan_type::NUMBER AS scan_type,\n    project_id::NUMBER AS project_id,\n    pipeline_id::NUMBER AS pipeline_id,\n    latest::BOOLEAN AS is_latest,\n    status::NUMBER AS security_scan_status\n  FROM source\n\n)\n\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_security_scans_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:19.456238Z", "completed_at": "2025-06-09T18:52:19.466009Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:19.467798Z", "completed_at": "2025-06-09T18:52:26.462280Z"}], "thread_id": "Thread-4", "execution_time": 7.0420660972595215, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_subscription_user_add_on_assignment_versions_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_subscription_user_add_on_assignment_versions_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_subscription_user_add_on_assignment_versions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscription_user_add_on_assignment_versions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscription_user_add_on_assignment_versions_dedupe_source\n\n), renamed AS (\n\n    SELECT\n\n      id::NUMBER                                AS id,\n      organization_id::NUMBER                   AS organization_id,\n      item_id::NUMBER                           AS item_id,\n      purchase_id::NUMBER                       AS purchase_id,\n      user_id::NUMBER                           AS user_id,\n      created_at::TIMESTAMP                     AS created_at,\n      event::VARCHAR                            AS event,\n      item_type::VARCHAR                        AS item_type,\n      namespace_path::VARCHAR                   AS namespace_path,\n      add_on_name::VARCHAR                      AS add_on_name,\n      object::VARCHAR                           AS object,\n      TO_TIMESTAMP(_uploaded_at::INT)           AS uploaded_at\n\n    FROM source\n\n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_subscription_user_add_on_assignment_versions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:17.352302Z", "completed_at": "2025-06-09T18:52:17.367600Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:17.370173Z", "completed_at": "2025-06-09T18:52:26.031246Z"}], "thread_id": "Thread-28", "execution_time": 8.693068742752075, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_ssh_signatures_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ssh_signatures_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_ssh_signatures_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ssh_signatures_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ssh_signatures_dedupe_source\n\n), parsed_columns AS (\n\n    SELECT\n      id::NUMBER                  AS ssh_signatures_id,\n      created_at::TIMESTAMP       AS created_at,\n      updated_at::TIMESTAMP       AS updated_at,\n      project_id::NUMBER          AS project_id,\n      verification_status::NUMBER AS verification_status,\n      user_id::NUMBER             AS user_id\n    FROM source\n\n)\n\nSELECT *\nFROM parsed_columns", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_ssh_signatures_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:20.328946Z", "completed_at": "2025-06-09T18:52:21.560431Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:21.564316Z", "completed_at": "2025-06-09T18:52:26.507107Z"}], "thread_id": "Thread-21", "execution_time": 6.184195041656494, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_vulnerability_identifiers_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_vulnerability_identifiers_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_vulnerability_identifiers_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerability_identifiers_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerability_identifiers_dedupe_source\n    \n), renamed AS (\n\n    SELECT\n      id::NUMBER                        AS id,\n      project_id::NUMBER                AS project_id,\n      fingerprint::VARCHAR              AS fingerprint,\n      external_type::VARCHAR            AS external_type,\n      external_id::VARCHAR              AS external_id,\n      name::VARCHAR                     AS name,\n      url::VARCHAR                      AS url,\n      created_at::TIMESTAMP             AS created_at,\n      updated_at::TIMESTAMP             AS updated_at\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerability_identifiers_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_crm_case_history", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_crm_case_history", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.map_bizible_marketing_channel_path", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_mapping.map_bizible_marketing_channel_path", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-28", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_field_history", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_legacy.sfdc_opportunity_field_history", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_servicenow_prd_sla", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_security.wk_servicenow_prd_sla", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sales_sfdc_opportunity_product", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.wk_sales_sfdc_opportunity_product", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-28", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sales_sfdc_case", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_sales.sfdc_case", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_crm_case", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_crm_case", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sales_sfdc_opportunity_product_snapshot", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.wk_sales_sfdc_opportunity_product_snapshot", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-15", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_servicenow_prd_problem", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_security.wk_servicenow_prd_problem", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sales_sfdc_zoom_webinar", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_sales.wk_sales_sfdc_zoom_webinar", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_servicenow_prd_incident_task", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_security.wk_servicenow_prd_incident_task", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sales_sfdc_zoom_webinar_attendee", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_sales.wk_sales_sfdc_zoom_webinar_attendee", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_servicenow_prd_problem_task", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_security.wk_servicenow_prd_problem_task", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sales_sfdc_zoom_webinar_history", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_sales.wk_sales_sfdc_zoom_webinar_history", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_task", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.sfdc_task", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sales_sfdc_subscription_renewal_case_creation", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_sales.sfdc_case_creation_data", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sales_sfdc_zoom_webinar_registrant", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_sales.wk_sales_sfdc_zoom_webinar_registrant", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_quote", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common_prep.prep_quote", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_engineering_speciality_prior_to_capture", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.sheetload_engineering_speciality_prior_to_capture", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_crm_opportunity_calcs", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common_prep.prep_crm_opportunity_calcs", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sfdc.sfdc_opportunity_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:20.293903Z", "completed_at": "2025-06-09T18:52:21.310375Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:21.321106Z", "completed_at": "2025-06-09T18:52:27.157796Z"}], "thread_id": "Thread-1", "execution_time": 6.888056755065918, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_terraform_states_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_terraform_states_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_terraform_states_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_terraform_states_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_terraform_states_dedupe_source\n  \n), renamed AS (\n\n    SELECT\n\n      id::NUMBER               AS terraform_state_id,\n      project_id::NUMBER       AS project_id,\n      created_at::TIMESTAMP     AS created_at,\n      updated_at::TIMESTAMP     AS updated_at,\n      file_store::VARCHAR       AS file_store\n\n    FROM source\n\n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_terraform_states_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:23.962836Z", "completed_at": "2025-06-09T18:52:27.394248Z"}], "thread_id": "Thread-18", "execution_time": 3.4501187801361084, "adapter_response": {}, "message": "Compilation Error in model netsuite_subsidiaries (models/legacy/netsuite/intermediate/netsuite_subsidiaries.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model netsuite_subsidiaries (models/legacy/netsuite/intermediate/netsuite_subsidiaries.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_subsidiaries", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.netsuite_subsidiaries", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:20.301444Z", "completed_at": "2025-06-09T18:52:21.315746Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:21.334769Z", "completed_at": "2025-06-09T18:52:27.802155Z"}], "thread_id": "Thread-32", "execution_time": 7.516983985900879, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_user_preferences_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_user_preferences_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_user_preferences_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_user_preferences_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_user_preferences_dedupe_source\n\n), renamed AS (\n\n    SELECT\n      user_id::NUMBER                           AS user_id,\n      issue_notes_filter::VARCHAR               AS issue_notes_filter,\n      merge_request_notes_filter::VARCHAR       AS merge_request_notes_filter,\n      created_at::TIMESTAMP                     AS created_at,\n      updated_at::TIMESTAMP                     AS updated_at,\n      epics_sort::VARCHAR                       AS epic_sort,\n      roadmap_epics_state::VARCHAR              AS roadmap_epics_state,\n      epic_notes_filter::VARCHAR                AS epic_notes_filter,\n      issues_sort::VARCHAR                      AS issues_sort,\n      merge_requests_sort::VARCHAR              AS merge_requests_sort,\n      roadmaps_sort::VARCHAR                    AS roadmaps_sort,\n      first_day_of_week::VARCHAR                AS first_day_of_week,\n      timezone::VARCHAR                         AS timezone,\n      true::BOOLEAN            AS time_display_relative,\n      true::BOOLEAN               AS time_format_in_24h,\n      projects_sort::VARCHAR                    AS projects_sort,\n      true::BOOLEAN         AS show_whitespace_in_diffs,\n      true::BOOLEAN              AS sourcegraph_enabled,\n      true::BOOLEAN                AS setup_for_company,\n      true::BOOLEAN        AS render_whitespace_in_code,\n      tab_width::VARCHAR                        AS tab_width,\n      experience_level::NUMBER                  AS experience_level,\n      true::BOOLEAN          AS view_diffs_file_by_file,\n      true::BOOLEAN AS early_access_program_participant\n\n    FROM source\n\n)\n\nSELECT  *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_user_preferences_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:21.626379Z", "completed_at": "2025-06-09T18:52:21.640207Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:21.651628Z", "completed_at": "2025-06-09T18:52:27.832705Z"}], "thread_id": "Thread-9", "execution_time": 6.232171058654785, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_web_hooks_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_web_hooks_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_web_hooks_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_web_hooks_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_web_hooks_dedupe_source\n\n), renamed AS (\n\n  SELECT\n    id::NUMBER                      AS web_hook_id,\n    project_id::NUMBER              AS project_id,\n    integration_id::NUMBER          AS integration_id,\n    type::VARCHAR                   AS type,\n    created_at::TIMESTAMP           AS created_at,\n    updated_at::TIMESTAMP           AS updated_at\n\n  FROM source\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_web_hooks_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_people_budget", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.sheetload_people_budget", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:22.454099Z", "completed_at": "2025-06-09T18:52:22.460063Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:22.460356Z", "completed_at": "2025-06-09T18:52:27.916503Z"}], "thread_id": "Thread-31", "execution_time": 5.463958978652954, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_budget_category", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite.netsuite_budget_category_source\n\n)\n\nSELECT *\nFROM source\nWHERE is_fivetran_deleted = FALSE", "relation_name": "EMBUCKET.legacy.netsuite_budget_category", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:22.534004Z", "completed_at": "2025-06-09T18:52:22.537336Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:22.537616Z", "completed_at": "2025-06-09T18:52:27.930136Z"}], "thread_id": "Thread-23", "execution_time": 5.397082090377808, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.just_global_media_buys", "compiled": true, "compiled_code": "WITH\nsource AS (\n  SELECT * FROM\n\n    EMBUCKET.just_global_campaigns.media_buys_source\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.workspace_marketing.just_global_media_buys", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:21.317086Z", "completed_at": "2025-06-09T18:52:21.347370Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:21.354401Z", "completed_at": "2025-06-09T18:52:27.971610Z"}], "thread_id": "Thread-16", "execution_time": 7.696531772613525, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_user_custom_attributes_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_user_custom_attributes_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_user_custom_attributes_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_user_custom_attributes_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_user_custom_attributes_dedupe_source\n\n), renamed AS (\n\n  SELECT\n    user_id::NUMBER       AS user_id,\n    created_at::TIMESTAMP AS created_at,\n    updated_at::TIMESTAMP AS updated_at,\n    key::VARCHAR          AS user_custom_key,\n    value::VARCHAR        AS user_custom_value\n  FROM source\n  QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC) = 1\n\n\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_user_custom_attributes_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:21.663571Z", "completed_at": "2025-06-09T18:52:21.673417Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:21.673843Z", "completed_at": "2025-06-09T18:52:27.953437Z"}], "thread_id": "Thread-27", "execution_time": 6.33587908744812, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_zoekt_indices_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_zoekt_indices_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_zoekt_indices_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_zoekt_indices_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_zoekt_indices_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER                                AS id, \n    zoekt_enabled_namespace_id::NUMBER        AS zoekt_enabled_namespace_id, \n    zoekt_node_id::NUMBER                     AS zoekt_node_id,\n    namespace_id::NUMBER                      AS namespace_id,\n    state::NUMBER                             AS state,\n    created_at::TIMESTAMP                     AS created_at,\n    updated_at::TIMESTAMP                     AS updated_at \n\n  FROM source \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_zoekt_indices_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:20.278351Z", "completed_at": "2025-06-09T18:52:20.291500Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:20.309417Z", "completed_at": "2025-06-09T18:52:27.970532Z"}], "thread_id": "Thread-24", "execution_time": 7.7167816162109375, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_todos_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_todos_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_todos_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_todos_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_todos_dedupe_source\n    \n), renamed AS (\n  \n    SELECT\n      id::NUMBER                                AS todo_id,\n      user_id::NUMBER                           AS user_id,\n      project_id::NUMBER                        AS project_id,\n      target_id::NUMBER                         AS target_id,\n      target_type::VARCHAR                      AS target_type,\n      author_id::NUMBER                         AS author_id,\n      action::NUMBER                            AS todo_action_id,\n      state::VARCHAR                            AS todo_state,\n      created_at::TIMESTAMP                     AS created_at,\n      updated_at::TIMESTAMP                     AS updated_at,\n      note_id::NUMBER                           AS note_id,\n      commit_id::VARCHAR                        AS commit_id,\n      group_id::NUMBER                          AS group_id,\n      resolved_by_action::NUMBER                AS resolved_by_action  \n      \n    FROM source\n    \n)\n\nSELECT * \nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_todos_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:21.618567Z", "completed_at": "2025-06-09T18:52:21.629535Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:21.641223Z", "completed_at": "2025-06-09T18:52:27.999525Z"}], "thread_id": "Thread-8", "execution_time": 6.428302764892578, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_vulnerability_state_transitions_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_vulnerability_state_transitions_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_vulnerability_state_transitions_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerability_state_transitions_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerability_state_transitions_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER                      AS id,\n    author_id::NUMBER               AS author_id,\n    vulnerability_id::NUMBER        AS vulnerability_id,\n    dismissal_reason::NUMBER        AS dismissal_reason,\n    created_at::TIMESTAMP           AS created_at,\n    updated_at::TIMESTAMP           AS updated_at\n  FROM source \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerability_state_transitions_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:21.604822Z", "completed_at": "2025-06-09T18:52:21.624658Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:21.629979Z", "completed_at": "2025-06-09T18:52:27.988646Z"}], "thread_id": "Thread-20", "execution_time": 6.416384696960449, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_vulnerabilities_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_vulnerabilities_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_vulnerabilities_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerabilities_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerabilities_dedupe_source\n    \n), renamed AS (\n\n    SELECT\n      id::NUMBER                        AS vulnerability_id,\n      confidence::NUMBER                AS confidence,\n      confidence_overridden::BOOLEAN    AS is_confidence_overridden, \n      confirmed_at::TIMESTAMP           AS confirmed_at,\n      created_at::TIMESTAMP             AS created_at,\n      dismissed_at::TIMESTAMP           AS dismissed_at,\n      resolved_at::TIMESTAMP            AS resolved_at,\n      severity_overridden::BOOLEAN      AS is_severity_overriden,\n      state::NUMBER                     AS state,\n      updated_at::TIMESTAMP             AS updated_at\n    FROM source\n    \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_vulnerabilities_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:26.935710Z", "completed_at": "2025-06-09T18:52:26.948016Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:26.963062Z", "completed_at": "2025-06-09T18:52:28.339462Z"}], "thread_id": "Thread-21", "execution_time": 1.431704044342041, "adapter_response": {}, "message": "Database Error in model wk_prep_crm_account_share_active (models/workspaces/workspace_sales/restricted_safe/wk_prep_crm_account_share_active.sql)\n  000200: DataFusion error: SQL error: ParserError(\"Expected: [EXTERNAL] TABLE or [MATERIALIZED] VIEW or FUNCTION after CREATE OR REPLACE, found: secure at Line: 2, Column: 19\")\n  compiled code at target/run/gitlab_snowflake/models/workspaces/workspace_sales/restricted_safe/wk_prep_crm_account_share_active.sql", "failures": null, "unique_id": "model.gitlab_snowflake.wk_prep_crm_account_share_active", "compiled": true, "compiled_code": "\n\nWITH final AS (\n\nSELECT \n  account_id,\n  user_or_group_id,\n  account_access_level,\n  row_cause\n\nFROM EMBUCKET.sfdc.sfdc_account_share_source\nWHERE \n    is_deleted = false\n\n)\n\nSELECT * \nFROM final", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.wk_prep_crm_account_share_active", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:22.094526Z", "completed_at": "2025-06-09T18:52:22.102019Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:22.104329Z", "completed_at": "2025-06-09T18:52:29.716948Z"}], "thread_id": "Thread-17", "execution_time": 7.628638982772827, "adapter_response": {}, "message": "Database Error in model gitlab_dotcom_zoekt_enabled_namespaces_source (models/sources/gitlab_dotcom/renamed/gitlab_dotcom_zoekt_enabled_namespaces_source.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/sources/gitlab_dotcom/renamed/gitlab_dotcom_zoekt_enabled_namespaces_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_zoekt_enabled_namespaces_source", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT *\n  FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_zoekt_enabled_namespaces_dedupe_source\n\n),\n\nrenamed AS (\n\n  SELECT\n    id::NUMBER                                AS id,\n    root_namespace_id::NUMBER                 AS root_namespace_id,\n    search::BOOLEAN                           AS search,\n    created_at::TIMESTAMP                     AS created_at,\n    updated_at::TIMESTAMP                     AS updated_at \n  FROM source \n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_zoekt_enabled_namespaces_source", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:27.122522Z", "completed_at": "2025-06-09T18:52:27.126136Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:27.126481Z", "completed_at": "2025-06-09T18:52:29.763106Z"}], "thread_id": "Thread-22", "execution_time": 2.6762561798095703, "adapter_response": {}, "message": "Database Error in model wk_prep_crm_opportunity_share_active (models/workspaces/workspace_sales/restricted_safe/wk_prep_crm_opportunity_share_active.sql)\n  000200: DataFusion error: SQL error: ParserError(\"Expected: [EXTERNAL] TABLE or [MATERIALIZED] VIEW or FUNCTION after CREATE OR REPLACE, found: secure at Line: 2, Column: 19\")\n  compiled code at target/run/gitlab_snowflake/models/workspaces/workspace_sales/restricted_safe/wk_prep_crm_opportunity_share_active.sql", "failures": null, "unique_id": "model.gitlab_snowflake.wk_prep_crm_opportunity_share_active", "compiled": true, "compiled_code": "\n\nWITH final AS (\n\nSELECT \n  opportunity_id,\n  user_or_group_id,\n  opportunity_access_level,\n  row_cause\n\nFROM EMBUCKET.sfdc.sfdc_opportunity_share_source\nWHERE \n    is_deleted = false\n\n)\n\nSELECT * \nFROM final", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.wk_prep_crm_opportunity_share_active", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:25.987097Z", "completed_at": "2025-06-09T18:52:25.994070Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:25.995096Z", "completed_at": "2025-06-09T18:52:29.822315Z"}], "thread_id": "Thread-26", "execution_time": 3.844413995742798, "adapter_response": {}, "message": "Database Error in model netsuite_entity_pii (models/sources/netsuite/sensitive/netsuite_entity_pii.sql)\n  000200: DataFusion error: Error during planning: Invalid function 'sha2'.\n  Did you mean 'sha224'?\n  compiled code at target/run/gitlab_snowflake/models/sources/netsuite/sensitive/netsuite_entity_pii.sql", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_entity_pii", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite.netsuite_entity_source\n\n), entity_pii AS (\n\n    SELECT\n      entity_id,\n      \n\n    \n\n    sha2(\n        TRIM(\n            LOWER(\n                entity_name || \n                ENCRYPT_RAW(\n                  to_binary('SALT_NAME', 'utf-8'), \n                  to_binary('4f4a4c7a9c66f0bc70d8acb9c21ff2e9', 'HEX'), \n                  to_binary('416C736F4E637265FFFFFFAB', 'HEX')\n                )['ciphertext']::VARCHAR \n            )\n        )\n    ) AS entity_name_hash,\n\n\n\n        \n    \n    \n    \n    entity_name   , \n    \n    \n    \n    entity_full_name  \n    \n    \n\n\n    FROM source\n\n)\n\nSELECT *\nFROM entity_pii", "relation_name": "EMBUCKET.sensitive.netsuite_entity_pii", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:23.972476Z", "completed_at": "2025-06-09T18:52:23.996955Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:23.997324Z", "completed_at": "2025-06-09T18:52:30.142995Z"}], "thread_id": "Thread-14", "execution_time": 6.195131063461304, "adapter_response": {}, "message": "Database Error in model netsuite_currency_exchange_rates (models/workspaces/workspace_finance/netsuite_currency_exchange_rates.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/workspaces/workspace_finance/netsuite_currency_exchange_rates.sql", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_currency_exchange_rates", "compiled": true, "compiled_code": "\n\nWITH currency_exchange_rates AS (\n\n    SELECT * \n    FROM EMBUCKET.netsuite.netsuite_currency_exchange_rates_source\n\n), base_currency AS (\n\n    SELECT * \n    FROM EMBUCKET.netsuite.netsuite_currencies_source\n\n), transaction_currency AS (\n\n    SELECT * \n    FROM EMBUCKET.netsuite.netsuite_currencies_source\n\n)\n\n, final AS (\n\n  SELECT \n\n    base_currency.currency_symbol AS base_currency,\n    transaction_currency.currency_symbol AS transaction_currency,\n    currency_exchange_rates.exchange_rate,\n    currency_exchange_rates.date_effective AS effective_date\n\n  FROM currency_exchange_rates\n  LEFT JOIN base_currency\n    ON currency_exchange_rates.base_currency_id = base_currency.currency_id\n  LEFT JOIN transaction_currency\n    ON currency_exchange_rates.currency_id = transaction_currency.currency_id\n\n)\n\nSELECT\n      *,\n      '@michellecooper'::VARCHAR       AS created_by,\n      '@michellecooper'::VARCHAR       AS updated_by,\n      '2022-07-06'::DATE        AS model_created_date,\n      '2022-07-06'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM final", "relation_name": "EMBUCKET.workspace_finance.netsuite_currency_exchange_rates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:23.793272Z", "completed_at": "2025-06-09T18:52:23.821107Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:23.839180Z", "completed_at": "2025-06-09T18:52:31.677597Z"}], "thread_id": "Thread-25", "execution_time": 7.884948968887329, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_accounts_xf", "compiled": true, "compiled_code": "WITH base_accounts AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite.netsuite_accounts_source\n    WHERE account_number IS NOT NULL\n\n), ultimate_account AS (\n\n    SELECT\n      a.account_id,\n      a.account_number,\n      CASE WHEN a.parent_account_id IS NOT NULL THEN a.parent_account_id\n           ELSE a.account_id\n      END                                           AS parent_account_id,\n      CASE WHEN b.account_number IS NOT NULL THEN b.account_number\n           ELSE a.account_number\n      END                                           AS parent_account_number,\n      CASE WHEN b.account_number IS NOT NULL\n           THEN b.account_number || ' - ' || a.account_number\n           ELSE a.account_number\n      END                                           AS unique_account_number,\n      a.currency_id,\n      a.account_name,\n      a.account_full_name,\n      a.account_full_description,\n      a.account_type,\n      a.general_rate_type,\n      a.is_account_inactive,\n      a.is_balancesheet_account,\n      a.is_leftside_account\n    FROM base_accounts a\n    LEFT JOIN base_accounts b\n      ON a.parent_account_id = b.account_id\n\n)\n\nSELECT *\nFROM ultimate_account", "relation_name": "EMBUCKET.legacy.netsuite_accounts_xf", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:25.477600Z", "completed_at": "2025-06-09T18:52:25.481188Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:25.481491Z", "completed_at": "2025-06-09T18:52:32.123033Z"}], "thread_id": "Thread-29", "execution_time": 6.646054983139038, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_classes", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite.netsuite_classes_source\n\n)\n\nSELECT *\nFROM source\nWHERE is_fivetran_deleted = FALSE", "relation_name": "EMBUCKET.legacy.netsuite_classes", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:27.108917Z", "completed_at": "2025-06-09T18:52:27.112748Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:27.113061Z", "completed_at": "2025-06-09T18:52:32.395253Z"}], "thread_id": "Thread-2", "execution_time": 5.292129993438721, "adapter_response": {}, "message": "Database Error in model sheetload_books (models/legacy/sheetload/sheetload_books.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/legacy/sheetload/sheetload_books.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_books", "compiled": true, "compiled_code": "WITH source AS (\n\n  SELECT * \n  FROM EMBUCKET.sheetload.sheetload_books_source\n\n)\n\nSELECT\n      *,\n      '@michellecooper'::VARCHAR       AS created_by,\n      '@michellecooper'::VARCHAR       AS updated_by,\n      '2022-05-26'::DATE        AS model_created_date,\n      '2022-05-26'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM source", "relation_name": "EMBUCKET.legacy.sheetload_books", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:28.019376Z", "completed_at": "2025-06-09T18:52:28.061414Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:28.076498Z", "completed_at": "2025-06-09T18:52:32.382476Z"}], "thread_id": "Thread-23", "execution_time": 4.415621995925903, "adapter_response": {}, "message": "Database Error in model prep_yearlies_target (models/common_prep/restricted_safe/prep_yearlies_target.sql)\n  000200: DataFusion error: SQL error: ParserError(\"Expected: [EXTERNAL] TABLE or [MATERIALIZED] VIEW or FUNCTION after CREATE OR REPLACE, found: secure at Line: 2, Column: 19\")\n  compiled code at target/run/gitlab_snowflake/models/common_prep/restricted_safe/prep_yearlies_target.sql", "failures": null, "unique_id": "model.gitlab_snowflake.prep_yearlies_target", "compiled": true, "compiled_code": "\n\nWITH prep as (\n  \n SELECT \n  yearly_name,\n  yearly_dri,\n  yearly_description,\n  is_mnpi,\n  IFNULL(FY25_Q4,-1) AS FY25_Q4,\n  IFNULL(FY25_Q3,-1) AS FY25_Q3,\n  IFNULL(FY25_Q2,-1) AS FY25_Q2,\n  IFNULL(FY25_Q1,-1) AS FY25_Q1\n\nFROM\n  EMBUCKET.sheetload.sheetload_fy25_yearlies_target_source\n),\nfinal AS (\n\nSELECT\n   yearly_name,\n   yearly_dri,\n   yearly_description,\n   is_mnpi,\n   REPLACE(quarter_name, '_', '-') AS quarter,\n   IFF(target = -1, NULL, target) AS targets_raw\nFROM\n   prep UNPIVOT(target FOR quarter_name IN \n   (\n      \"FY25_Q4\",\n      \"FY25_Q3\",\n      \"FY25_Q2\",\n      \"FY25_Q1\"\n   )\n))\n\nSELECT * \nFROM final", "relation_name": "EMBUCKET.restricted_safe_common_prep.prep_yearlies_target", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:25.969630Z", "completed_at": "2025-06-09T18:52:32.356828Z"}], "thread_id": "Thread-6", "execution_time": 6.480044841766357, "adapter_response": {}, "message": "Compilation Error in model netsuite_entity (models/legacy/netsuite/intermediate/netsuite_entity.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model netsuite_entity (models/legacy/netsuite/intermediate/netsuite_entity.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_entity", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.netsuite_entity", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-6", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.pagerslack_stats", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.pagerslack_stats", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:28.100808Z", "completed_at": "2025-06-09T18:52:28.117410Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:28.123850Z", "completed_at": "2025-06-09T18:52:33.391930Z"}], "thread_id": "Thread-24", "execution_time": 5.335760116577148, "adapter_response": {}, "message": "Database Error in model sheetload_map_ramp_deals (models/legacy/sheetload/restricted_safe/sheetload_map_ramp_deals.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/legacy/sheetload/restricted_safe/sheetload_map_ramp_deals.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_map_ramp_deals", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_map_ramp_deals_source\n\n)\n\nSELECT\n      *,\n      '@michellecooper'::VARCHAR       AS created_by,\n      '@michellecooper'::VARCHAR       AS updated_by,\n      '2022-06-16'::DATE        AS model_created_date,\n      '2022-06-16'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM source", "relation_name": "EMBUCKET.restricted_safe_legacy.sheetload_map_ramp_deals", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:24.050141Z", "completed_at": "2025-06-09T18:52:24.062358Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:24.065610Z", "completed_at": "2025-06-09T18:52:33.727130Z"}], "thread_id": "Thread-19", "execution_time": 9.682754039764404, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_consolidated_exchange_rates", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite.netsuite_consolidated_exchange_rates_source\n\n)\n\nSELECT *\nFROM source\nWHERE is_fivetran_deleted = FALSE", "relation_name": "EMBUCKET.legacy.netsuite_consolidated_exchange_rates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:23.929307Z", "completed_at": "2025-06-09T18:52:24.011117Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:24.011588Z", "completed_at": "2025-06-09T18:52:33.728464Z"}], "thread_id": "Thread-10", "execution_time": 9.803194761276245, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_budget", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite.netsuite_budget_source\n\n)\n\nSELECT *\nFROM source\nWHERE is_fivetran_deleted = FALSE", "relation_name": "EMBUCKET.legacy.netsuite_budget", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:27.063890Z", "completed_at": "2025-06-09T18:52:27.101453Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:27.101823Z", "completed_at": "2025-06-09T18:52:33.789719Z"}], "thread_id": "Thread-5", "execution_time": 6.726498126983643, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_user_roles", "compiled": true, "compiled_code": "with base as (\n\n    SELECT * \n    FROM EMBUCKET.sfdc.sfdc_user_roles_source\n\n)\n\nSELECT *\nFROM base", "relation_name": "EMBUCKET.legacy.sfdc_user_roles", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:22.504177Z", "completed_at": "2025-06-09T18:52:22.523762Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:22.526304Z", "completed_at": "2025-06-09T18:52:33.729579Z"}], "thread_id": "Thread-7", "execution_time": 11.226042985916138, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_type", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.marketo.marketo_activity_type_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.workspace_marketing.wk_marketo_activity_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:27.415966Z", "completed_at": "2025-06-09T18:52:27.421087Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:27.421388Z", "completed_at": "2025-06-09T18:52:33.794997Z"}], "thread_id": "Thread-18", "execution_time": 6.379846096038818, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_abm_key_account_list", "compiled": true, "compiled_code": "WITH source AS (\n\n        SELECT * \n        FROM EMBUCKET.sheetload.sheetload_abm_key_account_list_source\n\n        )\n        SELECT * \n        FROM source", "relation_name": "EMBUCKET.legacy.sheetload_abm_key_account_list", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:27.188355Z", "completed_at": "2025-06-09T18:52:27.193453Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:27.194335Z", "completed_at": "2025-06-09T18:52:33.798794Z"}], "thread_id": "Thread-1", "execution_time": 6.612547159194946, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_deleted_mrs", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_deleted_mrs_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_deleted_mrs", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:27.038560Z", "completed_at": "2025-06-09T18:52:27.069417Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:27.078684Z", "completed_at": "2025-06-09T18:52:34.043347Z"}], "thread_id": "Thread-3", "execution_time": 7.014596223831177, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_record_type", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sfdc.sfdc_record_type_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sfdc_record_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:26.988435Z", "completed_at": "2025-06-09T18:52:26.998997Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:27.008675Z", "completed_at": "2025-06-09T18:52:33.786948Z"}], "thread_id": "Thread-28", "execution_time": 6.815618991851807, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_stage", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.sfdc.sfdc_opportunity_stage_source\n\n)\n\nSELECT *\nFROM base", "relation_name": "EMBUCKET.restricted_safe_legacy.sfdc_opportunity_stage", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:23.445374Z", "completed_at": "2025-06-09T18:52:23.452214Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:23.452622Z", "completed_at": "2025-06-09T18:52:33.733078Z"}], "thread_id": "Thread-12", "execution_time": 10.28911018371582, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_accounts", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite.netsuite_accounts_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.netsuite_accounts", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:28.071782Z", "completed_at": "2025-06-09T18:52:28.087194Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:28.087582Z", "completed_at": "2025-06-09T18:52:33.802151Z"}], "thread_id": "Thread-27", "execution_time": 5.7570741176605225, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_fmm_kpi_targets", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_fmm_kpi_targets_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_fmm_kpi_targets", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:31.682092Z", "completed_at": "2025-06-09T18:52:34.051888Z"}], "thread_id": "Thread-25", "execution_time": 2.384276866912842, "adapter_response": {}, "message": "Compilation Error in model sheetload_data_certifications (models/legacy/sheetload/sheetload_data_certifications.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__union_relations (macros/sql/union.sql)\n  > called by macro union_relations (macros/sql/union.sql)\n  > called by model sheetload_data_certifications (models/legacy/sheetload/sheetload_data_certifications.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_data_certifications", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.sheetload_data_certifications", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:23.940051Z", "completed_at": "2025-06-09T18:52:23.970348Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:23.982328Z", "completed_at": "2025-06-09T18:52:32.625571Z"}], "thread_id": "Thread-13", "execution_time": 8.686212062835693, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_currencies", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite.netsuite_currencies_source\n\n)\n\nSELECT *\nFROM source\nWHERE is_fivetran_deleted = FALSE", "relation_name": "EMBUCKET.legacy.netsuite_currencies", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:26.954034Z", "completed_at": "2025-06-09T18:52:26.995755Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:27.017355Z", "completed_at": "2025-06-09T18:52:33.796790Z"}], "thread_id": "Thread-11", "execution_time": 6.852307319641113, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_campaign_member", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sfdc.sfdc_campaign_member_source\n    WHERE is_deleted = FALSE\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sfdc_campaign_member", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:26.047506Z", "completed_at": "2025-06-09T18:52:26.053523Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:26.053893Z", "completed_at": "2025-06-09T18:52:34.048738Z"}], "thread_id": "Thread-30", "execution_time": 8.004314184188843, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_customers", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.netsuite.netsuite_customers_source\n\n)\n\nSELECT *\nFROM source\nWHERE is_fivetran_deleted = FALSE", "relation_name": "EMBUCKET.legacy.netsuite_customers", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:27.025043Z", "completed_at": "2025-06-09T18:52:27.036990Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:27.047129Z", "completed_at": "2025-06-09T18:52:33.738990Z"}], "thread_id": "Thread-15", "execution_time": 6.742524862289429, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_opportunity_contact_role", "compiled": true, "compiled_code": "WITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.sfdc.sfdc_opportunity_contact_role_source\n\n)\n\nSELECT *\nFROM base", "relation_name": "EMBUCKET.legacy.sfdc_opportunity_contact_role", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-25", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.team_yaml_historical", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.team_yaml_historical", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-25", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.workday_hcm_job_profiles", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workday.workday_hcm_job_profiles", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-12", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_team_member", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_team_member", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-27", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.test_stats_e2e_metrics", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.test_stats_e2e_metrics", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_sisense_user_roles", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.sheetload_sisense_user_roles", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:27.031749Z", "completed_at": "2025-06-09T18:52:27.057340Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:27.095686Z", "completed_at": "2025-06-09T18:52:33.793635Z"}], "thread_id": "Thread-4", "execution_time": 6.794214725494385, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sfdc_quote", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sfdc.sfdc_quote_source\n    WHERE is_deleted = FALSE\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sfdc_quote", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-13", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_app_release", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_app_release", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-30", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.snowflake_query_spend_attribution", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.snowflake_query_spend_attribution", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-15", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.workday_hcm_cost_center_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workday.workday_hcm_cost_center_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-25", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_team", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_team", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.snowflake_clustering_spend", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.snowflake_clustering_spend", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:29.772215Z", "completed_at": "2025-06-09T18:52:29.776775Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:29.795400Z", "completed_at": "2025-06-09T18:52:34.448133Z"}], "thread_id": "Thread-22", "execution_time": 4.6765220165252686, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.wk_sales_tableau_rls_roles", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_sales_analytics_tableau_rls_roles_source\n\n)\n\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.workspace_sales.wk_sales_tableau_rls_roles", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:28.119239Z", "completed_at": "2025-06-09T18:52:28.139005Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:28.144904Z", "completed_at": "2025-06-09T18:52:34.457568Z"}], "thread_id": "Thread-20", "execution_time": 6.338994026184082, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.wk_sales_tableau_rls_users", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_sales_analytics_tableau_rls_users_source\n\n)\n\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.workspace_sales.wk_sales_tableau_rls_users", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:28.061961Z", "completed_at": "2025-06-09T18:52:28.083960Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:28.108780Z", "completed_at": "2025-06-09T18:52:35.563795Z"}], "thread_id": "Thread-16", "execution_time": 7.5122199058532715, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_license_md5_to_subscription_mapping", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_license_md5_to_subscription_mapping_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_license_md5_to_subscription_mapping", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:29.724585Z", "completed_at": "2025-06-09T18:52:29.728742Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:29.729009Z", "completed_at": "2025-06-09T18:52:35.654317Z"}], "thread_id": "Thread-17", "execution_time": 5.930362224578857, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_sales_analytics_tableau_rls_roles", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_sales_analytics_tableau_rls_roles_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_sales_analytics_tableau_rls_roles", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.224460Z", "completed_at": "2025-06-09T18:52:34.265391Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.300766Z", "completed_at": "2025-06-09T18:52:35.680718Z"}], "thread_id": "Thread-18", "execution_time": 1.538482904434204, "adapter_response": {}, "message": "Database Error in model sheetload_team_health_data (models/workspaces/workspace_people/restricted/sheetload_team_health_data.sql)\n  000200: DataFusion error: Execution error: schema provider does not support registering tables\n  compiled code at target/run/gitlab_snowflake/models/workspaces/workspace_people/restricted/sheetload_team_health_data.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_team_health_data", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT * \n    FROM EMBUCKET.sheetload.sheetload_team_health_data_source\n),\nrenamed AS (\n    SELECT\n        timestamp::TIMESTAMP                     AS survey_time_at,\n        email_address::VARCHAR                   AS email_address,\n        question::VARCHAR                        AS question,\n        CASE \n            WHEN question = 'Do you understand what results your team needs to deliver?' THEN 'Question 1'\n            WHEN question = 'Does each member on your team understand what results they need to deliver?' THEN 'Question 2'\n            WHEN question = 'Do the members of your team have the right skills/abilities to deliver results?' THEN 'Question 3'\n            WHEN question = 'Does your team have the right resources to deliver results?' THEN 'Question 4'\n            WHEN question = 'Is your team able to pivot and maintain results during time off (PTO, Extended Leave, Position Borrows, unplanned time away, etc.)?' THEN 'Question 5'\n            WHEN question = 'Does your team have a shared system or tool used to monitor and communicate status updates?' THEN 'Question 6'\n            WHEN question = 'Does your team demonstrate open and collaborative communication?' THEN 'Question 7'\n            WHEN question = 'Does your team demonstrate effective cross-functional collaboration?' THEN 'Question 8'\n            ELSE NULL \n        END                                     AS question_number,\n        rating_description::VARCHAR             AS rating_description,\n        rating_value::FLOAT                     AS rating_value,\n        to_timestamp(_updated_at::NUMBER)       AS uploaded_at\n    FROM source\n)\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.restricted_workspace_people.sheetload_team_health_data", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:27.867266Z", "completed_at": "2025-06-09T18:52:27.872569Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:27.872853Z", "completed_at": "2025-06-09T18:52:36.242025Z"}], "thread_id": "Thread-9", "execution_time": 8.376560926437378, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_ga360_custom_dimensions", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_ga360_custom_dimensions_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_ga360_custom_dimensions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:27.813917Z", "completed_at": "2025-06-09T18:52:27.833357Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:27.834443Z", "completed_at": "2025-06-09T18:52:36.249218Z"}], "thread_id": "Thread-32", "execution_time": 8.439005851745605, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_bizible_to_pathfactory_mapping", "compiled": true, "compiled_code": "WITH source AS (\n\n        SELECT * \n        FROM EMBUCKET.sheetload.sheetload_bizible_to_pathfactory_mapping_source\n\n        )\n        SELECT * \n        FROM source", "relation_name": "EMBUCKET.legacy.sheetload_bizible_to_pathfactory_mapping", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:28.352801Z", "completed_at": "2025-06-09T18:52:28.356184Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:28.356459Z", "completed_at": "2025-06-09T18:52:36.267100Z"}], "thread_id": "Thread-21", "execution_time": 7.914945125579834, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_hostnames_to_domains", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_hostnames_to_domains_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_hostnames_to_domains", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.282828Z", "completed_at": "2025-06-09T18:52:36.275953Z"}], "thread_id": "Thread-3", "execution_time": 2.088063955307007, "adapter_response": {}, "message": "Compilation Error in model xactly_commission (models/workspaces/workspace_sales/restricted_safe/xactly_commission.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model xactly_commission (models/workspaces/workspace_sales/restricted_safe/xactly_commission.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_commission", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_commission", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.316634Z", "completed_at": "2025-06-09T18:52:37.632263Z"}], "thread_id": "Thread-4", "execution_time": 3.4151201248168945, "adapter_response": {}, "message": "Compilation Error in model xactly_credit (models/workspaces/workspace_sales/restricted_safe/xactly_credit.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model xactly_credit (models/workspaces/workspace_sales/restricted_safe/xactly_credit.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_credit", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_credit", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:28.092587Z", "completed_at": "2025-06-09T18:52:28.107227Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:28.131246Z", "completed_at": "2025-06-09T18:52:37.739304Z"}], "thread_id": "Thread-8", "execution_time": 9.678766250610352, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_sales_analytics_tableau_rls_users", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_sales_analytics_tableau_rls_users_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_sales_analytics_tableau_rls_users", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:29.833238Z", "completed_at": "2025-06-09T18:52:29.838407Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:29.840216Z", "completed_at": "2025-06-09T18:52:37.952025Z"}], "thread_id": "Thread-26", "execution_time": 8.11939787864685, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_gitlab_contributing_organizations", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_gitlab_contributing_organizations_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_gitlab_contributing_organizations", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:28.014157Z", "completed_at": "2025-06-09T18:52:28.053537Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:28.065387Z", "completed_at": "2025-06-09T18:52:38.262139Z"}], "thread_id": "Thread-31", "execution_time": 10.273998975753784, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_engineering_infra_prod_console_access", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_engineering_infra_prod_console_access_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_engineering_infra_prod_console_access", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:32.411558Z", "completed_at": "2025-06-09T18:52:32.450012Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:32.451093Z", "completed_at": "2025-06-09T18:52:38.237599Z"}], "thread_id": "Thread-23", "execution_time": 5.827875137329102, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_multiple_delivery_types_per_month_charge_ids", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_multiple_delivery_types_per_month_charge_ids_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_multiple_delivery_types_per_month_charge_ids", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.207578Z", "completed_at": "2025-06-09T18:52:34.232364Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.267849Z", "completed_at": "2025-06-09T18:52:38.247291Z"}], "thread_id": "Thread-12", "execution_time": 4.040363788604736, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_attainment_measure", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_attainment_measure_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_attainment_measure", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.194262Z", "completed_at": "2025-06-09T18:52:34.222611Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.250483Z", "completed_at": "2025-06-09T18:52:38.254859Z"}], "thread_id": "Thread-10", "execution_time": 4.143496990203857, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_sisense_users", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_sisense_users_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_sisense_users", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:30.153751Z", "completed_at": "2025-06-09T18:52:30.158450Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:30.158735Z", "completed_at": "2025-06-09T18:52:38.250145Z"}], "thread_id": "Thread-14", "execution_time": 8.097738027572632, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_net_arr_net_iacv_conversion_factors_agg", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_net_arr_net_iacv_conversion_factors_agg_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_net_arr_net_iacv_conversion_factors_agg", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.184175Z", "completed_at": "2025-06-09T18:52:34.234149Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.274882Z", "completed_at": "2025-06-09T18:52:38.253090Z"}], "thread_id": "Thread-1", "execution_time": 4.116636276245117, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_product_maturity_historical", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_product_maturity_historical_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_product_maturity_historical", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:32.125390Z", "completed_at": "2025-06-09T18:52:32.128663Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:32.128935Z", "completed_at": "2025-06-09T18:52:38.394314Z"}], "thread_id": "Thread-29", "execution_time": 6.269523859024048, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_job_roles_prior_to_2020_02", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_job_roles_prior_to_2020_02_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_job_roles_prior_to_2020_02", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.350268Z", "completed_at": "2025-06-09T18:52:34.389394Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.418728Z", "completed_at": "2025-06-09T18:52:38.185736Z"}], "thread_id": "Thread-28", "execution_time": 4.018924713134766, "adapter_response": {}, "message": "Database Error in model wk_sheetload_ta_team_assignment (models/workspaces/workspace_people/restricted/wk_sheetload_ta_team_assignment.sql)\n  000200: DataFusion error: Execution error: schema provider does not support registering tables\n  compiled code at target/run/gitlab_snowflake/models/workspaces/workspace_people/restricted/wk_sheetload_ta_team_assignment.sql", "failures": null, "unique_id": "model.gitlab_snowflake.wk_sheetload_ta_team_assignment", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_ta_team_assignment_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_workspace_people.wk_sheetload_ta_team_assignment", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.338631Z", "completed_at": "2025-06-09T18:52:38.201792Z"}], "thread_id": "Thread-30", "execution_time": 4.028804063796997, "adapter_response": {}, "message": "Compilation Error in model xactly_credit_dedupe (models/workspaces/workspace_sales/restricted_safe/xactly_credit_dedupe.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model xactly_credit_dedupe (models/workspaces/workspace_sales/restricted_safe/xactly_credit_dedupe.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_credit_dedupe", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_credit_dedupe", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.200090Z", "completed_at": "2025-06-09T18:52:34.229076Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.259226Z", "completed_at": "2025-06-09T18:52:38.265521Z"}], "thread_id": "Thread-19", "execution_time": 4.115644931793213, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_zero_dollar_subscription_to_paid_subscription", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_zero_dollar_subscription_to_paid_subscription_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_zero_dollar_subscription_to_paid_subscription", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:32.474311Z", "completed_at": "2025-06-09T18:52:32.479347Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:32.479859Z", "completed_at": "2025-06-09T18:52:38.260035Z"}], "thread_id": "Thread-6", "execution_time": 5.788194894790649, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_net_arr_net_iacv_conversion_factors", "compiled": true, "compiled_code": "\n\nWITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_net_arr_net_iacv_conversion_factors_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_legacy.sheetload_net_arr_net_iacv_conversion_factors", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:35.567115Z", "completed_at": "2025-06-09T18:52:38.271291Z"}], "thread_id": "Thread-16", "execution_time": 2.7451000213623047, "adapter_response": {}, "message": "Compilation Error in model xactly_pos_hierarchy_hist (models/workspaces/workspace_sales/restricted_safe/xactly_pos_hierarchy_hist.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model xactly_pos_hierarchy_hist (models/workspaces/workspace_sales/restricted_safe/xactly_pos_hierarchy_hist.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_hierarchy_hist", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_pos_hierarchy_hist", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:36.333133Z", "completed_at": "2025-06-09T18:52:38.849909Z"}], "thread_id": "Thread-3", "execution_time": 2.535658836364746, "adapter_response": {}, "message": "Compilation Error in model xactly_pos_title_assignment (models/workspaces/workspace_sales/restricted_safe/xactly_pos_title_assignment.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model xactly_pos_title_assignment (models/workspaces/workspace_sales/restricted_safe/xactly_pos_title_assignment.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_title_assignment", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_pos_title_assignment", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.239558Z", "completed_at": "2025-06-09T18:52:34.299684Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.330642Z", "completed_at": "2025-06-09T18:52:38.836447Z"}], "thread_id": "Thread-7", "execution_time": 4.663832902908325, "adapter_response": {}, "message": "Database Error in model sheetload_sdr_bdr_metric_targets (models/legacy/sheetload/sheetload_sdr_bdr_metric_targets.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/legacy/sheetload/sheetload_sdr_bdr_metric_targets.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_sdr_bdr_metric_targets", "compiled": true, "compiled_code": "WITH final AS (\nSELECT *\nFROM EMBUCKET.sheetload.sheetload_sdr_bdr_metric_targets_source\n\n)\n\nSELECT\n      *,\n      '@rkohnke'::VARCHAR       AS created_by,\n      '@rkohnke'::VARCHAR       AS updated_by,\n      '2022-06-16'::DATE        AS model_created_date,\n      '2022-06-16'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM final", "relation_name": "EMBUCKET.legacy.sheetload_sdr_bdr_metric_targets", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.309382Z", "completed_at": "2025-06-09T18:52:34.345476Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.369325Z", "completed_at": "2025-06-09T18:52:38.845434Z"}], "thread_id": "Thread-27", "execution_time": 4.614161968231201, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_attainment_measure_criteria", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_attainment_measure_criteria_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_attainment_measure_criteria", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.218248Z", "completed_at": "2025-06-09T18:52:34.249424Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.291577Z", "completed_at": "2025-06-09T18:52:38.279568Z"}], "thread_id": "Thread-5", "execution_time": 4.1631247997283936, "adapter_response": {}, "message": "Database Error in model sheetload_xactly_credit (models/workspaces/workspace_sales/restricted_safe/sheetload_xactly_credit.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/workspaces/workspace_sales/restricted_safe/sheetload_xactly_credit.sql", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_xactly_credit", "compiled": true, "compiled_code": "WITH final AS (\n\n  SELECT * \n  FROM EMBUCKET.sheetload.sheetload_xactly_credit_source\n\n)\nSELECT\n      *,\n      '@michellecooper'::VARCHAR       AS created_by,\n      '@michellecooper'::VARCHAR       AS updated_by,\n      '2022-06-16'::DATE        AS model_created_date,\n      '2022-06-16'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM final", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.sheetload_xactly_credit", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:32.402786Z", "completed_at": "2025-06-09T18:52:32.410452Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:32.430842Z", "completed_at": "2025-06-09T18:52:38.256654Z"}], "thread_id": "Thread-2", "execution_time": 5.854496002197266, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_location_factor_targets", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_location_factor_targets_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_location_factor_targets", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.353914Z", "completed_at": "2025-06-09T18:52:34.392122Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.427878Z", "completed_at": "2025-06-09T18:52:39.245774Z"}], "thread_id": "Thread-13", "execution_time": 4.989360094070435, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_credit_adjustment", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_credit_adjustment_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_credit_adjustment", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.500751Z", "completed_at": "2025-06-09T18:52:34.509382Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.510901Z", "completed_at": "2025-06-09T18:52:40.031994Z"}], "thread_id": "Thread-22", "execution_time": 5.538402080535889, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_plan_assignment", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_plan_assignment_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_plan_assignment", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_host", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_host", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.version_usage_ping_errors", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.version_usage_ping_errors", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:37.954852Z", "completed_at": "2025-06-09T18:52:40.042712Z"}], "thread_id": "Thread-26", "execution_time": 2.122737169265747, "adapter_response": {}, "message": "Compilation Error in model xactly_pos_part_assignment (models/workspaces/workspace_sales/restricted_safe/xactly_pos_part_assignment.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model xactly_pos_part_assignment (models/workspaces/workspace_sales/restricted_safe/xactly_pos_part_assignment.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_part_assignment", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_pos_part_assignment", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-26", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_amendment", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_amendment", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.347320Z", "completed_at": "2025-06-09T18:52:34.387118Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.406951Z", "completed_at": "2025-06-09T18:52:40.096672Z"}], "thread_id": "Thread-25", "execution_time": 5.781153917312622, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_period_type", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_period_type_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_period_type", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-25", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.zengrc_objective", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.zengrc_objective", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-25", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.zengrc_risk", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.zengrc_risk", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-25", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.version_usage_ping_metadata", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.version_usage_ping_metadata", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-25", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_order_action", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_order_action", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-25", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_ticket_custom_fields", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.zendesk_ticket_custom_fields", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:38.312922Z", "completed_at": "2025-06-09T18:52:40.076748Z"}], "thread_id": "Thread-31", "execution_time": 1.84395432472229, "adapter_response": {}, "message": "Compilation Error in model xactly_quota_assignment (models/workspaces/workspace_sales/restricted_safe/xactly_quota_assignment.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model xactly_quota_assignment (models/workspaces/workspace_sales/restricted_safe/xactly_quota_assignment.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_quota_assignment", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_quota_assignment", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.map_product_tier", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_mapping.map_product_tier", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_accounting_type", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_accounting_type", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.zuora_refund", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.zuora_refund", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__models", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dim_dbt__models", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__current_models", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dim_dbt__current_models", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.fct_dbt__invocations", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.fct_dbt__invocations", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.fct_dbt__model_executions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.fct_dbt__model_executions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__exposures", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dim_dbt__exposures", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.fct_dbt__seed_executions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.fct_dbt__seed_executions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__seeds", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dim_dbt__seeds", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.fct_dbt__test_executions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.fct_dbt__test_executions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__tests", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dim_dbt__tests", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__snapshots", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dim_dbt__snapshots", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-31", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.fct_dbt__snapshot_executions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.fct_dbt__snapshot_executions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.362517Z", "completed_at": "2025-06-09T18:52:34.401115Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.437371Z", "completed_at": "2025-06-09T18:52:40.573474Z"}], "thread_id": "Thread-15", "execution_time": 6.264900207519531, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_participant", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_participant_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_participant", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.125428Z", "completed_at": "2025-06-09T18:52:34.156659Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.157580Z", "completed_at": "2025-06-09T18:52:40.593439Z"}], "thread_id": "Thread-24", "execution_time": 6.5157411098480225, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.sheetload_percent_over_comp_band_historical", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.sheetload.sheetload_percent_over_comp_band_historical_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.sheetload_percent_over_comp_band_historical", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:40.086520Z", "completed_at": "2025-06-09T18:52:40.615944Z"}], "thread_id": "Thread-22", "execution_time": 0.5646827220916748, "adapter_response": {}, "message": "Compilation Error in model xactly_pos_title_assignment_hist (models/workspaces/workspace_sales/restricted_safe/xactly_pos_title_assignment_hist.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model xactly_pos_title_assignment_hist (models/workspaces/workspace_sales/restricted_safe/xactly_pos_title_assignment_hist.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_title_assignment_hist", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_pos_title_assignment_hist", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.505121Z", "completed_at": "2025-06-09T18:52:34.517825Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.521088Z", "completed_at": "2025-06-09T18:52:40.638320Z"}], "thread_id": "Thread-20", "execution_time": 6.140192031860352, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_plan", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_plan_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_plan", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_accounts_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_accounts_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_revenue_contract_schedule", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_revenue_contract_schedule", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.fct_revenue_contract_schedule", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common.fct_revenue_contract_schedule", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_revenue_contract", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_revenue_contract", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_manual_journal_entry_header", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_manual_journal_entry_header", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.fct_waterfall_summary", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common.fct_waterfall_summary", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.fct_manual_journal_entry_line", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common.fct_manual_journal_entry_line", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_hold", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_hold", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_manual_journal_entry_line", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_manual_journal_entry_line", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_revenue_contract_hold", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_revenue_contract_hold", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.354548Z", "completed_at": "2025-06-09T18:52:40.653783Z"}], "thread_id": "Thread-5", "execution_time": 1.4125750064849854, "adapter_response": {}, "message": "Compilation Error in model xactly_pos_part_assignment_hist (models/workspaces/workspace_sales/restricted_safe/xactly_pos_part_assignment_hist.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model xactly_pos_part_assignment_hist (models/workspaces/workspace_sales/restricted_safe/xactly_pos_part_assignment_hist.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_part_assignment_hist", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_pos_part_assignment_hist", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.fct_revenue_contract_hold", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common.fct_revenue_contract_hold", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_accounting_event", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_accounting_event", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_revenue_contract_performance_obligation", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_revenue_contract_performance_obligation", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.257979Z", "completed_at": "2025-06-09T18:52:40.747990Z"}], "thread_id": "Thread-16", "execution_time": 1.5777850151062012, "adapter_response": {}, "message": "Compilation Error in model xactly_pos_relations (models/workspaces/workspace_sales/restricted_safe/xactly_pos_relations.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model xactly_pos_relations (models/workspaces/workspace_sales/restricted_safe/xactly_pos_relations.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_relations", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_pos_relations", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.338510Z", "completed_at": "2025-06-09T18:52:40.715255Z"}], "thread_id": "Thread-2", "execution_time": 1.441648006439209, "adapter_response": {}, "message": "Compilation Error in model xactly_quota_assignment_hist (models/workspaces/workspace_sales/restricted_safe/xactly_quota_assignment_hist.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model xactly_quota_assignment_hist (models/workspaces/workspace_sales/restricted_safe/xactly_quota_assignment_hist.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_quota_assignment_hist", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_quota_assignment_hist", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_revenue_contract_line", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_revenue_contract_line", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_campaign_members_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_campaign_members_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_contacts_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_contacts_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-16", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_account_to_emails_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_account_to_emails_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_email_to_visitor_ids_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_email_to_visitor_ids_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_lead_stage_transitions_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_lead_stage_transitions_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_crm_events_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_crm_events_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_attribution_touchpoints_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_attribution_touchpoints_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-16", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_crm_tasks_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_crm_tasks_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_opp_stage_transitions_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_opp_stage_transitions_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.feature_flags_yaml_latest", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.feature_flags_yaml_latest", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.categories_yaml_latest", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.categories_yaml_latest", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_facts_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_facts_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-16", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_date", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_date", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_leads_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_leads_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_customer_ab_tests_source_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_customer_ab_tests_source_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_user_touchpoints_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_user_touchpoints_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-16", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_form_submits_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_form_submits_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_page_views_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_page_views_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_catalog_resource_versions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_catalog_resource_versions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_gitlab_dotcom_award_emoji", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_gitlab_dotcom_award_emoji", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_bizible_touchpoints_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_bizible_touchpoints_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-16", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_catalog_resources", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_catalog_resources", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_audit_event_details", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.gitlab_dotcom_audit_event_details", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_approvals", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_approvals", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_banned_users", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_banned_users", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_audit_events", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_audit_events", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-16", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_pipeline_artifacts", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_ci_pipeline_artifacts", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_runner_machines", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_ci_runner_machines", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_builds_metadata", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_ci_builds_metadata", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-16", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_namespace_monthly_usages", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_ci_namespace_monthly_usages", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_secure_files", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_ci_secure_files", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_request_diff_commit_users", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_merge_request_diff_commit_users", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_deployments", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_deployments", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-20", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ml_candidates", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_ml_candidates", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:36.305270Z", "completed_at": "2025-06-09T18:52:36.308931Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:36.309212Z", "completed_at": "2025-06-09T18:52:42.521836Z"}], "thread_id": "Thread-21", "execution_time": 6.2172558307647705, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_hierarchy_type_hist", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_pos_hierarchy_type_hist_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_pos_hierarchy_type_hist", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-21", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.suggested_merge_request_reviewers", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.suggested_merge_request_reviewers", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-21", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespaces", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.gitlab_dotcom_namespaces", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-21", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_pages_domains", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_pages_domains", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-21", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_gitlab_dotcom_gpg_signatures", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_gitlab_dotcom_gpg_signatures", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:35.657572Z", "completed_at": "2025-06-09T18:52:35.661685Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:35.661962Z", "completed_at": "2025-06-09T18:52:42.557254Z"}], "thread_id": "Thread-17", "execution_time": 6.90054178237915, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_planrules", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_planrules_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_planrules", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-17", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_labels", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.gitlab_dotcom_labels", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-17", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_settings", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_namespace_settings", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.155004Z", "completed_at": "2025-06-09T18:52:42.501616Z"}], "thread_id": "Thread-19", "execution_time": 3.415782928466797, "adapter_response": {}, "message": "Compilation Error in model xactly_pos_relations_hist (models/workspaces/workspace_sales/restricted_safe/xactly_pos_relations_hist.sql)\n  'agate.rows.Row object' has no attribute 'type'\n  \n  > in macro get_columns_in_relation (macros/adapters/columns.sql)\n  > called by macro default__get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro get_filtered_columns_in_relation (macros/sql/get_filtered_columns_in_relation.sql)\n  > called by macro default__star (macros/sql/star.sql)\n  > called by macro star (macros/sql/star.sql)\n  > called by macro hash_sensitive_columns (macros/sensitive/hash_sensitive_columns.sql)\n  > called by model xactly_pos_relations_hist (models/workspaces/workspace_sales/restricted_safe/xactly_pos_relations_hist.sql)", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_relations_hist", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_pos_relations_hist", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:40.788109Z", "completed_at": "2025-06-09T18:52:40.803056Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:40.806837Z", "completed_at": "2025-06-09T18:52:43.836043Z"}], "thread_id": "Thread-5", "execution_time": 3.133246898651123, "adapter_response": {}, "message": "Database Error in model zendesk_tickets_source (models/sources/zendesk/zendesk_tickets_source.sql)\n  000200: DataFusion error: Error during planning: Internal error: Function 'try_parse_json' failed to match any signature, errors: Error during planning: Function 'try_parse_json' expects NativeType::String but received NativeType::Int32,Error during planning: Function 'try_parse_json' expects 2 arguments but received 1.\n  This was likely caused by a bug in DataFusion's code and we would welcome that you file an bug report in our issue tracker No function matches the given name and argument types 'try_parse_json(Int32)'. You might need to add explicit type casts.\n  \tCandidate functions:\n  \ttry_parse_json(String(1))\n  \ttry_parse_json(String(2))\n  compiled code at target/run/gitlab_snowflake/models/sources/zendesk/zendesk_tickets_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_tickets_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT parse_json(via) as via,\n           try_parse_json(satisfaction_rating) satisfaction_rating,\n           * exclude(via, satisfaction_rating)\n    FROM EMBUCKET.zendesk.zendesk_tickets_dedupe_source\n),\n\nrenamed AS (\n\n    SELECT\n      --ids\n      id                                                                                              AS ticket_id,\n      organization_id,\n      assignee_id,\n      brand_id,\n      group_id,\n      requester_id,\n      submitter_id,\n      ticket_form_id::NUMBER                                                                          AS ticket_form_id,\n\n      --fields\n      status                                                                                          AS ticket_status,\n      lower(priority)                                                                                 AS ticket_priority,\n      md5(subject)                                                                                    AS ticket_subject,\n      md5(recipient)                                                                                  AS ticket_recipient,\n      url                                                                                             AS ticket_url,\n      tags                                                                                            AS ticket_tags,\n      description                                                                                     AS ticket_description,\n      type                                                                                            AS ticket_type,\n      -- added ':score'\n      IFF(satisfaction_rating:id::VARCHAR = 'null', NULL , satisfaction_rating:id::VARCHAR )          AS satisfaction_rating_id,\n      COALESCE(satisfaction_rating:score::VARCHAR , 'unoffered')                                      AS satisfaction_rating_score,\n      via:channel::VARCHAR                                                                            AS submission_channel,\n      IFF(custom_fields::VARCHAR = '[{}]' , NULL ,  custom_fields::VARCHAR )                          AS ticket_custom_field_values,\n      --dates\n      updated_at::DATE                                                                                AS date_updated,\n      created_at                                                                                      AS ticket_created_at\n\n    FROM source\n)\n\nSELECT *\nFROM renamed", "relation_name": "EMBUCKET.zendesk.zendesk_tickets_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_milestones", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.gitlab_dotcom_milestones", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_environments", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.gitlab_dotcom_environments", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:36.252766Z", "completed_at": "2025-06-09T18:52:36.258096Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:36.258385Z", "completed_at": "2025-06-09T18:52:42.573949Z"}], "thread_id": "Thread-32", "execution_time": 6.32269811630249, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_credit_totals", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_credit_totals_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_credit_totals", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-32", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ml_experiments", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_ml_experiments", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_notification_settings", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_notification_settings", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:40.793384Z", "completed_at": "2025-06-09T18:52:40.806125Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:40.815355Z", "completed_at": "2025-06-09T18:52:43.818887Z"}], "thread_id": "Thread-22", "execution_time": 3.0562002658843994, "adapter_response": {}, "message": "Database Error in model zendesk_ticket_audits_source (models/sources/zendesk/zendesk_ticket_audits_source.sql)\n  000200: DataFusion error: This feature is not implemented: Unsupported ast node Function { lateral: true, name: ObjectName([Identifier(Ident { value: \"FLATTEN\", quote_style: None, span: Span(Location(1,540)..Location(1,547)) })]), args: [Named { name: Ident { value: \"INPUT\", quote_style: None, span: Span(Location(1,548)..Location(1,553)) }, arg: Expr(Function(Function { name: ObjectName([Identifier(Ident { value: \"parse_json\", quote_style: None, span: Span(Location(1,557)..Location(1,567)) })]), uses_odbc_syntax: false, parameters: None, args: List(FunctionArgumentList { duplicate_treatment: None, args: [Unnamed(Expr(Identifier(Ident { value: \"events\", quote_style: None, span: Span(Location(1,568)..Location(1,574)) })))], clauses: [] }), filter: None, null_treatment: None, over: None, within_group: [] })), operator: RightArrow }, Named { name: Ident { value: \"OUTER\", quote_style: None, span: Span(Location(1,577)..Location(1,582)) }, arg: Expr(Value(ValueWithSpan { value: Boolean(false), span: Span(Location(1,586)..Location(1,591)) })), operator: RightArrow }], alias: Some(TableAlias { name: Ident { value: \"flat_events\", quote_style: None, span: Span(Location(1,596)..Location(1,607)) }, columns: [] }) } in create_relation\n  compiled code at target/run/gitlab_snowflake/models/sources/zendesk/zendesk_ticket_audits_source.sql", "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_ticket_audits_source", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zendesk.zendesk_ticket_audits_dedupe_source\n    \n),\n\nflattened AS (\n\n    SELECT\n      -- primary data\n      source.id                                   AS audit_id,\n      source.created_at                           AS audit_created_at,\n      -- foreign keys\n      source.author_id                            AS author_id,\n      source.ticket_id                            AS ticket_id,\n      -- logical data\n      flat_events.value['field_name']             AS audit_field,\n      flat_events.value['type']                   AS audit_type,\n      flat_events.value['value']                  AS audit_value,\n      flat_events.value['id']                     AS audit_event_id\n\n    FROM source,\n    LATERAL FLATTEN(INPUT => parse_json(events), OUTER => false) flat_events\n    -- currently scoped to only sla_policy and priority\n    WHERE flat_events.value['field_name'] IN ('sla_policy', 'priority', 'is_public')\n    AND events IS NOT NULL\n)\n\nSELECT *\nFROM flattened", "relation_name": "EMBUCKET.zendesk.zendesk_ticket_audits_source", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.087972Z", "completed_at": "2025-06-09T18:52:39.130595Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.147478Z", "completed_at": "2025-06-09T18:52:44.092709Z"}], "thread_id": "Thread-23", "execution_time": 5.031407833099365, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_credit_type", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_credit_type_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_credit_type", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_group_audit_events", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_group_audit_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:36.244474Z", "completed_at": "2025-06-09T18:52:36.284695Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:36.285126Z", "completed_at": "2025-06-09T18:52:44.095850Z"}], "thread_id": "Thread-9", "execution_time": 7.851975917816162, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_credit_held", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_credit_held_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_credit_held", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerability_reads", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_vulnerability_reads", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_identities", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_identities", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_gitlab_dotcom_namespace_details", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.wk_gitlab_dotcom_namespace_details", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_projects", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.gitlab_dotcom_projects", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_member_roles_v", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_member_roles_v", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_fct_direct_membership", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_fct_direct_membership", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_repository_languages", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_repository_languages", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:37.741653Z", "completed_at": "2025-06-09T18:52:37.746167Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:37.747631Z", "completed_at": "2025-06-09T18:52:44.697868Z"}], "thread_id": "Thread-8", "execution_time": 6.9568047523498535, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_hierarchy", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_pos_hierarchy_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_pos_hierarchy", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:37.656845Z", "completed_at": "2025-06-09T18:52:37.660490Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:37.660803Z", "completed_at": "2025-06-09T18:52:44.710486Z"}], "thread_id": "Thread-4", "execution_time": 7.054372072219849, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_position", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_position_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_position", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_gitlab_dotcom_onboarding_progresses", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.wk_gitlab_dotcom_onboarding_progresses", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_settings", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_project_settings", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:35.694846Z", "completed_at": "2025-06-09T18:52:35.702718Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:35.703598Z", "completed_at": "2025-06-09T18:52:44.089412Z"}], "thread_id": "Thread-18", "execution_time": 8.3958420753479, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_comp_order_item", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_comp_order_item_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_comp_order_item", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_gitlab_dotcom_plan", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_gitlab_dotcom_plan", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.map_project_namespace", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.map_project_namespace", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:34.433186Z", "completed_at": "2025-06-09T18:52:34.452123Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:34.464809Z", "completed_at": "2025-06-09T18:52:42.567837Z"}], "thread_id": "Thread-11", "execution_time": 8.209222793579102, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_comp_order_item_detail", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_comp_order_item_detail_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_comp_order_item_detail", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_resource_label_events", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_resource_label_events", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.141270Z", "completed_at": "2025-06-09T18:52:39.182778Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.203593Z", "completed_at": "2025-06-09T18:52:44.707135Z"}], "thread_id": "Thread-30", "execution_time": 5.572461128234863, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_plan_approval", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_plan_approval_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_plan_approval", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_fct_group_share", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.wk_fct_group_share", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_plans", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_plans", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_email_bounced_soft_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_marketo_activity_email_bounced_soft_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_ops_labels_xf", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_ops_labels_xf", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_locality", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_locality", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_fill_out_form_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_marketo_activity_fill_out_form_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_sfdc_activity_updated_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_marketo_activity_sfdc_activity_updated_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_sync_lead_to_sfdc_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_marketo_activity_sync_lead_to_sfdc_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-18", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_resource_milestone_events", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_resource_milestone_events", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_push_lead_to_marketo_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_marketo_activity_push_lead_to_marketo_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_statistics", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_project_statistics", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_email_bounced_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_marketo_activity_email_bounced_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-30", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_new_lead_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_marketo_activity_new_lead_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_unsubscribe_email_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_marketo_activity_unsubscribe_email_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_visit_webpage_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_marketo_activity_visit_webpage_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_send_alert_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_marketo_activity_send_alert_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_user_details", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_user_details", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-18", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_sfdc_activity_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_marketo_activity_sfdc_activity_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_marketo_activity_click_link_pii", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_workspace_marketing.wk_marketo_activity_click_link_pii", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.pump_opportunity_forecasting_scores", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.pumps_sensitive.pump_opportunity_forecasting_scores", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_resource_weight_events", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_resource_weight_events", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_gitlab_dotcom_reviews", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_gitlab_dotcom_reviews", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscription_add_on_purchases", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_subscription_add_on_purchases", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.qualtrics_contact_mailing_send", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.qualtrics_contact_mailing_send", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_gitlab_dotcom_sprints_internal_only", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.wk_gitlab_dotcom_sprints_internal_only", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscription_user_add_on_assignments", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_subscription_user_add_on_assignments", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_subscription_add_ons", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_subscription_add_ons", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_gitlab_dotcom_security_scans", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_gitlab_dotcom_security_scans", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_gitlab_dotcom_ssh_signatures", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.wk_gitlab_dotcom_ssh_signatures", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.performance_indicators_yaml_historical", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.performance_indicators_yaml_historical", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.sensitive_queries_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.data_classification.sensitive_queries_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.mart_marketo_person", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_mart_marketing.mart_marketo_person", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.roles_yaml_latest", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.roles_yaml_latest", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerability_identifiers", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_vulnerability_identifiers", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_system_note_metadata", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.gitlab_dotcom_system_note_metadata", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_bizible_marketing_channel_path", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_bizible_marketing_channel_path", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_quote", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_quote", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.sensitive_queries_details", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.data_classification.sensitive_queries_details", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_dr_partner_engagement", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_dr_partner_engagement", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_zoekt_enabled_namespaces", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_zoekt_enabled_namespaces", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_author", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dim_author", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_todos", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_todos", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_book", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dim_book", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_user_preferences", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_user_preferences", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_vulnerability_state_transitions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_vulnerability_state_transitions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_zoekt_indices", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_zoekt_indices", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.netsuite_transaction_lines_xf", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_legacy.netsuite_transaction_lines_xf", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_app_release_major_minor", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_app_release_major_minor", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.snowflake_query_metering", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.snowflake_query_metering", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.ga360_session_custom_dimension_xf", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.ga360_session_custom_dimension_xf", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.ga360_session_hit_custom_dimension_xf", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.ga360_session_hit_custom_dimension_xf", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_host", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_host", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_amendment", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_amendment", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_product_tier", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_product_tier", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dbt_node_executions", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dbt_node_executions", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.date_details", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.date_details", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_app_release", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_app_release", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.fct_available_to_renew_snapshot_model", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common.fct_available_to_renew_snapshot_model", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_user_custom_attributes", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_user_custom_attributes", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_team_member", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_team_member", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_publisher", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dim_publisher", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.mart_available_to_renew_snapshot_model", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common_mart_finance.mart_available_to_renew_snapshot_model", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_gitlab_dotcom_web_hooks", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_product.wk_gitlab_dotcom_web_hooks", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.fct_performance_indicator_targets", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.fct_performance_indicator_targets", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_gitlab_dotcom_application_settings_monthly", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_gitlab_dotcom_application_settings_monthly", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_internal_events_ping_namespace", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_internal_events_ping_namespace", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.map_ci_runner_project", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_mapping.map_ci_runner_project", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.rpt_event_xmau_metric_monthly_snapshot_model", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_mart_product.rpt_event_xmau_metric_monthly_snapshot_model", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.rpt_ping_metric_totals_w_estimates_monthly_snapshot_model", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_mart_product.rpt_ping_metric_totals_w_estimates_monthly_snapshot_model", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sales_date_details", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_sales.date_details", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_ticket_audits", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.zendesk_ticket_audits", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.mart_retention_parent_account_snapshot_model", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common_mart_sales.mart_retention_parent_account_snapshot_model", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_saas_usage_ping_namespace", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_saas_usage_ping_namespace", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_ticket_custom_field_values_sensitive", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.sensitive.zendesk_ticket_custom_field_values_sensitive", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_subscription_snapshot_model", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_subscription_snapshot_model", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.team_yaml_latest", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.team_yaml_latest", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.mart_invoices_in_preview_monthly", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common_mart_finance.mart_invoices_in_preview_monthly", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.mart_arr_snapshot_model", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common_mart_sales.mart_arr_snapshot_model", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_plan", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_plan", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_ticket_tags", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.zendesk_ticket_tags", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_bizible_marketing_channel_path", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_bizible_marketing_channel_path", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_lineage", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_namespace_lineage", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_namespace_plan_hist", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common_prep.prep_namespace_plan_hist", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_resource_weight_events_xf", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_resource_weight_events_xf", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sensitive_queries_source", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.wk_sensitive_queries_source", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_resource_milestone_events_xf", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_resource_milestone_events_xf", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dbt_invocation_summary", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dbt_invocation_summary", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dbt_node_summary", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.dbt_node_summary", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_historical_daily", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.preparation.gitlab_dotcom_namespace_historical_daily", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.wk_sensitive_queries_details", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data.wk_sensitive_queries_details", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_app_release_major_minor", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_app_release_major_minor", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_dr_partner_engagement", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_dr_partner_engagement", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.ga360_session", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.ga360_session", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_statistics_historical_monthly", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.preparation.gitlab_dotcom_namespace_statistics_historical_monthly", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.ga360_session_hit", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.ga360_session_hit", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_product_tier", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_product_tier", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_namespace_storage_statistics_historical_monthly", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.preparation.gitlab_dotcom_namespace_storage_statistics_historical_monthly", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.rpt_available_to_renew_8th_calendar_day", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common_mart_finance.rpt_available_to_renew_8th_calendar_day", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_statistic_historical_monthly", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_statistic_historical_monthly", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.rpt_available_to_renew_45th_calendar_day", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common_mart_finance.rpt_available_to_renew_45th_calendar_day", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_historical_monthly", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.gitlab_dotcom.gitlab_dotcom_project_historical_monthly", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.rpt_available_to_renew_combined", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common_mart_finance.rpt_available_to_renew_combined", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.rpt_available_to_renew_top_monthly_changes", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common_mart_finance.rpt_available_to_renew_top_monthly_changes", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.fct_ping_namespace_metric", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.fct_ping_namespace_metric", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.prep_saas_flattened_metrics", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_data_science.prep_saas_flattened_metrics", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.zendesk_ticket_custom_field_values_clean", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.zendesk_ticket_custom_field_values_clean", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-11", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_labels_xf", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_labels_xf", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-19", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_milestones_xf", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.gitlab_dotcom_milestones_xf", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-8", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.dim_namespace_plan_hist", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.common.dim_namespace_plan_hist", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-22", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.ga360_session_xf", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.legacy.ga360_session_xf", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.ga_session_hit", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_marketing.ga_session_hit", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-23", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_project_statistic_monthly_snapshot", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.workspace_engineering.gitlab_dotcom_project_statistic_monthly_snapshot", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.289729Z", "completed_at": "2025-06-09T18:52:39.330782Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.361952Z", "completed_at": "2025-06-09T18:52:45.021591Z"}], "thread_id": "Thread-6", "execution_time": 5.790937900543213, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_hierarchy_type", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_pos_hierarchy_type_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_pos_hierarchy_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.108000Z", "completed_at": "2025-06-09T18:52:39.139807Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.171901Z", "completed_at": "2025-06-09T18:52:45.195847Z"}], "thread_id": "Thread-12", "execution_time": 6.088640928268433, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_period", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_period_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_period", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.099996Z", "completed_at": "2025-06-09T18:52:39.138043Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.167135Z", "completed_at": "2025-06-09T18:52:45.199384Z"}], "thread_id": "Thread-14", "execution_time": 6.1000471115112305, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_quota_totals", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_quota_totals_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_quota_totals", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.310454Z", "completed_at": "2025-06-09T18:52:39.370368Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.390386Z", "completed_at": "2025-06-09T18:52:46.503826Z"}], "thread_id": "Thread-27", "execution_time": 7.226404905319214, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_rel_type_hist", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_pos_rel_type_hist_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_pos_rel_type_hist", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.410992Z", "completed_at": "2025-06-09T18:52:39.419400Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.421304Z", "completed_at": "2025-06-09T18:52:46.508906Z"}], "thread_id": "Thread-13", "execution_time": 7.131096839904785, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_quota_relationship", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_quota_relationship_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_quota_relationship", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:40.149180Z", "completed_at": "2025-06-09T18:52:40.164871Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:40.165866Z", "completed_at": "2025-06-09T18:52:46.528638Z"}], "thread_id": "Thread-25", "execution_time": 6.392559766769409, "adapter_response": {}, "message": "Database Error in model dim_order_action_central_sandbox (models/workspaces/workspace_finance/restricted_safe/dim_order_action_central_sandbox.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/workspaces/workspace_finance/restricted_safe/dim_order_action_central_sandbox.sql", "failures": null, "unique_id": "model.gitlab_snowflake.dim_order_action_central_sandbox", "compiled": true, "compiled_code": "\n\n\nWITH base AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora_central_sandbox.zuora_central_sandbox_order_action_source\n    WHERE is_deleted = FALSE\n\n), final AS (\n\n    SELECT\n      \n      order_action_id                   AS dim_order_action_id,\n      order_id                          AS dim_order_id,\n      subscription_id                   AS dim_subscription_id,\n      subscription_version_amendment_id AS dim_amendment_id,\n      type                              AS order_action_type,\n      sequence                          AS order_action_sequence,\n      auto_renew                        AS is_auto_renew,\n      cancellation_policy,\n      term_type,\n      created_date                      AS order_action_created_date,\n      customer_acceptance_date,\n      contract_effective_date,\n      service_activation_date,\n      current_term,\n      current_term_period_type,\n      renewal_term,\n      renewal_term_period_type,\n      renew_setting                     AS renewal_setting,\n      term_start_date\n\n    FROM base\n\n)\n\nSELECT\n      *,\n      '@michellecooper'::VARCHAR       AS created_by,\n      '@michellecooper'::VARCHAR       AS updated_by,\n      '2022-03-31'::DATE        AS model_created_date,\n      '2022-03-31'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM final", "relation_name": "EMBUCKET.restricted_safe_workspace_finance.dim_order_action_central_sandbox", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.183268Z", "completed_at": "2025-06-09T18:52:39.215421Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.235635Z", "completed_at": "2025-06-09T18:52:46.979533Z"}], "thread_id": "Thread-29", "execution_time": 7.85054087638855, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_rule", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_rule_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_rule", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.344804Z", "completed_at": "2025-06-09T18:52:39.370085Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.380098Z", "completed_at": "2025-06-09T18:52:46.983424Z"}], "thread_id": "Thread-7", "execution_time": 7.706309080123901, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_pos_rel_type", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_pos_rel_type_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_pos_rel_type", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.223073Z", "completed_at": "2025-06-09T18:52:39.255340Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.284629Z", "completed_at": "2025-06-09T18:52:46.989021Z"}], "thread_id": "Thread-10", "execution_time": 7.863313913345337, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_quota", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_quota_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_quota", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.247840Z", "completed_at": "2025-06-09T18:52:39.297240Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.319794Z", "completed_at": "2025-06-09T18:52:46.991637Z"}], "thread_id": "Thread-1", "execution_time": 7.793555974960327, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_role", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_role_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_role", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:40.144058Z", "completed_at": "2025-06-09T18:52:40.157407Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:40.158295Z", "completed_at": "2025-06-09T18:52:46.992917Z"}], "thread_id": "Thread-26", "execution_time": 6.851715087890625, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_quota_hist", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_quota_hist_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_quota_hist", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:40.920249Z", "completed_at": "2025-06-09T18:52:40.924280Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:40.925233Z", "completed_at": "2025-06-09T18:52:46.994409Z"}], "thread_id": "Thread-20", "execution_time": 6.082074880599976, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_deployment_merge_requests", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_deployment_merge_requests_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_deployment_merge_requests", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:40.904756Z", "completed_at": "2025-06-09T18:52:40.937877Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:40.938344Z", "completed_at": "2025-06-09T18:52:46.995914Z"}], "thread_id": "Thread-16", "execution_time": 6.105656147003174, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_subscriptions_projects", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_subscriptions_projects_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_ci_subscriptions_projects", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.266623Z", "completed_at": "2025-06-09T18:52:39.301515Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.332144Z", "completed_at": "2025-06-09T18:52:46.997693Z"}], "thread_id": "Thread-3", "execution_time": 7.764675140380859, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_position_hist", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_position_hist_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_position_hist", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:39.209428Z", "completed_at": "2025-06-09T18:52:39.246811Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:39.278778Z", "completed_at": "2025-06-09T18:52:47.005808Z"}], "thread_id": "Thread-28", "execution_time": 7.816649913787842, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.xactly_user", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.legacy.xactly_user_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.restricted_safe_workspace_sales.xactly_user", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:40.897889Z", "completed_at": "2025-06-09T18:52:40.911277Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:40.913590Z", "completed_at": "2025-06-09T18:52:47.008438Z"}], "thread_id": "Thread-2", "execution_time": 6.113474130630493, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_ci_sources_pipelines", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_ci_sources_pipelines_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_ci_sources_pipelines", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:40.222800Z", "completed_at": "2025-06-09T18:52:40.227764Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:40.228156Z", "completed_at": "2025-06-09T18:52:47.018528Z"}], "thread_id": "Thread-31", "execution_time": 6.808885812759399, "adapter_response": {}, "message": "Database Error in model dim_invoice (models/common/dimensions_local/financial/dim_invoice.sql)\n  000200: DataFusion error: type_coercion\n  caused by\n  Error during planning: Cannot infer common argument type for comparison operation Boolean = Utf8\n  compiled code at target/run/gitlab_snowflake/models/common/dimensions_local/financial/dim_invoice.sql", "failures": null, "unique_id": "model.gitlab_snowflake.dim_invoice", "compiled": true, "compiled_code": "\n\nWITH zuora_invoice AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora.zuora_invoice_source\n    WHERE is_deleted = 'FALSE'\n\n), final_invoice AS (\n\n    SELECT\n\n      --keys\n      invoice_id            AS dim_invoice_id,\n      invoice_number,\n\n      -- invoice metadata\n      status,\n      comments,\n      includes_one_time,\n      includesrecurring,\n      includes_usage,\n      transferred_to_accounting,\n\n      -- invoice dates\n      invoice_date,\n      due_date,\n      last_email_sent_date,\n      posted_date,\n      target_date,\n\n      -- metadata\n      created_by_id,\n      created_date,\n      posted_by,\n      source,\n      source_id,\n      updated_by_id,\n      updated_date\n\n    FROM zuora_invoice\n\n)\n\nSELECT\n      *,\n      '@mcooperDD'::VARCHAR       AS created_by,\n      '@mcooperDD'::VARCHAR       AS updated_by,\n      '2021-01-20'::DATE        AS model_created_date,\n      '2021-01-20'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM final_invoice", "relation_name": "EMBUCKET.common.dim_invoice", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-9", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.gitlab_snowflake.mart_historical_balance_by_payment_terms_bucket_monthly", "compiled": false, "compiled_code": null, "relation_name": "EMBUCKET.restricted_safe_common_mart_finance.mart_historical_balance_by_payment_terms_bucket_monthly", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:40.577300Z", "completed_at": "2025-06-09T18:52:40.581075Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:40.581365Z", "completed_at": "2025-06-09T18:52:47.070119Z"}], "thread_id": "Thread-15", "execution_time": 6.493448972702026, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_invoice_item", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora.zuora_invoice_item_source\n\n)\n\nSELECT *\nFROM source\nWHERE is_deleted = FALSE", "relation_name": "EMBUCKET.restricted_safe_legacy.zuora_invoice_item", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:44.624863Z", "completed_at": "2025-06-09T18:52:44.658788Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:44.659230Z", "completed_at": "2025-06-09T18:52:47.078910Z"}], "thread_id": "Thread-32", "execution_time": 2.4649109840393066, "adapter_response": {}, "message": "Database Error in model prep_issue_severity (models/common_prep/prep_issue_severity.sql)\n  000200: DataFusion error: Error during planning: Inserting query must have the same schema with the table.\n  compiled code at target/run/gitlab_snowflake/models/common_prep/prep_issue_severity.sql", "failures": null, "unique_id": "model.gitlab_snowflake.prep_issue_severity", "compiled": true, "compiled_code": "\n\n\nWITH gitlab_dotcom_issue_severity_source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_issuable_severities_source\n\n), renamed AS (\n\n    SELECT\n      gitlab_dotcom_issue_severity_source.issue_severity_id     AS dim_issue_severity_id,\n      gitlab_dotcom_issue_severity_source.issue_id              AS issue_id,\n      gitlab_dotcom_issue_severity_source.severity              AS severity\n    FROM gitlab_dotcom_issue_severity_source\n\n)\n\nSELECT\n      *,\n      '@dtownsend'::VARCHAR       AS created_by,\n      '@michellecooper'::VARCHAR       AS updated_by,\n      '2021-08-04'::DATE        AS model_created_date,\n      '2023-09-29'::DATE        AS model_updated_date,\n      CURRENT_TIMESTAMP()               AS dbt_updated_at,\n\n    \n\n        \n\n            CURRENT_TIMESTAMP()               AS dbt_created_at\n\n        \n    \n\n    FROM renamed", "relation_name": "EMBUCKET.common_prep.prep_issue_severity", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:44.785913Z", "completed_at": "2025-06-09T18:52:44.799437Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:44.818289Z", "completed_at": "2025-06-09T18:52:47.734366Z"}], "thread_id": "Thread-30", "execution_time": 2.9620418548583984, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_programming_languages", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_programming_languages_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_programming_languages", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:40.595831Z", "completed_at": "2025-06-09T18:52:40.599905Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:40.600182Z", "completed_at": "2025-06-09T18:52:47.780524Z"}], "thread_id": "Thread-24", "execution_time": 7.185306787490845, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.zuora_discount_applied_metrics", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.zuora.zuora_discount_applied_metrics_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.zuora_discount_applied_metrics", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:42.582773Z", "completed_at": "2025-06-09T18:52:43.918306Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:43.918588Z", "completed_at": "2025-06-09T18:52:47.868437Z"}], "thread_id": "Thread-17", "execution_time": 5.287856101989746, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_epic_issues", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_epic_issues_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_epic_issues", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:44.803866Z", "completed_at": "2025-06-09T18:52:44.835806Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:44.836102Z", "completed_at": "2025-06-09T18:52:48.068863Z"}], "thread_id": "Thread-18", "execution_time": 3.279026985168457, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_saml_providers", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_saml_providers_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_saml_providers", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:42.531322Z", "completed_at": "2025-06-09T18:52:42.538201Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:42.542701Z", "completed_at": "2025-06-09T18:52:48.370088Z"}], "thread_id": "Thread-21", "execution_time": 5.8396241664886475, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_fork_network_members", "compiled": true, "compiled_code": "WITH source AS (\n\tSELECT *\n\tFROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_fork_network_members_source\n)\nSELECT *\nFROM source", "relation_name": "EMBUCKET.workspace_product.gitlab_dotcom_fork_network_members", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:44.632329Z", "completed_at": "2025-06-09T18:52:44.646237Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:44.666295Z", "completed_at": "2025-06-09T18:52:47.702859Z"}], "thread_id": "Thread-5", "execution_time": 3.0711660385131836, "adapter_response": {"_message": "ok 1", "code": "ok", "rows_affected": 1}, "message": "ok 1", "failures": null, "unique_id": "model.gitlab_snowflake.gitlab_dotcom_merge_request_diffs", "compiled": true, "compiled_code": "WITH source AS (\n\n    SELECT *\n    FROM EMBUCKET.gitlab_dotcom.gitlab_dotcom_merge_request_diffs_source\n\n)\n\nSELECT *\nFROM source", "relation_name": "EMBUCKET.legacy.gitlab_dotcom_merge_request_diffs", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:48.518439Z", "completed_at": "2025-06-09T18:52:48.526444Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:48.526866Z", "completed_at": "2025-06-09T18:52:48.526868Z"}], "thread_id": "main", "execution_time": 0.008429, "adapter_response": {}, "message": "gitlab_snowflake.on-run-end.0 passed", "failures": 0, "unique_id": "operation.gitlab_snowflake.gitlab_snowflake-on-run-end-0", "compiled": true, "compiled_code": "", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:48.527310Z", "completed_at": "2025-06-09T18:52:48.533768Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:48.534098Z", "completed_at": "2025-06-09T18:52:50.168244Z"}], "thread_id": "main", "execution_time": 1.640934, "adapter_response": {}, "message": "gitlab_snowflake.on-run-end.1 passed", "failures": 0, "unique_id": "operation.gitlab_snowflake.gitlab_snowflake-on-run-end-1", "compiled": true, "compiled_code": "\n    \n        select 1 as test\n    \n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-09T18:52:50.168612Z", "completed_at": "2025-06-09T18:52:50.171523Z"}, {"name": "execute", "started_at": "2025-06-09T18:52:50.171815Z", "completed_at": "2025-06-09T18:52:50.171817Z"}], "thread_id": "main", "execution_time": 0.003205, "adapter_response": {}, "message": "gitlab_snowflake.on-run-end.2 passed", "failures": 0, "unique_id": "operation.gitlab_snowflake.gitlab_snowflake-on-run-end-2", "compiled": true, "compiled_code": "", "relation_name": null, "batch_results": null}], "elapsed_time": 418.84072279930115, "args": {"print": true, "exclude": [], "indirect_selection": "eager", "full_refresh": true, "require_resource_names_without_spaces": false, "strict_mode": false, "version_check": true, "quiet": false, "write_json": true, "log_level": "info", "state_modified_compare_vars": false, "introspect": true, "cache_selected_only": false, "require_batched_execution_for_custom_microbatch_strategy": false, "select": ["result:success"], "send_anonymous_usage_stats": true, "empty": false, "require_nested_cumulative_type_params": false, "source_freshness_run_project_hooks": false, "favor_state": false, "which": "run", "log_path": "/Users/oleksandrmazur/0.mazuros/3.Jobs/freshstart/embucket/test/dbt_integration_tests/dbt-gitlab/logs", "log_format_file": "debug", "use_colors": true, "vars": {}, "show_resource_report": false, "log_format": "default", "profiles_dir": "profile", "require_explicit_package_overrides_for_builtin_materializations": true, "log_level_file": "debug", "printer_width": 80, "require_yaml_configuration_for_mf_time_spines": false, "state": "target_to_run", "skip_nodes_if_on_run_start_fails": false, "invocation_command": "dbt run --full-refresh --select result:success --state target_to_run", "partial_parse": true, "warn_error_options": {"include": [], "exclude": []}, "defer": false, "state_modified_compare_more_unrendered_values": false, "static_parser": true, "partial_parse_file_diff": true, "macro_debugging": false, "populate_cache": true, "log_file_max_bytes": 10485760, "use_colors_file": true, "target": "embucket", "project_dir": "/Users/oleksandrmazur/0.mazuros/3.Jobs/freshstart/embucket/test/dbt_integration_tests/dbt-gitlab"}}