services:
  embucket:
    image: ghcr.io/embucket/embucket:experimental
    container_name: embucket-benchmark
    environment:
      # Iceberg Catalog settings
      - CATALOG_URL=${CATALOG_URL}
      # Server address for UI
      - SERVER_ADDRESS=${SERVER_ADDRESS}
      # Vite API URL for UI
      - VITE_API_URL=${VITE_API_URL}
      # CORS settings for UI
      - CORS_ENABLED=true
      - CORS_ALLOW_ORIGIN=${CORS_ALLOW_ORIGIN}
      # JWT secret for UI
      - JWT_SECRET=embucket-benchmark-secret-key
      # S3 storage backend
      - OBJECT_STORE_BACKEND=s3
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ALLOW_HTTP=true
      # Nothing created by default
      - NO_BOOTSTRAP=true
    env_file:
      - .env
    ports:
      - "8080:8080"
      - "3000:3000"
    networks:
      - embucket-net
    restart: unless-stopped

  db-init:
    image: python:3.11-slim
    container_name: embucket-benchmark-db-init
    environment:
      - EMBUCKET_HOST=embucket-benchmark
      - EMBUCKET_PORT=3000
      - DATABASE_NAME=${DATABASE_NAME}
      - SCHEMA_NAME=${SCHEMA_NAME}
      - VOLUME_NAME=${VOLUME_NAME}
      - S3_BUCKET=${S3_BUCKET}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - EMBUCKET_USER=${EMBUCKET_USER:-embucket}
      - EMBUCKET_PASSWORD=${EMBUCKET_PASSWORD:-embucket}
    env_file:
      - .env
    volumes:
      - ./docker:/docker:ro
    depends_on:
      - embucket
    networks:
      - embucket-net
    restart: "no"
    command: >
      /bin/sh -c "
        echo 'Installing dependencies...' &&
        pip install requests &&
        echo 'Checking mounted directory...' &&
        ls -la /docker/ &&
        echo 'Looking for db_init.py file...' &&
        find /docker -name 'db_init.py' -type f &&
        echo 'Copying script to working directory...' &&
        if [ -f /docker/db_init.py ]; then
          cp /docker/db_init.py /tmp/db_init.py
        else
          echo 'ERROR: db_init.py not found as a file'
          exit 1
        fi &&
        echo 'Verifying copied script...' &&
        ls -la /tmp/db_init.py &&
        echo 'Starting database initialization...' &&
        cd /tmp &&
        python3 db_init.py
      "

networks:
  embucket-net:
    driver: bridge
