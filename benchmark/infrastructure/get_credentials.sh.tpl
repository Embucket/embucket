#!/bin/bash

# Script to assume IAM role and get temporary credentials for Embucket
# This script is generated by Terraform and runs on the EC2 instance

ROLE_ARN="${role_arn}"
AWS_REGION="${aws_region}"
SESSION_NAME="embucket-benchmark-session-$(date +%s)"

echo "Assuming role: $ROLE_ARN"

# Get temporary credentials by assuming the role
CREDENTIALS=$(aws sts assume-role \
    --role-arn "$ROLE_ARN" \
    --role-session-name "$SESSION_NAME" \
    --region "$AWS_REGION" \
    --output json)

if [ $? -ne 0 ]; then
    echo "Failed to assume role"
    exit 1
fi

# Extract credentials from JSON response
AWS_ACCESS_KEY_ID=$(echo "$CREDENTIALS" | jq -r '.Credentials.AccessKeyId')
AWS_SECRET_ACCESS_KEY=$(echo "$CREDENTIALS" | jq -r '.Credentials.SecretAccessKey')
AWS_SESSION_TOKEN=$(echo "$CREDENTIALS" | jq -r '.Credentials.SessionToken')

# Export credentials as environment variables
export AWS_ACCESS_KEY_ID
export AWS_SECRET_ACCESS_KEY
export AWS_SESSION_TOKEN

echo "Temporary credentials obtained successfully"
echo "Access Key ID: $AWS_ACCESS_KEY_ID"
echo "Session Token: $${AWS_SESSION_TOKEN:0:20}..."

# Write credentials to a file that can be sourced
cat > /tmp/aws_credentials.env << EOF
export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
export AWS_SESSION_TOKEN="$AWS_SESSION_TOKEN"
EOF

echo "Credentials written to /tmp/aws_credentials.env"
echo "Source this file before running Embucket: source /tmp/aws_credentials.env"
